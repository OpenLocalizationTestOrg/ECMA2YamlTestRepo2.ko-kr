### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListBox
  id: ListBox
  children:
  - System.Windows.Forms.ListBox.#ctor
  - System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  - System.Windows.Forms.ListBox.AllowSelection
  - System.Windows.Forms.ListBox.BackColor
  - System.Windows.Forms.ListBox.BackgroundImage
  - System.Windows.Forms.ListBox.BackgroundImageChanged
  - System.Windows.Forms.ListBox.BackgroundImageLayout
  - System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  - System.Windows.Forms.ListBox.BeginUpdate
  - System.Windows.Forms.ListBox.BorderStyle
  - System.Windows.Forms.ListBox.ClearSelected
  - System.Windows.Forms.ListBox.Click
  - System.Windows.Forms.ListBox.ColumnWidth
  - System.Windows.Forms.ListBox.CreateItemCollection
  - System.Windows.Forms.ListBox.CreateParams
  - System.Windows.Forms.ListBox.CustomTabOffsets
  - System.Windows.Forms.ListBox.DefaultItemHeight
  - System.Windows.Forms.ListBox.DefaultSize
  - System.Windows.Forms.ListBox.DrawItem
  - System.Windows.Forms.ListBox.DrawMode
  - System.Windows.Forms.ListBox.EndUpdate
  - System.Windows.Forms.ListBox.FindString(System.String)
  - System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  - System.Windows.Forms.ListBox.FindStringExact(System.String)
  - System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  - System.Windows.Forms.ListBox.Font
  - System.Windows.Forms.ListBox.ForeColor
  - System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  - System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  - System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.GetSelected(System.Int32)
  - System.Windows.Forms.ListBox.HorizontalExtent
  - System.Windows.Forms.ListBox.HorizontalScrollbar
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  - System.Windows.Forms.ListBox.IntegralHeight
  - System.Windows.Forms.ListBox.ItemHeight
  - System.Windows.Forms.ListBox.Items
  - System.Windows.Forms.ListBox.MeasureItem
  - System.Windows.Forms.ListBox.MouseClick
  - System.Windows.Forms.ListBox.MultiColumn
  - System.Windows.Forms.ListBox.NoMatches
  - System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.Padding
  - System.Windows.Forms.ListBox.PaddingChanged
  - System.Windows.Forms.ListBox.Paint
  - System.Windows.Forms.ListBox.PreferredHeight
  - System.Windows.Forms.ListBox.Refresh
  - System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  - System.Windows.Forms.ListBox.RefreshItems
  - System.Windows.Forms.ListBox.ResetBackColor
  - System.Windows.Forms.ListBox.ResetForeColor
  - System.Windows.Forms.ListBox.RightToLeft
  - System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.ScrollAlwaysVisible
  - System.Windows.Forms.ListBox.SelectedIndex
  - System.Windows.Forms.ListBox.SelectedIndexChanged
  - System.Windows.Forms.ListBox.SelectedIndices
  - System.Windows.Forms.ListBox.SelectedItem
  - System.Windows.Forms.ListBox.SelectedItems
  - System.Windows.Forms.ListBox.SelectionMode
  - System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  - System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  - System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  - System.Windows.Forms.ListBox.Sort
  - System.Windows.Forms.ListBox.Sorted
  - System.Windows.Forms.ListBox.Text
  - System.Windows.Forms.ListBox.TextChanged
  - System.Windows.Forms.ListBox.TopIndex
  - System.Windows.Forms.ListBox.ToString
  - System.Windows.Forms.ListBox.UseCustomTabOffsets
  - System.Windows.Forms.ListBox.UseTabStops
  - System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  - System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: ListBox
  nameWithType: ListBox
  fullName: System.Windows.Forms.ListBox
  type: Class
  summary: "항목의 목록을 표시할 Windows 컨트롤을 나타냅니다."
  remarks: "ListBox 컨트롤을 사용 하면 사용자가 클릭 하 여 선택할 수 있는 사용자에 게 항목의 목록을 표시할 수 있습니다. ListBox 컨트롤은 단일 컴퓨터 또는 다중 선택을 사용 하 여 제공할 수는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>속성.</xref:System.Windows.Forms.ListBox.SelectionMode%2A> 목록 상자도 제공 된 <xref:System.Windows.Forms.ListBox.MultiColumn%2A>속성을 사용 하는 항목의 거리 목록 대신 열에 있는 항목의 표시.</xref:System.Windows.Forms.ListBox.MultiColumn%2A> 이 컨트롤이 더 많은 항목을 표시할 수 있으며 사용자는 더 이상 항목으로 스크롤합니다 해야 합니다.       일반적으로 Windows는 그리기 목록 상자에 표시할 항목의 작업을 처리 합니다. 사용할 수는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성과 핸들은 <xref:System.Windows.Forms.ListBox.MeasureItem>및 <xref:System.Windows.Forms.ListBox.DrawItem>이벤트는 자동 Windows 그리기를 재정의할 수 있도록 제공 하 고 직접 항목을 그릴.</xref:System.Windows.Forms.ListBox.DrawItem> </xref:System.Windows.Forms.ListBox.MeasureItem> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 목록에 가변 길이 항목, 이미지 또는 다른 색 또는 각 항목의 텍스트 글꼴을 표시 하려면 소유자가 그린 목록 상자 컨트롤을 사용할 수 있습니다. <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>속성 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>, 및 <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A>사용자 고유의 항목을 그릴 수 있도록 도와 드릴.</xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> </xref:System.Windows.Forms.ListBox.GetItemHeight%2A> </xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>       ListBox 표시 및 선택 기능 이외에 효율적으로 목록 상자에 항목을 추가 하 고 목록의 항목 내에서 텍스트를 찾을 수 있도록 하는 기능도 제공 합니다. <xref:System.Windows.Forms.ListBox.BeginUpdate%2A>및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A>메서드를 사용 컨트롤 목록에 항목이 추가 될 때마다 다시 표시 하지 않고 목록 상자에 많은 수의 항목을 추가할 수 있습니다.</xref:System.Windows.Forms.ListBox.EndUpdate%2A> </xref:System.Windows.Forms.ListBox.BeginUpdate%2A> <xref:System.Windows.Forms.ListBox.FindString%2A>및 <xref:System.Windows.Forms.ListBox.FindStringExact%2A>메서드를 사용 하는 특정 검색 문자열이 포함 된 목록에서 항목을 검색할 수 있습니다.</xref:System.Windows.Forms.ListBox.FindStringExact%2A> </xref:System.Windows.Forms.ListBox.FindString%2A>       <xref:System.Windows.Forms.ListBox.Items%2A>, <xref:System.Windows.Forms.ListBox.SelectedItems%2A>, 및 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A>속성 목록 상자에서 사용 되는 세 가지 컬렉션에 대 한 액세스를 제공 합니다.</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.ListBox.SelectedItems%2A> </xref:System.Windows.Forms.ListBox.Items%2A> 다음 표에서 목록 상자 및 컨트롤 내에서 사용 하 여 사용 되는 세 가지 컬렉션을 설명 합니다.      | 컬렉션 클래스 | 목록 상자 내에서 사용 하 여 |   |----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|   | <xref:System.Windows.Forms.ListBox.ObjectCollection>| ListBox 컨트롤에 포함 된 모든 항목을 포함 합니다. |   | <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>| ListBox 컨트롤에 포함 된 항목의 하위 집합인 선택한 항목의 컬렉션을 포함 합니다. |   | <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>| <xref:System.Windows.Forms.ListBox.ObjectCollection>.</xref:System.Windows.Forms.ListBox.ObjectCollection> 인덱스의 하위 집합인 선택된 된 인덱스의 컬렉션을 포함</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> </xref:System.Windows.Forms.ListBox.SelectedObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection> 이러한 인덱스는 선택 된 항목을 지정 합니다. |       다음 세 예제 ListBox 클래스에서 지 원하는 세 가지 인덱싱된 컬렉션을 보여 줍니다.       다음 표에서 방법의 예를 보여 줍니다. <xref:System.Windows.Forms.ListBox.ObjectCollection>으로 목록 상자에서 예 ListBox의 선택 상태 항목을 저장 합니다.</xref:System.Windows.Forms.ListBox.ObjectCollection>      | 인덱스 | 항목 | 목록 상자 내에서 선택 상태 |   |-----------|----------|----------------------------------------|   |&0; | 개체&1; | 선택 하지 않은 |   |&1; | object2 | 선택한 |   |&2; | object3 | 선택 하지 않은 |   |&3; | object4 | 선택한 |   |&4; | object5 | 선택한 |       에 따라는 <xref:System.Windows.Forms.ListBox.ObjectCollection>이전 표와이 표에서 방법을 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>형태가 나타나는.</xref:System.Windows.Forms.ListBox.SelectedObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection>      | 인덱스 | 항목 |   |-----------|----------|   |&0; | object2 |   |&1; | object4 |   |&2; | object5 |       에 따라는 <xref:System.Windows.Forms.ListBox.ObjectCollection>이전 표와이 표에서 방법을 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>형태가 나타나는.</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection>      | 인덱스 | 항목의 인덱스 |   |-----------|-------------------|   |&0; |&1; |   |&1; |&3; |   |&2; |&4; |       <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스 목록 상자에 항목을 추가할 수 있습니다.</xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>메서드 ListBox에 구성원을 추가 하는 경우 모든 개체를 사용할 수 있습니다.</xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 컨트롤에 정의 된 텍스트를 사용 하 여 목록 상자에는 개체가 추가 되는 경우는 <xref:System.Object.ToString%2A>개체의 메서드는 개체 내에서 멤버 이름을 지정 하지 않으면에 지정 된 된 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>속성.</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Object.ToString%2A> <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> <xref:System.Windows.Forms.ListBox.ObjectCollection> <xref:System.Windows.Forms.ListControl.DataSource%2A> <xref:System.Windows.Forms.ListControl>클래스</xref:System.Windows.Forms.ListControl> 의 속성</xref:System.Windows.Forms.ListControl.DataSource%2A> 을 사용 하 여 항목을 추가할 수 있습니다 하는 클래스</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 메서드</xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 를 사용 하 여 항목을 추가할 뿐 아니라      > [!NOTE] > 목록 상자에서 설정한 경우 <xref:System.Windows.Forms.ComboBox>, 또는 <xref:System.Windows.Forms.CheckedListBox>는 기본 Windows form 및 파생된 Windows form에서 해당 컨트롤의 문자열 컬렉션을 수정 하려는에서는 기본 Windows form에서 해당 컨트롤의 문자열 컬렉션 비어 있어야 합니다.</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ComboBox> 문자열 컬렉션이 비어 있지 않으며 되는 읽기 전용 다른 Windows form을 파생 시킬 때 됩니다."
  example:
  - "The following code example demonstrates how to create a ListBox control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the ListBox using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.l_19_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.l_19_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("SelectedValue")]

      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.DefaultProperty("Items")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ListBox : System.Windows.Forms.ListControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ListControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ListControl.DataManager
  - System.Windows.Forms.ListControl.DataSource
  - System.Windows.Forms.ListControl.DataSourceChanged
  - System.Windows.Forms.ListControl.DisplayMember
  - System.Windows.Forms.ListControl.DisplayMemberChanged
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)
  - System.Windows.Forms.ListControl.Format
  - System.Windows.Forms.ListControl.FormatInfo
  - System.Windows.Forms.ListControl.FormatInfoChanged
  - System.Windows.Forms.ListControl.FormatString
  - System.Windows.Forms.ListControl.FormatStringChanged
  - System.Windows.Forms.ListControl.FormattingEnabled
  - System.Windows.Forms.ListControl.FormattingEnabledChanged
  - System.Windows.Forms.ListControl.GetItemText(System.Object)
  - System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)
  - System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.SelectedValue
  - System.Windows.Forms.ListControl.SelectedValueChanged
  - System.Windows.Forms.ListControl.ValueMember
  - System.Windows.Forms.ListControl.ValueMemberChanged
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_9_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_9_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_9_1.vb)]"
  syntax:
    content: public ListBox ();
    parameters: []
  overload: System.Windows.Forms.ListBox.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  id: AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 멤버는 더 이상는 대체할 옵션이 없습니다."
  syntax:
    content: protected virtual void AddItemsCore (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "개체의 배열입니다."
  overload: System.Windows.Forms.ListBox.AddItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AllowSelection
  id: AllowSelection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 현재 목록 항목을 선택할 수 있습니다."
  syntax:
    content: protected override bool AllowSelection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> is not <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.AllowSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackColor
  id: BackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 배경색을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 배경색을 나타내는입니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultBackColor*>속성.</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.ListBox.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 속성은이 클래스와 관련이 없습니다."
  remarks: "이 속성은이 클래스와 관련이 없습니다."
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "폼의 배경 이미지입니다."
  overload: System.Windows.Forms.ListBox.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.ListBox.BackgroundImage*>속성이 레이블 변경 합니다.</xref:System.Windows.Forms.ListBox.BackgroundImage*>"
  remarks: "이 이벤트는이 클래스와 관련이 없습니다."
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 배경 이미지 레이아웃을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 에 정의 된 대로 <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref> 열거 합니다."
  remarks: "이 속성은이 클래스와 관련이 없습니다."
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref>합니다. The values are <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Stretch&quot; name=&quot;Stretch&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Tile&quot; name=&quot;Tile&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Zoom&quot; name=&quot;Zoom&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>기본값이입니다."
  overload: System.Windows.Forms.ListBox.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 열거형 값이 존재 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>속성 변경.</xref:System.Windows.Forms.ListBox.BackgroundImageLayout*>"
  remarks: "이 이벤트는이 클래스와 관련이 없습니다."
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BeginUpdate
  id: BeginUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 항목을 추가 하는 동안 성능을 유지는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 드로잉 컨트롤을 방지 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ListBox.EndUpdate*>메서드를 호출 합니다.</xref:System.Windows.Forms.ListBox.EndUpdate*>"
  remarks: "여러 항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ListBox>사용 하는 것은 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스 (통해는 <xref:System.Windows.Forms.ListBox.Items%2A>속성의는 <xref:System.Windows.Forms.ListBox>).</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> 이 항목의 배열을 한 번의 작업 목록에 추가할 수 있습니다. 그러나 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스는 컨트롤이 다시 표시 하지 않도록 하려면 BeginUpdate 메서드를 사용할 수는 <xref:System.Windows.Forms.ListBox>항목이 목록에 추가 될 때마다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 목록에 항목을 추가 작업을 완료 했으면, 호출는 <xref:System.Windows.Forms.ListBox.EndUpdate%2A>메서드를 사용 하도록 설정 된 <xref:System.Windows.Forms.ListBox>다시 그려야 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.EndUpdate%2A> 이 방법으로 항목의 그리기 추가 <xref:System.Windows.Forms.ListBox>많은 수의 항목은 목록에 추가 될 때.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example uses the BeginUpdate and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_14_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_14_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_14_1.vb)]"
  syntax:
    content: public void BeginUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "주위에 그리는 테두리 유형을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "값 중 하나이 고 <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ClearSelected
  id: ClearSelected
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 있는 모든 항목을 선택 취소 된 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "이 메서드를 호출 하는 것이 설정에 해당 하는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A>속성을-1입니다.</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 목록의 모든 항목이 선택 취소 신속 하 게 하려면이 메서드를 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the ClearSelected method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/m-system.windows.forms.l_12_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/m-system.windows.forms.l_12_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public void ClearSelected ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ClearSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Click
  id: Click
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 컨트롤을 클릭 합니다."
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ColumnWidth
  id: ColumnWidth
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "여러 열로 된 열의 너비를 가져오거나 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "값 영 (0)으로 설정 하면 기본 너비는 각 열에 할당 됩니다. 경우는 <xref:System.Windows.Forms.ListBox>는 복수 열은 <xref:System.Windows.Forms.ListBox>,이 속성 목록에서 각 열의 현재 너비를 반환 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 이 속성을 사용 하 여 각 열에는 여러 열로 된 확인 <xref:System.Windows.Forms.ListBox>항목이 제대로 표시 수 있습니다.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_20_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_20_1.vb)]"
  syntax:
    content: public int ColumnWidth { get; set; }
    return:
      type: System.Int32
      description: "컨트롤에 있는 각 열의 픽셀 너비입니다. 기본값은 0입니다."
  overload: System.Windows.Forms.ListBox.ColumnWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "0 보다 작은 값은 속성에 할당 됩니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  id: CreateItemCollection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목 컬렉션의 새 인스턴스를 만듭니다."
  syntax:
    content: protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();
    parameters: []
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "A <xref:System.Windows.Forms.ListBox.ObjectCollection>새 항목 컬렉션을 나타내는입니다.</xref:System.Windows.Forms.ListBox.ObjectCollection>"
  overload: System.Windows.Forms.ListBox.CreateItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다."
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> 컨트롤에 대 한 핸들을 만들 때 필요한 작성 매개 변수를 포함 하는 합니다."
  overload: System.Windows.Forms.ListBox.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  id: CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "탭에 있는 항목 사이의 너비를 가져옵니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "정수 배열에는 오름차순 탭 공백이 들어 있습니다."
  syntax:
    content: public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }
    return:
      type: System.Windows.Forms.ListBox.IntegerCollection
      description: "탭 너비를 나타내는 정수 컬렉션입니다."
  overload: System.Windows.Forms.ListBox.CustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  id: DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "소유자가 그린에 대 한 기본 항목 높이 지정 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  syntax:
    content: public const int DefaultItemHeight = 13;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 크기를 가져옵니다."
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "기본 <xref href=&quot;System.Drawing.Size&quot;> </xref> 컨트롤의 합니다."
  overload: System.Windows.Forms.ListBox.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "경우에 소유자가 그린의 시각적 측면이 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 변경 합니다."
  remarks: "이 이벤트는는 소유자가 그린 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 사용 이 이벤트는만 될 때 발생 하는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성이로 설정 되어 `DrawMode.OwnerDrawFixed` 또는 `DrawMode.OwnerDrawVariable`.</xref:System.Windows.Forms.ListBox.DrawMode%2A> 이 이벤트를 사용 하 여 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 항목을 그리는 데 필요한 작업을 수행할 수 있습니다. 다양 한 크기 항목이 있는 경우 (때는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성이 `DrawMode.OwnerDrawVariable`), 항목을 그리기 전에 <xref:System.Windows.Forms.ListBox.MeasureItem>이벤트가 발생 합니다.</xref:System.Windows.Forms.ListBox.MeasureItem> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.ListBox.MeasureItem>을 그리는 데 DrawItem 이벤트에 대 한 이벤트 처리기에서 항목에 대 한 크기를 지정 하는 이벤트입니다.</xref:System.Windows.Forms.ListBox.MeasureItem>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the DrawItem event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the DrawItem event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_2_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/e-system.windows.forms.l_2_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawMode
  id: DrawMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 그리기 모드를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the DrawMode property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_42_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/p-system.windows.forms.l_42_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }
    return:
      type: System.Windows.Forms.DrawMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.DrawMode&quot;> </xref> 항목 컨트롤의 그리기 모드를 나타내는 값입니다. 기본값은 <xref uid=&quot;langword_csharp_DrawMode.Normal&quot; name=&quot;DrawMode.Normal&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.DrawMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "속성에 할당 된 값의 구성원이 아닙니다.는 <xref href=&quot;System.Windows.Forms.DrawMode&quot;> </xref> 열거 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "multicolumn <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 가변 높이 가질 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.EndUpdate
  id: EndUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "그리기를 다시 시작의 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 그리기 되어 일시 중지 한 후 제어 된 <xref:System.Windows.Forms.ListBox.BeginUpdate*>메서드.</xref:System.Windows.Forms.ListBox.BeginUpdate*>"
  remarks: "항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ListBox>사용 하는 것은 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스 (통해는 <xref:System.Windows.Forms.ListBox.Items%2A>속성의는 <xref:System.Windows.Forms.ListBox>).</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.Items%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> </xref:System.Windows.Forms.ListBox> 이 항목의 배열 목록에 한 번에 추가할 수 있습니다. 하지만 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>의 메서드는 <xref:System.Windows.Forms.ListBox.ObjectCollection>사용할 수 있습니다 클래스는 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A>컨트롤 다시 표시 하지 않도록 하려면 메서드는 <xref:System.Windows.Forms.ListBox>항목이 목록에 추가 될 때마다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.BeginUpdate%2A> </xref:System.Windows.Forms.ListBox.ObjectCollection> </xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 사용할 수 있도록 사용 하기 위해 EndUpdate 메서드를 호출 목록에 항목을 추가 작업을 완료 된 <xref:System.Windows.Forms.ListBox>다시 그려야 합니다.</xref:System.Windows.Forms.ListBox> 이 방법으로 항목의 그리기 추가 <xref:System.Windows.Forms.ListBox>많은 수의 항목은 목록에 추가 될 때.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and EndUpdate methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_0_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_0_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_0_1.vb)]"
  syntax:
    content: public void EndUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  id: FindString(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "첫 번째 항목을 찾습니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 지정 된 문자열로 시작 하 합니다."
  remarks: "이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. 부분적으로 지정 된 검색 문자열 매개 변수의 이름과 일치 하는 단어에 대 한 검색이 `s`합니다. 지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면이 메서드를 사용할 수 있습니다. 사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>메서드 또는 항목의 텍스트를 변경 합니다.</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> <xref:System.Windows.Forms.ListBox>FindString 메서드 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 내의 시작 인덱스를 지정 하기 위한 매개 변수를 제공 하는 버전을 사용할 수 있습니다,</xref:System.Windows.Forms.ListBox> 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면 사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A>메서드.</xref:System.Windows.Forms.ListBox.FindStringExact%2A>"
  example:
  - "The following code example demonstrates how to use the FindString method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>. If no items are found that match the search string FindString returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[ListBox.FindString2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_13_1.cs)]\n [!code-cpp[ListBox.FindString2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_13_1.cpp)]\n [!code-vb[ListBox.FindString2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_13_1.vb)]"
  syntax:
    content: public int FindString (string s);
    parameters:
    - id: s
      type: System.String
      description: "검색할 텍스트입니다."
    return:
      type: System.Int32
      description: "그렇지 않으면 첫 번째 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 <code> s </code> 매개 변수는-1 보다 작거나 또는 보다 큰 항목 수와 같은 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  id: FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "첫 번째 항목을 찾습니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 지정 된 문자열로 시작 하 합니다. 검색은 특정 시작 인덱스에서 시작 합니다."
  remarks: "이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. 부분적으로 지정 된 검색 문자열 매개 변수의 이름과 일치 하는 단어에 대 한 검색이 `s`합니다. 이 메서드를 사용 하 여 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 대 한 항목의 목록에 지정된 된 시작 인덱스에 지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면 사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>메서드 또는 항목의 텍스트를 변경 합니다.</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않는이 메서드의 버전을 사용 하 여 수행 된 후 일반적으로 사용 됩니다. 이 메서드는 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 데 일반적으로 목록의 첫 항목을 찾은 `startIndex` 후 첫 번째 발견된 인스턴스 검색 텍스트의 다음 항목의 매개 변수입니다. 사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindStringExact%2A>메서드.</xref:System.Windows.Forms.ListBox.FindStringExact%2A>      > [!NOTE] > 검색 맨 아래에 도달한 경우는 <xref:System.Windows.Forms.ListBox>, 맨 위부터 검색이 계속는 <xref:System.Windows.Forms.ListBox>로 지정 된 항목으로 돌아가기는 `startIndex` 매개 변수.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/m-system.windows.forms.l_10_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/m-system.windows.forms.l_10_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_10_1.vb)]"
  syntax:
    content: public int FindString (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "검색할 텍스트입니다."
    - id: startIndex
      type: System.Int32
      description: "첫 번째 항목을 검색 하기 전에 항목의&0;부터 시작 하는 인덱스입니다. 컨트롤의 처음부터 검색 하려면 음수 (-1)&1;로 설정 합니다."
    return:
      type: System.Int32
      description: "그렇지 않으면 첫 번째 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code> 보다 작거나&0; 보다 큰 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 속성</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> 의 값과 같은 매개 변수는"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  id: FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "첫 번째 항목을 찾습니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 완전히 일치 하는 지정된 된 문자열입니다."
  remarks: "이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. 검색 문자열 매개 변수에서 지정 된 단어는 정확히 일치에 대 한 검색이 `s`합니다. 지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면이 메서드를 사용할 수 있습니다. 사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>메서드 또는 항목의 텍스트를 변경 합니다.</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 내의 시작 인덱스를 지정 하기 위한 매개 변수를 제공 하는 하겠지만의 버전을 사용할 수 있습니다,</xref:System.Windows.Forms.ListBox> 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면 사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindString%2A>메서드.</xref:System.Windows.Forms.ListBox.FindString%2A>"
  example:
  - "The following code example demonstrates how to use the FindStringExact method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string. If no items are found that match the search string, FindStringExact returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-vb[ListBox.FindStringExact#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_16_1.vb)]\n [!code-cs[ListBox.FindStringExact#1](~/add/codesnippet/csharp/m-system.windows.forms.l_16_1.cs)]\n [!code-cpp[ListBox.FindStringExact#1](~/add/codesnippet/cpp/m-system.windows.forms.l_16_1.cpp)]"
  syntax:
    content: public int FindStringExact (string s);
    parameters:
    - id: s
      type: System.String
      description: "검색할 텍스트입니다."
    return:
      type: System.Int32
      description: "그렇지 않으면 첫 번째 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  id: FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "첫 번째 항목을 찾습니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 완전히 일치 하는 지정된 된 문자열입니다. 검색은 특정 시작 인덱스에서 시작 합니다."
  remarks: "이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. 지정 된 검색 문자열 매개 변수를 정확 하 게 일치 하는 단어에 대 한 검색이 `s`합니다. 이 메서드를 사용 하 여 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 대 한 항목의 목록에 지정된 된 시작 인덱스에 지정된 된 문자열과 일치 하는 첫 번째 항목을 검색 하려면 사용 하 여 검색 텍스트를 포함 하는 항목을 제거 하는 등 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>메서드 또는 항목의 텍스트를 변경 합니다.</xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 이 메서드는 호출을 시작 하는 인덱스를 지정 하지 않는이 메서드의 버전을 사용 하 여 수행 된 후 일반적으로 사용 됩니다. 이 메서드는 인덱스 위치를 지정 하 여 검색 텍스트의 인스턴스를 추가로 찾는 데 일반적으로 목록의 첫 항목을 찾은 `startIndex` 후 첫 번째 발견된 인스턴스 검색 텍스트의 다음 항목의 매개 변수입니다. 사용 하 여 완전 하 게 일치 하는 대신 부분 단어 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ListBox.FindString%2A>메서드.</xref:System.Windows.Forms.ListBox.FindString%2A>      > [!NOTE] > 검색 맨 아래에 도달한 경우는 <xref:System.Windows.Forms.ListBox>, 맨 위부터 검색이 계속는 <xref:System.Windows.Forms.ListBox>로 지정 된 항목으로 돌아가기는 `startIndex` 매개 변수.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cs[ListBox.FindStringExact2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_5_1.cs)]\n [!code-cpp[ListBox.FindStringExact2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_5_1.cpp)]\n [!code-vb[ListBox.FindStringExact2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_5_1.vb)]"
  syntax:
    content: public int FindStringExact (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "검색할 텍스트입니다."
    - id: startIndex
      type: System.Int32
      description: "첫 번째 항목을 검색 하기 전에 항목의&0;부터 시작 하는 인덱스입니다. 컨트롤의 처음부터 검색 하려면 음수 (-1)&1;로 설정 합니다."
    return:
      type: System.Int32
      description: "그렇지 않으면 첫 번째 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> startIndex </code> 보다 작거나&0; 보다 큰 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 속성</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> 의 값과 같은 매개 변수는"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Font
  id: Font
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 의해 표시 되는 텍스트의 글꼴을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref> 컨트롤에서 표시 되는 텍스트에 적용할 수 있습니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultFont*>속성.</xref:System.Windows.Forms.Control.DefaultFont*>"
  overload: System.Windows.Forms.ListBox.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 전경색을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "전경 <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 합니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultForeColor*>속성.</xref:System.Windows.Forms.Control.DefaultForeColor*>"
  overload: System.Windows.Forms.ListBox.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  id: GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 있는 항목의 높이 반환 된 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성으로 설정 되지 않은 `DrawMode.OwnerDrawVariable`, 모든 표준에서 항목의 인덱스 매개 변수 값은 무시 됩니다 <xref:System.Windows.Forms.ListBox>크기는 동일 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.DrawMode%2A> 사용 하는 소유자가 그린 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 내에서 모든 항목의 크기를 결정 하</xref:System.Windows.Forms.ListBox> 는 경우이 속성을 사용할 수 있습니다."
  syntax:
    content: public int GetItemHeight (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "에 대 한 높이 반환할 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Int32
      description: "픽셀 단위로 지정된 된 항목의 높이입니다."
  overload: System.Windows.Forms.ListBox.GetItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 값은 <code> index </code> 매개 변수는&0; 보다 작거나 항목 개수 보다 큽니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  id: GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 있는 항목에 대 한 경계 사각형 반환는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "항목에 지정 된 경우는 `index` 매개 변수 표시 이면이 메서드에서 반환 되는 사각형 컨트롤의 보이는 부분 외부 됩니다. 목록 내 항목의 위치와 크기를 확인 하려면이 메서드를 사용할 수 있습니다. 항목의 높이 얻기 위해 특히 가변 높이 소유자 그리기 목록 항목 있습니다 사용할 수는 <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>메서드.</xref:System.Windows.Forms.ListBox.GetItemHeight%2A>"
  syntax:
    content: public System.Drawing.Rectangle GetItemRectangle (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "해당 경계 사각형 반환 하려는 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 지정된 된 항목에 대 한 경계 사각형을 나타내는입니다."
  overload: System.Windows.Forms.ListBox.GetItemRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 보다 작거나&0; 보다 큰 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 속성</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> 의 값과 같은 매개 변수는"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "범위 검색는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 크기가 조정 됩니다."
  remarks: "<xref:System.Windows.Forms.ListBox>재정의 <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName>메서드를 요청 된 높이 현재 높이가 아닌 조정 된.</xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName> </xref:System.Windows.Forms.ListBox>"
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 디스플레이 범위를 검색할 영역을 지정 하는 합니다."
    - id: factor
      type: System.Drawing.SizeF
      description: "높이 너비 컨트롤의 범위입니다."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 컨트롤의 배율이 조정 되는 범위를 나타내는입니다."
  overload: System.Windows.Forms.ListBox.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  id: GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 항목이 선택 되어 있는지 여부를 나타내는 값을 반환 합니다."
  remarks: "신속 하 게 지정 된 항목이 선택 되어 있는지 여부를 확인 하려면이 메서드를 사용할 수 있습니다. 이 메서드는 특정 작업 경우 다중 선택에서 특정 항목에 수행 해야 할 때 유용 <xref:System.Windows.Forms.ListBox>을 선택 합니다.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the GetSelected method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/m-system.windows.forms.l_4_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/m-system.windows.forms.l_4_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_4_1.vb)]"
  syntax:
    content: public bool GetSelected (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "선택 되어 있는지 여부를 결정 하는 항목의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 항목에 현재 선택 되어 있는 경우는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.GetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 보다 작거나&0; 보다 큰 <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 속성</xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> 의 값과 같은 매개 변수는"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  id: HorizontalExtent
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기준인 너비를 가져오거나의 가로 스크롤 막대는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 스크롤할 수 있습니다."
  remarks: "이 속성만 값을 보고 하는 유용한 경우는 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>속성이로 설정 되어 `true`.</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 경우 <xref:System.Windows.Forms.ListBox>가로 스크롤 막대를 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 항목을 가로로 스크롤할이이 속성의 값 보다 작은</xref:System.Windows.Forms.ListBox> 의 너비 하는 경우의 너비는 <xref:System.Windows.Forms.ListBox>이 값 보다 크거나 같은 가로 스크롤 막대가 숨겨집니다.</xref:System.Windows.Forms.ListBox> 이 속성의 값에 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 동적으로 업데이트 되지 않습니다. 이 속성은 유용의 항목은 <xref:System.Windows.Forms.ListBox>소유자가 그린.</xref:System.Windows.Forms.ListBox> 예를 들어 경우의 소유자 그리기 항목이 <xref:System.Windows.Forms.ListBox>200x 세로 있지만 <xref:System.Windows.Forms.ListBox>60 너비는 픽셀, HorizontalExtent 속성 컨트롤의 표시 영역을 사용 하 여 항목의 오른쪽 가장자리 스크롤하여 하려면 200으로 설정 해야 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and HorizontalExtent properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_74_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_74_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_74_1.vb)]"
  syntax:
    content: public int HorizontalExtent { get; set; }
    return:
      type: System.Int32
      description: "가로 스크롤 막대 컨트롤을 스크롤할 수 픽셀 너비입니다. 기본값은&0;입니다."
  overload: System.Windows.Forms.ListBox.HorizontalExtent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  id: HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 가로 스크롤 막대가 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "HorizontalScrollbar 속성 결정 여부는 <xref:System.Windows.Forms.ListBox>가로 스크롤을 표시할지 막대 내에서 항목의 너비는 <xref:System.Windows.Forms.ListBox>컨트롤의 오른쪽 가장자리를 벗어날.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> 이 속성이로 설정 된 경우 `true`, 스크롤 막대 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 있는 항목의 너비에 따라 자동으로 표시 됩니다 경우는 <xref:System.Windows.Forms.ListBox>은 소유자가 그린 <xref:System.Windows.Forms.ListBox>, 가로 스크롤 막대를 올바르게 표시 하기 위해 설정 해야 합니다는 <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A>속성.</xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the HorizontalScrollbar and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_12_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_12_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public bool HorizontalScrollbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 가로 스크롤 막대를 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.HorizontalScrollbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  id: IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 좌표에 있는 항목의&0;부터 시작 하는 인덱스를 반환합니다."
  remarks: "이 메서드를 사용 하면 컨트롤 내의 특정 위치에 있는 항목을 확인할 수 있습니다. 이 메서드를 사용 하 여 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 를 누를 때 선택 된 목록 내의 항목을 확인 하려면 커서의 위치를 결정 하 고에 전달 된 수의 `p` 사용자는 항목을 확인할 IndexFromPoint 메서드의 매개 변수 위로 마우스 합니다. 그런 다음 작업 및 특정 항목에 따라 기능을 제공 하기 위해 사용자는 바로 가기 메뉴를 표시할 수 있습니다."
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_20_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_20_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_20_1.cs)]"
  syntax:
    content: public int IndexFromPoint (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 항목 인덱스를 가져오는 데 좌표를 포함 하는 개체입니다."
    return:
      type: System.Int32
      description: "지정된 된 좌표;에서 찾을 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  id: IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 좌표에 있는 항목의&0;부터 시작 하는 인덱스를 반환합니다."
  remarks: "이 메서드를 사용 하면 컨트롤 내의 특정 위치에 있는 항목을 확인할 수 있습니다. 이 메서드를 사용 하 여 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 를 누를 때 선택 된 목록 내의 항목을 확인 하려면 커서의 위치를 결정 하 고에 전달 된 수의 `x` 및 `y` 의 매개 변수는 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>메서드를 한 사용자 항목을 확인할 마우스.</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 그런 다음 작업 및 특정 항목에 따라 기능을 제공 하기 위해 사용자는 바로 가기 메뉴를 표시할 수 있습니다."
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_18_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_18_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_18_1.cs)]"
  syntax:
    content: public int IndexFromPoint (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "검색할 위치로의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "검색할 위치로의 y 좌표입니다."
    return:
      type: System.Int32
      description: "지정된 된 좌표;에서 찾을 항목의&0;부터 시작 인덱스 반환 <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IntegralHeight
  id: IntegralHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 부분 항목을 표시 하지 않으려면 조정할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 컨트롤 크기가 자동으로 조정 항목 부분적으로 표시 되지 않습니다. 원래 크기를 유지 하려는 경우는 <xref:System.Windows.Forms.ListBox>폼의 공간 요구 사항에 따라,이 속성을 설정 `false`.</xref:System.Windows.Forms.ListBox>       기본적으로는 <xref:System.Windows.Forms.ListBox>및 <xref:System.Windows.Forms.CheckedListBox>크기는 전체 항목만 표시 될 정도로.</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ListBox> 원하는 경우는 <xref:System.Windows.Forms.ListBox>또는 <xref:System.Windows.Forms.CheckedListBox>도킹 된 영역을 완전히 채울 IntegralHeight로 설정 `false`.</xref:System.Windows.Forms.CheckedListBox> </xref:System.Windows.Forms.ListBox> 이 인해 완전히 영역을 채우는 제어 하지만 마지막 항목이 완전히 표시 되지 않습니다.       경우는 <xref:System.Windows.Forms.ListBox>에 포함 된 항목이이 속성이 적용 되지 않습니다.</xref:System.Windows.Forms.ListBox>      > [!NOTE] >의 높이 기준으로 하는 정수 높이 <xref:System.Windows.Forms.ListBox>, 클라이언트 영역의 높이 대신.</xref:System.Windows.Forms.ListBox> IntegralHeight 속성이 설정 된 경우에 따라서 `true`, 항목 수는 계속 부분적으로 표시할 스크롤 막대가 표시 됩니다.      > [!NOTE] > 경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성이 `DrawMode.OwnerDrawVariable`,이 속성이 적용 되지 않습니다.</xref:System.Windows.Forms.ListBox.DrawMode%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the IntegralHeight property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_40_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_40_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_40_1.vb)]"
  syntax:
    content: public bool IntegralHeight { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 크기가 조정 하도록 하는 경우 해당 표시 하지 않는 부분 항목; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.IntegralHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ItemHeight
  id: ItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 있는 항목의 높이 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성이로 설정 되어 `DrawMode.OwnerDrawFixed`, 모든 항목의 높이가 같습니다.</xref:System.Windows.Forms.ListBox.DrawMode%2A> 경우는 <xref:System.Windows.Forms.ListBox.DrawMode%2A>속성이 `DrawMode.OwnerDrawVariable`, <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 추가 된 각 항목의 높이 지정 하는 ItemHeight 속성</xref:System.Windows.Forms.ListBox.DrawMode%2A> 소유자가 그린 목록에서 각 항목에는 다른 높이 있을 수 있지만, <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에서 특정 항목의 높이 가져올 메서드를</xref:System.Windows.Forms.ListBox.GetItemHeight%2A> 사용할 수 있습니다. ItemHeight 속성을 사용 하는 경우는 <xref:System.Windows.Forms.ListBox>가변 높이의 항목과이 속성 컨트롤의 첫 번째 항목의 높이 반환 합니다.</xref:System.Windows.Forms.ListBox>       최대 높이 <xref:System.Windows.Forms.ListBox>항목는 255 픽셀.</xref:System.Windows.Forms.ListBox>"
  syntax:
    content: public virtual int ItemHeight { get; set; }
    return:
      type: System.Int32
      description: "픽셀 컨트롤에 있는 항목의 높이입니다."
  overload: System.Windows.Forms.ListBox.ItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ItemHeight 속성이 설정 된 수준 0 또는 255 개가 넘는 픽셀 보다 낮게 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Items
  id: Items
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목을 가져옵니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "이 속성을 통해 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 현재 저장 되어 있는 항목의 목록에 대 한 참조를 가져올 수 있습니다. 이 참조를 사용 추가 항목을 제거 및 컬렉션의 항목 수를 가져올 수 있습니다. 항목 컬렉션으로 수행할 수 있는 작업에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.ListBox.ObjectCollection>클래스 참조 항목입니다.</xref:System.Windows.Forms.ListBox.ObjectCollection>       항목을 조작할 수 있습니다는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListControl.DataSource%2A>속성.</xref:System.Windows.Forms.ListControl.DataSource%2A> </xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListControl.DataSource%2A>A <xref:System.Windows.Forms.ListBox>에 <xref:System.Windows.Forms.ListBox>있지만 Items 속성을 추가할 수 없습니다 사용 하거나 목록에서 항목을 제거 <xref:System.Windows.Forms.ListBox.ObjectCollection>.</xref:System.Windows.Forms.ListBox.ObjectCollection> 의 메서드를 사용 하 여</xref:System.Windows.Forms.ListBox> 항목을 볼 수 있습니다</xref:System.Windows.Forms.ListBox> 에 항목을 추가 하는 속성</xref:System.Windows.Forms.ListControl.DataSource%2A> 을 사용 하는 경우"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.l_50_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.l_50_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_50_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.ObjectCollection Items { get; }
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "<xref:System.Windows.Forms.ListBox.ObjectCollection>에 항목을 나타내는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>.</xref:System.Windows.Forms.ListBox.ObjectCollection>"
  overload: System.Windows.Forms.ListBox.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "소유자가 그린 때 발생 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 만들어질 목록 항목의 크기를 결정 하 고 있습니다."
  remarks: "항목을 그리기 전에 될 예정 크기를 지정 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.ListBox.DrawItem>이벤트.</xref:System.Windows.Forms.ListBox.DrawItem> 이 이벤트는만 발생 시기 <xref:System.Windows.Forms.ListBox.DrawMode%2A> <xref:System.Windows.Forms.DrawMode>.</xref:System.Windows.Forms.DrawMode> 속성</xref:System.Windows.Forms.ListBox.DrawMode%2A>       최대 유효 높이 <xref:System.Windows.Forms.ListBox>항목는 255 픽셀.</xref:System.Windows.Forms.ListBox> 설정의 <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>의 속성은 <xref:System.Windows.Forms.MeasureItemEventArgs>이 이벤트를 처리 하면 예기치 않은 결과가 경우 255 보다 큰 값으로.</xref:System.Windows.Forms.MeasureItemEventArgs> </xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and MeasureItem events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_12_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/e-system.windows.forms.l_12_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/e-system.windows.forms.l_12_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 클릭할 때 발생는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 마우스 포인터를 제어 합니다."
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MultiColumn
  id: MultiColumn
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 여러 열을 지원 합니다."
  remarks: "multicolumn <xref:System.Windows.Forms.ListBox>세로 스크롤이 필요 없도록 하는 데 필요한 만큼 많은 열에 항목을 추가 합니다.</xref:System.Windows.Forms.ListBox> 사용자는 현재 표시 되지 않는 열으로 이동할 수 키보드를 사용할 수 있습니다. 설정 된 <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A>속성을 `true` <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 의 표시 영역에 표시 되지 않는 열을 스크롤할 수 있도록 해 주는 가로 스크롤 막대를 표시 하려면</xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> 값은 <xref:System.Windows.Forms.ListBox.ColumnWidth%2A>속성 각 열의 너비를 결정 합니다.</xref:System.Windows.Forms.ListBox.ColumnWidth%2A>"
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_52_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_52_1.vb)]"
  syntax:
    content: public bool MultiColumn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 여러 열을 지원, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.MultiColumn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "multicolumn <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 가변 높이 가질 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.NoMatches
  id: NoMatches
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "검색 중 일치 하는 것을 지정 합니다."
  remarks: "이 상수에서 반환 되는 <xref:System.Windows.Forms.ListBox.FindString%2A>, <xref:System.Windows.Forms.ListBox.FindStringExact%2A>, 및 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>메서드 검색에서 일치 하는 값이 없는 경우.</xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> </xref:System.Windows.Forms.ListBox.FindStringExact%2A> </xref:System.Windows.Forms.ListBox.FindString%2A>"
  syntax:
    content: public const int NoMatches = -1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.ListBox.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListControl.DataSourceChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  id: OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListControl.DisplayMemberChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnDisplayMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListBox.DrawItem&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDrawItem 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/6b0d67e7-dfbb-4ef8-bf2d-_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/6b0d67e7-dfbb-4ef8-bf2d-_1.cs)]"
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.ListBox.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "창 핸들을 만든 시기 열 너비 및 다른 특성을 설정할 수 있도록 지정 합니다. 상속 하는 클래스를 호출 해야 <xref uid=&quot;langword_csharp_base.OnHandleCreated&quot; name=&quot;base.OnHandleCreated&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목이 설정 되어 있어야를 재정의 하 고 지워진 초과 올바르게입니다. 호출 해야 상속 하는 컨트롤 <xref uid=&quot;langword_csharp_base.OnHandleDestroyed&quot; name=&quot;base.OnHandleDestroyed&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListBox.MeasureItem&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMeasureItem 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.ListBox.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Resize&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  id: OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnSelectedValueChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Padding
  id: Padding
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 속성은이 클래스와 관련이 없습니다."
  remarks: "이 속성은이 클래스와 관련이 없습니다."
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.ListBox.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.ListBox.Padding*>속성 변경.</xref:System.Windows.Forms.ListBox.Padding*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Paint
  id: Paint
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 컨트롤이 그려집니다."
  remarks: "이 이벤트는이 클래스와 관련이 없습니다."
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 있는 모든 항목의 전체 높이 가져옵니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "이 속성을 사용 하면 높이 결정 하는 <xref:System.Windows.Forms.ListBox>수, 사용 가능한 모든 항목 목록에 표시 하기 위해 및 세로 스크롤 막대를 표시 하지 않도록 해야 합니다.</xref:System.Windows.Forms.ListBox> 경우에 있는 항목의 크기는 <xref:System.Windows.Forms.ListBox>속성 PreferredHeight의 값을 사용 하 여 컨트롤 크기 조정 커서는 <xref:System.Windows.Forms.ListBox>폼의 클라이언트 영역을 벗어날 수 또는 <xref:System.Windows.Forms.ListBox>컨테이너.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the PreferredHeight property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListBox.PreferredHeight#1](~/add/codesnippet/csharp/p-system.windows.forms.l_37_1.cs)]\n [!code-vb[ListBox.PreferredHeight#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_37_1.vb)]\n [!code-cpp[ListBox.PreferredHeight#1](~/add/codesnippet/cpp/p-system.windows.forms.l_37_1.cpp)]"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "컨트롤의 모든 항목을 픽셀 단위로 결합 된 높이입니다."
  overload: System.Windows.Forms.ListBox.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Refresh
  id: Refresh
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 클라이언트 영역을 무효화 하 고 즉시 다시 그리도록 자체와 모든 자식 컨트롤을 강제로 수행 합니다."
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  id: RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 인덱스에 있는 항목을 새로 고칩니다."
  remarks: "경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>속성이 설정 되어 속성에 할당 된 데이터 원본의 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>의 값을 업데이트 하려면 RefreshItem 메서드를 사용 하는 변경 내용을 <xref:System.Windows.Forms.ListBox>컨트롤.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DisplayMember%2A>"
  syntax:
    content: protected override void RefreshItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "새로 고칠 요소의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Forms.ListBox.RefreshItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItems
  id: RefreshItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 새로 고칩니다 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 항목 하 고 새 문자열을 검색 합니다."
  syntax:
    content: protected override void RefreshItems ();
    parameters: []
  overload: System.Windows.Forms.ListBox.RefreshItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.BackColor*>속성의 기본값을.</xref:System.Windows.Forms.Control.BackColor*>"
  syntax:
    content: public override void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다시 설정 된 <xref:System.Windows.Forms.Control.ForeColor*>속성의 기본값을.</xref:System.Windows.Forms.Control.ForeColor*>"
  syntax:
    content: public override void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 의해 표시 되는 텍스트를 오른쪽에서 왼쪽으로 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성 메뉴 오른쪽에서 왼쪽으로 작성 된 언어를 지원할 수 있습니다. 이 속성이로 설정 된 경우 `true`, 항목 텍스트가 오른쪽에서 왼쪽으로 기본값 대신 표시 됩니다."
  syntax:
    content: public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.ListBox.RightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 위치, 크기, 안쪽 여백 및 여백을 조정합니다."
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "컨트롤의 너비와 높이 크기를 조정 하는 인수."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 값입니다."
  overload: System.Windows.Forms.ListBox.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  id: ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항상 세로 스크롤 막대가 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ScrollAlwaysVisible 속성 세로 스크롤 막대에는 항상 표시 여부를 나타냅니다. 경우에 <xref:System.Windows.Forms.ListBox>세로 스크롤 막대를 표시 하지 않아도</xref:System.Windows.Forms.ListBox> 의 항목 수 기본적으로는 <xref:System.Windows.Forms.ListBox>표시 충분 한 항목이 없으면 세로 스크롤 막대를 표시 합니다.</xref:System.Windows.Forms.ListBox> 복수 열에 대 한 <xref:System.Windows.Forms.ListBox>, ScrollAlwaysVisible 속성 가로 스크롤 막대가 표시 되는지 나타냅니다.</xref:System.Windows.Forms.ListBox> Multicolumn <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 대 한이 속성의 값에 관계 없이 세로 스크롤 막대가 표시 되지 않습니다."
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and ScrollAlwaysVisible properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_65_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/p-system.windows.forms.l_65_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/p-system.windows.forms.l_65_1.cpp)]"
  syntax:
    content: public bool ScrollAlwaysVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이면 세로 스크롤 막대를 항상 표시 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndex
  id: SelectedIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 선택한 항목의&0;부터 시작 하는 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "표준 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 선택 된 항목의 인덱스를 결정 하려면이 속성을 사용할 수 있습니다,</xref:System.Windows.Forms.ListBox> 경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>속성은 <xref:System.Windows.Forms.ListBox>로 설정 된 `SelectionMode.MultiSimple` 또는 `SelectionMode.MultiExtended` (다중 선택 나타냅니다 <xref:System.Windows.Forms.ListBox>) 및 여러 항목 목록에서 선택 된,이 속성이 선택한 항목에 인덱스를 반환할 수 있습니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       다중 선택에서 선택한 항목의 모든 인덱스를 포함 하는 컬렉션을 검색 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.ListBox> 현재 선택 된 항목을 가져오려면 원하는 경우는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 또한 <xref:System.Windows.Forms.ListBox.SelectedItems%2A>속성을 다중 선택 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 선택한 항목을 모두</xref:System.Windows.Forms.ListBox.SelectedItems%2A> 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the SelectedIndex property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_3_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_3_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_3_1.vb)]"
  syntax:
    content: public override int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "현재 선택한 항목의&0;부터 시작 인덱스입니다. 음수 선택 된 항목이 없으면 반환 됩니다 (-1)의 값입니다."
  overload: System.Windows.Forms.ListBox.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "할당 된 값이-1 보다 크거나의 항목 수와 같은 작은 경우"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>속성이 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.ListBox.SelectionMode*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <> </> *> 속성 또는 <> </> *> 컬렉션이 변경 합니다."
  remarks: "시기를 확인 하려면이 이벤트에 대 한 이벤트 처리기를 만들 수 있습니다에 선택한 인덱스의 <xref:System.Windows.Forms.ListBox>변경 되었습니다.</xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 현재 선택한 내용에 따라 다른 컨트롤에서 정보를 표시 해야 할 때 유용할 수 있습니다. 다른 컨트롤의 정보를 로드 하려면이 이벤트에 대 한 이벤트 처리기를 사용할 수 있습니다.       경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>속성이 <xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>또는 <xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>, 변경 된는 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A>선택 영역에서 항목을 제거 하는 등 컬렉션이이 이벤트를 발생 시킵니다.</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> </xref:System.Windows.Forms.SelectionMode?displayProperty=fullName> </xref:System.Windows.Forms.SelectionMode?displayProperty=fullName> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the SelectedIndexChanged event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the SelectedIndexChanged event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the SelectedIndexChanged event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.l_7_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_7_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.l_7_1.cs)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndices
  id: SelectedIndices
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 현재 선택 된 모든 항목의&0;부터 시작 하는 인덱스를 포함 하는 컬렉션을 가져옵니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "다중 선택 <xref:System.Windows.Forms.ListBox>이 속성 반환 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 선택 된 모든 항목의 인덱스를 포함 하는 컬렉션에</xref:System.Windows.Forms.ListBox> 대 한 단일 선택 <xref:System.Windows.Forms.ListBox>이 속성이 반환 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 유일한 선택된 항목의 인덱스를 포함 하는 단일 요소를 포함 하는 컬렉션에</xref:System.Windows.Forms.ListBox> 대 한 컬렉션의 항목을 조작 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> 을 참조 하십시오.       <xref:System.Windows.Forms.ListBox>클래스는 다양 한 선택 된 항목을 참조 하는 방법 제공 합니다.</xref:System.Windows.Forms.ListBox> 단일 선택에서 현재 선택 된 항목의 인덱스 위치를 가져오는 SelectedIndices 속성을 사용 하는 대신 <xref:System.Windows.Forms.ListBox>를 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 현재 선택 된 항목을 가져오려면 원하는 경우는 <xref:System.Windows.Forms.ListBox>, 항목의 인덱스 위치를 대신 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 또한 <xref:System.Windows.Forms.ListBox.SelectedItems%2A>속성을 다중 선택 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 선택한 항목을 모두 가져오려면 경우</xref:System.Windows.Forms.ListBox.SelectedItems%2A> 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/p-system.windows.forms.l_81_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/p-system.windows.forms.l_81_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_81_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedIndexCollection
      description: "A <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>컨트롤의 현재 선택 된 항목의 인덱스를 포함 하.</xref:System.Windows.Forms.ListBox.SelectedIndexCollection> 현재 선택 된 항목이 없으면 빈 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>반환 됩니다.</xref:System.Windows.Forms.ListBox.SelectedIndexCollection>"
  overload: System.Windows.Forms.ListBox.SelectedIndices*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItem
  id: SelectedItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 선택 된 항목을 가져오거나는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "표준 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 선택 된 항목을 결정 하려면이 속성을 사용할 수 있습니다,</xref:System.Windows.Forms.ListBox> 경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>의 속성은 <xref:System.Windows.Forms.ListBox>로 설정 되어 `SelectionMode.MultiSimple` 또는 `SelectionMode.MultiExtended` (다중 선택 나타냅니다 <xref:System.Windows.Forms.ListBox>) 및 여러 항목 목록에서 선택 된,이 속성이 선택된 된 항목을 반환할 수 있습니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>       다중 선택 선택 된 모든 항목을 포함 하는 컬렉션을 검색 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedItems%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedItems%2A> </xref:System.Windows.Forms.ListBox> 현재 선택한 항목의 인덱스 위치를 가져올 것인지는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 또한 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A>속성을 다중 선택 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에서 선택된 된 모든 인덱스를</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the SelectedItem property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by SelectedItem in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/p-system.windows.forms.l_49_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_49_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/p-system.windows.forms.l_49_1.cs)]"
  syntax:
    content: public object SelectedItem { get; set; }
    return:
      type: System.Object
      description: "컨트롤에서 현재 선택 영역을 나타내는 개체입니다."
  overload: System.Windows.Forms.ListBox.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItems
  id: SelectedItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 선택 된 항목이 포함 된 컬렉션을 가져옵니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "다중 선택 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 선택 된 모든 항목이 포함 된 컬렉션을 반환 하는이 속성에</xref:System.Windows.Forms.ListBox> 대 한 단일 선택 <xref:System.Windows.Forms.ListBox>이 속성이 반환 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 유일한 선택한 항목을 포함 하는 단일 요소를 포함 하는 컬렉션에</xref:System.Windows.Forms.ListBox> 대 한 컬렉션의 항목을 조작 하는 방법에 대 한 자세한 내용은 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>.</xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 을 참조 하십시오.       <xref:System.Windows.Forms.ListBox>클래스는 다양 한 선택 된 항목을 참조 하는 방법 제공 합니다.</xref:System.Windows.Forms.ListBox> 단일 선택에서 현재 선택한 항목에 얻으려고 SelectedItems 속성을 사용 하는 대신 <xref:System.Windows.Forms.ListBox>를 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.SelectedItem%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedItem%2A> </xref:System.Windows.Forms.ListBox> 현재 선택 된 항목의 인덱스 위치를 가져오는 경우는 <xref:System.Windows.Forms.ListBox>을 항목 자체를 대신 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox> 또한 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A>다중 선택 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 에 선택 된 모든 항목의 인덱스 위치를 가져오는 경우 속성</xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 을 사용할 수는 있습니다."
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedObjectCollection
      description: "A <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>컨트롤에서 현재 선택 된 항목이 포함 된.</xref:System.Windows.Forms.ListBox.SelectedObjectCollection>"
  overload: System.Windows.Forms.ListBox.SelectedItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectionMode
  id: SelectionMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목을 선택 하는 메서드를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "SelectionMode 속성을 사용 하면 항목에 확인할 수 있습니다는 <xref:System.Windows.Forms.ListBox>한 번에 선택할 수 있는 및 사용자가 다중 선택을 확인할 수 있는 방법은.</xref:System.Windows.Forms.ListBox> SelectionMode 속성이로 설정 되 면 `SelectionMode.MultiExtended`, shift 및 마우스를 클릭 하거나 눌러 이동 및 현재 항목에 이전에 선택한 항목의 선택 영역을 확장 한 화살표 키 (위쪽 화살표, 아래쪽 화살표, 왼쪽 화살표 및 오른쪽 화살표). CTRL 키를 누르고 마우스를 클릭 하면 목록에서 항목을 선택 취소 하거나 선택 합니다. 속성이로 설정 되 면 `SelectionMode.MultiSimple`, 마우스 클릭 또는 스페이스바를 누르면 선택 하거나 목록에서 항목을 선택 취소 합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the SelectionMode property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_28_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_28_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_28_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.SelectionMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.SelectionMode&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_SelectionMode.One&quot; name=&quot;SelectionMode.One&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.SelectionMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "할당 된 값 중 하나이 고 <xref href=&quot;System.Windows.Forms.SelectionMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "설정의 지정된 된 범위는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 제어 합니다."
  remarks: "높이 <xref:System.Windows.Forms.ListBox>의 배수로 낮아지고 제어는 <xref:System.Windows.Forms.ListBox.ItemHeight%2A>속성.</xref:System.Windows.Forms.ListBox.ItemHeight%2A> </xref:System.Windows.Forms.ListBox> 높이 숫자를의 배수가 아닌 경우 <xref:System.Windows.Forms.ListBox.ItemHeight%2A>의 높이 <xref:System.Windows.Forms.ListBox>높이 보다 작으면 하는 여러 개의 가장 큰 값으로 변경 됩니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ItemHeight%2A>       일반적으로 지정된 된 매개 변수에서 제외 범위에 해당 하는 매개 변수는 현재 값과 함께 전달 됩니다. 예를 들어는 `height`, `width`, 또는 `x` 또는 `y` 의 속성은 <xref:System.Windows.Forms.Control.Location%2A>속성 컨트롤의 현재 인스턴스에 대 한 참조를 사용 하 여 전달 될 수 있습니다.</xref:System.Windows.Forms.Control.Location%2A> 그러나에 전달 된 모든 값 유지 하 고 컨트롤에 적용 됩니다.       `specified` 매개 변수는 컨트롤의 요소를 나타냅니다. <xref:System.Windows.Forms.Control.Bounds%2A>응용 프로그램에서 변경한.</xref:System.Windows.Forms.Control.Bounds%2A> 예를 들어, 변경 하는 경우는 <xref:System.Windows.Forms.Control.Size%2A>컨트롤의는 `specified` 매개 변수 값이 <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Size%2A> 그러나 경우는 <xref:System.Windows.Forms.Control.Size%2A>대 한 응답으로 조정 되는 <xref:System.Windows.Forms.Control.Dock%2A>속성이 설정 되는 `specified` 매개 변수 값이 <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Left*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Top*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Width*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Height*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.ListBox.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  id: SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "파생된 클래스에서 지정 된 인덱스 개체를 설정합니다."
  syntax:
    content: protected override void SetItemCore (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "개체의 배열 인덱스입니다."
    - id: value
      type: System.Object
      description: "개체입니다."
  overload: System.Windows.Forms.ListBox.SetItemCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  id: SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "내용을 지웁니다는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 컨트롤에 지정된 된 항목을 추가 합니다."
  syntax:
    content: protected override void SetItemsCore (System.Collections.IList value);
    parameters:
    - id: value
      type: System.Collections.IList
      description: "컨트롤에 삽입 하는 개체의 배열입니다."
  overload: System.Windows.Forms.ListBox.SetItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  id: SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "선택 또는 선택에서 지정한 항목에 대 한 선택을 취소 한 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "이 속성을 사용 하 여 다중 선택 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 의 선택 항목의 설정 단일 선택 항목을 선택 하려면 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A>속성.</xref:System.Windows.Forms.ListBox.SelectedIndex%2A> </xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the SetSelected method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_1_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_1_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_1_1.vb)]"
  syntax:
    content: public void SetSelected (int index, bool value);
    parameters:
    - id: index
      type: System.Int32
      description: "항목의&0;부터 시작 인덱스는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 를 선택 하거나 선택을 취소 합니다."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 항목;를 선택 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.SetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 인덱스가 유효한 값 범위를 벗어났습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.ListBox.SelectionMode*>속성이로 설정 된 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.ListBox.SelectionMode*>"
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sort
  id: Sort
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 항목을 정렬 하는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "정렬 하는 경우 각 항목에 다시 추가할 컬렉션을 강제로 <xref:System.Windows.Forms.ListBox.Sorted%2A>속성은 `true`.</xref:System.Windows.Forms.ListBox.Sorted%2A> 각 항목은 다음 올바른 위치에 삽입 됩니다."
  example:
  - "The following code example demonstrates using the Sort method. The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the Sort method in the derived class to perform a user-defined sort. To run this example paste the following code in an empty form.  \n  \n [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/cpp/m-system.windows.forms.l_19_1.cpp)]\n [!code-cs[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/csharp/m-system.windows.forms.l_19_1.cs)]\n [!code-vb[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: protected virtual void Sort ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sorted
  id: Sorted
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부에 있는 항목의 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 사전순으로 정렬 됩니다."
  remarks: "Sorted 속성을 사용 하 여 자동으로 문자열에 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 의 사전 순으로 정렬 하려면 항목이 추가 되는 정렬 된에 <xref:System.Windows.Forms.ListBox>, 항목이 정렬된 된 목록에서 적절 한 위치로 이동 됩니다.</xref:System.Windows.Forms.ListBox> 항목을 추가할 때는 <xref:System.Windows.Forms.ListBox>,이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다.</xref:System.Windows.Forms.ListBox>       A <xref:System.Windows.Forms.ListBox>로 설정 하는 Sorted와 `true` 사용 하 여 데이터에 바인딩되지 않도록는 <xref:System.Windows.Forms.ListControl.DataSource%2A>속성.</xref:System.Windows.Forms.ListControl.DataSource%2A> </xref:System.Windows.Forms.ListBox> 한계에 데이터 정렬 표시 하려면 <xref:System.Windows.Forms.ListBox>, 정렬을 지 원하는 데이터 소스에 바인딩해야 하 고 데이터 소스에서 정렬을 제공 해야 합니다.</xref:System.Windows.Forms.ListBox>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the Sorted property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_17_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_17_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_17_1.vb)]"
  syntax:
    content: public bool Sorted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 항목 정렬 되어 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.Sorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Text
  id: Text
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나 검색에서 현재 선택한 항목의 텍스트는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "이 속성의 값은 문자열 값으로 설정 된 경우는 <xref:System.Windows.Forms.ListBox>내에서 항목에 대 한 검색에서 <xref:System.Windows.Forms.ListBox>지정된 텍스트와 일치 하 고 항목을 선택 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 현재 선택 된 항목을 확인 하려면이 속성을 사용할 수도 있습니다. 경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>의 속성은 <xref:System.Windows.Forms.ListBox>로 설정 된 `SelectionMode.MultiExtended`, 첫 번째 선택된 항목의 텍스트를 반환 하는이 속성.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A> 경우는 <xref:System.Windows.Forms.ListBox.SelectionMode%2A>의 속성은 <xref:System.Windows.Forms.ListBox>로 설정 되지 않은 `SelectionMode.None`,이 속성이 첫 번째 선택된 항목의 텍스트를 반환 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.SelectionMode%2A>"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "컨트롤에서 현재 선택 된 항목의 텍스트입니다."
  overload: System.Windows.Forms.ListBox.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.ListBox.Text*>속성을 변경 합니다.</xref:System.Windows.Forms.ListBox.Text*>"
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TopIndex
  id: TopIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 표시 되는 첫 번째 항목의 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  remarks: "인덱스 위치 (0)으로 표시 된 항목은 <xref:System.Windows.Forms.ListBox>.</xref:System.Windows.Forms.ListBox> 의 표시 영역 맨 처음에 하는 경우의 콘텐츠는 <xref:System.Windows.Forms.ListBox>스크롤 된 컨트롤의 표시 영역 맨 위에 있는 다른 항목이 있을 수 있습니다.</xref:System.Windows.Forms.ListBox> 이 속성을 사용 하 여 내에서 인덱스를 가져올 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection>에 대 한는 <xref:System.Windows.Forms.ListBox>현재 컨트롤의 표시 영역 위쪽에 배치 되어 있는 항목의 합니다.</xref:System.Windows.Forms.ListBox> </xref:System.Windows.Forms.ListBox.ObjectCollection> 또한 컨트롤의 표시 영역 맨 위에 있는 목록에서 항목을 이동 하려면이 속성을 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the TopIndex property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_70_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_70_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_70_1.vb)]"
  syntax:
    content: public int TopIndex { get; set; }
    return:
      type: System.Int32
      description: "컨트롤에 표시 되는 첫 번째 항목의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Forms.ListBox.TopIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ToString
  id: ToString
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "문자열 표현을 반환 된 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "컨트롤을 나타내는 문자열 입력에 있는 항목 수는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 제어 및 첫 번째 항목의 Text 속성의 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref>이 아닌 경우 0입니다."
  overload: System.Windows.Forms.ListBox.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  id: UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 인식 하 고 탭 문자를 사용 하 여 문자열을 그릴 때 확장의 <xref:System.Windows.Forms.ListBox.CustomTabOffsets*>정수 배열입니다.</xref:System.Windows.Forms.ListBox.CustomTabOffsets*>"
  syntax:
    content: public bool UseCustomTabOffsets { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 인식 탭 문자를 확장 하 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseTabStops
  id: UseTabStops
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 인식 하 고 해당 문자열을 그릴 때 탭 문자를 확장할 수 있습니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.  \n  \n [!code-cs[ListBox.UseTabStops#1](~/add/codesnippet/csharp/p-system.windows.forms.l_62_1.cs)]\n [!code-vb[ListBox.UseTabStops#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_62_1.vb)]\n [!code-cpp[ListBox.UseTabStops#1](~/add/codesnippet/cpp/p-system.windows.forms.l_62_1.cpp)]"
  syntax:
    content: public bool UseTabStops { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 탭 문자; 확장할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.ListBox.UseTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  id: WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "명령 메시지를 처리는 <xref href=&quot;System.Windows.Forms.ListView&quot;> </xref> 컨트롤이 최상위 창에서 받습니다."
  syntax:
    content: protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "<xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 최상위 창에 전송 된 <xref href=&quot;System.Windows.Forms.ListBox&quot;> </xref> 제어 합니다."
  overload: System.Windows.Forms.ListBox.WmReflectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "창 프로시저에는 목록입니다."
  remarks: "상속 클래스 기능을 추가 하려면이 설정을 재정의할 수 있지만 목록 계속 제대로 작동 하려면 기본 클래스에 WndProc 메서드를 호출 해야 합니다."
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows 메시지 개체입니다."
  overload: System.Windows.Forms.ListBox.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ListControl
  isExternal: false
  name: System.Windows.Forms.ListControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Forms.ListBox.#ctor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.ListBox.AllowSelection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListBox.BackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListBox.BackgroundImage
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.ListBox.BeginUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
- uid: System.Windows.Forms.ListBox.BorderStyle
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
- uid: System.Windows.Forms.ListBox.Click
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
- uid: System.Windows.Forms.ListBox.ColumnWidth
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
- uid: System.Windows.Forms.ListBox.ObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+ObjectCollection
  nameWithType: ListBox+ObjectCollection
  fullName: System.Windows.Forms.ListBox+ObjectCollection
- uid: System.Windows.Forms.ListBox.CreateParams
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.IntegerCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+IntegerCollection
  nameWithType: ListBox+IntegerCollection
  fullName: System.Windows.Forms.ListBox+IntegerCollection
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
- uid: System.Windows.Forms.ListBox.DefaultSize
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ListBox.DrawItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.ListBox.DrawMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
- uid: System.Windows.Forms.DrawMode
  parent: System.Windows.Forms
  isExternal: false
  name: DrawMode
  nameWithType: DrawMode
  fullName: System.Windows.Forms.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
- uid: System.Windows.Forms.ListBox.Font
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.ListBox.ForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
- uid: System.Windows.Forms.ListBox.IntegralHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
- uid: System.Windows.Forms.ListBox.MeasureItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.ListBox.MouseClick
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.ListBox.MultiColumn
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.NoMatches
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.Padding
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.ListBox.PaddingChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
- uid: System.Windows.Forms.ListBox.Paint
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.ListBox.PreferredHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
- uid: System.Windows.Forms.ListBox.RefreshItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
- uid: System.Windows.Forms.ListBox.ResetBackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
- uid: System.Windows.Forms.ListBox.ResetForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
- uid: System.Windows.Forms.ListBox.RightToLeft
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
- uid: System.Windows.Forms.ListBox.SelectedIndices
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedIndexCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedIndexCollection
  nameWithType: ListBox+SelectedIndexCollection
  fullName: System.Windows.Forms.ListBox+SelectedIndexCollection
- uid: System.Windows.Forms.ListBox.SelectedItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ListBox.SelectedItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectedObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedObjectCollection
  nameWithType: ListBox+SelectedObjectCollection
  fullName: System.Windows.Forms.ListBox+SelectedObjectCollection
- uid: System.Windows.Forms.ListBox.SelectionMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
- uid: System.Windows.Forms.SelectionMode
  parent: System.Windows.Forms
  isExternal: false
  name: SelectionMode
  nameWithType: SelectionMode
  fullName: System.Windows.Forms.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
- uid: System.Windows.Forms.ListBox.Sort
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
- uid: System.Windows.Forms.ListBox.Sorted
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
- uid: System.Windows.Forms.ListBox.TextChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
- uid: System.Windows.Forms.ListBox.TopIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
- uid: System.Windows.Forms.ListBox.#ctor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox
  nameWithType: ListBox.ListBox
- uid: System.Windows.Forms.ListBox.AddItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore
  nameWithType: ListBox.AddItemsCore
- uid: System.Windows.Forms.ListBox.AllowSelection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
- uid: System.Windows.Forms.ListBox.BackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
- uid: System.Windows.Forms.ListBox.BackgroundImage*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ListBox.BeginUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate
  nameWithType: ListBox.BeginUpdate
- uid: System.Windows.Forms.ListBox.BorderStyle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected
  nameWithType: ListBox.ClearSelected
- uid: System.Windows.Forms.ListBox.ColumnWidth*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
- uid: System.Windows.Forms.ListBox.CreateItemCollection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection
  nameWithType: ListBox.CreateItemCollection
- uid: System.Windows.Forms.ListBox.CreateParams*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.DefaultSize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
- uid: System.Windows.Forms.ListBox.DrawMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate
  nameWithType: ListBox.EndUpdate
- uid: System.Windows.Forms.ListBox.FindString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString
  nameWithType: ListBox.FindString
- uid: System.Windows.Forms.ListBox.FindStringExact*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact
  nameWithType: ListBox.FindStringExact
- uid: System.Windows.Forms.ListBox.Font*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
- uid: System.Windows.Forms.ListBox.ForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight
  nameWithType: ListBox.GetItemHeight
- uid: System.Windows.Forms.ListBox.GetItemRectangle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle
  nameWithType: ListBox.GetItemRectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds
  nameWithType: ListBox.GetScaledBounds
- uid: System.Windows.Forms.ListBox.GetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected
  nameWithType: ListBox.GetSelected
- uid: System.Windows.Forms.ListBox.HorizontalExtent*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint
  nameWithType: ListBox.IndexFromPoint
- uid: System.Windows.Forms.ListBox.IntegralHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
- uid: System.Windows.Forms.ListBox.MultiColumn*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.OnChangeUICues*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues
  nameWithType: ListBox.OnChangeUICues
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: ListBox.OnDataSourceChanged
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged
  nameWithType: ListBox.OnDisplayMemberChanged
- uid: System.Windows.Forms.ListBox.OnDrawItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem
  nameWithType: ListBox.OnDrawItem
- uid: System.Windows.Forms.ListBox.OnFontChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged
  nameWithType: ListBox.OnFontChanged
- uid: System.Windows.Forms.ListBox.OnHandleCreated*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated
  nameWithType: ListBox.OnHandleCreated
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: ListBox.OnHandleDestroyed
- uid: System.Windows.Forms.ListBox.OnMeasureItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem
  nameWithType: ListBox.OnMeasureItem
- uid: System.Windows.Forms.ListBox.OnParentChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged
  nameWithType: ListBox.OnParentChanged
- uid: System.Windows.Forms.ListBox.OnResize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize
  nameWithType: ListBox.OnResize
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: ListBox.OnSelectedIndexChanged
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged
  nameWithType: ListBox.OnSelectedValueChanged
- uid: System.Windows.Forms.ListBox.Padding*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
- uid: System.Windows.Forms.ListBox.PreferredHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh
  nameWithType: ListBox.Refresh
- uid: System.Windows.Forms.ListBox.RefreshItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem
  nameWithType: ListBox.RefreshItem
- uid: System.Windows.Forms.ListBox.RefreshItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems
  nameWithType: ListBox.RefreshItems
- uid: System.Windows.Forms.ListBox.ResetBackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor
  nameWithType: ListBox.ResetBackColor
- uid: System.Windows.Forms.ListBox.ResetForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor
  nameWithType: ListBox.ResetForeColor
- uid: System.Windows.Forms.ListBox.RightToLeft*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl
  nameWithType: ListBox.ScaleControl
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndices*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
- uid: System.Windows.Forms.ListBox.SelectedItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectionMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore
  nameWithType: ListBox.SetBoundsCore
- uid: System.Windows.Forms.ListBox.SetItemCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore
  nameWithType: ListBox.SetItemCore
- uid: System.Windows.Forms.ListBox.SetItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore
  nameWithType: ListBox.SetItemsCore
- uid: System.Windows.Forms.ListBox.SetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected
  nameWithType: ListBox.SetSelected
- uid: System.Windows.Forms.ListBox.Sort*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort
  nameWithType: ListBox.Sort
- uid: System.Windows.Forms.ListBox.Sorted*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
- uid: System.Windows.Forms.ListBox.TopIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString
  nameWithType: ListBox.ToString
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand
  nameWithType: ListBox.WmReflectCommand
- uid: System.Windows.Forms.ListBox.WndProc*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc
  nameWithType: ListBox.WndProc
