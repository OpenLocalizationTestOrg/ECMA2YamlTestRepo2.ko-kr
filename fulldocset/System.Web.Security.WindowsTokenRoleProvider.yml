### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "Windows 그룹 멤버 자격에서 ASP.NET 응용 프로그램에 대 한 역할 정보를 가져옵니다."
  remarks: "WindowsTokenRoleProvider 클래스는 Windows 보안 그룹을 기준으로 Windows 사용자에 대 한 역할 정보를 검색 하는 읽기 전용 역할-멤버 자격 공급자입니다. IIS 인증 설정 익명 인증을 해제 하는 여기서 Windows 인증 모드를 사용 하는 ASP.NET 응용 프로그램에서 가장 유용 합니다. ASP.NET 응용 프로그램을 허용 하거나 거부할 사용자의 특정 Windows 그룹 멤버 자격에 따라 액세스를 구성할 수 있습니다.       생성 또는 역할을 삭제 또는 Windows 그룹 멤버 자격을 기반으로 하는 역할의 멤버 자격을 수정할 WindowsTokenRoleProvider 클래스를 사용할 수 없습니다. 이 기능은 Windows 운영 체제에 의해 관리 됩니다. WindowsTokenRoleProvider 클래스만 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>및 <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> <xref:System.Web.Security.RoleProvider>추상 클래스</xref:System.Web.Security.RoleProvider> 의 메서드</xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> 를 지원합니다."
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스입니다."
  remarks: "WindowsTokenRoleProvider 생성자의 인스턴스를 만드는 ASP.NET에서 호출 되는 <xref:System.Web.Security.WindowsTokenRoleProvider>응용 프로그램에 대 한 구성에 지정 된 대로 클래스.</xref:System.Web.Security.WindowsTokenRoleProvider> 이 생성자는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  remarks: "이 메서드는 <xref:System.Web.Security.WindowsTokenRoleProvider>클래스 및 항상에 <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> 를 throw</xref:System.Web.Security.WindowsTokenRoleProvider> 하 여 지원 되지 않습니다."
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "지정된 된 역할에 추가할 사용자 이름의 문자열 배열입니다."
    - id: roleNames
      type: System.String[]
      description: "지정 된 사용자 이름을 추가할 역할 이름의 문자열 배열입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "응용 프로그램의 이름을 가져오거나 설정 합니다."
  remarks: "와 같은 다른 역할 공급자와 달리는 <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Security.WindowsTokenRoleProvider>클래스에서 응용 프로그램 역할 정보를 연결 하지 않습니다.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.SqlRoleProvider> 대신, 역할 정보를 로컬 컴퓨터에서 Windows 그룹에서 가져옵니다. 사용 하는 동일한 서버에 여러 응용 프로그램의 <xref:System.Web.Security.WindowsTokenRoleProvider>클래스 항상 동일한 역할 정보를 공유 합니다.</xref:System.Web.Security.WindowsTokenRoleProvider> 하지만 `applicationName` 응용 프로그램 역할 정보를 검색 하는 속성이 사용 되지 않습니다 ApplicationName에 대 한 Web.config 파일에서 구성할 수 있습니다."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "응용 프로그램의 이름입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "하려고 했습니다 ApplicationName 속성을 설정 하지 않은 호출자가 <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET 호스팅 권한을 합니다."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "ApplicationName은 256 자 보다 긴 문자열로 설정 하려고 했습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  remarks: "이 메서드는 <xref:System.Web.Security.WindowsTokenRoleProvider>클래스 및 항상에 <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> 를 throw</xref:System.Web.Security.WindowsTokenRoleProvider> 하 여 지원 되지 않습니다."
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "만들 역할의 이름입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "삭제할 역할의 이름입니다."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 하나 이상의 멤버를 포함 하는 역할을 삭제 하려고 할 때 예외가 throw 됩니다."
    return:
      type: System.Boolean
      description: "없음. 메서드가 지원 되지 않습니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스와 항상 throw 한 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "검색할 역할입니다."
    - id: usernameToMatch
      type: System.String
      description: "역할에서 찾으려는 사용자 이름입니다."
    return:
      type: System.String[]
      description: "없음. 메서드가 지원 되지 않습니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스와 항상 throw 한 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "없음. 메서드가 지원 되지 않습니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스와 항상 throw 한 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "사용자가 속한 Windows 그룹의 목록을 가져옵니다."
  remarks: "이 메서드는 <xref:System.Web.Security.Roles>Windows 운영 체제에서 지정된 된 사용자가 할 Windows 그룹 목록을 검색 하는 클래스</xref:System.Web.Security.Roles> LOGON_USER 서버 변수에서 식별 한 대로 현재 로그온 한 사용자에 대해서만 GetRolesForUser 메서드를 호출할 수 있습니다. 제공 된 값의 `username` 매개 변수는 현재 로그인 한 사용자의 이름이 아닙니다.는 <xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>throw 됩니다.</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>       자세한 내용은 ASP.NET 및 Windows 인증에 대 한 참조 [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "도메인 \\ 사용자 이름 형식에서에 대 한 Windows 그룹 목록을 반환할 사용자입니다."
    return:
      type: System.String[]
      description: "모든 Windows 그룹에 지정된 된 사용자가을의 이름을 포함 하는 문자열 배열입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "현재 실행 중인 사용자가 인증 된 없는 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;합니다. HTTP가 아닌 시나리오에 대 한 현재 실행 중인 사용자가 없습니다 인증 된 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;합니다.       -또는- <code> username </code> 일치 하지 않습니다는 <xref:System.Security.Principal.WindowsIdentity.Name*>현재 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       -또는-사용자의 Windows 그룹 정보를 검색 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "신뢰 수준이 보다 작은 <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "사용자 목록을 가져올 역할의 이름입니다."
    return:
      type: System.String[]
      description: "없음. 메서드가 지원 되지 않습니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스와 항상 throw 한 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ASP.NET 응용 프로그램에 대 한 구성 파일에 지정 된 속성 값을 가진 Windows 토큰 역할 공급자를 초기화 합니다. 이 메서드는 사용자 코드에서 직접 사용할 수 없습니다."
  remarks: "Initialize 메서드를 초기화는 <xref:System.Web.Security.WindowsTokenRoleProvider>속성 값을 가진 클래스는 ASP.NET 응용 프로그램 구성 파일 (Web.config)에 지정 하 고 사용자 코드에서 직접 사용할 수 없습니다.</xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 인스턴스를 초기화 합니다."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 이름과 구성의 값을 포함 하는 생성자에 대 한 옵션은 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> 의 구성에 특성이 256 자 보다 깁니다.       -또는-이 응용 프로그램 구성 파일 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 인스턴스 인식할 수 없는 특성을 포함 합니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "지정된 된 사용자 지정 된 기본 제공 Windows 역할에서 인지를 나타내는 값을 가져옵니다."
  remarks: "IsUserInRole 메서드를 사용 하 여 설명 하는 일반적인 Windows 역할 중 하나에 사용자 인지 여부를 확인 하면는 <xref:System.Security.Principal.WindowsBuiltInRole>열거형.</xref:System.Security.Principal.WindowsBuiltInRole> 이 메서드는 여러 언어로 지역화 되는 응용 프로그램에 유용 합니다. IsUserInRole 메서드의이 오버 로드는의 일부가 <xref:System.Web.Security.RoleProvider>기본 클래스 및 캐스팅 하 여 액세스할 수 있습니다는 <xref:System.Web.Security.Roles.Provider%2A>속성은 <xref:System.Web.Security.Roles>으로 클래스는 <xref:System.Web.Security.WindowsTokenRoleProvider>유형.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider>       LOGON_USER 서버 변수에서 식별 한 대로 현재 로그온 한 사용자에 대해서만 IsUserInRole 메서드를 호출할 수 있습니다. 제공 된 값의 `username` 매개 변수는 현재 로그인 한 사용자의 이름이 아닙니다.는 <xref:System.Web.HttpException>throw 됩니다.</xref:System.Web.HttpException>       IsUserInRole 메서드 LOGON_USER 서버 변수에서 식별 한 현재 로그인 한 사용자만 호출할 수 있습니다. 현재 로그온 된 사용자는 Windows 인증 된 사용자 여야 합니다. ASP.NET 및 Windows 인증에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "도메인 \\ 사용자 이름 형식에서 검색할 사용자 이름입니다."
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "Windows 역할의 검색입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 사용자가 지정된 된 Windows 역할의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "현재 실행 중인 사용자가 인증 된 없는 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;합니다. HTTP가 아닌 시나리오에 대 한 현재 실행 중인 사용자가 없습니다 인증 된 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;합니다.       -또는- <code> username </code> 일치 하지 않습니다는 <xref:System.Security.Principal.WindowsIdentity.Name*>현재 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "지정된 된 사용자가 지정 된 Windows 그룹에 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsUserInRole 메서드에 의해 호출 됩니다는 <xref:System.Web.Security.Roles>클래스 및 <xref:System.Security.Principal.IPrincipal.IsInRole%2A>의 메서드는 <xref:System.Web.UI.Page.User%2A>속성을 사용자가 Windows 그룹에 있는지 여부를 확인 합니다.</xref:System.Web.UI.Page.User%2A> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles> LOGON_USER 서버 변수에서 식별 한 대로 현재 로그온 한 사용자에 대해서만 IsUserInRole 메서드를 호출할 수 있습니다. 현재 로그온 한 사용자는 Windows 인증 된 사용자 여야 합니다. ASP.NET 및 Windows 인증에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "도메인 \\ 사용자 이름 형식에서 검색할 사용자 이름입니다."
    - id: roleName
      type: System.String
      description: "DOMAIN\\rolename 형태로 검색 하려면 Windows 그룹입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 사용자가 지정된 된 Windows 그룹에 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "현재 실행 중인 사용자가 인증 된 없는 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;합니다. HTTP가 아닌 시나리오에 대 한 현재 실행 중인 사용자가 없습니다 인증 된 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> 연결할 &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;합니다.       -또는- <code> username </code> 일치 하지 않습니다는 <xref:System.Security.Principal.WindowsIdentity.Name*>현재 <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       -또는-사용자의 Windows 그룹 정보를 검색 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  remarks: "이 메서드는 <xref:System.Web.Security.WindowsTokenRoleProvider>클래스 및 항상에 <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> 를 throw</xref:System.Web.Security.WindowsTokenRoleProvider> 하 여 지원 되지 않습니다."
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "지정된 된 역할에 추가할 사용자 이름의 문자열 배열입니다."
    - id: roleNames
      type: System.String[]
      description: "지정 된 사용자 이름을 추가할 역할 이름의 문자열 배열입니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 메서드는 Windows 토큰 역할 공급자가 지원 되지 않습니다."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "데이터 원본에서 검색할 역할의 이름입니다."
    return:
      type: System.Boolean
      description: "없음. 메서드가 지원 되지 않습니다는 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> 클래스와 항상 throw 한 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>합니다."
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "지원 되지 않는 메서드가 호출 되었습니다."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
