### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBinding
  id: MenuItemBinding
  children:
  - System.Web.UI.WebControls.MenuItemBinding.#ctor
  - System.Web.UI.WebControls.MenuItemBinding.DataMember
  - System.Web.UI.WebControls.MenuItemBinding.Depth
  - System.Web.UI.WebControls.MenuItemBinding.Enabled
  - System.Web.UI.WebControls.MenuItemBinding.EnabledField
  - System.Web.UI.WebControls.MenuItemBinding.FormatString
  - System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  - System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  - System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.Selectable
  - System.Web.UI.WebControls.MenuItemBinding.SelectableField
  - System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  - System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  - System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.MenuItemBinding.Target
  - System.Web.UI.WebControls.MenuItemBinding.TargetField
  - System.Web.UI.WebControls.MenuItemBinding.Text
  - System.Web.UI.WebControls.MenuItemBinding.TextField
  - System.Web.UI.WebControls.MenuItemBinding.ToolTip
  - System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  - System.Web.UI.WebControls.MenuItemBinding.ToString
  - System.Web.UI.WebControls.MenuItemBinding.Value
  - System.Web.UI.WebControls.MenuItemBinding.ValueField
  langs:
  - csharp
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
  type: Class
  summary: "데이터 항목과 데이터 항목이 바인드되에 메뉴 항목 간의 관계를 정의 <xref href=&quot;System.Web.UI.WebControls.Menu&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.Menu>각 데이터 항목 여러 필드에 포함 된 데이터 소스에 바인딩된 컨트롤 (예: XML 요소가 아닌 여러 특성이 있는) 메뉴 항목 바인딩이 정의 된 메뉴 항목 값을 표시에서 반환 되는 `ToString()` 메서드 기본적으로 데이터 항목의 합니다.</xref:System.Web.UI.WebControls.Menu> XML 요소의 경우 메뉴 항목의 메뉴의 기본 구조를 표시 하지만 그렇지 않은 경우 매우 유용 하지 않습니다 요소 이름이 표시 됩니다. 메뉴 항목 바인딩을 지정 하 여 특정 필드에 메뉴 항목의 속성을 바인딩할 수 있습니다. MenuItemBinding 개체는 각 데이터 항목과 데이터 항목이 바인딩되는 메뉴 항목 간의 관계를 정의 합니다.      > [!NOTE] > 때는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.SiteMapDataSource>컨트롤, 메뉴 항목 바인딩에 영향을 주지 않습니다.</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.Menu> 바인딩은은 사이트 맵 공급자를 사용 하 여 자동으로 수행 됩니다.       <xref:System.Web.UI.WebControls.Menu>에 해당 MenuItemBinding 개체를 저장 하는 제어는 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>속성 바인딩을 메뉴 계층 구조와 데이터 원본 계층 구조 간에 한 일 관계를 만들려면 데이터 원본에 적용 됩니다.</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> 데이터 원본에서 각 데이터 항목에 대 한는 <xref:System.Web.UI.WebControls.Menu>제어를 만들려면 해당 MenuItemBinding 개체에 데이터 항목을 일치 시 키 려 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.Menu>       MenuItemBinding 개체를 만들 때 바인딩에 대 한 조건을 지정 해야 합니다. 기준은 데이터 항목을 메뉴 항목에 각각 바인딩해야 하는 시기를 나타냅니다. 지정할 수는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>, <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>, 또는 둘 다.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       메뉴 항목 수준 바인딩되는 메뉴 수준을 지정 합니다. 예를 들어 다음 MenuItemBinding 선언 바인딩하는 데이터 원본의 이름 및 ID 필드는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성을 각각 깊이가 0 인 모든 노드의: ```   <asp:MenuItemBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ``` 데이터 멤버를 데이터 원본에서 데이터 항목의 형식을 지정 하지만 데이터 원본에 따라 다른 정보를 나타낼 수 있습니다.</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 계층적 데이터 소스의 각 데이터 항목 (나타내는 <xref:System.Web.UI.IHierarchyData>개체)를 노출는 <xref:System.Web.UI.IHierarchyData.Type%2A>데이터 항목의 형식을 지정 하는 속성.</xref:System.Web.UI.IHierarchyData.Type%2A> </xref:System.Web.UI.IHierarchyData> 예를 들어 XML 요소에 대 한 데이터 멤버 요소의 이름을 지정합니다. 데이터 원본에 여러 데이터 항목 유형에 포함 되어 있으면, 데이터 멤버는 데이터를 지정 하는 항목 유형을 사용 하도록 합니다. 다음 MenuItemBinding 선언 바인딩하는 `<Book>` 의 요소는 <xref:System.Web.UI.WebControls.XmlDataSource>컨트롤 계층의 위치와 상관 없이 메뉴에 있는 모든 메뉴 항목을: ```   <asp:MenuItemBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ``` 경우가 수준과 데이터 멤버를 둘 다 지정 하는 메뉴 항목 바인딩을 만들 해야 할 수 있습니다.</xref:System.Web.UI.WebControls.XmlDataSource> 이 데이터 원본에 동일한 데이터 멤버 값을 가진 여러 수준에서 항목을 포함 하는 경우 종종 사용 됩니다. 예를 들어 할 수 있습니다 `<Item>` XML 파일 내에서 서로 다른 수준에서 표시 되는 요소입니다. 다음 MenuItemBinding 선언은 서로 다른 메뉴 수준에 있는 멤버를 동일한 데이터에 적용 되는 메뉴 항목 바인딩을 지정 하는 방법을 보여 줍니다: `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>` 메뉴 항목 바인딩이 메뉴 내의 모든 메뉴 항목에 적용 됩니다는 메뉴 항목 바인딩을 수준과 데이터 멤버 없이 정의 된 경우.        이 값은 모든 데이터 항목의 동일한 속성 및 메뉴 수준에 관계 없이 동일 하 게 표시 해야 하는 경우 일반적으로 사용 됩니다.       바인딩 기준에 설정 속성을 다음 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>값에 바인딩할 수 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItem> 데이터 항목의 필드 또는 정적 값을 바인딩할 수 있습니다. 정적 값에 바인딩되면 모든 <xref:System.Web.UI.WebControls.MenuItem>MenuItemBinding 개체 적용 되는 개체는 같은 값을 공유 합니다.</xref:System.Web.UI.WebControls.MenuItem> 속성 필드에 바인딩된 데이터 소스에서 해당 필드의 값이 포함 됩니다.      > [!NOTE] >의 바인딩된 속성을 선택적으로 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem>직접 해당 하는 속성을 설정 하 여 개체입니다.</xref:System.Web.UI.WebControls.MenuItem>       속성을 바인딩할 수 있도록 하는 MenuItemBinding 클래스의 속성을 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.MenuItem>개체는 데이터 항목의 필드입니다.</xref:System.Web.UI.WebControls.MenuItem>      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성에 바인딩할 필드입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성에 바인딩할 필드입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성에 바인딩할 필드입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성에 바인딩할 필드입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성에 바인딩할 필드입니다. |       속성을 바인딩할 수 있도록 하는 MenuItemBinding 클래스의 속성을 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.MenuItem>개체를 고정 값.</xref:System.Web.UI.WebControls.MenuItem>  </xref:System.Web.UI.WebControls.MenuItem.Value%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>  </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>  </xref:System.Web.UI.WebControls.MenuItem.Text%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>  </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>  </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성에 바인딩할 정적 값입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성에 바인딩할 정적 값입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.Target%2A>속성에 바인딩할 정적 값입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성에 바인딩할 정적 값입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성에 바인딩할 정적 값입니다. |   | <xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>| <xref:System.Web.UI.WebControls.MenuItem>개체의 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성에 바인딩할 정적 값입니다. |       충돌 하는 MenuItemBinding 개체 정의 된 경우는 <xref:System.Web.UI.WebControls.Menu>우선 순위는 다음 순서 대로 메뉴 항목 바인딩을 적용 하는 컨트롤: 1.</xref:System.Web.UI.WebControls.Menu>  </xref:System.Web.UI.WebControls.MenuItem.Value%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>  </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>  </xref:System.Web.UI.WebControls.MenuItem.Text%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>  </xref:System.Web.UI.WebControls.MenuItem.Target%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>  </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>  </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A></xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>  정의 하 고 수준과 데이터 멤버를 둘 다 일치 MenuItemBinding 개체입니다.      2.  정의 하 고 데이터 멤버만 일치 MenuItemBinding 개체입니다.      3.  정의 하 고 일치 시키는 MenuItemBinding 개체입니다.      4.  깊이 아니고 데이터 멤버를 정의 하는 MenuItemBinding 개체입니다. (이러한 유형의 메뉴 항목 바인딩 메뉴의 모든 메뉴 항목에 적용 됩니다.)      5.  데이터 원본에 일치 하는 항목이 없는 MenuItemBinding 개체입니다. 이 경우에 의해 반환 되는 값은 `ToString()` 에 바인딩됩니다 데이터 항목의 메서드는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>MenuItemBinding 개체에 적용 되는 속성 메뉴의 항목입니다.</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>       MenuItemBinding 클래스 또한 설정 하 여 메뉴 항목에 표시 되는 텍스트 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.FormatString%2A>"
  example:
  - "The following code example demonstrates how to use MenuItemBinding objects to define the relationship between the fields of an <xref:System.Web.UI.WebControls.XmlDataSource> control and the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_407_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_407_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class MenuItemBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: MenuItemBinding()
  nameWithType: MenuItemBinding.MenuItemBinding()
  fullName: System.Web.UI.WebControls.MenuItemBinding.MenuItemBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.MenuItemBinding>클래스</xref:System.Web.UI.WebControls.MenuItemBinding> 의 새 인스턴스를 만들려면이 생성자를 사용 합니다. 동적으로 채울 때 주로 사용 됩니다는 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>의 컬렉션을 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically populate the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named MenuDepth.xml.  \n  \n [!code-vb[MenuItemBindingCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[MenuItemBindingCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_6_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapNode>`"
  syntax:
    content: public MenuItemBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
  fullName: System.Web.UI.WebControls.MenuItemBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 바인딩할 데이터 멤버를 가져오거나 설정 합니다."
  remarks: "만들 때 한 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 바인딩에 대 한 조건을 지정 해야 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 기준은 데이터 항목을 메뉴 항목에 각각 바인딩해야 하는 시기를 나타냅니다. 지정할 수는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성, DataMember 속성 중 하나 또는 둘 다.</xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       데이터 원본에서 여러 요소 또는 테이블을 포함 된 경우 요소 또는 메뉴 항목을 바인딩할 테이블을 지정 하려면 DataMember 속성을 사용 합니다. 데이터 멤버는 데이터 원본에서 데이터 항목의 형식을 지정 하지만 데이터 원본에 따라 다른 정보를 나타낼 수 있습니다. 계층적 데이터 소스의 각 데이터 항목 (나타내는 <xref:System.Web.UI.IHierarchyData?displayProperty=fullName>개체)를 노출는 <xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>데이터 항목의 형식을 지정 하는 속성.</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> 예를 들어 XML 요소에 대 한 데이터 멤버 요소의 이름을 지정합니다. 다음 <xref:System.Web.UI.WebControls.MenuItemBinding>선언 바인딩에 `<Book>` 의 요소는 <xref:System.Web.UI.WebControls.XmlDataSource>컨트롤 계층의 위치와 상관 없이 메뉴에 있는 모든 메뉴 항목을: ```   <asp:MenuItemBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ``` 경우가 수준과 데이터 멤버를 둘 다 지정 하는 메뉴 항목 바인딩을 만들 해야 할 수 있습니다.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.MenuItemBinding> 이 데이터 원본에 동일한 데이터 멤버 값을 가진 여러 수준에서 항목을 포함 하는 경우 종종 사용 됩니다. 예를 들어 할 수 있습니다 `<Item>` XML 파일 내에서 서로 다른 수준에서 표시 되는 요소입니다. 다음 <xref:System.Web.UI.WebControls.MenuItemBinding>선언에는 서로 다른 메뉴 수준에 있는 멤버를 동일한 데이터에 적용 되는 메뉴 항목 바인딩을 지정 하는 방법을 보여 줍니다: `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>` 메뉴 항목 바인딩이 메뉴 내의 모든 메뉴 항목에 적용 됩니다는 메뉴 항목 바인딩을 깊이 또는 데이터 멤버 없이 정의 된 경우.       </xref:System.Web.UI.WebControls.MenuItemBinding> 이 값은 모든 데이터 항목의 동일한 속성 및 메뉴 수준에 관계 없이 동일 하 게 표시 해야 하는 경우 일반적으로 사용 됩니다.       바인딩 기준에 설정 속성을 다음 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>값에 바인딩할 수 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItem> 데이터 항목의 필드 또는 정적 값을 바인딩할 수 있습니다. 정적 값에 바인딩되면 모든 <xref:System.Web.UI.WebControls.MenuItem>개체는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 동일한 값을 공유 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 속성 필드에 바인딩된 데이터 소스의 필드의 값을 포함 합니다.       충돌 하는 경우 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 정의 된는 <xref:System.Web.UI.WebControls.Menu>우선 순위는 다음 순서 대로 메뉴 항목 바인딩을 적용 하는 컨트롤: 1.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 수준과 데이터 멤버를 둘 다 일치 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      2.  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 데이터 멤버만 일치 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      3.  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 일치 시키는.</xref:System.Web.UI.WebControls.MenuItemBinding>      4.  <xref:System.Web.UI.WebControls.MenuItemBinding>깊이 아니고 데이터 멤버를 정의 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> (이러한 유형의 메뉴 항목 바인딩 메뉴의 모든 메뉴 항목에 적용 됩니다.)      5.  <xref:System.Web.UI.WebControls.MenuItemBinding>개체 데이터 소스에서 일치 하는 항목이 없는.</xref:System.Web.UI.WebControls.MenuItemBinding> 이 경우에 의해 반환 되는 값은 `ToString()` 에 바인딩됩니다 데이터 항목의 메서드는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following code example demonstrates how to use the DataMember property to specify which XML element to bind to the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named MenuDataMember.xml.  \n  \n [!code-vb[MenuItemBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_973_1.aspx)]\n [!code-cs[MenuItemBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_973_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNodeHome ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNodeCategory ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNodeCategory>`  \n  \n `<MapNodeCategory ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNodeSection ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNodeCategory>`  \n  \n `</MapNodeHome>`"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "메뉴 항목에 바인딩할 데이터 멤버입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Depth
  nameWithType: MenuItemBinding.Depth
  fullName: System.Web.UI.WebControls.MenuItemBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 깊이 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "만들 때 한 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 바인딩에 대 한 조건을 지정 해야 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 기준은 데이터 항목을 메뉴 항목에 각각 바인딩해야 하는 시기를 나타냅니다. Depth 속성을 지정할 수는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>       깊이 속성을 사용 하 여 적용 하는 메뉴 수준을 지정 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 예를 들어, 다음 <xref:System.Web.UI.WebControls.MenuItemBinding>선언에 데이터 원본의 이름 및 ID 필드를 바인딩하는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성을 각각 0는 수준의 모든 메뉴 항목의: ```   <asp:MenuItemBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ``` 경우가 수준과 데이터 멤버를 둘 다 지정 하는 메뉴 항목 바인딩을 만들 해야 할 수 있습니다.</xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 이 데이터 원본에 동일한 데이터 멤버 값을 가진 여러 수준에서 항목을 포함 하는 경우 종종 사용 됩니다. 예를 들어 할 수 있습니다 `<Item>` XML 파일 내에서 서로 다른 수준에서 표시 되는 요소입니다. 다음 <xref:System.Web.UI.WebControls.MenuItemBinding>선언에는 서로 다른 메뉴 수준에 있는 멤버를 동일한 데이터에 적용 되는 메뉴 항목 바인딩을 지정 하는 방법을 보여 줍니다: `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;1&quot; TextField=&quot;Title&quot;>` `<asp:MenuItemBinding DataMember=&quot;Item&quot; Depth=&quot;2&quot; TextField=&quot;ISBN&quot;>` 메뉴 항목 바인딩이 메뉴 내의 모든 메뉴 항목에 적용 됩니다는 메뉴 항목 바인딩을 수준과 데이터 멤버 없이 정의 된 경우.       </xref:System.Web.UI.WebControls.MenuItemBinding> 이 값은 모든 데이터 항목의 동일한 속성 및 메뉴 수준에 관계 없이 동일 하 게 표시 해야 하는 경우 일반적으로 사용 됩니다.       바인딩 기준에 설정 속성을 다음 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>값에 바인딩할 수 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItem> 데이터 항목의 필드 또는 정적 값을 바인딩할 수 있습니다. 정적 값에 바인딩되면 모든 <xref:System.Web.UI.WebControls.MenuItem>개체는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 동일한 값을 공유 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 속성 필드에 바인딩된 데이터 소스의 필드의 값을 포함 합니다.       충돌 하는 경우 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 정의 된는 <xref:System.Web.UI.WebControls.Menu>우선 순위는 다음 순서 대로 메뉴 항목 바인딩을 적용 하는 컨트롤: 1.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 수준과 데이터 멤버를 둘 다 일치 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      2.  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 데이터 멤버만 일치 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      3.  <xref:System.Web.UI.WebControls.MenuItemBinding>정의 하 고 일치 시키는.</xref:System.Web.UI.WebControls.MenuItemBinding>      4.  <xref:System.Web.UI.WebControls.MenuItemBinding>깊이 아니고 데이터 멤버를 정의 하는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> (이러한 유형의 메뉴 항목 바인딩 메뉴의 모든 메뉴 항목에 적용 됩니다.)      5.  <xref:System.Web.UI.WebControls.MenuItemBinding>개체 데이터 소스에서 일치 하는 항목이 없는.</xref:System.Web.UI.WebControls.MenuItemBinding> 이 경우에 의해 반환 되는 값은 `ToString()` 에 바인딩됩니다 데이터 항목의 메서드는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>"
  example:
  - "The following code example demonstrates how to use the Depth property to specify the menu depth at which to apply a <xref:System.Web.UI.WebControls.MenuItemBinding> object. For this example to work correctly, you must copy the sample XML data below to a file named MenuDepth.xml.  \n  \n [!code-cs[MenuItemBindingDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_473_1.aspx)]\n [!code-vb[MenuItemBindingDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_473_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapNode>`"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "메뉴 수준에서 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
  fullName: System.Web.UI.WebControls.MenuItemBinding.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다.는 메뉴 항목을 여부는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 된 활성화 되므로 표시할 팝아웃 이미지와 모든 자식 항목을 메뉴 항목입니다."
  remarks: "Enabled 속성을 사용 하 여 설정 하는 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Enabled%2A?displayProperty=fullName> 이 설정은 모든 메뉴 항목을와 공유 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 이 속성이로 설정 된 경우 `false`, 메뉴 항목이 비활성화 되 고 자식 항목을 나타내는 팝업 이미지가 표시 됩니다. 이 속성을 설정 `false` 메뉴 항목에는 기본적으로 메뉴 항목이 해당 노드를 추가 하는 수준이 해당 노드에 표시 되어 있는의 마지막 항목이 성에 대 한 합니다."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목이 있는 경우는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 되 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  id: EnabledField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
  fullName: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.Enabled*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Enabled*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 EnabledField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> </xref:System.Web.UI.WebControls.Menu>      > [!NOTE] > 설정 하 여 개별 메뉴 항목의 활성화를 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>EnabledField 속성이 모두 설정 하 고, EnabledField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.Enabled%2A>"
  syntax:
    content: public string EnabledField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.Enabled*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Enabled*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.EnabledField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
  fullName: System.Web.UI.WebControls.MenuItemBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목의 텍스트에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "FormatString 속성 메뉴 항목의 텍스트에 대 한 사용자 지정 형식을 제공 됩니다. 형식 문자열 리터럴 문자열, 자리 표시자 또는 둘 다 구성 될 수 있습니다. 자리 표시자는 메뉴 항목의 텍스트에 바인딩되는 값으로 교체 하는 동안 리터럴 문자열을 약어로 표시 됩니다.       자리 표시자는 형태로 콜론으로 구분 하는 두 부분으로 나누어집니다 {`A`:`Bxx`}. 예를 들어 {0: f2}는 소수 자릿수가 두 자리인 고정 소수점 숫자를 표시합니다.      > [!NOTE] > 자리 표시자 문자열 리터럴 문자열이 아니라 개체 틀 임을 나타내기 위해 중괄호로 묶어야 합니다. 중괄호 밖에 모든 텍스트는 리터럴 텍스트로 표시 됩니다.       표준 형식 문자열 구문, 콜론 앞 값으로 유지 (`A` 예:에서)는&0;부터 시작 하는 매개 변수 목록의 매개 변수 인덱스를 지정 합니다. 각 메뉴 항목에 하나의 값이 표시 될 수 있으므로 매개 변수 인덱스 0에만 설정할 수 있습니다.       콜론 문자 (`B` 예:에서) 값에 대 한 표시 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.      | 형식 문자와 | 설명 |   |----------------------|-----------------|   | `C`| 통화 형식으로 숫자 값을 표시 합니다. |   | `D`|&10; 진수 형식의 숫자 값을 표시 합니다. |   | `E`| Scientific (지 수) 형식으로 숫자 값을 표시 합니다. |   | `F`| 고정된 형식으로 숫자 값을 표시 합니다. |   | `G`| 일반 형식에서 숫자 값을 표시 합니다. |   | `N`| 숫자 형식으로 숫자 값을 표시 합니다. |   | `X`|&16; 진수 형식의 숫자 값을 표시 합니다. |      > [!NOTE] > 형식 문자를 제외 하 고 구분 하지 않으며, `X`를 지정 하는 경우에서&16; 진수 문자를 표시 하는 합니다.       형식 문자 다음 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다.       문자열 형식 지정에 대 한 자세한 내용은 참조 하십시오. [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the FormatString property to format the text displayed in the menu items of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_791_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_791_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "메뉴 항목의 텍스트에 대 한 표시 형식을 지정 하는 서식 문자열은 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목의 텍스트 옆에 표시 되는 이미지에 URL을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지, ImageUrl 속성을 사용 하 여 바인딩할 사용자 지정 이미지의 URL을 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A?displayProperty=fullName>속성의는 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 이미지와 모든 공유 하는 <xref:System.Web.UI.WebControls.MenuItem>개체는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem> 이미지 메뉴 항목의 텍스트 옆에 표시 되 고 클라이언트의 브라우저에서 해당 형식을 지 원하는 모든 형식의 파일 (.jpg,.gif,.bmp, 및 등)도 가능 합니다.      > [!NOTE] > 설정 하 여 개별 메뉴 항목에 대 한 이미지를 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>       각 메뉴 항목에 동일한 이미지를 표시 하려면이 속성을 사용 하는 대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>바인딩할 속성은 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체 데이터 원본의 필드입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>      > [!NOTE] > 경우의 ImageUrl 및 <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrlField%2A>"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify the URL to an image to display next to the text of the menu items. This image is displayed in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_35_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_35_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "메뉴 항목의 텍스트 옆에 표시 되는 이미지에 URL의 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 ImageUrlField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 이미지 메뉴 항목의 텍스트 옆에 표시 되 고 클라이언트의 브라우저에서 해당 형식을 지 원하는 모든 형식의 파일 (.jpg,.gif,.bmp, 및 등)도 가능 합니다.      > [!NOTE] > 설정 하 여 개별 메뉴 항목에 대 한 이미지를 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 각 메뉴 항목에 동일한 이미지를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>ImageUrlField 속성이 모두 설정 하 고, ImageUrlField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.ImageUrl%2A>"
  example:
  - "The following code example demonstrates how to use the ImageUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_64_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_64_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.ImageUrl*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 메뉴 항목에 링크할 URL을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 된를 클릭 합니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지, NavigateUrl 속성을 사용 하 여 바인딩할 URL을 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A?displayProperty=fullName>의 속성은 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 URL을 모든 메뉴 항목과 함께 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 사용자가 메뉴 항목을 클릭할 때 사용자 지정된 된 URL로 가져옵니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>       각 메뉴 항목에서 동일한 URL로 이동 하려면이 속성을 사용 하는 대신 바인딩할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>      > [!NOTE] > 경우 NavigateUrl 및 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField%2A>"
  example:
  - "The following code example demonstrates how to use the NavigateUrl property to specify the URL to navigate to when a menu item is clicked. This URL is used in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_350_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_350_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "때 메뉴 항목에 링크할 URL은 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용를 클릭 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 NavigateUrlField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 사용자가 메뉴 항목을 클릭할 때 해당 URL로 수행 됩니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 이렇게 하면 각 메뉴 항목에서 동일한 URL로 이동할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>NavigateUrlField 속성이 모두 설정 하 고, NavigateUrlField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A>"
  example:
  - "The following code example demonstrates how to use the NavigateUrlField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1133_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1133_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 소스의 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.NavigateUrl*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  id: PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 대 한 동적 하위 메뉴가 있음을 나타내는 이미지에 URL을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지, PopOutImageUrl 속성을 사용 하 여 URL을 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName>속성의는 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 URL을 모든 메뉴 항목과 함께 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>       바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>      > [!NOTE] > 경우의 PopOutImageUrl 및 <xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField%2A>"
  syntax:
    content: public string PopOutImageUrl { get; set; }
    return:
      type: System.String
      description: "메뉴 항목에 대 한 동적 하위 메뉴가 있음을 나타내는 이미지에 URL에서 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  id: PopOutImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 PopOutImageUrlField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 각 메뉴 항목에 대해 해당 하는 URL에서 이미지 표시 됩니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> 이렇게 하면 각 메뉴 항목에서 동일한 URL로 이동할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>PopOutImageUrlField 속성이 모두 설정 하 고, PopOutImageUrlField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl%2A>"
  syntax:
    content: public string PopOutImageUrlField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 소스의 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 된.</xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable
  id: Selectable
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
  fullName: System.Web.UI.WebControls.MenuItemBinding.Selectable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다.는 메뉴 항목을 여부는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 된 선택할 수 있습니다 또는 &quot;클릭할 수 있습니다.&quot;"
  remarks: "때는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지, 선택할 수 있는 속성을 사용 하 여 설정 하는 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Selectable%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 설정은 모든 메뉴 항목을와 공유 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 이 속성이로 설정 된 경우 `false`, 메뉴 항목은 &quot;클릭할 수 있는&quot; 하지만 모든 자식 항목이 표시 됩니다."
  syntax:
    content: public bool Selectable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메뉴 항목이 있는 경우는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 되 고, 그러지 않으면 선택할 수 있는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Selectable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  id: SelectableField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.Selectable*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Selectable*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 SelectableField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> </xref:System.Web.UI.WebControls.Menu>      > [!NOTE] > 설정 하 여 개별 메뉴 항목의 활성화를 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>SelectableField 속성이 모두 설정 하 고, SelectableField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.Selectable%2A>"
  syntax:
    content: public string SelectableField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.Selectable*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Selectable*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.SelectableField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  id: SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 대 한 (분리 하 고 다른 메뉴 항목과) 메뉴 항목의 텍스트 아래에 표시 되는 이미지에 URL을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지, SeparatorImageUrl 속성을 사용 하 여 URL을 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A?displayProperty=fullName>속성의는 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 URL을 모든 메뉴 항목과 함께 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>       각 메뉴 항목에서 동일한 URL을 표시 하려면이 속성을 사용 하는 대신 바인딩할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>      > [!NOTE] > 경우의 SeparatorImageUrl 및 <xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField%2A>"
  syntax:
    content: public string SeparatorImageUrl { get; set; }
    return:
      type: System.String
      description: "메뉴 항목에 대 한 메뉴 항목의 텍스트 아래에 표시 되는 이미지의 URL은 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  id: SeparatorImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 SeparatorImageUrlField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 각 메뉴 항목에 대해 해당 하는 URL에서 이미지 표시 됩니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 URL을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> 이렇게 하면 각 메뉴 항목에서 동일한 URL로 이동할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>SeparatorImageUrlField 속성이 모두 설정 하 고, SeparatorImageUrlField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl%2A>"
  syntax:
    content: public string SeparatorImageUrlField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 소스의 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: MenuItemBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "복사본을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체입니다."
  remarks: "ICloneable.Clone 메서드는의 복사본을 만드는 도우미 함수는 <xref:System.Web.UI.WebControls.MenuItemBinding>이 메서드를 호출한 개체.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>의 복사본을 나타내는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema*>.</xref:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.MenuItemBinding>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataSourceViewSchemaAccessor>인터페이스.</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 상태를 저장 하도록 표시 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 노드의 뷰 상태를 로드 합니다."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Object>.</xref:System.Object> 뷰 상태의 변경을 저장합니다"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>뷰 상태 변경 내용이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지시는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 해당 뷰 상태의 변경 내용을 추적 하는 개체입니다."
  remarks: "이 메서드가 호출 된 후에 서버 컨트롤에는 <xref:System.Web.UI.Control.IsTrackingViewState%2A>속성에서 반환 `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Target
  nameWithType: MenuItemBinding.Target
  fullName: System.Web.UI.WebControls.MenuItemBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "대상 창이 나 프레임을 메뉴 항목과 연결 된 웹 페이지 콘텐츠를 표시할 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는지 창이 나 표시 하는 웹 콘텐츠 항목에 연결 메뉴는 메뉴 항목을 클릭할 때 프레임을 지정 하려면 대상 속성을 사용 하십시오.</xref:System.Web.UI.WebControls.Menu>      > [!NOTE] >이 속성을 재정의 하는 설정의 <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.Menu>된 메뉴 항목에 대 한 제어는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName> 이 속성을 설정 하 여 선택적으로 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>직접 각 메뉴 항목의 합니다.</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>       대상 값은 범위의 A ~ Z (소문자) 다음 표와 같이 밑줄로 시작 하는 특수 한 값을 제외 하 고 문자로 시작 해야 합니다.      | 대상 값 | 설명 |   |------------------|-----------------|   | `_blank`| 콘텐츠 프레임이 없는 새 창에 렌더링 합니다. |   | `_parent`| 즉시 프레임셋 부모에 콘텐츠를 렌더링 합니다. |   | `_search`| 검색 창에서 콘텐츠를 렌더링 합니다. |   | `_self`| 포커스가 있는 프레임의 콘텐츠를 렌더링 합니다. |   | `_top`| 콘텐츠 프레임이 없는 전체 창에 렌더링 합니다. |      > [!NOTE] > 여부를 확인 하는 브라우저 설명서는 `_search` 값을 지원 합니다.  예를 들어 Microsoft Internet Explorer 5.0 및 이후 지원은 `_search` 대상 값입니다.      > [!NOTE] > Target 속성으로 렌더링 한 `target` 특성입니다. `target` 특성을 `anchor` 요소 XHTML 1.1 문서 종류 정의에서 허용 되지 않습니다. 하는 경우 대상 속성을 설정 하지 않으면 렌더링된 된 출력에 대 한는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 XHTML 1.1 이어야 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 자세한 내용은 항목을 참조 [XHTML 표준 Visual Studio 및 ASP.NET에서](~/add/includes/ajax-current-ext-md.md)합니다.   >> 액세스할 수 있는 웹 페이지를 만들 때에 다른 창을 대상에 대상 속성을 사용 하지 않는 것이 좋습니다. 자세한 내용은 참조 [NIB: ASP.NET 내게 필요한 옵션](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)합니다."
  example:
  - "The following code example demonstrates how to use the Target property to specify the window in which to display the Web content associated with a menu item, when that menu item is clicked. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_856_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_856_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "대상 창이 나 프레임을 연결 된 웹 페이지 콘텐츠를 표시 합니다. 기본값은 빈 문자열 (&quot;&quot;), 창 또는 포커스가 있는 프레임을 새로 고칩니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.Target*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Target*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 TargetField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu>       <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>속성 창이 나 프레임을 표시 하는 웹 콘텐츠 항목에 연결 메뉴는 메뉴 항목을 클릭할 때 지정 합니다.</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName> 값의 범위의 A ~ Z (소문자) 다음 표와 같이 밑줄로 시작 하는 특수 한 값을 제외 하 고 문자로 시작 해야 합니다.      | 대상 값 | 설명 |   |------------------|-----------------|   | `_blank`| 콘텐츠 프레임이 없는 새 창에 렌더링 합니다. |   | `_parent`| 즉시 프레임셋 부모에 콘텐츠를 렌더링 합니다. |   | `_self`| 포커스가 있는 프레임의 콘텐츠를 렌더링 합니다. |   | `_top`| 콘텐츠 프레임이 없는 전체 창에 렌더링 합니다. |      > [!NOTE] >는 <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>속성으로 렌더링 한 `target` 특성.</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> `target` 특성을 `anchor` 요소 XHTML 1.1 문서 종류 정의에서 허용 되지 않습니다. 설정 하지 않으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>속성 경우 렌더링된 된 출력에 대 한는 <xref:System.Web.UI.WebControls.MenuItemBinding>XHTML 1.1 규정을 준수 해야 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> 자세한 내용은 항목을 참조 [XHTML 표준 Visual Studio 및 ASP.NET에서](~/add/includes/ajax-current-ext-md.md)합니다.   >> 액세스할 수 있는 웹 페이지를 만들 때이 가장 좋습니다 사용 하지 않는 <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>속성을 다른 창을 대상.</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A> 자세한 내용은 참조 [NIB: ASP.NET 내게 필요한 옵션](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)합니다.       이 속성을 설정 재정의 <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>의 속성은 <xref:System.Web.UI.WebControls.Menu>이 메뉴 항목에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName> 설정 된 <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>속성을 새 창에서 어려울 수 있습니다에 대 한 보조 기술 장치가의 사용자가 페이지를 사용 하도록 합니다.</xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=fullName>      > [!NOTE] > 개별 메뉴 항목을 설정 하 여 활성화를 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Target%2A?displayProperty=fullName>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>TargetField 속성이 모두 설정 하 고, TargetField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.Target%2A>"
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.Target*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Target*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Text
  nameWithType: MenuItemBinding.Text
  fullName: System.Web.UI.WebControls.MenuItemBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 대해 표시 되는 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤, 텍스트 속성을 사용 하 여 바인딩할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 텍스트 메뉴 항목에 표시 되 고 있는 모든 메뉴 항목과 함께 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 개별 메뉴 항목에 대 한 텍스트를 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Text%2A>       각 메뉴 항목에는 동일한 텍스트를 표시 하려면이 속성을 사용 하는 대신 바인딩할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Text%2A>      > [!NOTE] > 경우 텍스트와 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>속성이 우선.</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>       빈 노드를 만들 수 없습니다는 <xref:System.Web.UI.WebControls.Menu>텍스트를 설정 하 여 컨트롤 또는 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A>속성을 빈 문자열 (&quot;&quot;).</xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> </xref:System.Web.UI.WebControls.Menu> 이러한 속성을 빈 문자열로 설정 하는 것의 속성을 설정 하지 않은 것 같습니다. 이 경우에 <xref:System.Web.UI.WebControls.Menu>컨트롤을 사용 하 여 기본 바인딩을 만듭니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>속성.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.Menu> 자세한 내용은 참조 [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text to display in a menu item. This text is displayed in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_286_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_286_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "메뉴 항목에 대해 표시 되는 텍스트는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: TextField
  nameWithType: MenuItemBinding.TextField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.Text*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Text*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 텍스트 필드 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 이 텍스트는 메뉴 항목에 표시 됩니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 텍스트를 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Text%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       빈 노드를 만들 수 없습니다는 <xref:System.Web.UI.WebControls.Menu>설정 하 여 컨트롤의 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>또는 텍스트 필드 속성을 빈 문자열 (&quot;&quot;).</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> </xref:System.Web.UI.WebControls.Menu> 이러한 속성을 빈 문자열로 설정 하는 것의 속성을 설정 하지 않은 것 같습니다. 이 경우에 <xref:System.Web.UI.WebControls.Menu>컨트롤을 사용 하 여 기본 바인딩을 만듭니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>속성.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Web.UI.WebControls.Menu> 자세한 내용은 참조 [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Text%2A> 각 메뉴 항목에는 동일한 텍스트를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>텍스트 필드 속성이 모두 설정 하 고, 텍스트 필드 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A>"
  example:
  - "The following code example demonstrates how to use the TextField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.Text%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_605_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_605_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 소스의 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.Text*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Text*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 대 한 도구 설명 텍스트를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤, 도구 설명 속성을 사용 하 여 바인딩할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 도구 설명 된 모든 메뉴 항목에서 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 메뉴 항목 위로 마우스 포인터를 놓을 때 지정된 된 텍스트가 표시 됩니다.      > [!NOTE] > 개별 메뉴 항목의 도구 설명을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>       각 메뉴 항목에 대해 같은 도구를 지정 하려면이 속성을 사용 하는 대신 바인딩할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>      > [!NOTE] > 경우 도구 설명 및 <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ToolTipField%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to specify the ToolTip to display when the user positions the mouse pointer over a menu item. This ToolTip is displayed for each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_104_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "메뉴 항목에 대 한 도구 설명 텍스트는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.ToolTip*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 ToolTipField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 지정된 된 텍스트는 메뉴 항목 위로 마우스 포인터를 놓을 때 표시 됩니다.      > [!NOTE] > 개별 메뉴 항목에 대 한 텍스트를 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> 에 있는 각 메뉴 항목에 대 한 동일한 도구 설명을 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>ToolTipField 속성이 모두 설정 하 고, ToolTipField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.ToolTip%2A>"
  example:
  - "The following code example demonstrates how to use the ToolTipField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1135_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1135_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.ToolTip*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.ToolTip*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuItemBinding.ToString()
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 개체를 나타내는 문자열을 반환 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체를 나타내는 문자열입니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: Value
  nameWithType: MenuItemBinding.Value
  fullName: System.Web.UI.WebControls.MenuItemBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메뉴 항목에 대 한 추가 데이터를 저장 하는 데 사용 되는 표시 되지 않는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 포스트백 이벤트 처리에 사용 되는 데이터와 같은 개체를 적용 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 값을 지정 하려면 값 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A?displayProperty=fullName>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Menu> 이 값을 모든 메뉴 항목과 함께 공유 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 지정된 된 값이 메뉴 항목에 표시 되지 않으며 메뉴 항목에 대 한 추가 데이터를 저장 하는 데 사용 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>포스트백 이벤트 처리에 사용 되는 데이터와 같은 개체를 적용 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 설정 하 여 개별 메뉴 항목에 대 한 값을 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Value%2A>       각 메뉴 항목에 대 한 동일한 값을 지정 하려면이 속성을 사용 하는 대신 바인딩할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체를 설정 하 여 데이터 원본의 필드는 <xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A>      > [!NOTE] > 경우 값 및 <xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>속성이 모두 설정 된 <xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.ValueField%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to specify a nondisplayed value associated with a menu item. This value is used in each menu item to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-cs[MenuItemBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_341_1.aspx)]\n [!code-vb[MenuItemBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_341_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "메뉴에 대 한 추가 데이터 항목을 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다;이 데이터는 표시 되지 않습니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.MenuItemBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 소스의 필드의 이름을 가져오거나는 <xref:System.Web.UI.WebControls.MenuItem.Value*>속성의는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 있는 개체를는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Value*>"
  remarks: "경우는 <xref:System.Web.UI.WebControls.Menu>데이터 소스에 바인딩된 컨트롤에 바인딩할 필드의 이름을 지정 하려면 ValueField 속성을 사용 하십시오는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> </xref:System.Web.UI.WebControls.Menu> 렌더링 될 때는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>각 메뉴 항목의 속성은 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 된 필드에서 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 지정된 된 값이 메뉴 항목에 표시 되지 않으며 메뉴 항목에 대 한 추가 데이터를 저장 하는 데 사용 되는 <xref:System.Web.UI.WebControls.MenuItemBinding>포스트백 이벤트 처리에 사용 되는 데이터와 같은 개체를 적용 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 설정 하 여 개별 메뉴 항목에 대 한 값을 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성을 직접.</xref:System.Web.UI.WebControls.MenuItem.Value%2A>       바인딩 기준을 설정 하 여 먼저 설정 해야 데이터 원본에 여러 테이블이 나 특성이 있으면는 <xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>속성에는 <xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A>속성 또는 두.</xref:System.Web.UI.WebControls.MenuItemBinding.DataMember%2A> </xref:System.Web.UI.WebControls.MenuItemBinding.Depth%2A>       바인딩할이 속성을 사용 하는 대신는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>바인딩할 수 있습니다 또한 정적 값으로 설정 하 여 필드에 개체는 <xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.Value%2A> 각 메뉴 항목에 대해 같은 값을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>ValueField 속성이 모두 설정 하 고, ValueField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.MenuItemBinding.Value%2A>"
  example:
  - "The following code example demonstrates how to use the ValueField property to specify the name of the field to bind to the <xref:System.Web.UI.WebControls.MenuItem.Value%2A> property of a menu item. For this example to work correctly, you must copy the sample XML data below to a file named Menu.xml.  \n  \n [!code-vb[MenuItemBinding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1185_1.aspx)]\n [!code-cs[MenuItemBinding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1185_1.aspx)]  \n  \n The following code is sample site map data for the previous example.  \n  \n `<MapHomeNode ImageUrl=\"~\\Images\\Home.gif\"`  \n  \n `Title=\"Home\"`  \n  \n `Description=\"Root Page\"`  \n  \n `ToolTip=\"Home Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Music.gif\"`  \n  \n `Title=\"Music\"`  \n  \n `Description=\"Music Category\"`  \n  \n `ToolTip=\"Music Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Classical.gif\"`  \n  \n `Title=\"Classical\"`  \n  \n `Description=\"Classical Section\"`  \n  \n `ToolTip=\"Classical Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Rock.gif\"`  \n  \n `Title=\"Rock\"`  \n  \n `Description=\"Rock Section\"`  \n  \n `ToolTip=\"Rock Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Jazz.gif\"`  \n  \n `Title=\"Jazz\"`  \n  \n `Description=\"Jazz Section\"`  \n  \n `ToolTip=\"Jazz Page\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Movies.gif\"`  \n  \n `Title=\"Movies\"`  \n  \n `Description=\"Movies Category\"`  \n  \n `ToolTip=\"Movies Page\">`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Action.gif\"`  \n  \n `Title=\"Action\"`  \n  \n `Description=\"Action Section\"`  \n  \n `ToolTip=\"Action Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Drama.gif\"`  \n  \n `Title=\"Drama\"`  \n  \n `Description=\"Drama Section\"`  \n  \n `ToolTip=\"Drama Page\"/>`  \n  \n `<MapNode ImageUrl=\"~\\Images\\Musical.gif\"`  \n  \n `Title=\"Musical\"`  \n  \n `Description=\"Musical Section\"`  \n  \n `ToolTip=\"Musical Page\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref:System.Web.UI.WebControls.MenuItem.Value*>의 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 적용 됩니다.</xref:System.Web.UI.WebControls.MenuItem.Value*> 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.MenuItemBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: MenuItemBinding()
  nameWithType: MenuItemBinding.MenuItemBinding()
  fullName: System.Web.UI.WebControls.MenuItemBinding.MenuItemBinding()
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
  fullName: System.Web.UI.WebControls.MenuItemBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Depth
  nameWithType: MenuItemBinding.Depth
  fullName: System.Web.UI.WebControls.MenuItemBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
  fullName: System.Web.UI.WebControls.MenuItemBinding.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
  fullName: System.Web.UI.WebControls.MenuItemBinding.EnabledField
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
  fullName: System.Web.UI.WebControls.MenuItemBinding.FormatString
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
  fullName: System.Web.UI.WebControls.MenuItemBinding.Selectable
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SelectableField
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
  fullName: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: MenuItemBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItemBinding.Target
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Target
  nameWithType: MenuItemBinding.Target
  fullName: System.Web.UI.WebControls.MenuItemBinding.Target
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TargetField
- uid: System.Web.UI.WebControls.MenuItemBinding.Text
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Text
  nameWithType: MenuItemBinding.Text
  fullName: System.Web.UI.WebControls.MenuItemBinding.Text
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TextField
  nameWithType: MenuItemBinding.TextField
  fullName: System.Web.UI.WebControls.MenuItemBinding.TextField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTip
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToolTipField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToString()
  nameWithType: MenuItemBinding.ToString()
  fullName: System.Web.UI.WebControls.MenuItemBinding.ToString()
- uid: System.Web.UI.WebControls.MenuItemBinding.Value
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Value
  nameWithType: MenuItemBinding.Value
  fullName: System.Web.UI.WebControls.MenuItemBinding.Value
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
  fullName: System.Web.UI.WebControls.MenuItemBinding.ValueField
- uid: System.Web.UI.WebControls.MenuItemBinding.#ctor*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBinding.DataMember*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: DataMember
  nameWithType: MenuItemBinding.DataMember
- uid: System.Web.UI.WebControls.MenuItemBinding.Depth*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Depth
  nameWithType: MenuItemBinding.Depth
- uid: System.Web.UI.WebControls.MenuItemBinding.Enabled*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Enabled
  nameWithType: MenuItemBinding.Enabled
- uid: System.Web.UI.WebControls.MenuItemBinding.EnabledField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: EnabledField
  nameWithType: MenuItemBinding.EnabledField
- uid: System.Web.UI.WebControls.MenuItemBinding.FormatString*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: FormatString
  nameWithType: MenuItemBinding.FormatString
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrl
  nameWithType: MenuItemBinding.ImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: MenuItemBinding.ImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: MenuItemBinding.NavigateUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: MenuItemBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrl
  nameWithType: MenuItemBinding.PopOutImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.PopOutImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: PopOutImageUrlField
  nameWithType: MenuItemBinding.PopOutImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.Selectable*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Selectable
  nameWithType: MenuItemBinding.Selectable
- uid: System.Web.UI.WebControls.MenuItemBinding.SelectableField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SelectableField
  nameWithType: MenuItemBinding.SelectableField
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrl*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrl
  nameWithType: MenuItemBinding.SeparatorImageUrl
- uid: System.Web.UI.WebControls.MenuItemBinding.SeparatorImageUrlField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: SeparatorImageUrlField
  nameWithType: MenuItemBinding.SeparatorImageUrlField
- uid: System.Web.UI.WebControls.MenuItemBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: MenuItemBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: MenuItemBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItemBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.MenuItemBinding.Target*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Target
  nameWithType: MenuItemBinding.Target
- uid: System.Web.UI.WebControls.MenuItemBinding.TargetField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TargetField
  nameWithType: MenuItemBinding.TargetField
- uid: System.Web.UI.WebControls.MenuItemBinding.Text*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Text
  nameWithType: MenuItemBinding.Text
- uid: System.Web.UI.WebControls.MenuItemBinding.TextField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: TextField
  nameWithType: MenuItemBinding.TextField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTip*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTip
  nameWithType: MenuItemBinding.ToolTip
- uid: System.Web.UI.WebControls.MenuItemBinding.ToolTipField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToolTipField
  nameWithType: MenuItemBinding.ToolTipField
- uid: System.Web.UI.WebControls.MenuItemBinding.ToString*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ToString
  nameWithType: MenuItemBinding.ToString
- uid: System.Web.UI.WebControls.MenuItemBinding.Value*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: Value
  nameWithType: MenuItemBinding.Value
- uid: System.Web.UI.WebControls.MenuItemBinding.ValueField*
  parent: System.Web.UI.WebControls.MenuItemBinding
  isExternal: false
  name: ValueField
  nameWithType: MenuItemBinding.ValueField
