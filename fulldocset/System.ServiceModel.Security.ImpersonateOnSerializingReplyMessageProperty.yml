### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  id: ImpersonateOnSerializingReplyMessageProperty
  children:
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  langs:
  - csharp
  name: ImpersonateOnSerializingReplyMessageProperty
  nameWithType: ImpersonateOnSerializingReplyMessageProperty
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  type: Class
  summary: "회신 메시지의 본문을 직렬화 하는 동안 가장을 활성화 하는 도우미 클래스입니다."
  syntax:
    content: 'public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 속성의 복사본을 만듭니다."
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "Message 속성의 복사본입니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  id: Name
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Message 속성의 이름을 가져옵니다."
  syntax:
    content: public static string Name { get; }
    return:
      type: System.String
      description: "메시지 속성의 이름입니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  id: StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: StartImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "시작 서비스에서 사용 하 고 스레드의 서비스 구성에 따라 적절 한 보안 주체를 설정 하는 가장 하는 경우 호출자의 컨텍스트를 가장 합니다."
  syntax:
    content: public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);
    parameters:
    - id: impersonationContext
      type: System.IDisposable
      description: "이 메서드가 반환 될 때 가장 된 컨텍스트를 포함 합니다. 이 매개 변수 처리 되 상태로 있습니다."
    - id: originalPrincipal
      type: System.Security.Principal.IPrincipal
      description: "이 메서드가 반환 될 때이 메서드를 호출 하기 전에 스레드의 원래의 주 서버를 포함 합니다. 이 매개 변수 처리 되 상태로 있습니다."
    - id: isThreadPrincipalSet
      type: System.Boolean
      description: "이 메서드가 반환 될 때이 메서드에서 스레드의 보안 주체 설정 되었는지 여부를 나타내는 값을 포함 합니다. 이 매개 변수 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우 작업 컨텍스트를 가장 하도록 사용할 수 없습니다. 이 매개 변수 처리 되 상태로 있습니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  id: StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: StopImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "가장을 되돌립니다 하 고 스레드의 지정 된 원래의 주 서버를 설정 합니다."
  syntax:
    content: public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);
    parameters:
    - id: impersonationContext
      type: System.IDisposable
      description: "되돌리려면 가장 컨텍스트입니다."
    - id: originalPrincipal
      type: System.Security.Principal.IPrincipal
      description: "스레드의 설정 하는 원래의 주 서버입니다."
    - id: isThreadPrincipalSet
      type: System.Boolean
      description: "가장 하는 동안 스레드 보안 주체가 설정 되었는지 여부를 나타내는 값입니다. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>주 서버 설정 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "가져옵니다는 <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> 지정된 된 메시지에서 속성입니다."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "속성을 추출할 메시지입니다."
    - id: property
      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
      description: "이 메서드가 반환 될 때 포함 된 <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> 메시지에서 추출 된 속성입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성이 있으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  langs:
  - csharp
  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "가져옵니다는 <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> 속성에서 지정 된 <xref:System.ServiceModel.Channels.MessageProperties>개체...</xref:System.ServiceModel.Channels.MessageProperties>"
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "메시지 속성을 추출할 속성 개체입니다."
    - id: property
      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
      description: "이 메서드가 반환 될 때 포함 된 <xref href=&quot;System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&quot;> </xref> 메시지에서 추출 된 속성입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성이 있으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StartImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable,IPrincipal,Boolean)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StopImpersonation(IDisposable,IPrincipal,Boolean)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable,IPrincipal,Boolean)
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(Message,ImpersonateOnSerializingReplyMessageProperty)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  parent: System.ServiceModel.Security
  isExternal: false
  name: ImpersonateOnSerializingReplyMessageProperty
  nameWithType: ImpersonateOnSerializingReplyMessageProperty
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties,ImpersonateOnSerializingReplyMessageProperty)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: Name
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StartImpersonation
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: StopImpersonation
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation
- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*
  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty
  isExternal: false
  name: TryGet
  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet
