### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  id: WindowsSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor(System.Boolean)
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: WindowsSecurityTokenAuthenticator
  nameWithType: WindowsSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  type: Class
  summary: "Windows 인증을 사용 하 여 인증 된 <xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "WindowsSecurityTokenAuthenticator 클래스를 사용 하 여 <xref:System.IdentityModel.Tokens.WindowsSecurityToken>.</xref:System.IdentityModel.Tokens.WindowsSecurityToken> 에서 파생 되는 보안 토큰을 인증 하려면"
  syntax:
    content: 'public class WindowsSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  langs:
  - csharp
  name: WindowsSecurityTokenAuthenticator()
  nameWithType: WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator&quot;> </xref> 클래스입니다."
  remarks: "사용자가 속한 Windows 그룹을 식별 하는 클레임이 처음에 추가 사용자가 인증 하는 경우는 <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A>속성 및 결국에 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A>속성.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> </xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A>"
  syntax:
    content: public WindowsSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  langs:
  - csharp
  name: WindowsSecurityTokenAuthenticator(Boolean)
  nameWithType: WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator(Boolean)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator(Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator&quot;> </xref> Windows 사용자가 속한 그룹에 추가할지를 지정 하 여 클래스는 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>사용자가 인증 하는 경우이 속성.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  syntax:
    content: public WindowsSecurityTokenAuthenticator (bool includeWindowsGroups);
    parameters:
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 속한 그룹을 가져오려면 Windows 사용자 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: WindowsSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanValidateTokenCore 메서드는 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 <xref:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.WindowsSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: WindowsSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다."
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: WindowsSecurityTokenAuthenticator()
  nameWithType: WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor(System.Boolean)
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: WindowsSecurityTokenAuthenticator(Boolean)
  nameWithType: WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator(Boolean)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: WindowsSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: WindowsSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: WindowsSecurityTokenAuthenticator
  nameWithType: WindowsSecurityTokenAuthenticator.WindowsSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: WindowsSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: WindowsSecurityTokenAuthenticator.ValidateTokenCore
