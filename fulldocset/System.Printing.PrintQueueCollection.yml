### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueueCollection
  id: PrintQueueCollection
  children:
  - System.Printing.PrintQueueCollection.#ctor
  - System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])
  - System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])
  - System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)
  - System.Printing.PrintQueueCollection.Dispose(System.Boolean)
  - System.Printing.PrintQueueCollection.GetEnumerator
  - System.Printing.PrintQueueCollection.GetNonGenericEnumerator
  - System.Printing.PrintQueueCollection.SyncRoot
  langs:
  - csharp
  name: PrintQueueCollection
  nameWithType: PrintQueueCollection
  fullName: System.Printing.PrintQueueCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체입니다."
  remarks: "> [!CAUTION]> 내에서 클래스는 <xref:System.Printing>Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.</xref:System.Printing> 이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.       Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <xref:System.Drawing.Printing>네임 스페이스.</xref:System.Drawing.Printing>"
  example:
  - "The following example shows how to use this collection to test a printer's capabilities and configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: 'public class PrintQueueCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable<System.Printing.PrintQueue>'
  inheritance:
  - System.Object
  - System.Printing.PrintSystemObjects
  implements:
  - System.Collections.Generic.IEnumerable<System.Printing.PrintQueue>
  - System.IDisposable
  inheritedMembers:
  - System.Printing.PrintSystemObjects.Dispose
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.#ctor
  id: '#ctor'
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: PrintQueueCollection()
  nameWithType: PrintQueueCollection.PrintQueueCollection()
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection()
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public PrintQueueCollection ();
    parameters: []
  overload: System.Printing.PrintQueueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])
  id: '#ctor(System.Printing.PrintServer,System.String[])'
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: PrintQueueCollection(PrintServer,String[])
  nameWithType: PrintQueueCollection.PrintQueueCollection(PrintServer,String[])
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection(PrintServer,String[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref> 지정 된 항목에 대 한 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>합니다."
  remarks: "문자열 배열에 나열 된 속성에 대해서만 초기화 됩니다."
  syntax:
    content: public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "컬렉션을 호스트 하는 인쇄 서버."
    - id: propertyFilter
      type: System.String[]
      description: "초기화 하는 컬렉션 멤버의 속성입니다."
  overload: System.Printing.PrintQueueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])
  id: '#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])'
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
  nameWithType: PrintQueueCollection.PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref> 지정 된 항목에 대 한 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 지정 된 인쇄 서버 큐만 포함 된 <xref href=&quot;System.Printing.EnumeratedPrintQueueTypes&quot;> </xref>합니다."
  remarks: "문자열 배열에 나열 된 속성에 대해서만 초기화 됩니다."
  syntax:
    content: public PrintQueueCollection (System.Printing.PrintServer printServer, string[] propertyFilter, System.Printing.EnumeratedPrintQueueTypes[] enumerationFlag);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "컬렉션을 호스트 하는 인쇄 서버."
    - id: propertyFilter
      type: System.String[]
      description: "초기화 하는 컬렉션 멤버의 속성입니다."
    - id: enumerationFlag
      type: System.Printing.EnumeratedPrintQueueTypes[]
      description: "컬렉션에 포함 된 인쇄 대기열의 형식을 지정 하는 배열입니다."
  overload: System.Printing.PrintQueueCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)
  id: Add(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: Add(PrintQueue)
  nameWithType: PrintQueueCollection.Add(PrintQueue)
  fullName: System.Printing.PrintQueueCollection.Add(PrintQueue)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "추가 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 컬렉션에 있습니다."
  syntax:
    content: public void Add (System.Printing.PrintQueue printObject);
    parameters:
    - id: printObject
      type: System.Printing.PrintQueue
      description: "추가 된 인쇄 큐입니다."
  overload: System.Printing.PrintQueueCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PrintQueueCollection.Dispose(Boolean)
  fullName: System.Printing.PrintQueueCollection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "사용 되는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref>, 선택적으로 사용 되는 관리 되는 리소스를 해제 합니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 로 설정 하는 명명 되지 않은 부울 매개 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 로 설정 하는 매개 변수와 함께 `false`합니다.</xref:System.Object.Finalize%2A>       부울 매개 변수 인 경우 `true`,이 메서드는 관리 개체가 보유 하 고 있는 모든 리소스를 해제 합니다.이 <xref:System.Printing.PrintQueueCollection>참조.</xref:System.Printing.PrintQueueCollection> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Printing.PrintQueueCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PrintQueueCollection.GetEnumerator()
  fullName: System.Printing.PrintQueueCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "제네릭 구현 하는 개체를 반환 합니다. <xref:System.Collections.IEnumerator>인터페이스와 닫힌 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 구성원을 반복 하는 문입니다. 모든 다른 멤버를 건너뛰어 반복을와 같은 사용자 지정 하려는 경우에 GetEnumerator를 사용 합니다."
  example:
  - "The following example shows how to use this method to test a printer's capabilities and configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerator<System.Printing.PrintQueue> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Printing.PrintQueue}
      description: "제네릭 구현 하는 개체 <xref:System.Collections.IEnumerator>반복할 수 있는 및은 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref> 포함.</xref:System.Collections.IEnumerator>"
  overload: System.Printing.PrintQueueCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.GetNonGenericEnumerator
  id: GetNonGenericEnumerator
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: GetNonGenericEnumerator()
  nameWithType: PrintQueueCollection.GetNonGenericEnumerator()
  fullName: System.Printing.PrintQueueCollection.GetNonGenericEnumerator()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "제네릭이 아닌를 구현 하는 개체를 가져옵니다 <xref:System.Collections.IEnumerator>인터페이스.</xref:System.Collections.IEnumerator>"
  remarks: "사용 하는 것이 좋습니다는 `foreach` 컬렉션의 모든 구성원을 반복 하는 문입니다. 모든 다른 멤버를 건너뛰어 반복을와 같은 사용자 지정 하려는 경우에 자신의 열거자 개체를 사용 합니다.       사용자 고유의 열거자 해야 할 경우 일반, 형식이 안전한 함수를 사용 하는 것이 좋습니다 <xref:System.Printing.PrintQueueCollection.GetEnumerator%2A>GetNonGenericEnumerator 대신.</xref:System.Printing.PrintQueueCollection.GetEnumerator%2A> GetNonGenericEnumerator의 요구 사항을 처리 하는 데에 public이 고 <xref:System.Collections.IEnumerable>이 컬렉션에서 구현 하는 인터페이스입니다.</xref:System.Collections.IEnumerable>"
  syntax:
    content: public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "제네릭이 아닌를 구현 하는 개체 <xref:System.Collections.IEnumerator>반복할 수 있는 및은 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref> 포함.</xref:System.Collections.IEnumerator>"
  overload: System.Printing.PrintQueueCollection.GetNonGenericEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueCollection.SyncRoot
  id: SyncRoot
  parent: System.Printing.PrintQueueCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PrintQueueCollection.SyncRoot
  fullName: System.Printing.PrintQueueCollection.SyncRoot
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Printing.PrintQueueCollection&quot;> </xref>합니다."
  syntax:
    content: public static object SyncRoot { get; }
    return:
      type: System.Object
      description: "A <xref:System.Object>컬렉션에 대 한 액세스를 동기화에 사용할 수 있는.</xref:System.Object>"
  overload: System.Printing.PrintQueueCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Printing.PrintSystemObjects
  isExternal: false
  name: System.Printing.PrintSystemObjects
- uid: System.Printing.PrintQueueCollection.#ctor
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: PrintQueueCollection()
  nameWithType: PrintQueueCollection.PrintQueueCollection()
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection()
- uid: System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: PrintQueueCollection(PrintServer,String[])
  nameWithType: PrintQueueCollection.PrintQueueCollection(PrintServer,String[])
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection(PrintServer,String[])
- uid: System.Printing.PrintServer
  parent: System.Printing
  isExternal: false
  name: PrintServer
  nameWithType: PrintServer
  fullName: System.Printing.PrintServer
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
  nameWithType: PrintQueueCollection.PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
  fullName: System.Printing.PrintQueueCollection.PrintQueueCollection(PrintServer,String[],EnumeratedPrintQueueTypes[])
- uid: System.Printing.EnumeratedPrintQueueTypes[]
  parent: System.Printing
  isExternal: false
  name: EnumeratedPrintQueueTypes
  nameWithType: EnumeratedPrintQueueTypes
  fullName: System.Printing.EnumeratedPrintQueueTypes[]
  spec.csharp:
  - uid: System.Printing.EnumeratedPrintQueueTypes
    name: EnumeratedPrintQueueTypes
    nameWithType: EnumeratedPrintQueueTypes
    fullName: EnumeratedPrintQueueTypes[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: Add(PrintQueue)
  nameWithType: PrintQueueCollection.Add(PrintQueue)
  fullName: System.Printing.PrintQueueCollection.Add(PrintQueue)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.Printing.PrintQueueCollection.Dispose(System.Boolean)
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PrintQueueCollection.Dispose(Boolean)
  fullName: System.Printing.PrintQueueCollection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueueCollection.GetEnumerator
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PrintQueueCollection.GetEnumerator()
  fullName: System.Printing.PrintQueueCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Printing.PrintQueue}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<PrintQueue>
  nameWithType: IEnumerator<PrintQueue>
  fullName: System.Collections.Generic.IEnumerator<System.Printing.PrintQueue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Printing.PrintQueue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PrintQueue
    name: PrintQueue
    nameWithType: PrintQueue
    fullName: PrintQueue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintQueueCollection.GetNonGenericEnumerator
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: GetNonGenericEnumerator()
  nameWithType: PrintQueueCollection.GetNonGenericEnumerator()
  fullName: System.Printing.PrintQueueCollection.GetNonGenericEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Printing.PrintQueueCollection.SyncRoot
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PrintQueueCollection.SyncRoot
  fullName: System.Printing.PrintQueueCollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Printing.PrintQueueCollection.#ctor*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: PrintQueueCollection
  nameWithType: PrintQueueCollection.PrintQueueCollection
- uid: System.Printing.PrintQueueCollection.Add*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: Add
  nameWithType: PrintQueueCollection.Add
- uid: System.Printing.PrintQueueCollection.Dispose*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: Dispose
  nameWithType: PrintQueueCollection.Dispose
- uid: System.Printing.PrintQueueCollection.GetEnumerator*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PrintQueueCollection.GetEnumerator
- uid: System.Printing.PrintQueueCollection.GetNonGenericEnumerator*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: GetNonGenericEnumerator
  nameWithType: PrintQueueCollection.GetNonGenericEnumerator
- uid: System.Printing.PrintQueueCollection.SyncRoot*
  parent: System.Printing.PrintQueueCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PrintQueueCollection.SyncRoot
