### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  id: UserNamePasswordValidator
  children:
  - System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  - System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  - System.IdentityModel.Selectors.UserNamePasswordValidator.None
  - System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  langs:
  - csharp
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
  type: Class
  summary: "사용자 이름 및 암호의 유효성을 검사 합니다."
  remarks: '사용자 이름 및 암호 검사 방법을 지정할 UserNamePasswordValidator 클래스를 사용 합니다. UserNamePasswordValidator 및 재정의에서 클래스를 파생 하 여이 작업을 수행할 수 있습니다는 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A>메서드.</xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> 사용자 지정 사용자 이름 및 암호 유효성 검사기를 만드는 방법에 대 한 자세한 내용은 참조 [하는 방법: 사용자 지정 사용자 이름 및 암호 유효성 검사기를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다.'
  example:
  - >-
    [!code-vb[c_UsernameValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_4_1.vb)]
     [!code-cs[c_UsernameValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_4_1.cs)]
  syntax:
    content: public abstract class UserNamePasswordValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref> 클래스입니다."
  syntax:
    content: protected UserNamePasswordValidator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  id: CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "인스턴스를 가져옵니다는 <xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref> 사용자 이름 및 지정 된 멤버 자격 공급자를 사용 하 여 암호를 확인 하는 합니다."
  remarks: "이 정적 속성의 값 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>클래스</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> 에 대 한 생성자 중 하나에 대 한 매개 변수로 제공 될 수 있습니다."
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator CreateMembershipProviderValidator (System.Web.Security.MembershipProvider provider);
    parameters:
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "A <xref:System.Web.Security.MembershipProvider>사용자 이름 및 암호 유효성을 검사 합니다.</xref:System.Web.Security.MembershipProvider>"
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref> 사용자 이름 및 사용 하 여 암호를 확인 하는 <code> provider </code>합니다."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  id: None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "사용자 이름과 암호의 유효성을 수행 하는 유효성 검사기를 가져옵니다. 결과적으로, 사용자 이름 및 암호는 항상 유효한 것으로 간주 합니다."
  remarks: "이 정적 속성의 값 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator>클래스</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> 에 대 한 생성자 중 하나에 대 한 매개 변수로 제공 될 수 있습니다."
  syntax:
    content: public static System.IdentityModel.Selectors.UserNamePasswordValidator None { get; }
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "<xref href=&quot;System.IdentityModel.Selectors.UserNamePasswordValidator&quot;> </xref> 사용자 이름과 암호의 유효성을 수행 하 합니다."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  id: Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  langs:
  - csharp
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "파생된 클래스에서 재정의 되 면 지정 된 사용자 이름 및 암호의 유효성을 검사 합니다."
  remarks: "사용자 이름 및 암호는 유효성을 검사 방법을 지정 하는 Validate 메서드를 재정의 합니다. 사용자 이름 및 암호 유효성 검사를 통과 하지 않으면 다음에 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException> throw"
  example:
  - >-
    [!code-vb[c_UsernameValidator#2](~/add/codesnippet/visualbasic/6855a484-3e15-4d15-ac89-_1.vb)]
     [!code-cs[c_UsernameValidator#2](~/add/codesnippet/csharp/6855a484-3e15-4d15-ac89-_1.cs)]
  syntax:
    content: public abstract void Validate (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "유효성을 검사할 사용자 이름입니다."
    - id: password
      type: System.String
      description: "유효성을 검사할 암호입니다."
  overload: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator()
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator()
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.UserNamePasswordValidator()
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator(MembershipProvider)
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(MembershipProvider)
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate(String,String)
  nameWithType: UserNamePasswordValidator.Validate(String,String)
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator.UserNamePasswordValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: CreateMembershipProviderValidator
  nameWithType: UserNamePasswordValidator.CreateMembershipProviderValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.None*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: None
  nameWithType: UserNamePasswordValidator.None
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator.Validate*
  parent: System.IdentityModel.Selectors.UserNamePasswordValidator
  isExternal: false
  name: Validate
  nameWithType: UserNamePasswordValidator.Validate
