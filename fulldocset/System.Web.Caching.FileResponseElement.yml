### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.FileResponseElement
  id: FileResponseElement
  children:
  - System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  - System.Web.Caching.FileResponseElement.Length
  - System.Web.Caching.FileResponseElement.Offset
  - System.Web.Caching.FileResponseElement.Path
  langs:
  - csharp
  name: FileResponseElement
  nameWithType: FileResponseElement
  fullName: System.Web.Caching.FileResponseElement
  type: Class
  summary: "파일로 저장 되며 출력 캐시 항목의 일부를 나타냅니다."
  remarks: "FileResponseElement 클래스를 사용 하는 출력 캐시 항목 (헤더) 대신 본문 부분을 나타냅니다. 부분 또는 파일의 모든으로 FileResponseElement 개체의 데이터를 저장할 수 있습니다. ASP.NET 및 사용자 지정 출력 캐시 공급자를 모두 반환할 수 응답 여러 부분으로 FileResponseElement 개체의 조합을 사용 하 합니다. 예를 들어 공급자는 세 가지 다른 FileResponseElement 개체에 분리 된 응답을 반환할 수 있으며 각 개체는 다른 물리적 파일에 오프셋에서 검색할 수 있습니다."
  syntax:
    content: 'public class FileResponseElement : System.Web.Caching.ResponseElement'
  inheritance:
  - System.Object
  - System.Web.Caching.ResponseElement
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  id: '#ctor(System.String,System.Int64,System.Int64)'
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref> 클래스입니다."
  remarks: "전체 출력 캐시 응답 단일 파일에 포함 되 면 공급자를 초기화는 <xref:System.Web.Caching.FileResponseElement>0이 고 전체 파일의 크기와 같은 길이의 오프셋을 사용 하 여 클래스.</xref:System.Web.Caching.FileResponseElement> 전체 출력 캐시 응답 파일의 일부만에서 포함 되 면 공급자를 초기화는 <xref:System.Web.Caching.FileResponseElement>출력 캐시 응답의 시작 위치, 파일 및 해당 파일에 저장 하는 출력 캐시 응답의 크기와 같은 길이에서 오프셋을 사용 하 여 클래스.</xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public FileResponseElement (string path, long offset, long length);
    parameters:
    - id: path
      type: System.String
      description: "파일에 대 한 정규화 된 경로입니다."
    - id: offset
      type: System.Int64
      description: "문자열의 시작 위치는 파일의 위치입니다."
    - id: length
      type: System.Int64
      description: "데이터의 길이 파일에 출력 캐시 데이터를 나타내는 오프셋에서 시작 하 여 정의 된 `path`합니다."
  overload: System.Web.Caching.FileResponseElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>length</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Length
  id: Length
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "에 대 한 데이터를 포함 하는 오프셋에서 시작 하 여 설정 된 데이터의 크기를 가져옵니다는 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref> 인스턴스."
  remarks: "전체 출력 캐시 응답 단일 파일에 포함 되 면 출력 캐시 공급자를 초기화는 <xref:System.Web.Caching.FileResponseElement>전체 파일의 크기와 같은 길이 사용 하 여 클래스.</xref:System.Web.Caching.FileResponseElement> 전체 출력 캐시 응답 파일의 일부만에서 포함 되 면 공급자를 초기화는 <xref:System.Web.Caching.FileResponseElement>해당 파일에 저장 하는 출력 캐시 응답의 크기와 같은 길이 사용 하 여 클래스.</xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "데이터의 크기입니다."
  overload: System.Web.Caching.FileResponseElement.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Offset
  id: Offset
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "파일의 위치를 가져옵니다 위치에서 데이터는 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref> 인스턴스가 시작 합니다."
  remarks: "전체 출력 캐시 응답 단일 파일에 포함 되 면 공급자를 초기화는 <xref:System.Web.Caching.FileResponseElement>전체 출력 응답을 캐시 하는 경우에는&0;, 오프셋을 사용 하 여 클래스 파일의 일부만에 포함 된, 공급자는 <xref:System.Web.Caching.FileResponseElement>클래스 파일에서 출력 캐시 응답을 시작할 오프셋을 사용 하 여.</xref:System.Web.Caching.FileResponseElement> </xref:System.Web.Caching.FileResponseElement>"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: "파일에 있는 데이터의 시작 지점입니다."
  overload: System.Web.Caching.FileResponseElement.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Path
  id: Path
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "데이터를 포함 하는 파일의 위치를 가져옵니다는 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref> 인스턴스."
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "파일의 정규화 된 경로입니다."
  overload: System.Web.Caching.FileResponseElement.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Caching.ResponseElement
  isExternal: false
  name: System.Web.Caching.ResponseElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.FileResponseElement.Length
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
- uid: System.Web.Caching.FileResponseElement.#ctor*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement
  nameWithType: FileResponseElement.FileResponseElement
- uid: System.Web.Caching.FileResponseElement.Length*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
