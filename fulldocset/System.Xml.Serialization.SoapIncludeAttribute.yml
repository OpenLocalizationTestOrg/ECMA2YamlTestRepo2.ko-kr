### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapIncludeAttribute
  id: SoapIncludeAttribute
  children:
  - System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  - System.Xml.Serialization.SoapIncludeAttribute.Type
  langs:
  - csharp
  name: SoapIncludeAttribute
  nameWithType: SoapIncludeAttribute
  fullName: System.Xml.Serialization.SoapIncludeAttribute
  type: Class
  summary: "허용 된 <xref:System.Xml.Serialization.XmlSerializer>인코딩된 SOAP XML 직렬화 또는 역직렬화 개체로 때 형식을 인식할 수 있습니다.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "SoapIncludeAttribute 클래스 제어 되는 특성의 집합에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer>serialize 되 고 또는 인코딩된 SOAP XML로 개체를 역직렬화 합니다.</xref:System.Xml.Serialization.XmlSerializer> 결과 XML은 World Wide Web 컨소시엄 (www.w3.org) 문서의 &quot;Simple Object Access Protocol (SOAP) 1.1&quot; 섹션 5 준수합니다. 비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 인코딩된 SOAP Serialization](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> <xref:System.Xml.Serialization.SoapReflectionImporter>클래스</xref:System.Xml.Serialization.SoapReflectionImporter> 의 메서드</xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 를 사용 하 여 만든</xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여</xref:System.Xml.Serialization.XmlSerializer> 구성 해야 개체를 인코딩된 SOAP 메시지로 serialize 하려면       <xref:System.Type>파생된 클래스의</xref:System.Type> 지정 된 SoapIncludeAttribute을 적용할 때 때는 <xref:System.Xml.Serialization.XmlSerializer>기본 형식 및 파생된 클래스를 포함 하는 개체를 serialize 한 다음 두 개체 유형을 인식할 수 있습니다.</xref:System.Xml.Serialization.XmlSerializer>       웹 서비스 설명 언어 (WSDL)에서 작성 된 서비스 설명 문서에서 파생 된 클래스를 포함 하는 SoapIncludeAttribute를 사용할 수 있습니다. 예를 들어 메서드가 반환 하는 경우는 <xref:System.Object>는 SoapIncludeAttribute 메서드에 적용 하 고 반환 해야 하는 실제 형식을 지정 합니다.</xref:System.Object>       WSDL에 대 한 자세한 내용은 World Wide Web 컨소시엄 (www.w3.org) 사양을, &quot;웹 서비스 기술 언어 (WSDL) 1.1&quot;을 참조 하십시오.       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example applies the SoapIncludeAttribute twice to an XML Web service method. The method returns an object of type `Vehicle` (a base class). The SoapIncludeAttribute allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)]

      public class SoapIncludeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.SoapIncludeAttribute
  langs:
  - csharp
  name: SoapIncludeAttribute(Type)
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute(Type)
  fullName: System.Xml.Serialization.SoapIncludeAttribute.SoapIncludeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapIncludeAttribute&quot;> </xref> 클래스 지정된 된 형식을 사용 합니다."
  remarks: "여러 인스턴스를 적용할는 <xref:System.Xml.Serialization.SoapIncludeAttribute>필드나 속성 배열 개체를 반환 하는 <xref:System.Collections.ArrayList>개체 또는 여러 형식을 반환할 수 있는 개체의 컬렉션을 포함 합니다.</xref:System.Collections.ArrayList> </xref:System.Xml.Serialization.SoapIncludeAttribute> 설정의 <xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>필드나 속성에 포함 된 각 형식에 대 한 속성.</xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>"
  example:
  - "The following example applies the <xref:System.Xml.Serialization.SoapIncludeAttribute> twice to an XML Web services method. The method returns an object of type `Vehicle` (a base class). The <xref:System.Xml.Serialization.SoapIncludeAttribute> allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public SoapIncludeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "포함할 개체의 형식입니다."
  overload: System.Xml.Serialization.SoapIncludeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type
  id: Type
  parent: System.Xml.Serialization.SoapIncludeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: SoapIncludeAttribute.Type
  fullName: System.Xml.Serialization.SoapIncludeAttribute.Type
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "직렬화 또는 개체를 역직렬화 할 때 사용할 개체의 형식을 가져오거나 설정 합니다."
  remarks: "여러 인스턴스를 적용할는 <xref:System.Xml.Serialization.SoapIncludeAttribute>필드나 속성 배열 개체를 반환 하는 <xref:System.Collections.ArrayList>개체 또는 여러 형식을 반환할 수 있는 개체의 컬렉션을 포함 합니다.</xref:System.Collections.ArrayList> </xref:System.Xml.Serialization.SoapIncludeAttribute> 필드 또는 속성에 포함 하려는 각 형식에 대 한 Type 속성을 설정 합니다."
  example:
  - "The following example applies the <xref:System.Xml.Serialization.SoapIncludeAttribute> twice to an XML Web services method. The method returns an object of type `Vehicle` (a base class). The <xref:System.Xml.Serialization.SoapIncludeAttribute> allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: "포함할 개체의 형식입니다."
  overload: System.Xml.Serialization.SoapIncludeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: SoapIncludeAttribute(Type)
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute(Type)
  fullName: System.Xml.Serialization.SoapIncludeAttribute.SoapIncludeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: Type
  nameWithType: SoapIncludeAttribute.Type
  fullName: System.Xml.Serialization.SoapIncludeAttribute.Type
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: SoapIncludeAttribute
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type*
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: Type
  nameWithType: SoapIncludeAttribute.Type
