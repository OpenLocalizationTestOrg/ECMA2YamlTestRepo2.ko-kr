### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  id: ConfigurationSet
  children:
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  langs:
  - csharp
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  type: Class
  summary: "ConfigurationSet 클래스에는 하나 이상의 AD LDS 인스턴스에 대 한 설정 구성을 나타냅니다."
  syntax:
    content: public class ConfigurationSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  id: AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "인스턴스를 구성에서 설정 된 AD LDS의 읽기 전용 컬렉션을 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection AdamInstances { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> 포함 된 개체는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 집합 구성에 있는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  id: ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "구성에서 설정 된 응용 프로그램 파티션의 읽기 전용 컬렉션을 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection&quot;> </xref> 포함 된 개체는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartition&quot;> </xref> 집합 구성에 있는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "개체에서 사용 되는 모든 관리 및 관리 되지 않는 리소스를 해제 합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "개체에서 사용 되는 관리 되지 않는 리소스를 해제 하 고 필요에 따라 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A <xref:System.Boolean>관리 되는 리소스를 해제 해야 하는 경우를 결정 하는 값입니다.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 리소스를 해제; 한 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  id: FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성 집합에서 AD LDS 인스턴스를 찾습니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 된 AD LDS 인스턴스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "AD LDS 인스턴스를이 구성 집합에서 찾을 수 없는 경우"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  id: FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성에 대 한 지정된 된 파티션 이름 집합에서 AD LDS 인스턴스를 찾습니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>검색할 파티션을 지정 하는.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 된 AD LDS 인스턴스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정 된 AD LDS 인스턴스 <code> partitionName </code> 이 구성 집합에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  id: FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성 된 지정 된 파티션 이름과 사이트 이름에 대 한 집합에서 AD LDS 인스턴스를 찾습니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>검색할 파티션을 지정 하는.</xref:System.String>"
    - id: siteName
      type: System.String
      description: "A <xref:System.String>검색 하려는 사이트를 지정 하는.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 된 AD LDS 인스턴스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "지정 된 AD LDS 인스턴스 <code> partitionName </code> 및 <code> siteName </code> 이 구성 집합에서 매개 변수를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  id: FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성 집합에서 모든 AD LDS 인스턴스를 반환합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> 포함 된 개체는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 된 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  id: FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성에 대 한 지정된 된 파티션 이름 집합에서 모든 AD LDS 인스턴스를 반환 합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>검색할 파티션을 지정 하는.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> 포함 된 개체는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 된 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  id: FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이 구성 된 지정 된 파티션 이름과 사이트 이름에 대 한 집합에서 모든 AD LDS 인스턴스를 반환 합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "A <xref:System.String>검색할 파티션을 지정 하는.</xref:System.String>"
    - id: siteName
      type: System.String
      description: "A <xref:System.String>검색할 파티션을 지정 하는.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> 포함 된 개체는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 발견 되는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "반환 된 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 디렉터리를 지정 된 컨텍스트에 대 한 개체입니다."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ConfigurationSet GetConfigurationSet (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> 개체를 검색 하는 데 자격 증명이 포함 된 개체입니다. 컨텍스트의 대상은 AD LDS 인스턴스 또는 구성 집합을 식별할 수 있는 현재 포리스트에서 serviceConnectionPoint 개체에 지정 된 키워드 수 있습니다."
    return:
      type: System.DirectoryServices.ActiveDirectory.ConfigurationSet
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 지정된 컨텍스트에 대 한 설정 구성을 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "에 지정 된 대상의 <code> context </code> 매개 변수를 찾을 수 없습니다."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "기본 디렉터리 서비스에 대 한 호출에서 오류가 발생 했습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> context </code> 매개 변수가 올바르지 않습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "가져옵니다는 <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> 구성 부분에 대 한 개체입니다."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> 구성 부분에 대 한 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  id: GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "AD LDS 복제 보안 수준을 반환합니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel GetSecurityLevel ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> 현재 AD LDS 복제 인증 모드를 나타내는 값입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이름을 가져옵니다는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 개체입니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>의 이름을 포함 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 개체입니다.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  id: NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "도메인 명명 마스터 역할의 현재 소유자가 있는 AD LDS 인스턴스를 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance NamingRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 도메인 명명 마스터 역할을 보유 하는 현재 AD LDS 인스턴스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  id: Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "구성 집합에 대 한 스키마 개체를 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> 이 구성 집합에 대 한 스키마를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "스키마 작업 마스터 역할의 현재 소유자가 있는 AD LDS 인스턴스를 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> 현재 스키마 작업 마스터 역할을 보유 하는 AD LDS + 인스턴스를 나타내는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  id: SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "AD LDS 복제 보안 수준을 설정합니다."
  syntax:
    content: public void SetSecurityLevel (System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel securityLevel);
    parameters:
    - id: securityLevel
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> 는 AD LDS 복제 인증 모드를 설정 하는 데 사용할 값입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>securityLevel</code>유효 하지 않거나 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  id: Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "구성에서 설정 된 사이트의 읽기 전용 컬렉션을 가져옵니다."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection&quot;> </xref> 개체가 있는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;> </xref> 집합 구성에 있는 개체입니다."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "이름을 반환 하는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 개체입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>현재의 이름이 들어 있는 <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> 개체입니다.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstanceCollection
  nameWithType: AdamInstanceCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ApplicationPartitionCollection
  nameWithType: ApplicationPartitionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
- uid: System.DirectoryServices.ActiveDirectory.AdamInstance
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstance
  nameWithType: AdamInstance
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationSecurityLevel
  nameWithType: ReplicationSecurityLevel
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlySiteCollection
  nameWithType: ReadOnlySiteCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose
  nameWithType: ConfigurationSet.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance
  nameWithType: ConfigurationSet.FindAdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances
  nameWithType: ConfigurationSet.FindAllAdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet
  nameWithType: ConfigurationSet.GetConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ConfigurationSet.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel
  nameWithType: ConfigurationSet.GetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel
  nameWithType: ConfigurationSet.SetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString
  nameWithType: ConfigurationSet.ToString
