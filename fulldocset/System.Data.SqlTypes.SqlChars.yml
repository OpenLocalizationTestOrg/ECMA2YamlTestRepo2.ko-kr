### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlChars
  id: SqlChars
  children:
  - System.Data.SqlTypes.SqlChars.#ctor
  - System.Data.SqlTypes.SqlChars.#ctor(System.Char[])
  - System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlChars.Buffer
  - System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlChars.IsNull
  - System.Data.SqlTypes.SqlChars.Item(System.Int64)
  - System.Data.SqlTypes.SqlChars.Length
  - System.Data.SqlTypes.SqlChars.MaxLength
  - System.Data.SqlTypes.SqlChars.Null
  - System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)
  - System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlChars.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlChars.SetNull
  - System.Data.SqlTypes.SqlChars.Storage
  - System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlChars.ToSqlString
  - System.Data.SqlTypes.SqlChars.Value
  - System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)
  langs:
  - csharp
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
  type: Class
  summary: "SqlChars 변경 가능한 참조 형식인 래핑하는 <xref:System.Char>배열 또는 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 인스턴스.</xref:System.Char>"
  remarks: "SqlChars을 얻을 수 `varchar`, `nvarchar`, `char`, `nchar`, `text`, 및 `ntext` 값, 또는 관리 되지 않는 버퍼를 통해 만들 수 있습니다."
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public sealed class SqlChars : System.Data.SqlTypes.INullable, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - System.Data.SqlTypes.INullable
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.#ctor
  id: '#ctor'
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: SqlChars()
  nameWithType: SqlChars.SqlChars()
  fullName: System.Data.SqlTypes.SqlChars.SqlChars()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 클래스입니다."
  remarks: "에 대 한 허용 되는 최대 길이 <xref:System.Data.SqlTypes.SqlChars>Int32의 공용 언어 런타임 최대 크기에 따라 바인딩된 (2147483647).</xref:System.Data.SqlTypes.SqlChars>"
  syntax:
    content: public SqlChars ();
    parameters: []
  overload: System.Data.SqlTypes.SqlChars.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Char[])
  id: '#ctor(System.Char[])'
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: SqlChars(Char[])
  nameWithType: SqlChars.SqlChars(Char[])
  fullName: System.Data.SqlTypes.SqlChars.SqlChars(Char[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 클래스의 지정 된 문자 배열에 기반 합니다."
  remarks: "에 대 한 허용 되는 최대 길이 <xref:System.Data.SqlTypes.SqlChars>Int32의 공용 언어 런타임 최대 크기에 따라 바인딩된 (2147483647).</xref:System.Data.SqlTypes.SqlChars>       인스턴스를 설정한에 null 참조가 전달 되 면 null로 합니다."
  syntax:
    content: public SqlChars (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "A <xref:System.Char>배열.</xref:System.Char>"
  overload: System.Data.SqlTypes.SqlChars.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)
  id: '#ctor(System.Data.SqlTypes.SqlString)'
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: SqlChars(SqlString)
  nameWithType: SqlChars.SqlChars(SqlString)
  fullName: System.Data.SqlTypes.SqlChars.SqlChars(SqlString)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 클래스 기반으로 지정 된 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 값입니다."
  remarks: "에 대 한 허용 되는 최대 길이 <xref:System.Data.SqlTypes.SqlChars>Int32의 공용 언어 런타임 최대 크기에 따라 바인딩된 (2147483647).</xref:System.Data.SqlTypes.SqlChars>       인스턴스를 설정한에 null 참조가 전달 되 면 null로 합니다."
  syntax:
    content: public SqlChars (System.Data.SqlTypes.SqlString value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
  overload: System.Data.SqlTypes.SqlChars.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Buffer
  id: Buffer
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Buffer
  nameWithType: SqlChars.Buffer
  fullName: System.Data.SqlTypes.SqlChars.Buffer
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "내부 버퍼에 대 한 참조를 반환합니다."
  remarks: "<xref:System.Data.SqlTypes.SqlChars>.</xref:System.Data.SqlTypes.SqlChars> Null 값에 대 한 null 참조를 반환합니다.       <xref:System.InvalidOperationException>스트림 래핑된 인스턴스의 <xref:System.Data.SqlTypes.SqlChars>.</xref:System.Data.SqlTypes.SqlChars> </xref:System.InvalidOperationException> throw"
  syntax:
    content: public char[] Buffer { get; }
    return:
      type: System.Char[]
      description: "내부 버퍼에 대 한 참조를 반환합니다. 에 대 한 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 관리 되지 않는 포인터 기반으로 만들 경우 내부 버퍼의 관리 되는 복사본을 반환 합니다."
  overload: System.Data.SqlTypes.SqlChars.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlChars.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlChars.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "지정 된 XML 스키마 정의 언어 (XSD)를 반환 합니다. <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 의 지정 된 XSD를 나타내는 값 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlChars.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlChars.IsNull
  fullName: System.Data.SqlTypes.SqlChars.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "나타내는 부울 값을 가져옵니다 여부이 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> null입니다."
  remarks: "기본값은 `false`입니다. 자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> null입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlChars.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Item(System.Int64)
  id: Item(System.Int64)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Item(Int64)
  nameWithType: SqlChars.Item(Int64)
  fullName: System.Data.SqlTypes.SqlChars.Item(Int64)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "가져오거나는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 지정된 된 인덱스에 있는 인스턴스에 있습니다."
  syntax:
    content: public char this[long offset] { get; set; }
    parameters:
    - id: offset
      type: System.Int64
      description: "<xref:System.Int64>값.</xref:System.Int64>"
    return:
      type: System.Char
      description: "A <xref:System.Char>값.</xref:System.Char>"
  overload: System.Data.SqlTypes.SqlChars.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Length
  id: Length
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Length
  nameWithType: SqlChars.Length
  fullName: System.Data.SqlTypes.SqlChars.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "에 포함 된 값의 길이 가져옵니다는 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
  remarks: "기본값은 0입니다"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>문자에 포함 된 값의 길이 나타내는 값의 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스.</xref:System.Int64>       값이 null 또는 버퍼가 인스턴스에서 사용할 수 없는 경우-1을 반환 합니다.       반환 된 <xref:System.IO.Stream.Length*>스트림 래핑된 인스턴스에 대 한.</xref:System.IO.Stream.Length*>"
  overload: System.Data.SqlTypes.SqlChars.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.MaxLength
  id: MaxLength
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: MaxLength
  nameWithType: SqlChars.MaxLength
  fullName: System.Data.SqlTypes.SqlChars.MaxLength
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 바이트 문자 내부 버퍼에 저장할 수 값의 최대 길이 가져옵니다."
  remarks: "기본값은 0입니다"
  syntax:
    content: public long MaxLength { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>2 바이트 문자 값의 내부 버퍼의 최대 길이 나타내는 값입니다.</xref:System.Int64>       스트림 래핑된에 대 한-1 반환 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>합니다."
  overload: System.Data.SqlTypes.SqlChars.MaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlChars.Null
  fullName: System.Data.SqlTypes.SqlChars.Null
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 null 인스턴스를 반환 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>합니다."
  syntax:
    content: public static System.Data.SqlTypes.SqlChars Null { get; }
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "이러한 방법으로 인스턴스를 반환 하는 <xref:System.Data.SqlTypes.SqlChars.IsNull*>반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Data.SqlTypes.SqlChars.IsNull*> 자세한 내용은 참조 [Null 값 처리](~/add/includes/ajax-current-ext-md.md)합니다."
  overload: System.Data.SqlTypes.SqlChars.Null*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: op_Explicit(SqlChars)
  nameWithType: SqlChars.op_Explicit(SqlChars)
  fullName: System.Data.SqlTypes.SqlChars.op_Explicit(SqlChars)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlChars value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlChars
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlChars.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlChars.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlChars.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlChars op_Explicit (System.Data.SqlTypes.SqlString value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "추가할 수 있습니다."
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "추가할 수 있습니다."
  overload: System.Data.SqlTypes.SqlChars.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)
  id: Read(System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Read(Int64,Char[],Int32,Int32)
  nameWithType: SqlChars.Read(Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlChars.Read(Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 문자를 복사 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스는 전달 된 버퍼를 복사한 문자 수를 반환 합니다."
  remarks: "지 나 하려고 시도 하는 경우 <xref:System.Data.SqlTypes.SqlChars.MaxLength%2A>, 예외가 throw 됩니다.</xref:System.Data.SqlTypes.SqlChars.MaxLength%2A>       경우 `count` 지정에서 사용할 수 있는 수보다 크면 복사할 수 있는 더 많은 문자는 `offsetInBuffer` 값의 끝에 있는 문자만 복사 됩니다.       대상 버퍼가 null 참조 예외가 throw 됩니다.       대상 버퍼의 요청에 가능한 한 많은 문자를 받을 수 없는 경우 예외가 throw 됩니다."
  syntax:
    content: public long Read (long offset, char[] buffer, int offsetInBuffer, int count);
    parameters:
    - id: offset
      type: System.Int64
      description: "<xref:System.Int64> <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> 에 포함 된 값에 대 한 값 오프셋은 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스.</xref:System.Int64>"
    - id: buffer
      type: System.Char[]
      description: "문자 배열에 복사할 버퍼입니다."
    - id: offsetInBuffer
      type: System.Int32
      description: "<xref:System.Int32>복사를 시작할 버퍼 내의 정수 오프셋.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "<xref:System.Int32>복사할 문자의 수를 나타내는 정수 값입니다.</xref:System.Int32>"
    return:
      type: System.Int64
      description: "<xref:System.Int64> <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> 복사 된 바이트 수를 나타내는 값입니다.</xref:System.Int64>"
  overload: System.Data.SqlTypes.SqlChars.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SqlChars.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlChars.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 길이 설정 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
  remarks: "이 메서드는 관리 되지 않는 버퍼의 맨 위에 빌드된 인스턴스에 대 한 관리 되는 버퍼의 내부 변환이 트리거됩니다."
  syntax:
    content: public void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "<xref:System.Int64> <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> 길이 나타내는 값입니다.</xref:System.Int64>"
  overload: System.Data.SqlTypes.SqlChars.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.SetNull
  id: SetNull
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: SetNull()
  nameWithType: SqlChars.SetNull()
  fullName: System.Data.SqlTypes.SqlChars.SetNull()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "가이 설정 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> null 인스턴스입니다."
  syntax:
    content: public void SetNull ();
    parameters: []
  overload: System.Data.SqlTypes.SqlChars.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Storage
  id: Storage
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Storage
  nameWithType: SqlChars.Storage
  fullName: System.Data.SqlTypes.SqlChars.Storage
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 저장소 상태에 대 한 정보를 반환 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
  syntax:
    content: public System.Data.SqlTypes.StorageState Storage { get; }
    return:
      type: System.Data.SqlTypes.StorageState
      description: "A <xref href=&quot;System.Data.SqlTypes.StorageState&quot;> </xref> 열거 합니다."
  overload: System.Data.SqlTypes.SqlChars.Storage*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlTypes.SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 다시 인스턴스화하는 데 필요한 모든 데이터와 serialization 정보를 가져옵니다 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Serialization 정보로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Serialization의 대상 컨텍스트입니다."
  overload: System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  overload: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader r);
    parameters:
    - id: r
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlChars.ToSqlString()
  fullName: System.Data.SqlTypes.SqlChars.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 변환 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스를 해당 <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 표현 합니다."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> 이 형식의 표현입니다."
  overload: System.Data.SqlTypes.SqlChars.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Value
  id: Value
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Value
  nameWithType: SqlChars.Value
  fullName: System.Data.SqlTypes.SqlChars.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 저장 된 값의 관리 되는 복사본을 반환 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>합니다."
  remarks: "<xref:System.Data.SqlTypes.SqlChars>.</xref:System.Data.SqlTypes.SqlChars> Null 값에 대 한 null 참조를 반환합니다."
  syntax:
    content: public char[] Value { get; }
    return:
      type: System.Char[]
      description: "이 값 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 문자 배열입니다."
  overload: System.Data.SqlTypes.SqlChars.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)
  id: Write(System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlChars
  langs:
  - csharp
  name: Write(Int64,Char[],Int32,Int32)
  nameWithType: SqlChars.Write(Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlChars.Write(Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "이 전달 된 버퍼에서 문자를 복사 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
  remarks: "이 작업을 다음 위치에 쓰는 경우 <xref:System.Data.SqlTypes.SqlChars.Length%2A>내 하지만 <xref:System.Data.SqlTypes.SqlChars.MaxLength%2A>, <xref:System.Data.SqlTypes.SqlChars.Length%2A>새로운 끝 위치를 반영 하도록 업데이트 됩니다.</xref:System.Data.SqlTypes.SqlChars.Length%2A> </xref:System.Data.SqlTypes.SqlChars.MaxLength%2A> </xref:System.Data.SqlTypes.SqlChars.Length%2A>       값 `offsetInBuffer` <xref:System.Data.SqlTypes.SqlChars.Length%2A>.</xref:System.Data.SqlTypes.SqlChars.Length%2A> 보다 작거나 같아야 합니다 그렇지 않은 경우에 예외가 throw 됩니다. Null 값 인스턴스를 쓸 때만 값 0 지정할 수 있습니다.       넘어 쓰려고 시도 하는 경우 <xref:System.Data.SqlTypes.SqlChars.MaxLength%2A>, 예외가 throw 됩니다.</xref:System.Data.SqlTypes.SqlChars.MaxLength%2A>"
  syntax:
    content: public void Write (long offset, char[] buffer, int offsetInBuffer, int count);
    parameters:
    - id: offset
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_long&quot; name=&quot;long&quot; href=&quot;&quot;> </xref> 에 포함 된 값에 대 한 값 오프셋은 <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref> 인스턴스."
    - id: buffer
      type: System.Char[]
      description: "문자 배열에 복사할 버퍼입니다."
    - id: offsetInBuffer
      type: System.Int32
      description: "<xref:System.Int32>복사를 시작할 버퍼 내의 정수 오프셋.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "<xref:System.Int32>복사할 문자 수를 나타내는 정수입니다.</xref:System.Int32>"
  overload: System.Data.SqlTypes.SqlChars.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.SqlTypes.SqlChars.#ctor
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SqlChars()
  nameWithType: SqlChars.SqlChars()
  fullName: System.Data.SqlTypes.SqlChars.SqlChars()
- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Char[])
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SqlChars(Char[])
  nameWithType: SqlChars.SqlChars(Char[])
  fullName: System.Data.SqlTypes.SqlChars.SqlChars(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SqlChars(SqlString)
  nameWithType: SqlChars.SqlChars(SqlString)
  fullName: System.Data.SqlTypes.SqlChars.SqlChars(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlChars.Buffer
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Buffer
  nameWithType: SqlChars.Buffer
  fullName: System.Data.SqlTypes.SqlChars.Buffer
- uid: System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlChars.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlChars.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlChars.IsNull
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: IsNull
  nameWithType: SqlChars.IsNull
  fullName: System.Data.SqlTypes.SqlChars.IsNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlChars.Item(System.Int64)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Item(Int64)
  nameWithType: SqlChars.Item(Int64)
  fullName: System.Data.SqlTypes.SqlChars.Item(Int64)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlChars.Length
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Length
  nameWithType: SqlChars.Length
  fullName: System.Data.SqlTypes.SqlChars.Length
- uid: System.Data.SqlTypes.SqlChars.MaxLength
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: MaxLength
  nameWithType: SqlChars.MaxLength
  fullName: System.Data.SqlTypes.SqlChars.MaxLength
- uid: System.Data.SqlTypes.SqlChars.Null
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: "Null"
  nameWithType: SqlChars.Null
  fullName: System.Data.SqlTypes.SqlChars.Null
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: op_Explicit(SqlChars)
  nameWithType: SqlChars.op_Explicit(SqlChars)
  fullName: System.Data.SqlTypes.SqlChars.op_Explicit(SqlChars)
- uid: System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlChars)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlChars.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlChars.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Read(Int64,Char[],Int32,Int32)
  nameWithType: SqlChars.Read(Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlChars.Read(Int64,Char[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlChars.SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SqlChars.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlChars.SetLength(Int64)
- uid: System.Data.SqlTypes.SqlChars.SetNull
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SetNull()
  nameWithType: SqlChars.SetNull()
  fullName: System.Data.SqlTypes.SqlChars.SetNull()
- uid: System.Data.SqlTypes.SqlChars.Storage
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Storage
  nameWithType: SqlChars.Storage
  fullName: System.Data.SqlTypes.SqlChars.Storage
- uid: System.Data.SqlTypes.StorageState
  parent: System.Data.SqlTypes
  isExternal: false
  name: StorageState
  nameWithType: StorageState
  fullName: System.Data.SqlTypes.StorageState
- uid: System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlTypes.SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlChars.ToSqlString
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlChars.ToSqlString()
  fullName: System.Data.SqlTypes.SqlChars.ToSqlString()
- uid: System.Data.SqlTypes.SqlChars.Value
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Value
  nameWithType: SqlChars.Value
  fullName: System.Data.SqlTypes.SqlChars.Value
- uid: System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Write(Int64,Char[],Int32,Int32)
  nameWithType: SqlChars.Write(Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlChars.Write(Int64,Char[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlChars.#ctor*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars.SqlChars
- uid: System.Data.SqlTypes.SqlChars.Buffer*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Buffer
  nameWithType: SqlChars.Buffer
- uid: System.Data.SqlTypes.SqlChars.GetXsdType*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: GetXsdType
  nameWithType: SqlChars.GetXsdType
- uid: System.Data.SqlTypes.SqlChars.IsNull*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: IsNull
  nameWithType: SqlChars.IsNull
- uid: System.Data.SqlTypes.SqlChars.Item*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Item
  nameWithType: SqlChars.Item
- uid: System.Data.SqlTypes.SqlChars.Length*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Length
  nameWithType: SqlChars.Length
- uid: System.Data.SqlTypes.SqlChars.MaxLength*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: MaxLength
  nameWithType: SqlChars.MaxLength
- uid: System.Data.SqlTypes.SqlChars.Null*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: "Null"
  nameWithType: SqlChars.Null
- uid: System.Data.SqlTypes.SqlChars.op_Explicit*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: op_Explicit
  nameWithType: SqlChars.op_Explicit
- uid: System.Data.SqlTypes.SqlChars.Read*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Read
  nameWithType: SqlChars.Read
- uid: System.Data.SqlTypes.SqlChars.SetLength*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SetLength
  nameWithType: SqlChars.SetLength
- uid: System.Data.SqlTypes.SqlChars.SetNull*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: SetNull
  nameWithType: SqlChars.SetNull
- uid: System.Data.SqlTypes.SqlChars.Storage*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Storage
  nameWithType: SqlChars.Storage
- uid: System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlChars.ToSqlString*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: ToSqlString
  nameWithType: SqlChars.ToSqlString
- uid: System.Data.SqlTypes.SqlChars.Value*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Value
  nameWithType: SqlChars.Value
- uid: System.Data.SqlTypes.SqlChars.Write*
  parent: System.Data.SqlTypes.SqlChars
  isExternal: false
  name: Write
  nameWithType: SqlChars.Write
