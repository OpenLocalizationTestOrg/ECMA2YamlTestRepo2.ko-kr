### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ServerWebConfig
  id: ServerWebConfig
  children:
  - System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  - System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  langs:
  - csharp
  name: ServerWebConfig
  nameWithType: ServerWebConfig
  fullName: System.EnterpriseServices.Internal.ServerWebConfig
  type: Class
  summary: "SOAP 기반 COM + 응용 프로그램에 대 한 Web.config 파일을 만듭니다. 응용 프로그램에 게시 되는 COM 인터페이스에 대 한 파일에 구성 요소 항목을 추가할 수도 있습니다."
  remarks: "인터넷 정보 서비스 (IIS) 6.0 SOAP 기반 COM + 응용 프로그램에 대 한 가상 루트를 만드는 동안 Web.config 파일을 만드는 데 ServerWebConfig 클래스입니다. 또한 응용 프로그램에 추가 되 고 구성 요소 인터페이스에 대 한 Web.config 파일에 XML 요소를 추가할 수 있습니다.       ServerWebConfig은.NET Framework에서 내부적으로 사용 됩니다. 코드에서 직접 사용할 필요가 없습니다."
  syntax:
    content: 'public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig'
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IServerWebConfig
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: ServerWebConfig()
  nameWithType: ServerWebConfig.ServerWebConfig()
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.ServerWebConfig()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EnterpriseServices.Internal.ServerWebConfig&quot;> </xref> 클래스입니다."
  syntax:
    content: public ServerWebConfig ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ServerWebConfig.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  id: AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: AddElement(String,String,String,String,String,String)
  nameWithType: ServerWebConfig.AddElement(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 기반 COM + 응용 프로그램에 게시 되는 COM 인터페이스에 대 한 Web.config 파일에 XML 요소를 추가 합니다."
  remarks: "지정된 된 형식에 대 한 AddElement 메서드 Web.config 파일에 추가 된 `<wellknown>` 및 `<activated>` 자식으로 `<service>` 다음 XPath로 요소: `/configuration/system.runtime.remoting/application/service` 는 `AssemblyName`, `TypeName`, `ProgId`, 및 `WkoMode` 매개 변수는 두 개의 추가 된 요소의 특성 값에 통합 됩니다.       AddElement 직접 호출할 수 없습니다. 대신, 호출 된 <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>메서드.</xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>"
  syntax:
    content: public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);
    parameters:
    - id: FilePath
      type: System.String
      description: "기존 Web.config 파일의 경로입니다."
    - id: AssemblyName
      type: System.String
      description: "추가 되는 형식에 포함 된 어셈블리의 이름입니다."
    - id: TypeName
      type: System.String
      description: "추가 되는 형식의 이름입니다."
    - id: ProgId
      type: System.String
      description: "추가 되는 형식에 대 한 프로그래밍 방식 식별자입니다."
    - id: WkoMode
      type: System.String
      description: "멤버의 이름에 해당 하는 문자열 상수는 <xref href=&quot;System.Runtime.Remoting.WellKnownObjectMode&quot;> </xref> 잘 알려진 개체를 활성화 하는 방법을 나타내는 열거형입니다."
    - id: Error
      type: System.String
      description: "오류 메시지를 작성할 수 있는 문자열입니다."
  overload: System.EnterpriseServices.Internal.ServerWebConfig.AddElement*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  id: Create(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  langs:
  - csharp
  name: Create(String,String,String)
  nameWithType: ServerWebConfig.Create(String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.Create(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "파일이 게시 되는 COM 인터페이스에 대 한 추가 XML 요소를 준비 하는 SOAP 기반 COM + 응용 프로그램에 대 한 Web.config 파일을 만듭니다."
  remarks: "Create 메서드 다음 xpath는 빈 요소에 대 한 계층을 포함 하는 Web.config 파일을 만듭니다: ```   /configuration/system.runtime.remoting/application/service   ``` 인스턴스화하는 대신는 <xref:System.EnterpriseServices.Internal.ServerWebConfig>개체 만들기를 직접 호출을 호출 하 고 클래스는 <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>메서드.</xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A> </xref:System.EnterpriseServices.Internal.ServerWebConfig>"
  syntax:
    content: public void Create (string FilePath, string FilePrefix, out string Error);
    parameters:
    - id: FilePath
      type: System.String
      description: "구성 파일을 만들 폴더입니다."
    - id: FilePrefix
      type: System.String
      description: "문자열 값 &quot;웹&quot;, config 확장이 추가 됩니다."
    - id: Error
      type: System.String
      description: "오류 메시지를 작성할 수 있는 문자열입니다."
  overload: System.EnterpriseServices.Internal.ServerWebConfig.Create*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: ServerWebConfig()
  nameWithType: ServerWebConfig.ServerWebConfig()
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.ServerWebConfig()
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: AddElement(String,String,String,String,String,String)
  nameWithType: ServerWebConfig.AddElement(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.AddElement(String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: Create(String,String,String)
  nameWithType: ServerWebConfig.Create(String,String,String)
  fullName: System.EnterpriseServices.Internal.ServerWebConfig.Create(String,String,String)
- uid: System.EnterpriseServices.Internal.ServerWebConfig.#ctor*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: ServerWebConfig
  nameWithType: ServerWebConfig.ServerWebConfig
- uid: System.EnterpriseServices.Internal.ServerWebConfig.AddElement*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: AddElement
  nameWithType: ServerWebConfig.AddElement
- uid: System.EnterpriseServices.Internal.ServerWebConfig.Create*
  parent: System.EnterpriseServices.Internal.ServerWebConfig
  isExternal: false
  name: Create
  nameWithType: ServerWebConfig.Create
