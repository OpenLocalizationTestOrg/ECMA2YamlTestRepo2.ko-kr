### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurface
  id: DesignSurface
  children:
  - System.ComponentModel.Design.DesignSurface.#ctor
  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurface.#ctor(System.Type)
  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)
  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)
  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)
  - System.ComponentModel.Design.DesignSurface.ComponentContainer
  - System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)
  - System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)
  - System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)
  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Design.DesignSurface.Dispose
  - System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurface.Disposed
  - System.ComponentModel.Design.DesignSurface.DtelLoading
  - System.ComponentModel.Design.DesignSurface.Flush
  - System.ComponentModel.Design.DesignSurface.Flushed
  - System.ComponentModel.Design.DesignSurface.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurface.IsLoaded
  - System.ComponentModel.Design.DesignSurface.Loaded
  - System.ComponentModel.Design.DesignSurface.LoadErrors
  - System.ComponentModel.Design.DesignSurface.Loading
  - System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)
  - System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)
  - System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)
  - System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)
  - System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)
  - System.ComponentModel.Design.DesignSurface.ServiceContainer
  - System.ComponentModel.Design.DesignSurface.Unloaded
  - System.ComponentModel.Design.DesignSurface.Unloading
  - System.ComponentModel.Design.DesignSurface.View
  - System.ComponentModel.Design.DesignSurface.ViewActivated
  langs:
  - csharp
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
  type: Class
  summary: "구성 요소를 디자인 하기 위한 사용자 인터페이스를 제공 합니다."
  remarks: "DesignSurface 클래스 디자이너는 사용자에 게 기능을 구현 합니다. DesignSurface는 디자인 타임 기능을 변경 하기 위해 조작 하는 사용자의 사용자 인터페이스입니다. DesignSurface 완전히 독립 된 디자인 화면을 제공 합니다.       와 연결 될 수 있습니다 또는 독립 실행형 디자이너는 DesignSurface 클래스를 사용할 수 있습니다는 <xref:System.ComponentModel.Design.DesignSurfaceManager>여러 DesignSurface 개체를 호스팅하는 응용 프로그램에 대 한 공통 구현을 제공 하기 위해 클래스.</xref:System.ComponentModel.Design.DesignSurfaceManager>       DesignSurface 클래스 자체에서 사용할 수 또는 사용자에서 새 클래스를 파생 하 고 동작을 보강할 수 있습니다.       DesignSurface 클래스는 자동으로 몇 가지 디자인 타임 서비스를 제공합니다. DesignSurface 클래스의 생성자에 모든 서비스를 추가합니다. 이러한 서비스 대부분은 보호 된 대체 하 여 재정의할 수 있습니다 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>속성.</xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> 서비스를 대체 하려면 생성자를 재정의 기본 고 변경 내용을 통해 보호 된 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>속성.</xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> 서비스 컨테이너에 추가 되 고 구현 하는 모든 서비스 <xref:System.IDisposable>디자인 화면에서 삭제 될 때 삭제 됩니다.</xref:System.IDisposable> 다음 표와 DesignSurface 클래스를 제공 하는 대체 가능한 서비스의 기본 집합을 지정 합니다.      | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.IExtenderProviderService>| 자체 extender 공급자를 제공 하는 컨테이너의 구성 요소 컬렉션의 일부가 아닌 개체를 사용 하도록 설정 합니다. |   | <xref:System.ComponentModel.Design.IExtenderListService>| 사용 하는 <xref:System.ComponentModel.TypeDescriptor>extender 공급자의 목록을 가져올 수 있습니다.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.Design.IExtenderListService> </xref:System.ComponentModel.Design.IExtenderProviderService> 이 서비스와 extender 공급자 컨테이너 밖에도 있을 수 있습니다. |   | <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>| 디자이너 메타 데이터 후크를 제공 합니다.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> 메타 데이터를 필터링 하기 위한 기본 인터페이스입니다. |   | <xref:System.ComponentModel.Design.ISelectionService>| 디자이너에서 구성 요소를 선택 하는 방법을 제공 합니다. |   | <xref:System.ComponentModel.Design.IReferenceService>| 해당 개체에 배치 되지 않은 경우에 개체에 대 한 이름을 가져올 수 있는 방법을 제공 합니다. |   | DesignSurface | 서비스로 자체 디자인 화면을 제공 합니다. |   | <xref:System.ComponentModel.Design.DesignerOptionService>| 가져오기 및 디자이너에 대 한 옵션 값을 설정에 대 한 기본 클래스를 제공 합니다. |       다음 표에서 기본적으로 제공 하는 대체 가능한 아닌 서비스를 보여 줍니다.</xref:System.ComponentModel.Design.DesignerOptionService> </xref:System.ComponentModel.Design.IReferenceService> </xref:System.ComponentModel.Design.ISelectionService>      | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.IComponentChangeService>| 구성 요소에 변경 이벤트를 발생 시킵니다. |   | <xref:System.ComponentModel.Design.IDesignerHost>| 유형, 서비스 및 트랜잭션에 대 한 액세스를 제어 합니다.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IComponentChangeService> 디자이너에 대 한 마스터 인터페이스입니다. |   | <xref:System.ComponentModel.IContainer>| 설계 되 고 구성 요소 집합을 소유한.</xref:System.ComponentModel.IContainer> 각 디자이너에는 <xref:System.ComponentModel.IContainer>소유 하는 구성 요소입니다. |   | <xref:System.ComponentModel.Design.IServiceContainer>| <xref:System.IServiceProvider>에서 파생 되 고 추가 하 고 디자이너에서 서비스를 제거 하는 방법을 제공 합니다. |       이러한 서비스 외에도 DesignSurface 클래스 제공 구성 요소의 사이트를 통해 사용할 수 있는 단일 서비스.</xref:System.IServiceProvider> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.IContainer> 이 서비스는 각 구성 요소에 대해 고유 합니다. 다음 표에서 대체할 수 없는 서비스를 보여 줍니다.      | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.IDictionaryService>| 구성 요소에 대 한 임의의 데이터를 저장 하기 위해 사용할 수 있는 키/값 쌍의 제네릭 사전을. |   | <xref:System.ComponentModel.INestedContainer>| 구성 요소를 추가 하위 구성 요소 디자이너에 추가할 수 있는 컨테이너입니다.</xref:System.ComponentModel.INestedContainer> </xref:System.ComponentModel.Design.IDictionaryService> 이러한 구성 요소는 디자인 화면에서의 일부가 될 하지만 serialization에 참가 하지 않습니다. 디자이너의 영역을 노출할 수 있는 컨트롤을 디자인 하려는 경우 유용 하지만 영역 serialization에 참여 하지 않으려면. |       외에 <xref:System.ComponentModel.ISite>, 사이트도 다음과 같은 인터페이스를 구현 합니다.</xref:System.ComponentModel.ISite>      > [!CAUTION] > 다른 사이트 구현에서 구현 되지 않을 수 있으므로 사용 무분별 하 게 캐스팅 대신 이러한 인터페이스에 있는지 확인 합니다.      | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.IServiceContainer>| 사이트별 서비스의 컨테이너에 도달 하는 방법을 제공 합니다.</xref:System.ComponentModel.Design.IServiceContainer> 예를 들어 <xref:System.ComponentModel.Design.IDictionaryService>는 사이트별 서비스.</xref:System.ComponentModel.Design.IDictionaryService> 이 서비스와 사이트별 서비스를 더 추가할 수 있습니다. |"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurface : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: DesignSurface()
  nameWithType: DesignSurface.DesignSurface()
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 클래스입니다."
  syntax:
    content: public DesignSurface ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurface.#ctor*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: DesignSurface(IServiceProvider)
  nameWithType: DesignSurface.DesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 클래스입니다."
  remarks: "때 `parentProvide` 가 있는 경우 디자이너에서 화면 내에 포함 된 응용 프로그램에서 서비스를 검색할 수 있습니다."
  syntax:
    content: public DesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "부모 서비스 공급자 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 서비스를 확인 하는 데 부모가 없는 경우."
  overload: System.ComponentModel.Design.DesignSurface.#ctor*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: DesignSurface(Type)
  nameWithType: DesignSurface.DesignSurface(Type)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(Type)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 클래스입니다."
  remarks: "DesignSurface 생성자를 사용 하면를 지정 된 형식의 구성 요소를 만들고 후 로드 프로세스를 종료 하는 간단한 디자이너 로더가 만듭니다. 이 하는 간단한 방법을 가정 디자이너를 만드는 모든 상태의 절약 외부에서 수행 됩니다. 내부적으로,이 호출 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>루트 구성 요소 형식을 전달 합니다.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>      > [!NOTE] > The DesignSurface 오버 로드 <xref:System.Windows.Forms.Design.DesignerOptions>.</xref:System.Windows.Forms.Design.DesignerOptions> 영향을 받지 않습니다 <xref:System.Windows.Forms.Design.DesignerOptions>디자인 화면을 로드 하기 전에 서비스 컨테이너에 있어야 합니다.</xref:System.Windows.Forms.Design.DesignerOptions> 에 액세스 해야 하는 경우 <xref:System.Windows.Forms.Design.DesignerOptions>, 빈 생성자 호출, 추가 <xref:System.Windows.Forms.Design.DesignerOptions>에 <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A>호출 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>와 `rootComponentType`.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> </xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> </xref:System.Windows.Forms.Design.DesignerOptions> </xref:System.Windows.Forms.Design.DesignerOptions>"
  syntax:
    content: public DesignSurface (Type rootComponentType);
    parameters:
    - id: rootComponentType
      type: System.Type
      description: "만들 구성 요소의 루트의 형식입니다."
  overload: System.ComponentModel.Design.DesignSurface.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rootComponent</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)
  id: '#ctor(System.IServiceProvider,System.Type)'
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: DesignSurface(IServiceProvider,Type)
  nameWithType: DesignSurface.DesignSurface(IServiceProvider,Type)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider,Type)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 클래스입니다."
  remarks: "DesignSurface 생성자를 사용 하 여 지정 된 형식의 구성 요소를 만들고 후 로드 프로세스를 종료 하는 간단한 디자이너 로더가 만듭니다. 이 하는 간단한 방법을 가정 디자이너를 만드는 모든 상태의 절약 외부에서 수행 됩니다. 내부적으로,이 호출 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>루트 구성 요소 형식을 전달 합니다.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>"
  syntax:
    content: public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "부모 서비스 공급자 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 서비스를 확인 하는 데 부모가 없는 경우."
    - id: rootComponentType
      type: System.Type
      description: "만들 구성 요소의 루트의 형식입니다."
  overload: System.ComponentModel.Design.DesignSurface.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rootComponent</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)
  id: BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: BeginLoad(DesignerLoader)
  nameWithType: DesignSurface.BeginLoad(DesignerLoader)
  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(DesignerLoader)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "지정 된 디자이너 로더와 로드 프로세스를 시작합니다."
  remarks: "디자이너 로드는 비동기, 될 수 있으므로 진행 되는이 호출이 반환 된 후 계속 로드 될 수 있습니다. 연결 하는 이벤트 처리기는 <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>디자인 화면에 로드 완료 되었을 때 알림을 받을 수는 이벤트입니다.</xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>       후 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>는 호출 하면 즉시 보기를 얻을 수는 디자이너에 대 한 디자이너 로더를 제공 해야 하므로 이상 루트 구성 요소 비동기적으로 로드할 때.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>"
  syntax:
    content: public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);
    parameters:
    - id: loader
      type: System.ComponentModel.Design.Serialization.DesignerLoader
      description: "디자이너를 로드에 사용할 디자이너 로더 합니다."
  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>loader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)
  id: BeginLoad(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: BeginLoad(Type)
  nameWithType: DesignSurface.BeginLoad(Type)
  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "로드 프로세스를 시작합니다."
  remarks: "때 `rootComponentType` 지정 된 인스턴스를 만들기만 하는 기본 디자이너 로더가 `rootComponentType` 사용 됩니다. 디자이너 로드는 비동기, 될 수 있으므로 진행 되는이 호출이 반환 된 후 계속 로드 될 수 있습니다. 연결 하는 이벤트 처리기는 <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>디자인 화면에 로드 완료 되었을 때 알림을 받을 수는 이벤트입니다.</xref:System.ComponentModel.Design.IDesignerHost.LoadComplete>       BeginLoad를 호출 되 면 얻을 수 있습니다 즉시 뷰 디자이너에 대 한 디자이너 로더를 제공 해야 하므로 이상 루트 구성 요소 비동기적으로 로드 하는 경우.      > [!NOTE] > The BeginLoad 메서드는 구성 요소 형식의 인스턴스를 만들고이 인스턴스에 대 한 디자이너를 초기화 합니다. <xref:System.ComponentModel.Design.DesignSurface.Loaded>이벤트는이 메서드가 반환 되기 전에 발생 합니다.</xref:System.ComponentModel.Design.DesignSurface.Loaded>"
  syntax:
    content: public void BeginLoad (Type rootComponentType);
    parameters:
    - id: rootComponentType
      type: System.Type
      description: "디자인 모드에서 만들 구성 요소의 형식입니다."
  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rootComponentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer
  id: ComponentContainer
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: ComponentContainer
  nameWithType: DesignSurface.ComponentContainer
  fullName: System.ComponentModel.Design.DesignSurface.ComponentContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "가져옵니다는 <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> 디자인 화면 내에서 구현 합니다."
  remarks: "ComponentContainer 속성 현재 디자인 모드에 있는 모든 개체에 저장 합니다. ComponentContainer에 구성 요소를 추가 하는 경우 해당 디자이너 있는 경우 로드 됩니다. 구성 요소는 디자인 화면에 대 한 모든 권한을 제공 하는 사이트와 함께 배치 됩니다."
  syntax:
    content: public System.ComponentModel.IContainer ComponentContainer { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> 디자인 화면 내에서 구현 합니다."
  overload: System.ComponentModel.Design.DesignSurface.ComponentContainer*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)
  id: CreateComponent(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: CreateComponent(Type)
  nameWithType: DesignSurface.CreateComponent(Type)
  fullName: System.ComponentModel.Design.DesignSurface.CreateComponent(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "구성 요소의 인스턴스를 만듭니다."
  remarks: "디자인 화면에 의해 CreateComponent 메서드는 <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A>메서드는 구성 요소의 인스턴스를 만듭니다.</xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> 구성 요소를 작성 하 고 디자인 화면에서 공개 컨테이너에 추가 해야 합니다."
  syntax:
    content: protected virtual System.ComponentModel.IComponent CreateComponent (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "만들 구성 요소의 형식입니다."
    return:
      type: System.ComponentModel.IComponent
      description: "새로 만든된 구성 요소입니다."
  overload: System.ComponentModel.Design.DesignSurface.CreateComponent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)
  id: CreateDesigner(System.ComponentModel.IComponent,System.Boolean)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: CreateDesigner(IComponent,Boolean)
  nameWithType: DesignSurface.CreateDesigner(IComponent,Boolean)
  fullName: System.ComponentModel.Design.DesignSurface.CreateDesigner(IComponent,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "컨테이너에는 구성 요소를 추가 하면 디자이너를 만듭니다."
  remarks: "디자인 화면에 의해 CreateDesigner 메서드는 <xref:System.ComponentModel.IContainer>구성 요소는 컨테이너에 추가 된 경우.</xref:System.ComponentModel.IContainer> 이 메서드는 디자이너를 만들지만 초기화 하지는 않습니다. 반환 시 디자이너는 컨테이너에 의해 초기화 됩니다.       두 가지 다른 형식의 디자이너를 만들 수 CreateDesigner: 루트 디자이너와 일반 디자이너. 루트 디자이너는 정의로 컨테이너에 추가 하는 첫 번째 구성 요소는 디자인 화면에 루트 구성 요소에 대 한 디자이너. 루트 디자이너 최종 사용자에 게 표시 된 사용자 인터페이스를 담당 하는 점에서 일반 디자이너와는 다릅니다. 루트 디자이너는 일반적으로이 인터페이스를 제공 하는 디자인 화면에 디자이너의 나머지와 조정 합니다.       이 메서드의 기본 구현에 위임 <xref:System.ComponentModel.TypeDescriptor>전달, <xref:System.ComponentModel.Design.IRootDesigner>루트 디자이너에 대 한 디자이너 유형으로 또는 <xref:System.ComponentModel.Design.IDesigner>일반 디자이너에 대 한.</xref:System.ComponentModel.Design.IDesigner> </xref:System.ComponentModel.Design.IRootDesigner> </xref:System.ComponentModel.TypeDescriptor> 디자이너는 특정 유형의 요청 하려면이 메서드를 재정의할 수 있습니다."
  syntax:
    content: protected virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "디자이너를 만들 수 있는 구성 요소입니다."
    - id: rootDesigner
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>루트 디자이너 이면를 만들려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 일반 디자이너를 만드는 합니다."
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "요청 된 디자이너의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 일치 하는 디자이너를 찾을 수 없으면입니다."
  overload: System.ComponentModel.Design.DesignSurface.CreateDesigner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: CreateInstance(Type)
  nameWithType: DesignSurface.CreateInstance(Type)
  fullName: System.ComponentModel.Design.DesignSurface.CreateInstance(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "지정 된 형식의 인스턴스를 만듭니다."
  remarks: "경우 `type` 는 <xref:System.ComponentModel.IComponent>, CreateInstance 형식의 생성자에 대 한 검색 <xref:System.ComponentModel.IContainer>빈 생성자를 먼저 옵니다.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IComponent>"
  syntax:
    content: protected virtual object CreateInstance (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "만들 형식입니다."
    return:
      type: System.Object
      description: "새로 만든된 개체입니다."
  overload: System.ComponentModel.Design.DesignSurface.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)
  id: CreateNestedContainer(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: CreateNestedContainer(IComponent)
  nameWithType: DesignSurface.CreateNestedContainer(IComponent)
  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "중첩 컨트롤 또는 구성 요소에 대 한 적합 한 컨테이너를 만듭니다."
  remarks: "디자이너를 만들고 적합 한 모든 서비스에서 사용할 수 있도록 디자인 화면에서 중첩된 된 컨테이너에 구성 요소를 추가 합니다. 중첩 된 컨테이너에 추가 하는 구성 요소 serialization에 참여 하지 않습니다."
  syntax:
    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);
    parameters:
    - id: owningComponent
      type: System.ComponentModel.IComponent
      description: "중첩 된 컨테이너를 관리 하는 구성 요소입니다."
    return:
      type: System.ComponentModel.INestedContainer
      description: "중첩 된 컨테이너입니다."
  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owningComponent</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)
  id: CreateNestedContainer(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: CreateNestedContainer(IComponent,String)
  nameWithType: DesignSurface.CreateNestedContainer(IComponent,String)
  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "중첩 컨트롤 또는 구성 요소에 대 한 적합 한 컨테이너를 만듭니다."
  remarks: "디자이너를 만들고 적합 한 모든 서비스에서 사용할 수 있도록 디자인 화면에서 중첩된 된 컨테이너에 구성 요소를 추가 합니다. 중첩 된 컨테이너에 추가 하는 구성 요소 serialization에 참여 하지 않습니다.       에 값을 전달 하 여 추가 CreateNestedContainer 메서드 이름을 제공할 수 있습니다 `containerName`합니다."
  syntax:
    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);
    parameters:
    - id: owningComponent
      type: System.ComponentModel.IComponent
      description: "중첩 된 컨테이너를 관리 하는 구성 요소입니다."
    - id: containerName
      type: System.String
      description: "중첩 된 컨테이너에 대 한 추가 이름입니다."
    return:
      type: System.ComponentModel.INestedContainer
      description: "중첩 된 컨테이너입니다."
  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owningComponent</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurface.Dispose()
  fullName: System.ComponentModel.Design.DesignSurface.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref>합니다."
  remarks: "공용 Dispose 메서드 표준을 따르는 <xref:System.IDisposable>패턴.</xref:System.IDisposable> 이 메서드를 호출 디자인 화면을 소멸 시킵니다. 이 방법의 보호 된 버전은 `virtual` 수직 따르는 <xref:System.IDisposable>패턴.</xref:System.IDisposable>      > [!NOTE] > 때문에 <xref:System.ComponentModel.Design.DesignSurface>정리, 네이티브 코드가 없는 <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29> 를 호출 하는 종료자에 없는</xref:System.ComponentModel.Design.DesignSurface> 호출 해야 하는 경우 <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, 종료자를 직접 추가 해야 합니다.</xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>       <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.ComponentModel.Design.DesignSurface>불안정 한 상태가.</xref:System.ComponentModel.Design.DesignSurface> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.DesignSurface>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.DesignSurface>차지한.</xref:System.ComponentModel.Design.DesignSurface> </xref:System.ComponentModel.Design.DesignSurface> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.ComponentModel.Design.DesignSurface>개체의 `Finalize` 메서드.</xref:System.ComponentModel.Design.DesignSurface>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurface.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurface.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurface.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref>합니다."
  remarks: "공용 <xref:System.ComponentModel.Design.DesignSurface.Dispose>메서드 표준을 따르는 <xref:System.IDisposable>패턴.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignSurface.Dispose> 이 메서드를 호출 디자인 화면을 소멸 시킵니다. 이 방법의 보호 된 버전은 `virtual` 수직 따르는 <xref:System.IDisposable>패턴.</xref:System.IDisposable>      > [!NOTE] > 때문에 <xref:System.ComponentModel.Design.DesignSurface>정리, 네이티브 코드가 없는 Dispose를 호출 하는 종료자가 없습니다.</xref:System.ComponentModel.Design.DesignSurface> Dispose를 호출 해야 할 경우에 직접 종료자를 추가 해야 있습니다.       이 메서드는 public `Dispose()`메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.ComponentModel.Design.DesignSurface>참조.</xref:System.ComponentModel.Design.DesignSurface> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.ComponentModel.Design.DesignSurface.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Disposed
  id: Disposed
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Disposed
  nameWithType: DesignSurface.Disposed
  fullName: System.ComponentModel.Design.DesignSurface.Disposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자인 화면에서 삭제 될 때 발생 합니다."
  remarks: "화면은 때만 삭제 공용 <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>메서드를 <xref:System.ComponentModel.Design.DesignSurface>호출 됩니다.</xref:System.ComponentModel.Design.DesignSurface> </xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>"
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.DtelLoading
  id: DtelLoading
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: DtelLoading
  nameWithType: DesignSurface.DtelLoading
  fullName: System.ComponentModel.Design.DesignSurface.DtelLoading
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "나타내는 값을 가져옵니다 여부는 **디자인 타임 오류 목록** 를 로드 합니다."
  syntax:
    content: public bool DtelLoading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 **디자인 타임 오류 목록** 고, 그러지 않으면 로드 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.DesignSurface.DtelLoading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Flush
  id: Flush
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Flush()
  nameWithType: DesignSurface.Flush()
  fullName: System.ComponentModel.Design.DesignSurface.Flush()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자인 화면에 변경 내용을 serialize합니다."
  remarks: "눌러 변경 내용을 serializer 아래로 디자인 화면에 Flush 메서드를 호출할 수 있습니다. 이렇게 하면 디자인 화면 및 serialize 된 상태에 동기화 됩니다. 이 방법의 실제 구현 디자인 화면과 연결 된 디자이너 로더에 전달 됩니다. 디자이너 로더가 플러시 호출 되거나 serialize 된 데이터를 모든 사용자 변경 내용으로 최신 상태로 유지 하려는 경우도 될 때까지 변경 내용을 연기 선택할 수 있습니다. Flush 메서드 디자이너 로더 사용 하기로 결정 하는 모델에 관계 없이 실제 디자인 화면으로 serialize 된 상태가 synchronized 인지 확인 합니다."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurface.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Flushed
  id: Flushed
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Flushed
  nameWithType: DesignSurface.Flushed
  fullName: System.ComponentModel.Design.DesignSurface.Flushed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "호출할 때 발생 된 <xref:System.ComponentModel.Design.DesignSurface.Flush*>방식의 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref>.</xref:System.ComponentModel.Design.DesignSurface.Flush*>"
  remarks: "디자이너 로더가 먼저 플러시되고 Flushed 이벤트 발생 합니다."
  syntax:
    content: public event EventHandler Flushed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurface.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurface.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너에서 서비스를 가져옵니다."
  remarks: "GetService 메서드는 디자인 화면 서비스 컨테이너에 있는 서비스를 검색합니다. 또한 생성 시 디자인 화면에 제공 된 모든 서비스 공급자에 전달 됩니다."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "검색할 서비스의 형식입니다."
    return:
      type: System.Object
      description: "또는의 파생된 클래스를 구현 하는 개체 <code> serviceType </code>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 서비스 서비스 컨테이너에 없는 경우."
  overload: System.ComponentModel.Design.DesignSurface.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.IsLoaded
  id: IsLoaded
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: IsLoaded
  nameWithType: DesignSurface.IsLoaded
  fullName: System.ComponentModel.Design.DesignSurface.IsLoaded
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자인 화면의 현재 로드 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디자인 화면의 현재 로드 된; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.DesignSurface.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Loaded
  id: Loaded
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Loaded
  nameWithType: DesignSurface.Loaded
  fullName: System.ComponentModel.Design.DesignSurface.Loaded
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자이너 로드가 완료 되 면 발생 합니다."
  remarks: "성공적인 부하 뿐만 아니라 실패 한 작업에 대 한 로드 이벤트는 발생 합니다. 이 이벤트 처리기의 코드에서 예외를 throw 하는 경우 디자이너는 언로드됩니다.       <xref:System.ComponentModel.Design.LoadedEventArgs>성공, 로드 하는 경우를 확인 하려면 개체를 사용할 수 있으며 로드 하는 동안 발생 한 오류의 목록의 얻을 수도 있습니다.</xref:System.ComponentModel.Design.LoadedEventArgs>      > [!NOTE] > Serialization 시스템 오류를 허용할 수 있는 경우에 성공적으로 로드에 대 한 오류가 발생할 수 있습니다."
  syntax:
    content: public event System.ComponentModel.Design.LoadedEventHandler Loaded;
    return:
      type: System.ComponentModel.Design.LoadedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.LoadErrors
  id: LoadErrors
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: LoadErrors
  nameWithType: DesignSurface.LoadErrors
  fullName: System.ComponentModel.Design.DesignSurface.LoadErrors
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "로드 오류 또는 void 컬렉션의 컬렉션을 반환 합니다."
  syntax:
    content: public System.Collections.ICollection LoadErrors { get; }
    return:
      type: System.Collections.ICollection
      description: "A <xref:System.Collections.ICollection>의 오류를 로드 합니다.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.DesignSurface.LoadErrors*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Loading
  id: Loading
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Loading
  nameWithType: DesignSurface.Loading
  fullName: System.ComponentModel.Design.DesignSurface.Loading
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자이너를 로드할 때 발생 합니다."
  syntax:
    content: public event EventHandler Loading;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)
  id: OnLoaded(System.ComponentModel.Design.LoadedEventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: OnLoaded(LoadedEventArgs)
  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnLoaded(LoadedEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface.Loaded&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Design.LoadedEventArgs
      description: "A <xref href=&quot;System.ComponentModel.Design.LoadedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.ComponentModel.Design.DesignSurface.OnLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)
  id: OnLoading(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: OnLoading(EventArgs)
  nameWithType: DesignSurface.OnLoading(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnLoading(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface.Loading&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnLoading (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.DesignSurface.OnLoading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)
  id: OnUnloaded(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: OnUnloaded(EventArgs)
  nameWithType: DesignSurface.OnUnloaded(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnUnloaded(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface.Unloaded&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnUnloaded (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.DesignSurface.OnUnloaded*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)
  id: OnUnloading(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: OnUnloading(EventArgs)
  nameWithType: DesignSurface.OnUnloading(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnUnloading(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface.Unloading&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnUnloading (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.DesignSurface.OnUnloading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)
  id: OnViewActivate(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: OnViewActivate(EventArgs)
  nameWithType: DesignSurface.OnViewActivate(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnViewActivate(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface.ViewActivated&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnViewActivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.DesignSurface.OnViewActivate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurface.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurface.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "서비스 컨테이너를 가져옵니다."
  remarks: "생성 시 <xref:System.ComponentModel.Design.DesignSurface>이 서비스 컨테이너에 기본 서비스를 추가 합니다.</xref:System.ComponentModel.Design.DesignSurface> 기본 서비스를 현재 상태로 둘 수 있습니다 또는 제거 하 고 사용자의 정보로 바꾸세요. 기본 서비스는 모든 요구에 따라 만들어진, 되므로 생성 시이 추가 하기 위한 성능에 손실 되지 않습니다."
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "디자이너에서 디자인 화면 내에 포함 된 모든 서비스를 제공 하는 서비스 컨테이너입니다."
  overload: System.ComponentModel.Design.DesignSurface.ServiceContainer*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Unloaded
  id: Unloaded
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Unloaded
  nameWithType: DesignSurface.Unloaded
  fullName: System.ComponentModel.Design.DesignSurface.Unloaded
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자이너가 언로드를 완료 하는 경우 발생 합니다."
  syntax:
    content: public event EventHandler Unloaded;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.Unloading
  id: Unloading
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: Unloading
  nameWithType: DesignSurface.Unloading
  fullName: System.ComponentModel.Design.DesignSurface.Unloading
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "디자이너는 언로드되려고 할 때 발생 합니다."
  remarks: "디자이너가 언로드되면 해당 디자이너에 대 한 전체 상태는 디자이너의 뷰를 포함 하 여 소멸 됩니다. 이 이번에는 보기 부모로 지정 되지 않아야 수 있습니다."
  syntax:
    content: public event EventHandler Unloading;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.View
  id: View
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: View
  nameWithType: DesignSurface.View
  fullName: System.ComponentModel.Design.DesignSurface.View
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "루트 디자이너에 대 한 뷰를 가져옵니다."
  remarks: "<xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>메서드는 로드 프로세스를 시작 하기 전에 호출 되어야 합니다.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> 디자이너 로더가 완료 뷰를 제공 하는 루트 디자이너는 디자이너 로더 만들어지는 첫 번째 개체 하기 때문에 로드 되기 전에 뷰를 반환 하는 것이 불가능 합니다. 뷰를 사용할 수 없는 경우 <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>예외를 발생 시킵니다.</xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A>       뷰 기술 개념과 달리 사용 되지 않습니다. 하지만 이전 버전과 호환성에 대 한 루트 디자이너에 대 한 인터페이스에 유지 됩니다. 사용 하는 사용자의 사용은 숨겨집니다 <xref:System.ComponentModel.Design.DesignSurface>개체입니다.</xref:System.ComponentModel.Design.DesignSurface> 보기 속성이 지원 되는 기술 루트 디자이너에 다시 전달 하 여 뷰 기술을 숨깁니다."
  example:
  - "The following code example shows how View hides view technologies.  \n  \n [C#]  \n  \n `IRootDesigner d;`  \n  \n `ViewTechnology[] supported = d.SupportedTechnologies;`  \n  \n `return d.GetView(supported[0]);`"
  syntax:
    content: public object View { get; }
    return:
      type: System.Object
      description: "루트 디자이너에 대 한 보기입니다."
  overload: System.ComponentModel.Design.DesignSurface.View*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디자인 화면을 로드 하지, 디자이너 로더가 아직 루트 디자이너를 만들지 또는 디자인 화면 했지만 실패 한 부하를 완료 합니다. 자세한 내용은 <xref:System.Exception.InnerException*>.</xref:System.Exception.InnerException*> 에서 사용할 수 있습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디자이너가 로드 되었지만이 디자인 화면에 호환 되는 뷰를 제공 하지 않습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> 에 연결 된 <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurface.ViewActivated
  id: ViewActivated
  parent: System.ComponentModel.Design.DesignSurface
  langs:
  - csharp
  name: ViewActivated
  nameWithType: DesignSurface.ViewActivated
  fullName: System.ComponentModel.Design.DesignSurface.ViewActivated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 경우는 <xref:System.ComponentModel.Design.IDesignerHost.Activate*>에 메서드가 호출 된 <xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref>.</xref:System.ComponentModel.Design.IDesignerHost.Activate*>"
  remarks: "지원 하려는 경우는 <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A>메서드, 이벤트 처리기에이 디자인 화면에 대 한 창을 활성화 해야 합니다.</xref:System.ComponentModel.Design.IDesignerHost.Activate%2A>"
  syntax:
    content: public event EventHandler ViewActivated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.Design.DesignSurface.#ctor
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DesignSurface()
  nameWithType: DesignSurface.DesignSurface()
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface()
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DesignSurface(IServiceProvider)
  nameWithType: DesignSurface.DesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DesignSurface(Type)
  nameWithType: DesignSurface.DesignSurface(Type)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DesignSurface(IServiceProvider,Type)
  nameWithType: DesignSurface.DesignSurface(IServiceProvider,Type)
  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider,Type)
- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: BeginLoad(DesignerLoader)
  nameWithType: DesignSurface.BeginLoad(DesignerLoader)
  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(DesignerLoader)
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: DesignerLoader
  nameWithType: DesignerLoader
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader
- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: BeginLoad(Type)
  nameWithType: DesignSurface.BeginLoad(Type)
  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(Type)
- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: ComponentContainer
  nameWithType: DesignSurface.ComponentContainer
  fullName: System.ComponentModel.Design.DesignSurface.ComponentContainer
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateComponent(Type)
  nameWithType: DesignSurface.CreateComponent(Type)
  fullName: System.ComponentModel.Design.DesignSurface.CreateComponent(Type)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateDesigner(IComponent,Boolean)
  nameWithType: DesignSurface.CreateDesigner(IComponent,Boolean)
  fullName: System.ComponentModel.Design.DesignSurface.CreateDesigner(IComponent,Boolean)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateInstance(Type)
  nameWithType: DesignSurface.CreateInstance(Type)
  fullName: System.ComponentModel.Design.DesignSurface.CreateInstance(Type)
- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateNestedContainer(IComponent)
  nameWithType: DesignSurface.CreateNestedContainer(IComponent)
  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent)
- uid: System.ComponentModel.INestedContainer
  parent: System.ComponentModel
  isExternal: false
  name: INestedContainer
  nameWithType: INestedContainer
  fullName: System.ComponentModel.INestedContainer
- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateNestedContainer(IComponent,String)
  nameWithType: DesignSurface.CreateNestedContainer(IComponent,String)
  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignSurface.Dispose
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurface.Dispose()
  fullName: System.ComponentModel.Design.DesignSurface.Dispose()
- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurface.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurface.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignSurface.Disposed
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Disposed
  nameWithType: DesignSurface.Disposed
  fullName: System.ComponentModel.Design.DesignSurface.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurface.DtelLoading
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DtelLoading
  nameWithType: DesignSurface.DtelLoading
  fullName: System.ComponentModel.Design.DesignSurface.DtelLoading
- uid: System.ComponentModel.Design.DesignSurface.Flush
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Flush()
  nameWithType: DesignSurface.Flush()
  fullName: System.ComponentModel.Design.DesignSurface.Flush()
- uid: System.ComponentModel.Design.DesignSurface.Flushed
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Flushed
  nameWithType: DesignSurface.Flushed
  fullName: System.ComponentModel.Design.DesignSurface.Flushed
- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurface.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurface.GetService(Type)
- uid: System.ComponentModel.Design.DesignSurface.IsLoaded
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: IsLoaded
  nameWithType: DesignSurface.IsLoaded
  fullName: System.ComponentModel.Design.DesignSurface.IsLoaded
- uid: System.ComponentModel.Design.DesignSurface.Loaded
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Loaded
  nameWithType: DesignSurface.Loaded
  fullName: System.ComponentModel.Design.DesignSurface.Loaded
- uid: System.ComponentModel.Design.LoadedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: LoadedEventHandler
  nameWithType: LoadedEventHandler
  fullName: System.ComponentModel.Design.LoadedEventHandler
- uid: System.ComponentModel.Design.DesignSurface.LoadErrors
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: LoadErrors
  nameWithType: DesignSurface.LoadErrors
  fullName: System.ComponentModel.Design.DesignSurface.LoadErrors
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.DesignSurface.Loading
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Loading
  nameWithType: DesignSurface.Loading
  fullName: System.ComponentModel.Design.DesignSurface.Loading
- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnLoaded(LoadedEventArgs)
  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnLoaded(LoadedEventArgs)
- uid: System.ComponentModel.Design.LoadedEventArgs
  parent: System.ComponentModel.Design
  isExternal: false
  name: LoadedEventArgs
  nameWithType: LoadedEventArgs
  fullName: System.ComponentModel.Design.LoadedEventArgs
- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnLoading(EventArgs)
  nameWithType: DesignSurface.OnLoading(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnLoading(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnUnloaded(EventArgs)
  nameWithType: DesignSurface.OnUnloaded(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnUnloaded(EventArgs)
- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnUnloading(EventArgs)
  nameWithType: DesignSurface.OnUnloading(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnUnloading(EventArgs)
- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnViewActivate(EventArgs)
  nameWithType: DesignSurface.OnViewActivate(EventArgs)
  fullName: System.ComponentModel.Design.DesignSurface.OnViewActivate(EventArgs)
- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurface.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurface.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurface.Unloaded
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Unloaded
  nameWithType: DesignSurface.Unloaded
  fullName: System.ComponentModel.Design.DesignSurface.Unloaded
- uid: System.ComponentModel.Design.DesignSurface.Unloading
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Unloading
  nameWithType: DesignSurface.Unloading
  fullName: System.ComponentModel.Design.DesignSurface.Unloading
- uid: System.ComponentModel.Design.DesignSurface.View
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: View
  nameWithType: DesignSurface.View
  fullName: System.ComponentModel.Design.DesignSurface.View
- uid: System.ComponentModel.Design.DesignSurface.ViewActivated
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: ViewActivated
  nameWithType: DesignSurface.ViewActivated
  fullName: System.ComponentModel.Design.DesignSurface.ViewActivated
- uid: System.ComponentModel.Design.DesignSurface.#ctor*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface.DesignSurface
- uid: System.ComponentModel.Design.DesignSurface.BeginLoad*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: BeginLoad
  nameWithType: DesignSurface.BeginLoad
- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: ComponentContainer
  nameWithType: DesignSurface.ComponentContainer
- uid: System.ComponentModel.Design.DesignSurface.CreateComponent*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateComponent
  nameWithType: DesignSurface.CreateComponent
- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateDesigner
  nameWithType: DesignSurface.CreateDesigner
- uid: System.ComponentModel.Design.DesignSurface.CreateInstance*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateInstance
  nameWithType: DesignSurface.CreateInstance
- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: CreateNestedContainer
  nameWithType: DesignSurface.CreateNestedContainer
- uid: System.ComponentModel.Design.DesignSurface.Dispose*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Dispose
  nameWithType: DesignSurface.Dispose
- uid: System.ComponentModel.Design.DesignSurface.DtelLoading*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: DtelLoading
  nameWithType: DesignSurface.DtelLoading
- uid: System.ComponentModel.Design.DesignSurface.Flush*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: Flush
  nameWithType: DesignSurface.Flush
- uid: System.ComponentModel.Design.DesignSurface.GetService*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: GetService
  nameWithType: DesignSurface.GetService
- uid: System.ComponentModel.Design.DesignSurface.IsLoaded*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: IsLoaded
  nameWithType: DesignSurface.IsLoaded
- uid: System.ComponentModel.Design.DesignSurface.LoadErrors*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: LoadErrors
  nameWithType: DesignSurface.LoadErrors
- uid: System.ComponentModel.Design.DesignSurface.OnLoaded*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnLoaded
  nameWithType: DesignSurface.OnLoaded
- uid: System.ComponentModel.Design.DesignSurface.OnLoading*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnLoading
  nameWithType: DesignSurface.OnLoading
- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnUnloaded
  nameWithType: DesignSurface.OnUnloaded
- uid: System.ComponentModel.Design.DesignSurface.OnUnloading*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnUnloading
  nameWithType: DesignSurface.OnUnloading
- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: OnViewActivate
  nameWithType: DesignSurface.OnViewActivate
- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurface.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurface.View*
  parent: System.ComponentModel.Design.DesignSurface
  isExternal: false
  name: View
  nameWithType: DesignSurface.View
