### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityElement
  id: SecurityElement
  children:
  - System.Security.SecurityElement.#ctor(System.String)
  - System.Security.SecurityElement.#ctor(System.String,System.String)
  - System.Security.SecurityElement.AddAttribute(System.String,System.String)
  - System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  - System.Security.SecurityElement.Attribute(System.String)
  - System.Security.SecurityElement.Attributes
  - System.Security.SecurityElement.Children
  - System.Security.SecurityElement.Copy
  - System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  - System.Security.SecurityElement.Escape(System.String)
  - System.Security.SecurityElement.FromString(System.String)
  - System.Security.SecurityElement.IsValidAttributeName(System.String)
  - System.Security.SecurityElement.IsValidAttributeValue(System.String)
  - System.Security.SecurityElement.IsValidTag(System.String)
  - System.Security.SecurityElement.IsValidText(System.String)
  - System.Security.SecurityElement.SearchForChildByTag(System.String)
  - System.Security.SecurityElement.SearchForTextOfTag(System.String)
  - System.Security.SecurityElement.Tag
  - System.Security.SecurityElement.Text
  - System.Security.SecurityElement.ToString
  langs:
  - csharp
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
  type: Class
  summary: "인코딩 보안 개체에 대 한 XML 개체 모델을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스는 단순 XML 개체 모델 보안 시스템 내에서 사용 하기 위해 일반 XML 개체 모델으로 사용할 수 있도록 하지의 간단한 구현이 됩니다. 이 문서에는 XML에 대 한 기본적인 지식이 있다고 가정 합니다.       단순 XML 개체 모델 요소에 대 한 다음과 같은 부분으로 이루어져:-태그는 요소 이름입니다.      -특성은&0; 또는 자세히 이름/값 요소에 특성 쌍입니다.      -자식은&0; 이나 더 많은 요소가 중첩 `<tag>` 및 `</tag>`합니다.       특성 기반 XML 표현을 보안 요소 및 해당 값을 표현 하는 것이 좋습니다. 즉, 있는 요소의 속성을 특성으로 표시 되는 속성 값을 특성 값으로 표현 됩니다. 태그 내의 텍스트를 중첩 하지 마십시오. 에 대 한 `<tag>text</tag>` 형식의 표현을 표현 `<tag value=&quot;text&quot;/>` 일반적으로 사용할 수 있습니다. 이 특성에 기반한 XML 표현을 사용 하 여 가독성이 향상 되 고 결과 XML serialization의 쉬운 WMI 이식성을 허용 합니다.       특성 이름은&1; 자 이상 이어야 하며 안 `null`합니다. 요소 기반 값 표현을 사용 하는 경우 텍스트를 사용 하 여 요소 문자열 `null` 에서 표현 되는 `<tag/>` 형성;로 텍스트 구분 그렇지 않은 경우는 `<tag>` 및 `</tag>` 토큰입니다. 두 형태를 모두 표시 되는 특성을 함께 사용할 수 있는 경우.       태그, 특성 및 요소의 텍스트는 존재 하면 항상 대/소문자 구분 합니다. XML 형식에는 인용 부호를 포함 하 고 필요한 경우를 이스케이프 합니다. <xref:System.ArgumentException>.</xref:System.ArgumentException> 결과 XML에 사용 하기 위해 잘못 된 문자를 포함 하는 문자열 값 이러한 규칙은 모든 속성 및 메서드에 적용 됩니다.      > [!NOTE] > 성능상의 이유로 문자의 유효성은 때만 확인 요소는 XML 텍스트 형식으로 및 속성이 나 메서드의 모든 집합에 없는 인코딩됩니다. 정적 메서드를 명시적으로 필요한 부분을 검사할 사용 합니다."
  example:
  - "The following example shows the use of members of the SecurityElement class.  \n  \n [!code-vb[SecurityElementMembers#1](~/add/codesnippet/visualbasic/t-system.security.securi_1.vb)]\n [!code-cpp[SecurityElementMembers#1](~/add/codesnippet/cpp/t-system.security.securi_1.cpp)]\n [!code-cs[SecurityElementMembers#1](~/add/codesnippet/csharp/t-system.security.securi_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SecurityElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SecurityElement(String)
  nameWithType: SecurityElement.SecurityElement(String)
  fullName: System.Security.SecurityElement.SecurityElement(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 지정된 된 태그를 사용 하 여 클래스입니다."
  remarks: "`tag` 매개 변수는 유효한 XML 태그 이름으로 구성 되어야 합니다. 사용 하 여 <xref:System.Security.SecurityElement.Escape%2A>문자열에서 잘못 된 문자를 제거 하려면.</xref:System.Security.SecurityElement.Escape%2A>"
  example:
  - "The following code shows the use of  the SecurityElement constructor to create a new <xref:System.Security.SecurityElement> object.  This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#2](~/add/codesnippet/visualbasic/m-system.security.securi_8_1.vb)]\n [!code-cpp[SecurityElementMembers#2](~/add/codesnippet/cpp/m-system.security.securi_8_1.cpp)]\n [!code-cs[SecurityElementMembers#2](~/add/codesnippet/csharp/m-system.security.securi_8_1.cs)]"
  syntax:
    content: public SecurityElement (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "XML 요소의 태그 이름입니다."
  overload: System.Security.SecurityElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>tag</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> tag </code> 매개 변수 XML에서 유효 하지 않습니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SecurityElement(String,String)
  nameWithType: SecurityElement.SecurityElement(String,String)
  fullName: System.Security.SecurityElement.SecurityElement(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 된 지정 된 태그 및 텍스트입니다."
  remarks: "경우는 `text` 매개 변수는 `null` 이 생성자는 기본 생성자와 동일한 요소를 만듭니다."
  syntax:
    content: public SecurityElement (string tag, string text);
    parameters:
    - id: tag
      type: System.String
      description: "XML 요소의 태그 이름입니다."
    - id: text
      type: System.String
      description: "요소 내에서 텍스트 내용입니다."
  overload: System.Security.SecurityElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>tag</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> tag </code> 매개 변수 또는 <code> text </code> 매개 변수 XML에서 유효 하지 않습니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: AddAttribute(String,String)
  nameWithType: SecurityElement.AddAttribute(String,String)
  fullName: System.Security.SecurityElement.AddAttribute(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소에는 이름/값 특성을 추가합니다."
  remarks: "Name 및 value 특성에 유효한 XML 특성 문자만 있어야 합니다. XML 특성 이름은 고유 해야 합니다. 사용 하 여 <xref:System.Security.SecurityElement.Escape%2A>문자열에서 잘못 된 문자를 제거 하려면.</xref:System.Security.SecurityElement.Escape%2A>       지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열에서 따옴표를 포함 하면 안 되므로 또는 따옴표가 필요한 기타 문자가 있습니다."
  example:
  - "The following code shows the use of the AddAttribute method to add a name/value attribute to an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#4](~/add/codesnippet/visualbasic/m-system.security.securi_5_1.vb)]\n [!code-cpp[SecurityElementMembers#4](~/add/codesnippet/cpp/m-system.security.securi_5_1.cpp)]\n [!code-cs[SecurityElementMembers#4](~/add/codesnippet/csharp/m-system.security.securi_5_1.cs)]"
  syntax:
    content: public void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "특성의 이름입니다."
    - id: value
      type: System.String
      description: "특성의 값입니다."
  overload: System.Security.SecurityElement.AddAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수 또는 <code> value </code> 매개 변수 XML에서 유효 하지 않습니다.       -또는-로 지정 된 이름의 특성이 <code> name </code> 매개 변수가 이미 있습니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  id: AddChild(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: AddChild(SecurityElement)
  nameWithType: SecurityElement.AddChild(SecurityElement)
  fullName: System.Security.SecurityElement.AddChild(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소에 자식 요소를 추가 합니다."
  remarks: "자식 요소는 다음과 같은 모든 기존 자식 요소가 추가 됩니다."
  example:
  - "The following code shows the use of the AddChild method to add a child element to the XML element.  This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#5](~/add/codesnippet/visualbasic/m-system.security.securi_11_1.vb)]\n [!code-cpp[SecurityElementMembers#5](~/add/codesnippet/cpp/m-system.security.securi_11_1.cpp)]\n [!code-cs[SecurityElementMembers#5](~/add/codesnippet/csharp/m-system.security.securi_11_1.cs)]"
  syntax:
    content: public void AddChild (System.Security.SecurityElement child);
    parameters:
    - id: child
      type: System.Security.SecurityElement
      description: "추가할 자식 요소입니다."
  overload: System.Security.SecurityElement.AddChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>child</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityElement.Attribute(System.String)
  id: Attribute(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Attribute(String)
  nameWithType: SecurityElement.Attribute(String)
  fullName: System.Security.SecurityElement.Attribute(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소에서 이름으로 특성을 찾습니다."
  remarks: "다음과 같이 XML로 `Attribute(&quot;B&quot;)` &quot;456&quot;를 반환 합니다.      ```   <thetag A=&quot;123&quot; B=&quot;456&quot; C=&quot;789&quot;>text</thetag>   ```"
  example:
  - "The following code shows the use of the Attribute method to find an attribute by name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#13](~/add/codesnippet/visualbasic/m-system.security.securi_9_1.vb)]\n [!code-cpp[SecurityElementMembers#13](~/add/codesnippet/cpp/m-system.security.securi_9_1.cpp)]\n [!code-cs[SecurityElementMembers#13](~/add/codesnippet/csharp/m-system.security.securi_9_1.cs)]"
  syntax:
    content: public string Attribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 특성의 이름입니다."
    return:
      type: System.String
      description: "연결 된 명명된 된 특성 값 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 된 <code> name </code> 존재 합니다."
  overload: System.Security.SecurityElement.Attribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityElement.Attributes
  id: Attributes
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Attributes
  nameWithType: SecurityElement.Attributes
  fullName: System.Security.SecurityElement.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "이름/값 쌍으로 XML 요소 특성을 가져오거나 설정 합니다."
  remarks: "각 특성에 저장 됩니다는 <xref:System.Collections.Hashtable>이름/값 쌍으로.</xref:System.Collections.Hashtable>       Name 및 value 특성에 유효한 XML 특성 문자만 포함 해야 합니다. 사용 하 여 <xref:System.Security.SecurityElement.Escape%2A>문자열에서 잘못 된 문자를 제거 하려면.</xref:System.Security.SecurityElement.Escape%2A>       지원은 없습니다 따옴표 붙은 문자열에 대 한 이름/값 쌍에 대 한 문자열에서 따옴표를 포함 하면 안 되므로 또는 따옴표가 필요한 기타 문자가 있습니다."
  example:
  - "The following code shows the use of the Attributes property to get an attribute of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#15](~/add/codesnippet/visualbasic/p-system.security.securi_3_1.vb)]\n [!code-cpp[SecurityElementMembers#15](~/add/codesnippet/cpp/p-system.security.securi_3_1.cpp)]\n [!code-cs[SecurityElementMembers#15](~/add/codesnippet/csharp/p-system.security.securi_3_1.cs)]"
  syntax:
    content: public System.Collections.Hashtable Attributes { get; set; }
    return:
      type: System.Collections.Hashtable
      description: "<xref href=&quot;System.Collections.Hashtable&quot;> </xref> XML 요소 특성 값에 대 한 개체입니다."
  overload: System.Security.SecurityElement.Attributes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "이름이 나 값의는 <xref href=&quot;System.Collections.Hashtable&quot;> </xref> 개체가 잘못 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이름이 유효한 XML 특성 이름이 아닙니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.Children
  id: Children
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Children
  nameWithType: SecurityElement.Children
  fullName: System.Security.SecurityElement.Children
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소의 자식 요소의 배열을 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.Security.SecurityElement>둘 다 포함 되어 <xref:System.Security.SecurityElement.Text%2A>및 자식 <xref:System.Security.SecurityElement.Text%2A>맨 먼저 나타납니다.</xref:System.Security.SecurityElement.Text%2A> </xref:System.Security.SecurityElement.Text%2A> </xref:System.Security.SecurityElement>"
  example:
  - "The following code shows the use of the Children property to get the array of child elements of the XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#14](~/add/codesnippet/visualbasic/p-system.security.securi_0_1.vb)]\n [!code-cpp[SecurityElementMembers#14](~/add/codesnippet/cpp/p-system.security.securi_0_1.cpp)]\n [!code-cs[SecurityElementMembers#14](~/add/codesnippet/csharp/p-system.security.securi_0_1.cs)]"
  syntax:
    content: public System.Collections.ArrayList Children { get; set; }
    return:
      type: System.Collections.ArrayList
      description: "보안 요소로 XML 요소의 순서가 지정 된 자식 요소입니다."
  overload: System.Security.SecurityElement.Children*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XML 부모 노드의 자식은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.Copy
  id: Copy
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Copy()
  nameWithType: SecurityElement.Copy()
  fullName: System.Security.SecurityElement.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "현재는 동일한 복사본을 만들어 반환 <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 개체입니다."
  remarks: "복사본 둘 다 포함 된 <xref:System.Security.SecurityElement.Children%2A>및 <xref:System.Security.SecurityElement.Attributes%2A>속성.</xref:System.Security.SecurityElement.Attributes%2A> </xref:System.Security.SecurityElement.Children%2A>"
  syntax:
    content: public System.Security.SecurityElement Copy ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "현재 복사본 <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 개체입니다."
  overload: System.Security.SecurityElement.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  id: Equal(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Equal(SecurityElement)
  nameWithType: SecurityElement.Equal(SecurityElement)
  fullName: System.Security.SecurityElement.Equal(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "같음에 대 한 두 개의 XML 요소 개체를 비교합니다."
  remarks: "자식 요소가 비교를 재귀적으로 확장 됩니다.       같은 문자의 다른 XML 표현 비교에 대 한 지원은 없습니다."
  example:
  - "The following code shows the use of the Equal method to compare two XML elements. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#22](~/add/codesnippet/visualbasic/m-system.security.securi_6_1.vb)]\n [!code-cpp[SecurityElementMembers#22](~/add/codesnippet/cpp/m-system.security.securi_6_1.cpp)]\n [!code-cs[SecurityElementMembers#22](~/add/codesnippet/csharp/m-system.security.securi_6_1.cs)]"
  syntax:
    content: public bool Equal (System.Security.SecurityElement other);
    parameters:
    - id: other
      type: System.Security.SecurityElement
      description: "현재 XML 요소 개체를 비교할 XML 요소 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>태그, 특성 이름 및 값, 자식 요소 및 텍스트 필드의 현재 XML 요소는 동일에 상응 하는 경우는 <code> other </code> 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityElement.Equal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.Escape(System.String)
  id: Escape(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Escape(String)
  nameWithType: SecurityElement.Escape(String)
  fullName: System.Security.SecurityElement.Escape(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "대체 잘못 된 XML 문자가 올바른 XML 동등한 포함 된 문자열로 합니다."
  remarks: "Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>. If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.  \n  \n The following table shows the invalid XML characters and their escaped equivalents.  \n  \n|invalid XML Character|Replaced With|  \n|---------------------------|-------------------|  \n|\"\\<\"|\"&lt;\"|  \n|\">\"|\"&gt;\"|  \n|\"\\\\\"\"|\"&quot;\"|  \n|\"\\\\'\"|\"&apos;\"|  \n|\"&\"|\"&amp;\"|"
  example:
  - "The following code shows the use of the Escape method to replace invalid XML characters in a string with their valid XML equivalent. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#19](~/add/codesnippet/visualbasic/m-system.security.securi_7_1.vb)]\n [!code-cpp[SecurityElementMembers#19](~/add/codesnippet/cpp/m-system.security.securi_7_1.cpp)]\n [!code-cs[SecurityElementMembers#19](~/add/codesnippet/csharp/m-system.security.securi_7_1.cs)]"
  syntax:
    content: public static string Escape (string str);
    parameters:
    - id: str
      type: System.String
      description: "잘못 된 문자를 이스케이프 하는 문자열입니다."
    return:
      type: System.String
      description: "잘못 된 문자 바꾼 입력된 문자열입니다."
  overload: System.Security.SecurityElement.Escape*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.FromString(System.String)
  id: FromString(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: FromString(String)
  nameWithType: SecurityElement.FromString(String)
  fullName: System.Security.SecurityElement.FromString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML로 인코딩된 문자열에서 보안 요소를 만듭니다."
  remarks: "Do not use single quotation marks in the XML string; instead, use escaped double quotation marks. For example, instead of \"`<value name='Company'>Microsoft</value>\"` use \"`<value name=\\\"Company\\\">Microsoft</value>\"`.  \n  \n Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string."
  syntax:
    content: public static System.Security.SecurityElement FromString (string xml);
    parameters:
    - id: xml
      type: System.String
      description: "보안 요소를 만드는 데 사용할 XML로 인코딩된 문자열입니다."
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> XML에서 생성 합니다."
  overload: System.Security.SecurityElement.FromString*
  exceptions:
  - type: System.Security.XmlSyntaxException
    commentId: T:System.Security.XmlSyntaxException
    description: "<code>xml</code>하나 이상의 단일 인용 부호 문자를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xml</code>is<xref uid=&quot;langword_csharp_ null&quot; name=&quot; null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityElement.IsValidAttributeName(System.String)
  id: IsValidAttributeName(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidAttributeName(String)
  nameWithType: SecurityElement.IsValidAttributeName(String)
  fullName: System.Security.SecurityElement.IsValidAttributeName(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "문자열이 유효한 속성 이름 인지 확인 합니다."
  remarks: "보안 요소를 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다."
  example:
  - "The following code shows the use of the IsValidAttributeName method to determine whether a string is a valid attribute name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#6](~/add/codesnippet/visualbasic/m-system.security.securi_10_1.vb)]\n [!code-cpp[SecurityElementMembers#6](~/add/codesnippet/cpp/m-system.security.securi_10_1.cpp)]\n [!code-cs[SecurityElementMembers#6](~/add/codesnippet/csharp/m-system.security.securi_10_1.cs)]"
  syntax:
    content: public static bool IsValidAttributeName (string name);
    parameters:
    - id: name
      type: System.String
      description: "유효성을 테스트할 특성 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> name </code> 매개 변수는 유효한 XML 특성 이름이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityElement.IsValidAttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.IsValidAttributeValue(System.String)
  id: IsValidAttributeValue(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidAttributeValue(String)
  nameWithType: SecurityElement.IsValidAttributeValue(String)
  fullName: System.Security.SecurityElement.IsValidAttributeValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "문자열이 유효한 특성 값을 인지를 결정 합니다."
  remarks: "보안 요소를 추가 하기 전에 특성을 테스트 하려면이 메서드를 사용할 수 있습니다."
  example:
  - "The following code shows the use of the IsValidAttributeValue method to determine whether a string is a valid attribute value. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#7](~/add/codesnippet/visualbasic/m-system.security.securi_4_1.vb)]\n [!code-cpp[SecurityElementMembers#7](~/add/codesnippet/cpp/m-system.security.securi_4_1.cpp)]\n [!code-cs[SecurityElementMembers#7](~/add/codesnippet/csharp/m-system.security.securi_4_1.cs)]"
  syntax:
    content: public static bool IsValidAttributeValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "유효성을 테스트할 특성 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> value </code> 매개 변수는 유효한 XML 특성 값을, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityElement.IsValidAttributeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.IsValidTag(System.String)
  id: IsValidTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidTag(String)
  nameWithType: SecurityElement.IsValidTag(String)
  fullName: System.Security.SecurityElement.IsValidTag(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "문자열이 올바른 태그 인지를 결정 합니다."
  remarks: "이를 테스트 <xref:System.Security.SecurityElement.Tag%2A>합니다. 설정 하기 전에</xref:System.Security.SecurityElement.Tag%2A> 사용할 수 있습니다."
  example:
  - "The following code shows the use of the IsValidTag method to determine whether a string is a valid attribute tag. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#10](~/add/codesnippet/visualbasic/m-system.security.securi_3_1.vb)]\n [!code-cpp[SecurityElementMembers#10](~/add/codesnippet/cpp/m-system.security.securi_3_1.cpp)]\n [!code-cs[SecurityElementMembers#10](~/add/codesnippet/csharp/m-system.security.securi_3_1.cs)]"
  syntax:
    content: public static bool IsValidTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "유효성을 테스트할 태그입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> tag </code> 매개 변수는 유효한 XML 태그, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityElement.IsValidTag*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.IsValidText(System.String)
  id: IsValidText(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidText(String)
  nameWithType: SecurityElement.IsValidText(String)
  fullName: System.Security.SecurityElement.IsValidText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "문자열로 XML 요소 내에 텍스트로 올바른지 여부를 결정 합니다."
  remarks: "이 메서드를 테스트 <xref:System.Security.SecurityElement.Text%2A>합니다. 설정 하기 전에</xref:System.Security.SecurityElement.Text%2A> 사용할 수 있습니다."
  example:
  - "The following code shows the use of the IsValidText method to determine whether a string is valid as XML element text. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#9](~/add/codesnippet/visualbasic/m-system.security.securi_2_1.vb)]\n [!code-cpp[SecurityElementMembers#9](~/add/codesnippet/cpp/m-system.security.securi_2_1.cpp)]\n [!code-cs[SecurityElementMembers#9](~/add/codesnippet/csharp/m-system.security.securi_2_1.cs)]"
  syntax:
    content: public static bool IsValidText (string text);
    parameters:
    - id: text
      type: System.String
      description: "유효성을 테스트할 텍스트입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> text </code> 매개 변수는 유효한 XML 텍스트 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.SecurityElement.IsValidText*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityElement.SearchForChildByTag(System.String)
  id: SearchForChildByTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SearchForChildByTag(String)
  nameWithType: SecurityElement.SearchForChildByTag(String)
  fullName: System.Security.SecurityElement.SearchForChildByTag(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "자식을 태그 이름을 사용 하 여 찾습니다."
  remarks: "다음과 같이 XML로 `SearchForChildByTag(&quot;second&quot;)` 자식 요소를 반환 합니다 `<second>`합니다.      ```   <thetag A=&quot;123&quot; B=&quot;456&quot; C=&quot;789&quot;> <first>text1</first>          <second>text2</second></thetag>   ```"
  example:
  - "The following code shows the use of the SearchForChildByTag method to find a child by its tag name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#17](~/add/codesnippet/visualbasic/m-system.security.securi_1_1.vb)]\n [!code-cpp[SecurityElementMembers#17](~/add/codesnippet/cpp/m-system.security.securi_1_1.cpp)]\n [!code-cs[SecurityElementMembers#17](~/add/codesnippet/csharp/m-system.security.securi_1_1.cs)]"
  syntax:
    content: public System.Security.SecurityElement SearchForChildByTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "자식 요소에서 검색 하려는 태그입니다."
    return:
      type: System.Security.SecurityElement
      description: "지정 된 태그 값으로는 첫 번째 자식 XML 요소 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 있는 자식 요소가 없는 경우 <code> tag </code> 존재 합니다."
  overload: System.Security.SecurityElement.SearchForChildByTag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>tag</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityElement.SearchForTextOfTag(System.String)
  id: SearchForTextOfTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SearchForTextOfTag(String)
  nameWithType: SecurityElement.SearchForTextOfTag(String)
  fullName: System.Security.SecurityElement.SearchForTextOfTag(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "자식 태그 이름으로 찾아 포함된 된 텍스트를 반환 합니다."
  remarks: "이 메서드는 다음과 같습니다: [!code-vb [System.Security.SecurityElement#1](~/add/codesnippet/visualbasic/m-system.security.securi_0_1.vb)][!code-cpp[System.Security.SecurityElement#1](~/add/codesnippet/cpp/m-system.security.securi_0_1.cpp)][!code-cs[System.Security.SecurityElement#1](~/add/codesnippet/csharp/m-system.security.securi_0_1.cs) ] 와 XML에서 `SearchForTextOfTag(&quot;second&quot;)` &quot;텍스트&2;&quot;를 반환 합니다.          ```   <thetag A=&quot;123&quot; B=&quot;456&quot; C=&quot;789&quot;> <first>text1</first>       <second>text2</second></thetag>   ```"
  example:
  - "The following code shows the use of the SearchForTextOfTag method to find a child by its tag name and return the contained text. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#18](~/add/codesnippet/visualbasic/m-system.security.securi_0_2.vb)]\n [!code-cpp[SecurityElementMembers#18](~/add/codesnippet/cpp/m-system.security.securi_0_2.cpp)]\n [!code-cs[SecurityElementMembers#18](~/add/codesnippet/csharp/m-system.security.securi_0_2.cs)]"
  syntax:
    content: public string SearchForTextOfTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "자식 요소에서 검색 하려는 태그입니다."
    return:
      type: System.String
      description: "지정 된 태그 값을 가진 첫 번째 자식 요소의 텍스트 콘텐츠입니다."
  overload: System.Security.SecurityElement.SearchForTextOfTag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tag</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityElement.Tag
  id: Tag
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Tag
  nameWithType: SecurityElement.Tag
  fullName: System.Security.SecurityElement.Tag
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소 태그 이름을 가져오거나 설정 합니다."
  remarks: "Xml에서는 태그 아래에 표시 되는 스크립트에 표시: ```   <tag attributes>text</tag>   ``` 이 요소에 자식 요소가 있으면 자식 바뀝니다 `text`합니다.       이 속성에만 유효한 XML 태그 문자열을 할당 합니다. 사용 하 여 <xref:System.Security.SecurityElement.Escape%2A>문자열에서 잘못 된 문자를 제거 하려면.</xref:System.Security.SecurityElement.Escape%2A>"
  example:
  - "The following code shows the use of the Tag property to get the tag name of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#11](~/add/codesnippet/visualbasic/p-system.security.securi_1_1.vb)]\n [!code-cpp[SecurityElementMembers#11](~/add/codesnippet/cpp/p-system.security.securi_1_1.cpp)]\n [!code-cs[SecurityElementMembers#11](~/add/codesnippet/csharp/p-system.security.securi_1_1.cs)]"
  syntax:
    content: public string Tag { get; set; }
    return:
      type: System.String
      description: "XML 요소의 태그 이름입니다."
  overload: System.Security.SecurityElement.Tag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The tag is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "태그 xml이 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.Text
  id: Text
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Text
  nameWithType: SecurityElement.Text
  fullName: System.Security.SecurityElement.Text
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소 내에서 텍스트를 가져오거나 설정 합니다."
  remarks: "텍스트는 XML 특수 문자를 포함 해야 합니다. 사용 하 여 <xref:System.Security.SecurityElement.Escape%2A>문자열에서 잘못 된 문자를 제거 하려면.</xref:System.Security.SecurityElement.Escape%2A>       경우는 <xref:System.Security.SecurityElement>두 텍스트를 포함 하 고 <xref:System.Security.SecurityElement.Children%2A>, 텍스트를 먼저 표시 됩니다.</xref:System.Security.SecurityElement.Children%2A> </xref:System.Security.SecurityElement>"
  example:
  - "The following code shows the use of the Text property to get the text of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-vb[SecurityElementMembers#12](~/add/codesnippet/visualbasic/p-system.security.securi_2_1.vb)]\n [!code-cpp[SecurityElementMembers#12](~/add/codesnippet/cpp/p-system.security.securi_2_1.cpp)]\n [!code-cs[SecurityElementMembers#12](~/add/codesnippet/csharp/p-system.security.securi_2_1.cs)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "XML 요소 내에서 텍스트의 값입니다."
  overload: System.Security.SecurityElement.Text*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "텍스트 xml이 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.SecurityElement.ToString
  id: ToString
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityElement.ToString()
  fullName: System.Security.SecurityElement.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "XML 요소 및 구성 요소 특성, 자식 요소 및 텍스트의 문자열 표현을 생성합니다."
  remarks: "이 메서드는 요소의 XML 표현을 확인 하는 디버깅에 유용 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "XML 요소와 해당 내용입니다."
  overload: System.Security.SecurityElement.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Security.XmlSyntaxException
  parent: System.Security
  isExternal: false
  name: XmlSyntaxException
  nameWithType: XmlSyntaxException
  fullName: System.Security.XmlSyntaxException
- uid: System.Security.SecurityElement.#ctor(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement(String)
  nameWithType: SecurityElement.SecurityElement(String)
  fullName: System.Security.SecurityElement.SecurityElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityElement.#ctor(System.String,System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement(String,String)
  nameWithType: SecurityElement.SecurityElement(String,String)
  fullName: System.Security.SecurityElement.SecurityElement(String,String)
- uid: System.Security.SecurityElement.AddAttribute(System.String,System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddAttribute(String,String)
  nameWithType: SecurityElement.AddAttribute(String,String)
  fullName: System.Security.SecurityElement.AddAttribute(String,String)
- uid: System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddChild(SecurityElement)
  nameWithType: SecurityElement.AddChild(SecurityElement)
  fullName: System.Security.SecurityElement.AddChild(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.SecurityElement.Attribute(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attribute(String)
  nameWithType: SecurityElement.Attribute(String)
  fullName: System.Security.SecurityElement.Attribute(String)
- uid: System.Security.SecurityElement.Attributes
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attributes
  nameWithType: SecurityElement.Attributes
  fullName: System.Security.SecurityElement.Attributes
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.SecurityElement.Children
  parent: System.Security.SecurityElement
  isExternal: false
  name: Children
  nameWithType: SecurityElement.Children
  fullName: System.Security.SecurityElement.Children
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.SecurityElement.Copy
  parent: System.Security.SecurityElement
  isExternal: false
  name: Copy()
  nameWithType: SecurityElement.Copy()
  fullName: System.Security.SecurityElement.Copy()
- uid: System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Equal(SecurityElement)
  nameWithType: SecurityElement.Equal(SecurityElement)
  fullName: System.Security.SecurityElement.Equal(SecurityElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityElement.Escape(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Escape(String)
  nameWithType: SecurityElement.Escape(String)
  fullName: System.Security.SecurityElement.Escape(String)
- uid: System.Security.SecurityElement.FromString(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: FromString(String)
  nameWithType: SecurityElement.FromString(String)
  fullName: System.Security.SecurityElement.FromString(String)
- uid: System.Security.SecurityElement.IsValidAttributeName(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeName(String)
  nameWithType: SecurityElement.IsValidAttributeName(String)
  fullName: System.Security.SecurityElement.IsValidAttributeName(String)
- uid: System.Security.SecurityElement.IsValidAttributeValue(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeValue(String)
  nameWithType: SecurityElement.IsValidAttributeValue(String)
  fullName: System.Security.SecurityElement.IsValidAttributeValue(String)
- uid: System.Security.SecurityElement.IsValidTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidTag(String)
  nameWithType: SecurityElement.IsValidTag(String)
  fullName: System.Security.SecurityElement.IsValidTag(String)
- uid: System.Security.SecurityElement.IsValidText(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidText(String)
  nameWithType: SecurityElement.IsValidText(String)
  fullName: System.Security.SecurityElement.IsValidText(String)
- uid: System.Security.SecurityElement.SearchForChildByTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForChildByTag(String)
  nameWithType: SecurityElement.SearchForChildByTag(String)
  fullName: System.Security.SecurityElement.SearchForChildByTag(String)
- uid: System.Security.SecurityElement.SearchForTextOfTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForTextOfTag(String)
  nameWithType: SecurityElement.SearchForTextOfTag(String)
  fullName: System.Security.SecurityElement.SearchForTextOfTag(String)
- uid: System.Security.SecurityElement.Tag
  parent: System.Security.SecurityElement
  isExternal: false
  name: Tag
  nameWithType: SecurityElement.Tag
  fullName: System.Security.SecurityElement.Tag
- uid: System.Security.SecurityElement.Text
  parent: System.Security.SecurityElement
  isExternal: false
  name: Text
  nameWithType: SecurityElement.Text
  fullName: System.Security.SecurityElement.Text
- uid: System.Security.SecurityElement.ToString
  parent: System.Security.SecurityElement
  isExternal: false
  name: ToString()
  nameWithType: SecurityElement.ToString()
  fullName: System.Security.SecurityElement.ToString()
- uid: System.Security.SecurityElement.#ctor*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement.SecurityElement
- uid: System.Security.SecurityElement.AddAttribute*
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddAttribute
  nameWithType: SecurityElement.AddAttribute
- uid: System.Security.SecurityElement.AddChild*
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddChild
  nameWithType: SecurityElement.AddChild
- uid: System.Security.SecurityElement.Attribute*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attribute
  nameWithType: SecurityElement.Attribute
- uid: System.Security.SecurityElement.Attributes*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attributes
  nameWithType: SecurityElement.Attributes
- uid: System.Security.SecurityElement.Children*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Children
  nameWithType: SecurityElement.Children
- uid: System.Security.SecurityElement.Copy*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Copy
  nameWithType: SecurityElement.Copy
- uid: System.Security.SecurityElement.Equal*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Equal
  nameWithType: SecurityElement.Equal
- uid: System.Security.SecurityElement.Escape*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Escape
  nameWithType: SecurityElement.Escape
- uid: System.Security.SecurityElement.FromString*
  parent: System.Security.SecurityElement
  isExternal: false
  name: FromString
  nameWithType: SecurityElement.FromString
- uid: System.Security.SecurityElement.IsValidAttributeName*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeName
  nameWithType: SecurityElement.IsValidAttributeName
- uid: System.Security.SecurityElement.IsValidAttributeValue*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeValue
  nameWithType: SecurityElement.IsValidAttributeValue
- uid: System.Security.SecurityElement.IsValidTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidTag
  nameWithType: SecurityElement.IsValidTag
- uid: System.Security.SecurityElement.IsValidText*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidText
  nameWithType: SecurityElement.IsValidText
- uid: System.Security.SecurityElement.SearchForChildByTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForChildByTag
  nameWithType: SecurityElement.SearchForChildByTag
- uid: System.Security.SecurityElement.SearchForTextOfTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForTextOfTag
  nameWithType: SecurityElement.SearchForTextOfTag
- uid: System.Security.SecurityElement.Tag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Tag
  nameWithType: SecurityElement.Tag
- uid: System.Security.SecurityElement.Text*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Text
  nameWithType: SecurityElement.Text
- uid: System.Security.SecurityElement.ToString*
  parent: System.Security.SecurityElement
  isExternal: false
  name: ToString
  nameWithType: SecurityElement.ToString
