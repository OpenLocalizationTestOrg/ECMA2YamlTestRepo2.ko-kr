### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FilterFactory
  id: FilterFactory
  children:
  - System.Web.DynamicData.FilterFactory.#ctor
  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  langs:
  - csharp
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
  type: Class
  summary: "필터 템플릿을 만듭니다."
  remarks: "FilterFactory 클래스 인스턴스를 가져오는 필터 서식 파일의 특정 열 형식에 대 한 런타임 시 동적 데이터에서 사용 됩니다.       필터 템플릿이 로드 되는 방식을 사용자 지정 하려면이 클래스에 정의 된 메서드를 재정의할 수 있습니다. 예를 들어 사용자 지정 구현을 기본 ~/DynamicData/Filters 폴더와 다른 위치에서 필터 템플릿을 로드할 수 있습니다.       동적 데이터 열을 외래 키, 부울 및 열거형 형식 및 사용 하 여 표시에 대 한 필터 템플릿을 제공는 <xref:System.Web.UI.WebControls.DropDownList>컨트롤.</xref:System.Web.UI.WebControls.DropDownList> 템플릿을 사용자 지정 필터를 만들 수 있습니다."
  example:
  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.
  syntax:
    content: public class FilterFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> 클래스입니다."
  syntax:
    content: public FilterFactory ();
    parameters: []
  overload: System.Web.DynamicData.FilterFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필터 서식 파일의 인스턴스를 만듭니다."
  remarks: "이 메서드는 동적 데이터 필터 서식 파일의 인스턴스를 가져옵니다. 파생된 클래스 필터 서식 파일의 인스턴스를 만들 방법을 사용자 지정 하려면이 메서드를 재정의할 수 있습니다. 예를 들어 사용자 지정 구현을 대신 기본 ~/DynamicData/Filters 폴더에서 컴파일된 어셈블리에서 서식 파일을 로드할 수입니다."
  syntax:
    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필터 템플릿이 적용 되는 데이터 열입니다."
    - id: filterUIHint
      type: System.String
      description: "사용할 필터 서식 파일의 이름입니다."
    return:
      type: System.Web.DynamicData.QueryableFilterUserControl
      description: "인스턴스는 <xref href=&quot;System.Web.DynamicData.QueryableFilterUserControl&quot;> </xref> 클래스입니다."
  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필터 서식 파일의 가상 경로 가져옵니다."
  remarks: "기본적으로 필터 템플릿은 ~/DynamicData/Filers 폴더에 있습니다.       이 메서드는 필드 템플릿을 포함 하는 폴더의 가상 경로 확인 합니다. 파생된 클래스는 다른 가상 경로에서 필터 템플릿을 제공 하려면이 메서드를 재정의할 수 있습니다."
  syntax:
    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "필터 템플릿이 적용 되는 데이터 열입니다."
    - id: filterUIHint
      type: System.String
      description: "사용할 필터 템플릿입니다."
    return:
      type: System.String
      description: "필터 서식 파일의 가상 경로입니다."
  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FilterFactory.#ctor
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
- uid: System.Web.DynamicData.QueryableFilterUserControl
  parent: System.Web.DynamicData
  isExternal: false
  name: QueryableFilterUserControl
  nameWithType: QueryableFilterUserControl
  fullName: System.Web.DynamicData.QueryableFilterUserControl
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
- uid: System.Web.DynamicData.FilterFactory.#ctor*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory.FilterFactory
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl
  nameWithType: FilterFactory.CreateFilterControl
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath
  nameWithType: FilterFactory.GetFilterVirtualPath
