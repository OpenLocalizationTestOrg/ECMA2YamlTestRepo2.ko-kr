### YamlMime:ManagedReference
items:
- uid: System.Data.IDbConnection
  id: IDbConnection
  children:
  - System.Data.IDbConnection.BeginTransaction
  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.IDbConnection.ChangeDatabase(System.String)
  - System.Data.IDbConnection.Close
  - System.Data.IDbConnection.ConnectionString
  - System.Data.IDbConnection.ConnectionTimeout
  - System.Data.IDbConnection.CreateCommand
  - System.Data.IDbConnection.Database
  - System.Data.IDbConnection.Open
  - System.Data.IDbConnection.State
  langs:
  - csharp
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
  type: Interface
  summary: "데이터 원본에 대해 열린 연결을 나타내며 관계형 데이터베이스에 액세스 하는.NET Framework 데이터 공급자에 의해 구현 됩니다."
  remarks: "IDbConnection 인터페이스 고유 세션 데이터 원본 (예를 들어 서버에 네트워크 연결)을 나타내는 연결 클래스를 구현 하려면 상속 하는 클래스를 수 있습니다. 연결 클래스에 대 한 자세한 내용은 참조 [데이터 원본에 연결할](~/add/includes/ajax-current-ext-md.md)합니다.       응용 프로그램을 직접 IDbConnection 인터페이스의 인스턴스를 만들지 않는 있지만 IDbConnection을 상속 하는 클래스의 인스턴스를 만듭니다.       IDbConnection을 상속 하는 클래스는 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다. 예를 들어 IDbConnection 인터페이스 정의 <xref:System.Data.IDbConnection.ConnectionTimeout%2A>속성.</xref:System.Data.IDbConnection.ConnectionTimeout%2A> 차례로 <xref:System.Data.SqlClient.SqlConnection>이 속성을 상속 하 고 정의 하는 클래스는 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A>속성.</xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> </xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlCommand> and <xref:System.Data.SqlClient.SqlConnection>. The <xref:System.Data.SqlClient.SqlConnection> is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a Transact-SQL INSERT statement.  \n  \n [!code-cs[Classic WebData SqlConnection Example#1](~/add/codesnippet/csharp/t-system.data.idbconnect_1.cs)]\n [!code-vb[Classic WebData SqlConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.idbconnect_1.vb)]"
  syntax:
    content: 'public interface IDbConnection : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터베이스 트랜잭션을 시작합니다."
  remarks: "트랜잭션이 완료 되 면 명시적으로 커밋하거나를 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.IDbTransaction.Commit%2A>또는 <xref:System.Data.IDbTransaction.Rollback%2A>메서드.</xref:System.Data.IDbTransaction.Rollback%2A> </xref:System.Data.IDbTransaction.Commit%2A>"
  syntax:
    content: public System.Data.IDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.IDbTransaction
      description: "새 트랜잭션을 나타내는 개체입니다."
  overload: System.Data.IDbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 데이터베이스 트랜잭션을 시작 <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> 값입니다."
  remarks: "트랜잭션이 완료 되 면 명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.IDbTransaction.Commit%2A>또는 <xref:System.Data.IDbTransaction.Rollback%2A>메서드.</xref:System.Data.IDbTransaction.Rollback%2A> </xref:System.Data.IDbTransaction.Commit%2A>"
  syntax:
    content: public System.Data.IDbTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "중 하나는 <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> 값입니다."
    return:
      type: System.Data.IDbTransaction
      description: "새 트랜잭션을 나타내는 개체입니다."
  overload: System.Data.IDbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "열린에 대 한 현재 데이터베이스 변경 <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;> </xref> 개체입니다."
  syntax:
    content: public void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다."
  overload: System.Data.IDbConnection.ChangeDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Close
  id: Close
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터베이스에 연결을 닫습니다."
  remarks: "Close 메서드가 보류 중인 모든 트랜잭션을 롤백합니다. 그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.       응용 프로그램에서 호출할 수 `Close` 예외를 생성 하지 않고 둘 이상의 시간입니다."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.IDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터베이스를 여는 데 사용 하는 문자열을 가져오거나 설정 합니다."
  remarks: "`ConnectionString` 연결이 닫혀 있는 동안에 속성을 설정할 수 있습니다."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.OleDb.OleDbConnection.State%2A>.  \n  \n [!code-cs[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.idbconnect_0_1.cs)]\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.idbconnect_0_1.vb)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "연결 설정을 포함 하는 문자열입니다."
  overload: System.Data.IDbConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
  fullName: System.Data.IDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "시도 종료 하 고 오류를 생성 하기 전에 연결을 설정 하는 동안 대기할 시간을을 가져옵니다."
  remarks: "값이 0이 아니라 대기 시간이 없는 대기 시간에 제한이 없음을 나타내며 피해 야는 <xref:System.Data.IDbConnection.ConnectionString%2A>연결 시도가 무한정 대기 하 게 되므로.</xref:System.Data.IDbConnection.ConnectionString%2A>"
  syntax:
    content: public int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "시간 (초) 연결이 열리기 전까지 기다려야 합니다. 기본값은 15 초입니다."
  overload: System.Data.IDbConnection.ConnectionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 연결과 관련 된 명령 개체를 반환 합니다."
  syntax:
    content: public System.Data.IDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.IDbCommand
      description: "연결과 관련 된 명령 개체입니다."
  overload: System.Data.IDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Database
  id: Database
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "현재 데이터베이스 이름이 나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다."
  remarks: "`Database` 속성을 사용 하 여 동적으로 업데이트할 수는 <xref:System.Data.IDbConnection.ChangeDatabase%2A>메서드 또는 Execute 메서드 중 하나를 사용 하는 SQL 문을 전달 하 여.</xref:System.Data.IDbConnection.ChangeDatabase%2A> (처음 데이터베이스 설정 연결 문자열을 사용 하 여.) SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 `ChangeDatabase` 정보 메시지가 전송 되는 메서드와 다음 속성이 업데이트 됩니다."
  syntax:
    content: public string Database { get; }
    return:
      type: System.String
      description: "현재 데이터베이스의 이름 또는 한 번에 사용할 데이터베이스의 이름을 연결이 열려 있습니다. 기본값은 빈 문자열입니다."
  overload: System.Data.IDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Open
  id: Open
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정한 설정을 사용 하 여 데이터베이스 연결을 엽니다는 <xref uid=&quot;langword_csharp_ConnectionString&quot; name=&quot;ConnectionString&quot; href=&quot;&quot;> </xref> 공급자별 연결 개체의 속성입니다."
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.Data.IDbConnection.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.State
  id: State
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: State
  nameWithType: IDbConnection.State
  fullName: System.Data.IDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "연결의 현재 상태를 가져옵니다."
  remarks: "허용 되는 상태 변경이:-에서 `Closed` 를 `Open`를 사용 하 여는 `Open` 연결 개체의 메서드.      `Open` 를 `Closed`, 하나를 사용 하는 `Close` 메서드 또는 `Dispose` 연결 개체의 메서드."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.idbconnect_1_1.cs)]\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.idbconnect_1_1.vb)]"
  syntax:
    content: public System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "중 하나는 <xref href=&quot;System.Data.ConnectionState&quot;> </xref> 값입니다."
  overload: System.Data.IDbConnection.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbConnection.BeginTransaction
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDbConnection.Close
  parent: System.Data.IDbConnection
  isExternal: false
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
- uid: System.Data.IDbConnection.ConnectionString
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
- uid: System.Data.IDbConnection.ConnectionTimeout
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
  fullName: System.Data.IDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbConnection.CreateCommand
  parent: System.Data.IDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbConnection.Database
  parent: System.Data.IDbConnection
  isExternal: false
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
- uid: System.Data.IDbConnection.Open
  parent: System.Data.IDbConnection
  isExternal: false
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
- uid: System.Data.IDbConnection.State
  parent: System.Data.IDbConnection
  isExternal: false
  name: State
  nameWithType: IDbConnection.State
  fullName: System.Data.IDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.IDbConnection.BeginTransaction*
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: IDbConnection.BeginTransaction
- uid: System.Data.IDbConnection.ChangeDatabase*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: IDbConnection.ChangeDatabase
- uid: System.Data.IDbConnection.Close*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Close
  nameWithType: IDbConnection.Close
- uid: System.Data.IDbConnection.ConnectionString*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
- uid: System.Data.IDbConnection.ConnectionTimeout*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
- uid: System.Data.IDbConnection.CreateCommand*
  parent: System.Data.IDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: IDbConnection.CreateCommand
- uid: System.Data.IDbConnection.Database*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Database
  nameWithType: IDbConnection.Database
- uid: System.Data.IDbConnection.Open*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Open
  nameWithType: IDbConnection.Open
- uid: System.Data.IDbConnection.State*
  parent: System.Data.IDbConnection
  isExternal: false
  name: State
  nameWithType: IDbConnection.State
