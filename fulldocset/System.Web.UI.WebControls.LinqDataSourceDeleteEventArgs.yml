### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  id: LinqDataSourceDeleteEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleting&quot;> </xref> 이벤트입니다."
  remarks: "LinqDataSourceDeleteEventArgs 개체에 대 한 모든 처리기에 전달 되는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>속성 삭제 되는 데이터를 포함 합니다.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>       데이터 소스를 나타내는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>클래스</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 의 인스턴스를 포함 하는 속성</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 데이터를 삭제 하기 전에 유효성 검사 예외를 throw 하는 경우 통해 모든 유효성 검사 예외를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 유효성 검사 예외가 throw 되 면는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>속성 포함 `null`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 유효성 검사 예외를 처리 하 고 예외를 다시 throw 하지 않을 경우에 설정 된 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>속성을 `true`.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>       에 대 한 이벤트 처리기를 만들고는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>을 데이터 클래스의 유효성 검사 오류를 검사 하거나 삭제 작업을 취소 하는 데이터 유효성을 검사 하는 이벤트입니다.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 설정 하 여 삭제 작업을 취소는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSource>제어 원래 값을 데이터 원본에서 보기에 상태 저장 제외 하 고 웹 페이지에서 해당 <xref:System.Data.Linq.Mapping.ColumnAttribute>특성으로 표시 되어 `UpdateCheck.Never`.</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> LINQ to SQL은 자동으로 데이터를 삭제 하기 전에 데이터의 무결성을 확인 합니다. 뷰 상태에 저장 된 원래 값이 포함 된 데이터 원본에서 현재 값을 비교 하 여 수행 합니다. 에 대 한 처리기를 만들어 추가적인 데이터 유효성 검사를 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  example:
  - "The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_255_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_255_1.cs)]"
  syntax:
    content: 'public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (object originalObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "에 지정 된 형식의 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>데이터 삭제를 포함 하는 속성.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&quot;> </xref> 지정 된 예외 클래스입니다."
  syntax:
    content: public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "삭제할 데이터 유효성을 검사할 때 발생 한 예외입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업 전에 데이터 유효성을 검사 하는 동안 throw 된 예외를 가져옵니다."
  remarks: "삭제 작업을 수행 하기 전에 유효성 검사 예외가 throw 되 면 예외 Exception 속성에 저장 됩니다. 에 대 한 이벤트 처리기에는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>이벤트, 예외 속성을 통해 예외를 검색할 수 있습니다.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "오류가 발생 하는 경우 해당 예외 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "예외가 처리 되었는지 여부와 그 해야 throw 되지 않도록 다시를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "에 대 한 이벤트 처리기를 만들 수는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>삭제 작업 전에 throw 된 유효성 검사 예외를 확인 하려면.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 예외를 처리 하 고 다시 throw 하 여 원하지 않는 경우 ExceptionHandled 속성을 설정 `true`합니다. ExceptionHandled 속성을 설정 하지 않는 경우 `true`, 예외 호출 스택에 있는 다음 이벤트 처리기에 전파 됩니다."
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외가 처리 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 삭제를 나타내는 개체를 가져옵니다."
  remarks: "삭제 하기 전에 데이터와 상호 작용 하는 OriginalObject 속성을 사용할 수 있습니다. 데이터의 유효성을 검사 하거나 설정 하 여 이벤트를 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 하나 이상의 OriginalObject 속성에 있는 개체의 값을 변경 하 여 어떤 레코드가 삭제 되 수정할 수 있습니다."
  example:
  - "The following example shows how to cancel the delete operation based on a property in the OriginalObject property and a value from the Web page. In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_196_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_196_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "에 지정 된 형식의 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>데이터 삭제를 포함 하는 속성.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(Object)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceDeleteEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceDeleteEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceDeleteEventArgs.OriginalObject
