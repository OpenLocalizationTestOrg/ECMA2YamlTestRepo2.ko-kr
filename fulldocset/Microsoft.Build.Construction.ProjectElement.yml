### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Construction.ProjectElement
  id: ProjectElement
  children:
  - Microsoft.Build.Construction.ProjectElement.AllParents
  - Microsoft.Build.Construction.ProjectElement.Condition
  - Microsoft.Build.Construction.ProjectElement.ConditionLocation
  - Microsoft.Build.Construction.ProjectElement.ContainingProject
  - Microsoft.Build.Construction.ProjectElement.Label
  - Microsoft.Build.Construction.ProjectElement.LabelLocation
  - Microsoft.Build.Construction.ProjectElement.Location
  - Microsoft.Build.Construction.ProjectElement.NextSibling
  - Microsoft.Build.Construction.ProjectElement.Parent
  - Microsoft.Build.Construction.ProjectElement.PreviousSibling
  langs:
  - csharp
  name: ProjectElement
  nameWithType: ProjectElement
  fullName: Microsoft.Build.Construction.ProjectElement
  type: Class
  summary: "MSBuild 생성 개체 모델 요소에 대 한 추상 기본 클래스입니다."
  syntax:
    content: public abstract class ProjectElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.AllParents
  id: AllParents
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: AllParents
  nameWithType: ProjectElement.AllParents
  fullName: Microsoft.Build.Construction.ProjectElement.AllParents
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "모든 부모는 ProjectRootElement 올라가는이 요소는 요소입니다.       이 경우 none는 ProjectRootElement입니다.       이 경우 none 연결 되지 않은 부모에 아직 합니다."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer> AllParents { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElementContainer}
      description: "모든 부모 요소에 대 한 열거자를 반환합니다. 부모 요소에 아직 연결 되지 않은이 없거나 프로젝트 요소는 ProjectRootElement 경우 부모 요소가 있습니다."
  overload: Microsoft.Build.Construction.ProjectElement.AllParents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.Condition
  id: Condition
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: Condition
  nameWithType: ProjectElement.Condition
  fullName: Microsoft.Build.Construction.ProjectElement.Condition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "조건 값을 가져오거나 설정 합니다.       Condition 특성 단수형 이면 빈 문자열은 사용할 수 있지만 존재 하지 않거나 값이 없는 반환 합니다.       Null 단수형 이면의 Condition 특성은 해당 요소에 사용할 수 없습니다.이 반환 됩니다.       설정할 값이 비어 있으면 특성을 제거 합니다.       throw 하는 파생된 클래스에 대 한 수는 <xref:System.InvalidOperationException>설정 조건을 적용할 수 없는 경우 해당 요소에 대 한.</xref:System.InvalidOperationException>"
  remarks: "Condition 특성을 설정 하려면 값을 null 또는 빈 문자열로 설정 되어 있으면 제거 합니다. 조건 특성이 없으면는 존재 하지 않는 암시적으로 &quot;ProjectExtensions&quot; 요소에 대 한 getter는 null을 반환 하 고 setter 모든 값에 대 한 예외를 throw 하기 때문에 예외를 throw 하는 대신 빈 문자열을 반환 합니다."
  syntax:
    content: public virtual string Condition { get; set; }
    return:
      type: System.String
      description: "조건 특성 값을 반환합니다. 특성이 없는 경우 빈 문자열을 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.Condition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation
  id: ConditionLocation
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: ConditionLocation
  nameWithType: ProjectElement.ConditionLocation
  fullName: Microsoft.Build.Construction.ProjectElement.ConditionLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "있는 경우이 요소에 &quot;조건&quot; 특성의 위치입니다.       이러한 특성이 없으면 null을 반환 합니다."
  syntax:
    content: public virtual Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returns <xref href=&quot;Microsoft.Build.Construction.ElementLocation&quot;></xref>."
  overload: Microsoft.Build.Construction.ProjectElement.ConditionLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject
  id: ContainingProject
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: ContainingProject
  nameWithType: ProjectElement.ContainingProject
  fullName: Microsoft.Build.Construction.ProjectElement.ContainingProject
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "ProjectRootElement (가져온 가능)이이 Xml이 들어 있는입니다.       Null 일 수 없습니다."
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement ContainingProject { get; }
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "이 프로젝트를 포함 하는 프로젝트 루트 컨테이너를 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.ContainingProject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.Label
  id: Label
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: Label
  nameWithType: ProjectElement.Label
  fullName: Microsoft.Build.Construction.ProjectElement.Label
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "레이블 값을 가져오거나 설정 합니다.       스위치가 없을 경우 빈 문자열을 반환 합니다.       설정할 값이 비어 있으면 특성을 제거 합니다."
  remarks: "설정할 값이 비어 있으면 특성을 제거 합니다."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "레이블을 반환 합니다. 레이블이 없는 경우 빈 문자열을 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.Label*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation
  id: LabelLocation
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: LabelLocation
  nameWithType: ProjectElement.LabelLocation
  fullName: Microsoft.Build.Construction.ProjectElement.LabelLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "있는 경우이 요소에 &quot;Label&quot; 특성의 위치입니다.       이러한 특성이 없으면; null 반환"
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation LabelLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returns <xref href=&quot;Microsoft.Build.Construction.ElementLocation&quot;></xref>."
  overload: Microsoft.Build.Construction.ProjectElement.LabelLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.Location
  id: Location
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: Location
  nameWithType: ProjectElement.Location
  fullName: Microsoft.Build.Construction.ProjectElement.Location
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "해당 Xml 요소의 위치입니다.       올바르지 않을 수 경우 마지막으로 저장 된 이후 편집 되었습니다. 파일 또는 파일이 저장 되지 않습니다.       저장 하지 않은 편집의 경우 위치는 요소에서 시작 된 파일의 경로를 포함 합니다."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation Location { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Returns <xref href=&quot;Microsoft.Build.Construction.ElementLocation&quot;></xref>."
  overload: Microsoft.Build.Construction.ProjectElement.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.NextSibling
  id: NextSibling
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: NextSibling
  nameWithType: ProjectElement.NextSibling
  fullName: Microsoft.Build.Construction.ProjectElement.NextSibling
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "다음 형제 요소입니다.       Null 일 수 있습니다."
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement NextSibling { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "이 프로젝트 요소의 다음 형제를 반환합니다. 다음 형제가 없으면 null을 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.Parent
  id: Parent
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: Parent
  nameWithType: ProjectElement.Parent
  fullName: Microsoft.Build.Construction.ProjectElement.Parent
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "이 한 ProjectRootElement 경우 null입니다.       경우에 null 부모에 아직 연결 되지 않은 경우"
  remarks: "부모는 ProjectElementContainer 여만 설정 해야 합니다."
  syntax:
    content: public Microsoft.Build.Construction.ProjectElementContainer Parent { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElementContainer
      description: "이 프로젝트를 포함 하는 프로젝트 요소 컨테이너를 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.Parent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling
  id: PreviousSibling
  parent: Microsoft.Build.Construction.ProjectElement
  langs:
  - csharp
  name: PreviousSibling
  nameWithType: ProjectElement.PreviousSibling
  fullName: Microsoft.Build.Construction.ProjectElement.PreviousSibling
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "이전의 형제 요소입니다.       Null 일 수 있습니다."
  syntax:
    content: public Microsoft.Build.Construction.ProjectElement PreviousSibling { get; }
    return:
      type: Microsoft.Build.Construction.ProjectElement
      description: "이 프로젝트 요소의 이전 형제를 반환합니다. 이전 형제가 없으면 null을 반환 합니다."
  overload: Microsoft.Build.Construction.ProjectElement.PreviousSibling*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Construction.ProjectElement.AllParents
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: AllParents
  nameWithType: ProjectElement.AllParents
  fullName: Microsoft.Build.Construction.ProjectElement.AllParents
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElementContainer}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectElementContainer>
  nameWithType: IEnumerable<ProjectElementContainer>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Construction.ProjectElementContainer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectElementContainer
    name: ProjectElementContainer
    nameWithType: ProjectElementContainer
    fullName: ProjectElementContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectElement.Condition
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Condition
  nameWithType: ProjectElement.Condition
  fullName: Microsoft.Build.Construction.ProjectElement.Condition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectElement.ConditionLocation
  fullName: Microsoft.Build.Construction.ProjectElement.ConditionLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: ContainingProject
  nameWithType: ProjectElement.ContainingProject
  fullName: Microsoft.Build.Construction.ProjectElement.ContainingProject
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Construction.ProjectElement.Label
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Label
  nameWithType: ProjectElement.Label
  fullName: Microsoft.Build.Construction.ProjectElement.Label
- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: LabelLocation
  nameWithType: ProjectElement.LabelLocation
  fullName: Microsoft.Build.Construction.ProjectElement.LabelLocation
- uid: Microsoft.Build.Construction.ProjectElement.Location
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Location
  nameWithType: ProjectElement.Location
  fullName: Microsoft.Build.Construction.ProjectElement.Location
- uid: Microsoft.Build.Construction.ProjectElement.NextSibling
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: NextSibling
  nameWithType: ProjectElement.NextSibling
  fullName: Microsoft.Build.Construction.ProjectElement.NextSibling
- uid: Microsoft.Build.Construction.ProjectElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectElement
  nameWithType: ProjectElement
  fullName: Microsoft.Build.Construction.ProjectElement
- uid: Microsoft.Build.Construction.ProjectElement.Parent
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Parent
  nameWithType: ProjectElement.Parent
  fullName: Microsoft.Build.Construction.ProjectElement.Parent
- uid: Microsoft.Build.Construction.ProjectElementContainer
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectElementContainer
  nameWithType: ProjectElementContainer
  fullName: Microsoft.Build.Construction.ProjectElementContainer
- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: PreviousSibling
  nameWithType: ProjectElement.PreviousSibling
  fullName: Microsoft.Build.Construction.ProjectElement.PreviousSibling
- uid: Microsoft.Build.Construction.ProjectElement.AllParents*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: AllParents
  nameWithType: ProjectElement.AllParents
- uid: Microsoft.Build.Construction.ProjectElement.Condition*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Condition
  nameWithType: ProjectElement.Condition
- uid: Microsoft.Build.Construction.ProjectElement.ConditionLocation*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: ConditionLocation
  nameWithType: ProjectElement.ConditionLocation
- uid: Microsoft.Build.Construction.ProjectElement.ContainingProject*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: ContainingProject
  nameWithType: ProjectElement.ContainingProject
- uid: Microsoft.Build.Construction.ProjectElement.Label*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Label
  nameWithType: ProjectElement.Label
- uid: Microsoft.Build.Construction.ProjectElement.LabelLocation*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: LabelLocation
  nameWithType: ProjectElement.LabelLocation
- uid: Microsoft.Build.Construction.ProjectElement.Location*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Location
  nameWithType: ProjectElement.Location
- uid: Microsoft.Build.Construction.ProjectElement.NextSibling*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: NextSibling
  nameWithType: ProjectElement.NextSibling
- uid: Microsoft.Build.Construction.ProjectElement.Parent*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: Parent
  nameWithType: ProjectElement.Parent
- uid: Microsoft.Build.Construction.ProjectElement.PreviousSibling*
  parent: Microsoft.Build.Construction.ProjectElement
  isExternal: false
  name: PreviousSibling
  nameWithType: ProjectElement.PreviousSibling
