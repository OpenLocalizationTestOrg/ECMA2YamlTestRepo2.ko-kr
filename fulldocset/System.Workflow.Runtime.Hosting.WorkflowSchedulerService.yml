### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  id: WorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  langs:
  - csharp
  name: WorkflowSchedulerService
  nameWithType: WorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  type: Class
  summary: "워크플로 실행 하 고 메모리 내 타이머 등록과 이벤트 관리를 위해 고유한 스레드 풀을 구현 하는 메커니즘을 제공 합니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowSchedulerService는 워크플로 런타임 엔진 호스트에서 워크플로 인스턴스를 실행 하는 스레드를 만드는 모든 클래스에 대 한 기본 클래스입니다. 여기에 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>및 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> 포함"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  langs:
  - csharp
  name: WorkflowSchedulerService()
  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.WorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 구현 된 경우의 새 인스턴스를 초기화 합니다.는 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowSchedulerService&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example demonstrates creating an instance of a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> object (that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) and adding it to the runtime. This example is from the Nested Exception Handlers SDK sample, from the Program.cs file. For more information, see [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \n  \n [!code-cs[WF_Samples#161](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#161)]\n [!code-vb[WF_Samples#161](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#161)]"
  syntax:
    content: protected WorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: WorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 하는 경우와 예약 된 작업 항목을 취소는 주어진 <code> timerId </code>합니다."
  remarks: "취소는 워크플로 인스턴스를 예약 하는 이전 요청을 보류 중인 작업 항목 큐에서 제거 합니다."
  syntax:
    content: protected abstract void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "<xref:System.Guid>취소할 기존의 예약 된 스레드와 연관.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면이 메서드는 특정 인스턴스 ID에 대해 작업 항목 (콜백)을 예약 하기 위해 런타임에서"
  remarks: "사용 하 여 <xref:System.Threading.WaitCallback>새 스레드에서 실행 될 대리자 메서드를 만드는 데 생성자.</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>워크플로 인스턴스를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면이 메서드는 지정된 된 시간에 수행 되도록 특정 워크플로 인스턴스에 대 한 작업 항목 (콜백)을 예약 하기 위해 런타임에서 (<xref:System.DateTime>).</xref:System.DateTime>"
  syntax:
    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "<xref:System.Guid>추가할 워크플로 인스턴스를 표시 하</xref:System.Guid> 는"
    - id: whenUtc
      type: System.DateTime
      description: "<xref:System.DateTime>워크플로 항목 실행을 시작 하려면.</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "A <xref:System.Guid>예약 된 타이머를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: WorkflowSchedulerService()
  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.WorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: WorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: WorkflowSchedulerService
  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: WorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: WorkflowSchedulerService.Schedule
