### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportManyAttribute
  id: ImportManyAttribute
  children:
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportManyAttribute.ContractName
  - System.ComponentModel.Composition.ImportManyAttribute.ContractType
  - System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportManyAttribute.Source
  langs:
  - csharp
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute
  fullName: System.ComponentModel.Composition.ImportManyAttribute
  type: Class
  summary: "속성, 필드 또는 매개 변수에서 일치 하는 모든 내보내기로 채워지도록 지정는 <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> 개체입니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportManyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> 집합 기본 계약 이름 사용 하 여 내보내기를 가져와 클래스입니다."
  remarks: "기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>속성, 필드 또는이 특성으로 표시 된 매개 변수 형식에 메서드.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A>대/소문자 구분, 비 언어적 비교를 수행 하는 속성.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> 클래스를 지정된 된 계약 이름 사용 하 여 내보내기 집합 가져오기."
  remarks: "기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식의 메서드로.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A>대/소문자 구분, 비 언어적 비교를 수행 하는 속성.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "가져올, 내보내기의 계약 이름 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;) 기본 계약 이름을 사용 하도록 합니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> 지정된 된 형식에서 파생 된 클래스, 가져오기의 계약 이름 사용 하 여 내보내기의 집합입니다."
  remarks: "계약 이름이 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>메서드를 `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       기본 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>이 특성으로 표시 된 속성, 필드 또는 매개 변수 형식의 메서드로.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       계약 이름을 사용 하 여 비교 되는 <xref:System.StringComparer.Ordinal%2A>대/소문자 구분, 비 언어적 비교를 수행 하는 속성.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "가져올, 내보내기의 계약 이름을 파생 되는 형식 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 기본 계약 이름을 사용 하도록 합니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> 클래스를 지정 된 계약 이름과 계약 형식을 형식의 내보내기 집합 가져오기."
  syntax:
    content: public ImportManyAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "가져올, 내보내기의 계약 이름 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;) 기본 계약 이름을 사용 하도록 합니다."
    - id: contractType
      type: System.Type
      description: "가져올 내보내기의 형식입니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "여부 데코레이팅된 속성이 나 필드는 다시 구성할 일치 하는 제공 하는 내보내기가 계약 변경 하는 경우를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>내보내기를 제공 하는 동일한 때 속성 또는 필드 재 컴퍼지션에 대 한 허용 하는 경우 <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>추가 되거나 제거 되 고 <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>       기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "가져올 내보내기의 계약 이름을 가져옵니다."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "가져올 내보내기의 계약 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "가져올 내보내기의 계약 형식을 가져옵니다."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "이 가져오기에서 예상 하는 내보내기의 형식입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 즉이이 가져오기에 연결 된 멤버에서 형식을 찾아 유형을 가져옵니다. 형식이 <xref:System.Object>, 가져오기에는 내보낸된 모든 형식과 일치 합니다.</xref:System.Object>"
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "특정 필요 함을 나타내는 값을 가져오거나 설정 합니다. <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> 이 import를 충족 하는 데 사용 하는 내보내기에 대 한 합니다."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "다음 값 중 하나: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>가져오기 도구는 특정 필요 하지 않은 경우, <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>합니다. 이것이 기본값입니다.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>컨테이너의 모든 파트에서 사용 되는 모든 내보내기를 공유 해야 합니다.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>사용 되는 모든 내보내기는 컨테이너에서 공유 되도록 할 합니다. 이 경우 각 부분에는 자체 인스턴스를 받습니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "이 가져오기 충족 하는 데 사용 될 수 있는 범위를 지정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "이 가져오기 충족 하는 데 사용 될 수 있는 범위를 지정 하는 값입니다."
  overload: System.ComponentModel.Composition.ImportManyAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute.ImportManyAttribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
