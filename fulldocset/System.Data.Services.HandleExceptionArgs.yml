### YamlMime:ManagedReference
items:
- uid: System.Data.Services.HandleExceptionArgs
  id: HandleExceptionArgs
  children:
  - System.Data.Services.HandleExceptionArgs.Exception
  - System.Data.Services.HandleExceptionArgs.ResponseContentType
  - System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  - System.Data.Services.HandleExceptionArgs.ResponseWritten
  - System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  langs:
  - csharp
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: System.Data.Services.HandleExceptionArgs
  type: Class
  summary: "발생 한 예외의 세부 정보 및 연결된 된 HTTP 응답의 세부 정보를 지정 합니다."
  syntax:
    content: public class HandleExceptionArgs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.Exception
  id: Exception
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "처리 되 고 응답에서 반환 될 예외를 가져오거나 설정 합니다."
  remarks: "예외가 <xref:System.Data.Services.DataServiceException>, 예외 메시지가 항상 반환 됩니다 클라이언트에 관계 없이 <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>값.</xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A> </xref:System.Data.Services.DataServiceException> 경우 <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>이 true 인 경우 내부 예외도 클라이언트에 반환; 그렇지 않으면 됩니다는 <xref:System.Data.Services.DataServiceException>메시지가 반환 됩니다.</xref:System.Data.Services.DataServiceException> </xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "처리 되 고 응답에서 반환 되는 예외입니다."
  overload: System.Data.Services.HandleExceptionArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  id: ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "응답 콘텐츠 형식을 가져옵니다."
  remarks: "오류 페이로드는 서비스에서 다시 전송 오류가 발생 합니다. 이 속성은 서비스 작성자를 다시 전송 될 오류의 형식 알립니다. 이 속성의 값에는 항상 유효한 할당 번호 IANA (Internet Authority) mime 형식이 됩니다."
  syntax:
    content: public string ResponseContentType { get; }
    return:
      type: System.String
      description: "응답의 형식을 나타내는 문자열 값입니다."
  overload: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  id: ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "데이터 서비스에서 오류가 발생할 때 응답의 HTTP 헤더 섹션에 다시 전송 될 상태 코드를 가져옵니다."
  syntax:
    content: public int ResponseStatusCode { get; }
    return:
      type: System.Int32
      description: "HTTP 응답 상태 코드의 정수 값입니다."
  overload: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  id: ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "응답이 기록 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "값이 true 이면는 HTTP 응답 헤더 및 응답 본문의 일부 이미 클라이언트에 전송 하 고 변경할 수 없습니다."
  syntax:
    content: public bool ResponseWritten { get; }
    return:
      type: System.Boolean
      description: "응답이 기록 되었는지 여부를 나타내는 부울 값입니다."
  overload: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  id: UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "자세한 오류가 반환될지 여부를 나타내는 부울 값을 가져오거나 설정 합니다."
  remarks: 'UseVerboseErrors 세부 정보는 응답에 반환할 모든 예외를 true로 설정 된 경우 보안 정보:이 값을 true로 설정 서비스에 전용 되어야 하는 정보를 공개할 수 있습니다.'
  syntax:
    content: public bool UseVerboseErrors { get; set; }
    return:
      type: System.Boolean
      description: "자세한 오류가 반환될지 여부를 나타내는 부울 값입니다."
  overload: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.HandleExceptionArgs.Exception
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
- uid: System.Data.Services.HandleExceptionArgs.Exception*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
