### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaElement
  id: XmlSchemaElement
  children:
  - System.Xml.Schema.XmlSchemaElement.#ctor
  - System.Xml.Schema.XmlSchemaElement.Block
  - System.Xml.Schema.XmlSchemaElement.BlockResolved
  - System.Xml.Schema.XmlSchemaElement.Constraints
  - System.Xml.Schema.XmlSchemaElement.DefaultValue
  - System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  - System.Xml.Schema.XmlSchemaElement.ElementType
  - System.Xml.Schema.XmlSchemaElement.Final
  - System.Xml.Schema.XmlSchemaElement.FinalResolved
  - System.Xml.Schema.XmlSchemaElement.FixedValue
  - System.Xml.Schema.XmlSchemaElement.Form
  - System.Xml.Schema.XmlSchemaElement.IsAbstract
  - System.Xml.Schema.XmlSchemaElement.IsNillable
  - System.Xml.Schema.XmlSchemaElement.Name
  - System.Xml.Schema.XmlSchemaElement.QualifiedName
  - System.Xml.Schema.XmlSchemaElement.RefName
  - System.Xml.Schema.XmlSchemaElement.SchemaType
  - System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  - System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  langs:
  - csharp
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
  type: Class
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_element&quot; name=&quot;element&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C)에 지정 된 대로 XML 스키마에서 요소입니다. 이 클래스는 모든 파티클 형식의 기본 클래스 및 XML 문서에서 요소를 설명 하는 데 사용 됩니다."
  remarks: "> [!IMPORTANT]>-위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오. 이렇게 하면 코드의 보안을 손상 됩니다.   >-(인라인 스키마 포함)는 XML 스키마는 기본적으로 서비스 거부 공격;에 취약 신뢰할 수 없는 경우에는 사용 하지 않습니다.   >-스키마 유효성 검사 오류 메시지와 예외에는 정적 콘텐츠 모델이 나 스키마 파일에 대 한 URI 경로 대 한 중요 한 정보가 노출 될 수 있습니다. 신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 하십시오."
  example:
  - "The following example creates the `element` element.  \n  \n [!code-cs[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_2_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaElement Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_2_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaElement : System.Xml.Schema.XmlSchemaParticle'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaParticle
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaParticle.MaxOccurs
  - System.Xml.Schema.XmlSchemaParticle.MaxOccursString
  - System.Xml.Schema.XmlSchemaParticle.MinOccurs
  - System.Xml.Schema.XmlSchemaParticle.MinOccursString
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlSchemaElement ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져오거나는 <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> 파생 합니다."
  remarks: "이 특성에는 다음 값이 포함 될 수 있습니다. | Enum | 설명 |   |----------|-----------------|   | `None`| 에 정의 된 파생 제한을 사용는 `BlockDefault` 있는 경우 스키마의 속성입니다. |   | `Empty`| 이 요소의 대체 값에 대 한 제한은 없습니다. |   | `Substitution`| 이 요소는 대체에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Extension`| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `All`|`#all`. 이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |       이 속성 파생을 금지 하지 않는 하지만 인스턴스 형식이 파생을 방지 합니다. 목록 및 공용 구조체 값에 대 한 지원 되지 않습니다는 `block` 속성입니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "형식 파생을 차단 하는 데 사용 되는 특성입니다. 기본값은 <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "컴파일 이후 값을 가져옵니다는 <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> 속성입니다."
  remarks: "이 값 형식이 적용 되는 방식을 나타냅니다 때 `xsi:type` 인스턴스 문서에서 사용 됩니다. 예를 들어 값이 제한 된 경우 특정 정의 된 형식에만 사용할 수, 정의 된 특정 형식 제한에 의해 파생 된 형식이 아니라 합니다.       이 속성은 다음 표에 표시 된 값을 포함할 수 있습니다. 기본값은 `None`합니다. 목록 및 공용 구조체 파생 메서드는이 속성에 사용할 수 없습니다.      | Enum | 설명 |   |----------|-----------------|   | `Empty`| 이 요소의 대체 값에 대 한 제한은 없습니다. |   | `Substitution`| 이 요소는 대체에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Extension`| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `All`|`#all`. 이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "컴파일 이후 값은 <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> 속성입니다. 기본값은는 <xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;> </xref> 값에 <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  id: Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소에는 제약 조건의 컬렉션을 가져옵니다."
  remarks: "요소에는 제약 조건의 컬렉션을 반환합니다. Can be any of `XmlSchemaKey`, `XmlSchemaKeyref`, or `XmlSchemaUnique`."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Constraints { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "제약 조건 컬렉션입니다."
  overload: System.Xml.Schema.XmlSchemaElement.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  id: DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "해당 콘텐츠는 단순 유형 또는 콘텐츠 요소는 경우 요소의 기본 값을 가져오거나 <xref uid=&quot;langword_csharp_textOnly&quot; name=&quot;textOnly&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`fixed` 및 `default` 특성은 함께 사용할 수 없습니다. 요소에 단순 형식이 있으면이 값에는 해당 형식의 올바른 값 이어야 합니다."
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "요소에 대 한 기본 값입니다. 기본값은 null 참조입니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  id: ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> 요소의 형식을 나타내는 개체를 기반으로 <> </> *> 또는 <> </> *> 요소의 값입니다."
  remarks: "이 속성은 스키마 유효성 검사 이후 정보 집합 속성입니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType ElementSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> 개체입니다."
  overload: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  id: ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "에 따라 공용 언어 런타임 (CLR) 개체를 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> 또는 <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> 의 컴파일 이후 값을 포함 하는 요소는 <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;> </xref> 속성입니다."
  remarks: "개체는 <xref:System.Xml.Schema.XmlSchemaDatatype>요소에는 기본 제공 XML 스키마 형식 또는 <xref:System.Xml.Schema.XmlSchemaSimpleType>요소에는 사용자 정의 형식을.</xref:System.Xml.Schema.XmlSchemaSimpleType> </xref:System.Xml.Schema.XmlSchemaDatatype>       이 속성은 스키마 유효성 검사 이후 정보 집합 속성입니다.      > [!IMPORTANT] > The ElementType 속성의.NET Framework 2.0 버전에서 사용 되지 않으며로 대체 되었습니다는 <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>속성.</xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>"
  syntax:
    content: public object ElementType { get; }
    return:
      type: System.Object
      description: "공용 언어 런타임 개체입니다. 컴파일 이후 값은 <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;> </xref> 속성입니다."
  overload: System.Xml.Schema.XmlSchemaElement.ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Final
  id: Final
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져오거나는 <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> 없는 추가 파생 수를 나타내는 속성입니다."
  remarks: "이 특성은 다음 표에 표시 된 값을 포함할 수 있습니다.      | Enum | 설명 |   |----------|-----------------|   | `None`| 에 정의 된 파생 제한을 사용는 `FinalDefault` 있는 경우 스키마의 속성입니다. |   | `Empty`| 이 요소의 파생에 대 한 제한은 없습니다. |   | `Extension`| 이 요소는 확장에 의해 파생 될 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 될 수 없습니다. |   | `All`|`#all`. 이 요소는 어떤 파생 방법으로 파생 될 수 없습니다. |       참고 항목 <xref:System.Xml.Schema.XmlSchemaElement>.</xref:System.Xml.Schema.XmlSchemaElement> `Substitution``List`, 및 `Union` 파생 메서드는이 속성에 허용 되지 않습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> 속성입니다. 기본값은 <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.Final*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  id: FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "컴파일 이후 값을 가져옵니다는 <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> 속성입니다."
  remarks: "이 값 방식을 형식이 제한 된 형식의 제한을 통해 확장 될 때를 나타냅니다. 이 속성은 다음 값을 포함할 수 있습니다.      | Enum | 설명 |   |----------|-----------------|   | `Empty`| 이 요소의 파생에 대 한 제한은 없습니다. |   | `Extension`| 이 요소는 확장에 의해 파생 될 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 될 수 없습니다. |   | `All`|`#all`. 이 요소는 어떤 파생 방법으로 파생 될 수 없습니다. |       대체, 목록 및 공용 구조체 파생이이 속성에 대 한 메서드가 허용 되지 않습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "컴파일 이후 값은 <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> 속성입니다. 기본값은는 <xref uid=&quot;langword_csharp_FinalDefault&quot; name=&quot;FinalDefault&quot; href=&quot;&quot;> </xref> 값에 <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  id: FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "고정된 값을 가져오거나 설정 합니다."
  remarks: "내용은 단순 유형 이어야 합니다 또는 `textOnly`합니다. `fixed` 및 `default` 특성은 함께 사용할 수 없습니다."
  syntax:
    content: public string FixedValue { get; set; }
    return:
      type: System.String
      description: "미리 결정 되어 변경할 수 없는 고정된 값입니다. 기본값은 null 참조입니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.FixedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Form
  id: Form
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소에 대 한 폼을 가져오거나 설정 합니다."
  remarks: "기본값은 값은 `elementFormDefault` 특성에 `schema` 요소를 포함 하는 요소입니다. 기본값은 `Unqualified`합니다.      | Enum | 설명 |   |----------|-----------------|   | `Qualified`| 요소 네임 스페이스 접두사로 한 정해야 합니다. |   | `Unqualified`| 요소 네임 스페이스 접두사로 한 정해야 필요가 없습니다. |       포함 하는 요소는 경우 값을 설정할 수 없습니다는 `schema` 요소입니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "요소의 형식입니다. 기본값은는 &lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName&gt; 값입니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "인스턴스 문서에서 요소를 사용 될 경우를 나타내는 정보를 가져오거나 설정 합니다."
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 인스턴스 문서에서 요소를 사용할 수 없습니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  id: IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "나타내는 정보를 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_xsi:nil&quot; name=&quot;xsi:nil&quot; href=&quot;&quot;> </xref> 인스턴스 데이터에서 발생할 수 있습니다. 경우 명시적 nil 값에 지정할 수 있는 요소를 나타냅니다."
  remarks: "이 요소의 특성이 아닌 요소 내용에 적용 됩니다."
  syntax:
    content: public bool IsNillable { get; set; }
    return:
      type: System.Boolean
      description: "Nillable 이면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>,이 통해 요소가을 가지려면의 인스턴스는 <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;> </xref> 특성이로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;> </xref> 특성에 대 한 XML 스키마 네임 스페이스의 일부분으로 정의 됩니다 인스턴스. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.IsNillable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소의 이름을 가져오거나 설정 합니다."
  remarks: "이름은은 World Wide Web Consortium (W3C) XML 네임 스페이스 사양에 정의 된 대로 NCName (콜론 없는 이름) 이어야 합니다. `Name`및 `RefName` 특성은 함께 사용할 수 없습니다."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "요소 이름입니다. 기본값은 <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "지정된 된 요소에 대 한 실제 정규화 된 이름을 가져옵니다."
  remarks: "QualifiedName 이름인 하는 `ref` 특성으로 참조 합니다. 정규화 된 이름 요소 NCName 이루어져 있습니다. 예를 들어, 요소 이름 = &quot;NCName&quot;와 접두사를 설명 하는 데는 `targetNamespace` 스키마의 합니다. 이 속성의 컴파일 이후 값을 보유는 `QualifiedName` 속성입니다."
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "요소의 정규화 된 이름입니다. 컴파일 이후 값은 <xref uid=&quot;langword_csharp_QualifiedName&quot; name=&quot;QualifiedName&quot; href=&quot;&quot;> </xref> 속성입니다."
  overload: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  id: RefName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "이 스키마에 선언 된 요소 (또는 지정된 된 네임 스페이스에 나타난 다른 스키마)의 참조 이름을 가져오거나 설정 합니다."
  remarks: "`RefName` QName 이어야 합니다. `RefName` 네임 스페이스 접두사를 포함할 수 있습니다. If `RefName` attribute is present, all `complexType`, `simpleType`, `key`, `keyref`, `unique`, `nillable`, `default`, `fixed`, `form`, `block`, and `type` must be absent. 경우 `RefName` 가 있으면 `minOccurs`, `maxOccurs`, 및 `id` 허용 됩니다. 기존 요소 정의 사용 하 여 선언 하려면는 `RefName` 특성 기존 요소 정의를 지정 합니다.       포함 하는 요소는 경우 값을 설정할 수 없습니다는 `schema` 요소입니다."
  syntax:
    content: public System.Xml.XmlQualifiedName RefName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "요소의 참조 이름입니다."
  overload: System.Xml.Schema.XmlSchemaElement.RefName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  id: SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "요소의 형식을 가져오거나 설정 합니다. 이 형식은 복합 형식 이거나 단순 유형 하거나 수 있습니다."
  remarks: "기존를 사용 하 여 선언 하려면 `simpleType` 또는 `complexType` 정의 사용 하 여는 `SchemaType` 속성을 기존 형식을 지정 합니다. 경우 `RefName` 특성이 있으면 `complexType`, `simpleType`, `key`, `keyref`, 및 `unique` 요소 및 `nillable`, `default`, `fixed`, `form`, `block`, 및 `SchemaType` 특성을 사용할 수 없습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType SchemaType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "요소의 형식입니다."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  id: SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "이 스키마 또는 지정된 된 네임 스페이스에 나타난 다른 스키마에 정의 된 기본 제공 데이터 형식의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "기본 제공 데이터 형식의 이름입니다."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  id: SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "이 요소로 대체할 요소의 이름을 가져오거나 설정 합니다."
  remarks: "이 요소는 동일한 유형 또는 지정 된 요소의 형식에서 파생 된 형식이 있어야 합니다. 이 값은 QName 이어야 합니다.       포함 하는 요소는 경우 값을 설정할 수 없습니다는 `schema` 요소입니다."
  syntax:
    content: public System.Xml.XmlQualifiedName SubstitutionGroup { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "이 요소로 대체할 요소의 정규화 된 이름입니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaParticle
  isExternal: false
  name: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
- uid: System.Xml.Schema.XmlSchemaElement.Block
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaElement.Final
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
- uid: System.Xml.Schema.XmlSchemaElement.#ctor*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement.XmlSchemaElement
- uid: System.Xml.Schema.XmlSchemaElement.Block*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
- uid: System.Xml.Schema.XmlSchemaElement.Final*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
