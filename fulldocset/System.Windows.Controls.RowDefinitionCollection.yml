### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.RowDefinitionCollection
  id: RowDefinitionCollection
  children:
  - System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.Clear
  - System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.Count
  - System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  - System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  - System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.SyncRoot
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: RowDefinitionCollection
  nameWithType: RowDefinitionCollection
  fullName: System.Windows.Controls.RowDefinitionCollection
  type: Class
  summary: "정렬 되 고 강력한 형식의 컬렉션에 대 한 액세스를 제공 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 개체입니다."
  syntax:
    content: 'public sealed class RowDefinitionCollection : System.Collections.Generic.ICollection<System.Windows.Controls.RowDefinition>, System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>, System.Collections.Generic.IList<System.Windows.Controls.RowDefinition>, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Windows.Controls.RowDefinition>
  - System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>
  - System.Collections.Generic.IList<System.Windows.Controls.RowDefinition>
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  id: Add(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Add(RowDefinition)
  nameWithType: RowDefinitionCollection.Add(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Add(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Adds a <xref href=&quot;System.Windows.Controls.RowDefinition&quot;></xref> element to a <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;></xref>."
  remarks: ''
  example:
  - "The following example demonstrates how to use the Add method to add a <xref:System.Windows.Controls.RowDefinition> to a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#3](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#3)]\n [!code-cs[columndefinitionsgrid#3](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#3)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Add (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: "식별는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 컬렉션에 추가 합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Clear
  id: Clear
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: RowDefinitionCollection.Clear()
  fullName: System.Windows.Controls.RowDefinitionCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "내용을 지웁니다는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to use the Clear method to clear the content of a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#4](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#4)]\n [!code-cs[columndefinitionsgrid#4](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#4)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Controls.RowDefinitionCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  id: Contains(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Contains(RowDefinition)
  nameWithType: RowDefinitionCollection.Contains(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Contains(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "결정 여부는 주어진 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 내에 있는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to use the Contains method to determine whether a <xref:System.Windows.Controls.RowDefinition> exists in a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#8](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#8)]\n [!code-cs[columndefinitionsgrid#8](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#8)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Contains (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: "식별 된 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 테스트 되 고 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 컬렉션 내에 존재 하지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  id: CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: CopyTo(RowDefinition[],Int32)
  nameWithType: RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "배열을 복사 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 개체 내에서 지정 된 인덱스 위치를 한 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: public void CopyTo (System.Windows.Controls.RowDefinition[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Controls.RowDefinition[]
      description: "배열을 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 개체입니다."
    - id: index
      type: System.Int32
      description: "내에서 인덱스 위치를 식별 `array` 입니다는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 개체가 복사 됩니다."
  overload: System.Windows.Controls.RowDefinitionCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-소스에 있는 요소의 수 <xref:System.Collections.ICollection> 대상 배열의 끝 인덱스에서 사용 가능한 공간 보다 큽니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Count
  id: Count
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Count
  nameWithType: RowDefinitionCollection.Count
  fullName: System.Windows.Controls.RowDefinitionCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "이 인스턴스 내에서 항목의 총 수를 가져옵니다 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  example:
  - "The following example demonstrates how to use the Count property.  \n  \n [!code-vb[columndefinitionsgrid#7](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#7)]\n [!code-cs[columndefinitionsgrid#7](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#7)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 항목의 총 수입니다. 이 속성에 기본값이 없습니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  id: IndexOf(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IndexOf(RowDefinition)
  nameWithType: RowDefinitionCollection.IndexOf(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.IndexOf(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "인덱스 위치를 반환 하는 지정 된 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 내에서 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index position of a <xref:System.Windows.Controls.RowDefinition> within a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#9](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#9)]\n [!code-cs[columndefinitionsgrid#9](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#9)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int IndexOf (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: "<xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 인덱스 위치가 필요 합니다."
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 컬렉션에 고, 그렇지 않으면-1입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  id: Insert(System.Int32,System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Insert(Int32,RowDefinition)
  nameWithType: RowDefinitionCollection.Insert(Int32,RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Insert(Int32,RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "삽입 된 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 내의 지정한 인덱스 위치에는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  example:
  - "The following example demonstrates how to use the Insert method to insert a <xref:System.Windows.Controls.RowDefinition> to a specific `index` position within a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#9](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#9)]\n [!code-cs[columndefinitionsgrid#9](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#9)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Insert (int index, System.Windows.Controls.RowDefinition value);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 항목이 삽입 되는 위치입니다."
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: "<xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 를 삽입 합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>유효한 인덱스가 아닌는 <xref:System.Collections.IList>합니다."
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: RowDefinitionCollection.IsReadOnly
  fullName: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref> 읽기 전용입니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the value of the IsReadOnly property.  \n  \n [!code-vb[columndefinitionsgrid#10](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#10)]\n [!code-cs[columndefinitionsgrid#10](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#10)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 읽기 전용인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 이 속성에 기본값이 없습니다."
  overload: System.Windows.Controls.RowDefinitionCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: RowDefinitionCollection.IsSynchronized
  fullName: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "표시 하는 값을 가져옵니다.이에 액세스할 수 있는지 여부 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 또는 다른 스레드에서 변경 된 내용에서 발생 한 예외를 catch 합니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 컬렉션에 대 한 액세스가 동기화 되어 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: RowDefinitionCollection.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "내에서 현재 항목을 나타내는 값을 가져옵니다는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: public System.Windows.Controls.RowDefinition this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 현재 항목입니다."
    return:
      type: System.Windows.Controls.RowDefinition
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션의 유효한 인덱스 위치가 아닌 경우"
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  id: Remove(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Remove(RowDefinition)
  nameWithType: RowDefinitionCollection.Remove(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Remove(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Removes a <xref href=&quot;System.Windows.Controls.RowDefinition&quot;></xref> from a <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;></xref>."
  syntax:
    content: public bool Remove (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: "<xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 는 컬렉션에서 제거할 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 컬렉션에 고, 그러지 않으면 제거 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: RowDefinitionCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "제거는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 에서 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref> 지정한 인덱스 위치입니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to remove a <xref:System.Windows.Controls.RowDefinition> to a <xref:System.Windows.Controls.RowDefinitionCollection> at a specific `index` position.  \n  \n [!code-vb[columndefinitionsgrid#5](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#5)]\n [!code-cs[columndefinitionsgrid#5](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#5)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션 내에서 위치는 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 제거 됩니다."
  overload: System.Windows.Controls.RowDefinitionCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: RowDefinitionCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "범위를 제거 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 에서 개체는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Controls.RowDefinitionCollection>0부터 시작 하는 인덱싱 시스템을 사용합니다.</xref:System.Windows.Controls.RowDefinitionCollection>"
  example:
  - "The following example demonstrates how to use the RemoveRange method to remove a range of <xref:System.Windows.Controls.RowDefinition> elements from a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#6](~/add/codesnippet/visualbasic/ColumnDefinitionsGrid/Window1.xaml.vb#6)]\n [!code-cs[columndefinitionsgrid#6](~/add/codesnippet/csharp/columndefinitions_grid/Window1.xaml.cs#6)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션 내에서 첫 번째 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 제거 됩니다."
    - id: count
      type: System.Int32
      description: "총 <xref href=&quot;System.Windows.Controls.RowDefinition&quot;> </xref> 컬렉션에서 제거할 개체입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.RemoveRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: RowDefinitionCollection.SyncRoot
  fullName: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  remarks: "컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 또는 다른 스레드에서 변경 된 내용에서 발생 한 예외를 catch 합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.Controls.RowDefinition> IEnumerable<RowDefinition>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.Controls.RowDefinition}
      description: "추가할 수 있습니다."
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable<System#Windows#Controls#RowDefinition>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션의 요소를 복사는 <xref:System.Array>특정에서 시작 하는 <xref:System.Array>인덱스.</xref:System.Array> </xref:System.Array>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 <xref:System.Array>에서 복사한 항목을 수신 하는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 <xref:System.Array>복사한 내용을 받도록.</xref:System.Array>"
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복 하는 데 사용할 수 있습니다.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션에 항목을 추가 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>에 추가 하는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션에 특정 값이 포함 되어 있는지 여부를 결정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>에서 찾으려고는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Object>에서 발견 되는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션에서 특정 항목의 인덱스를 결정합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>에서 찾으려고는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 목록에 고, 그렇지 않으면-1입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 인덱스에 컬렉션에 항목을 삽입 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스를 <xref:System.Object>.</xref:System.Object> 삽입할&0;부터 시작"
    - id: value
      type: System.Object
      description: "<xref:System.Object>에 삽입 하는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: RowDefinitionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션의 크기가 고정 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref> 고정 되어 고, 그렇지 않으면 크기가 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 인덱스에 요소를 가져오거나 설정 합니다."
  remarks: "이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: `myCollection[index]`합니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져오거나 설정할 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>목록에서 올바른 인덱스 위치가 않습니다."
  platform:
  - net462
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "컬렉션에서 맨 처음 발견 되는 특정 개체를 제거합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Controls.RowDefinitionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Controls.RowDefinitionCollection>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>에서 제거 하 고 <xref href=&quot;System.Windows.Controls.RowDefinitionCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Add(RowDefinition)
  nameWithType: RowDefinitionCollection.Add(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Add(RowDefinition)
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.Clear
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Clear()
  nameWithType: RowDefinitionCollection.Clear()
  fullName: System.Windows.Controls.RowDefinitionCollection.Clear()
- uid: System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Contains(RowDefinition)
  nameWithType: RowDefinitionCollection.Contains(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Contains(RowDefinition)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: CopyTo(RowDefinition[],Int32)
  nameWithType: RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
- uid: System.Windows.Controls.RowDefinition[]
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition[]
  spec.csharp:
  - uid: System.Windows.Controls.RowDefinition
    name: RowDefinition
    nameWithType: RowDefinition
    fullName: RowDefinition[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.Count
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Count
  nameWithType: RowDefinitionCollection.Count
  fullName: System.Windows.Controls.RowDefinitionCollection.Count
- uid: System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IndexOf(RowDefinition)
  nameWithType: RowDefinitionCollection.IndexOf(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.IndexOf(RowDefinition)
- uid: System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Insert(Int32,RowDefinition)
  nameWithType: RowDefinitionCollection.Insert(Int32,RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Insert(Int32,RowDefinition)
- uid: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: RowDefinitionCollection.IsReadOnly
  fullName: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
- uid: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: RowDefinitionCollection.IsSynchronized
  fullName: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
- uid: System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: RowDefinitionCollection.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.Item(Int32)
- uid: System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Remove(RowDefinition)
  nameWithType: RowDefinitionCollection.Remove(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Remove(RowDefinition)
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: RowDefinitionCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveAt(Int32)
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: RowDefinitionCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: RowDefinitionCollection.SyncRoot
  fullName: System.Windows.Controls.RowDefinitionCollection.SyncRoot
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Windows.Controls.RowDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<RowDefinition>
  nameWithType: IEnumerator<RowDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.Controls.RowDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Windows.Controls.RowDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.RowDefinition
    name: RowDefinition
    nameWithType: RowDefinition
    fullName: RowDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: RowDefinitionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Controls.RowDefinitionCollection.Add*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Add
  nameWithType: RowDefinitionCollection.Add
- uid: System.Windows.Controls.RowDefinitionCollection.Clear*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Clear
  nameWithType: RowDefinitionCollection.Clear
- uid: System.Windows.Controls.RowDefinitionCollection.Contains*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Contains
  nameWithType: RowDefinitionCollection.Contains
- uid: System.Windows.Controls.RowDefinitionCollection.CopyTo*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: CopyTo
  nameWithType: RowDefinitionCollection.CopyTo
- uid: System.Windows.Controls.RowDefinitionCollection.Count*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Count
  nameWithType: RowDefinitionCollection.Count
- uid: System.Windows.Controls.RowDefinitionCollection.IndexOf*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IndexOf
  nameWithType: RowDefinitionCollection.IndexOf
- uid: System.Windows.Controls.RowDefinitionCollection.Insert*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Insert
  nameWithType: RowDefinitionCollection.Insert
- uid: System.Windows.Controls.RowDefinitionCollection.IsReadOnly*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: RowDefinitionCollection.IsReadOnly
- uid: System.Windows.Controls.RowDefinitionCollection.IsSynchronized*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: RowDefinitionCollection.IsSynchronized
- uid: System.Windows.Controls.RowDefinitionCollection.Item*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Item
  nameWithType: RowDefinitionCollection.Item
- uid: System.Windows.Controls.RowDefinitionCollection.Remove*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Remove
  nameWithType: RowDefinitionCollection.Remove
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveAt*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveAt
  nameWithType: RowDefinitionCollection.RemoveAt
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveRange*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveRange
  nameWithType: RowDefinitionCollection.RemoveRange
- uid: System.Windows.Controls.RowDefinitionCollection.SyncRoot*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: RowDefinitionCollection.SyncRoot
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable<System#Windows#Controls#RowDefinition>#GetEnumerator*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>.GetEnumerator
  nameWithType: RowDefinitionCollection.System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>.GetEnumerator
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: RowDefinitionCollection.System.Collections.ICollection.CopyTo
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: RowDefinitionCollection.System.Collections.IList.Add
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: RowDefinitionCollection.System.Collections.IList.Contains
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: RowDefinitionCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: RowDefinitionCollection.System.Collections.IList.Insert
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: RowDefinitionCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: RowDefinitionCollection.System.Collections.IList.Item
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove*
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: RowDefinitionCollection.System.Collections.IList.Remove
