### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.RangeExpression
  id: RangeExpression
  children:
  - System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  - System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  - System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  - System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  langs:
  - csharp
  name: RangeExpression
  nameWithType: RangeExpression
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression
  type: Class
  summary: "보다 크거나 지정된 된 값 보다 작은 값이 지정 된 값을 두 값이 있는지 여부를 확인 하는 방법을 제공 합니다."
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>의 클래스를 사용 하 여 웹 페이지에서 데이터를 필터링 하는 기능을 제공 하는 컨트롤의 <xref:System.Web.UI.WebControls.Expressions>네임 스페이스.</xref:System.Web.UI.WebControls.Expressions> </xref:System.Web.UI.WebControls.QueryExtender> 이러한 클래스는 RangeExpression 클래스가 포함 되어 있습니다.       RangeExpression 클래스 범위를 정의 하는 값 쌍을 사용 하 여 데이터 열을 검색 합니다. 사용 된 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>속성을 검색할 열을 지정 합니다.</xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> 사용 된 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>속성 검색에 최소를 포함할지 여부를 지정 하려면 결과 사용 하는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>최 댓 값을 포함할지 여부를 지정 하려면 속성.</xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> </xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 최대 및 최소 값을 지정할 수 있습니다 [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] 컨트롤과 값 다음에 전달할 수는 <xref:System.Web.UI.WebControls.QueryExtender>컨트롤의 매개 변수로 <xref:System.Web.UI.WebControls.ControlParameter>컨트롤.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.QueryExtender> 결과 데이터 바인딩된 컨트롤에 일반적으로 표시 됩니다."
  example:
  - "The following example shows how to search the ListPrice column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes. The filter includes the minimum value but excludes the maximum value in the results. The results are displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: RangeExpression()
  nameWithType: RangeExpression.RangeExpression()
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.Expressions.RangeExpression&quot;> </xref> 클래스입니다."
  syntax:
    content: public RangeExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: DataField
  nameWithType: RangeExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "비교에 사용할 필드를 가져오거나 설정 합니다."
  remarks: "범위 식은 지정된 된 범위에 대 한 데이터 필드를 검색 합니다."
  example:
  - "The following example shows how to search the List Price column in the Products table of the AdventureWorks database for products that have a list price in the range that is specified in the `FromTextBox` and `ToTextBox` text boxes.  \n  \n This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "비교에 사용할 필드입니다."
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: RangeExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "가져옵니다는 <xref:System.Linq.IQueryable>개체는 범위 비교에 수행 했습니다.</xref:System.Linq.IQueryable>"
  remarks: "이 메서드를 사용 하 여 지정 된 <xref:System.Linq.IQueryable>식을 확인 하는 개체입니다.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "비교에 사용 하는 개체입니다."
    return:
      type: System.Linq.IQueryable
      description: "인스턴스는 <xref:System.Linq.IQueryable>식에 적용 되는 개체입니다.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <> </> *> 및 <> </> *> 속성으로 설정 됩니다 <xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>합니다.       -또는- <> </> *> 또는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*>속성으로 설정 되지 않은 <xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref> 및 매개 변수 컬렉션은 비어 있습니다.</xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  id: MaxType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: MaxType
  nameWithType: RangeExpression.MaxType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "범위의 최대값을 가져오거나 설정 합니다."
  remarks: "이 속성에 대 한 가능한 값은 <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, 및 <xref:System.Web.UI.WebControls.Expressions.RangeType>.</xref:System.Web.UI.WebControls.Expressions.RangeType> </xref:System.Web.UI.WebControls.Expressions.RangeType> </xref:System.Web.UI.WebControls.Expressions.RangeType>       MaxType로 설정 되 면 <xref:System.Web.UI.WebControls.Expressions.RangeType>, 최대값의 범위 검색 결과에 포함 됩니다.</xref:System.Web.UI.WebControls.Expressions.RangeType> 이 해당 수행 하는 > = 작업 합니다. 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.Expressions.RangeType>지정 하는 것 같습니다 필드는 > 또는 < operation.></ operation.> </xref:System.Web.UI.WebControls.Expressions.RangeType> 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.Expressions.RangeType>, 범위에 제한이 없습니다.</xref:System.Web.UI.WebControls.Expressions.RangeType>"
  example:
  - "The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.RangeType
      description: "최 댓 값에 사용할 비교의 형식입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>, 최대 비교를 수행 하지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  id: MinType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  langs:
  - csharp
  name: MinType
  nameWithType: RangeExpression.MinType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "범위의 최소값을 가져오거나 설정 합니다."
  remarks: "Possible values for this property are <xref:System.Web.UI.WebControls.Expressions.RangeType>, <xref:System.Web.UI.WebControls.Expressions.RangeType>, and <xref:System.Web.UI.WebControls.Expressions.RangeType>.  \n  \n When the MinType or <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> property is set to <xref:System.Web.UI.WebControls.Expressions.RangeType>, the minimum and maximum value of the range is included in the search results. This is equivalent to performing a >= or \\<= operation. The <xref:System.Web.UI.WebControls.Expressions.RangeType> field is equivalent to the > or < operation and <xref:System.Web.UI.WebControls.Expressions.RangeType> imposes no limit on the range."
  example:
  - "The following example shows how to include the minimum value that is specified in the range and how to exclude the maximum value. The maximum and minimum values are entered into text boxes. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:RangeExpression DataField=\"ListPrice\"    \n    MinType=\"Inclusive\" MaxType=\"Exclusive\">  \n  <asp:ControlParameter ControlID=\"FromTextBox\" />  \n  <asp:ControlParameter ControlID=\"ToTextBox\" />  \n</asp:RangeExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.RangeType
      description: "최소 값에 사용할 비교의 형식입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.Expressions.RangeType&quot;> </xref>, 최소 비교가 수행 되지 않습니다 나타냅니다."
  overload: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: RangeExpression()
  nameWithType: RangeExpression.RangeExpression()
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.RangeExpression()
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: DataField
  nameWithType: RangeExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: RangeExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MaxType
  nameWithType: RangeExpression.MaxType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType
- uid: System.Web.UI.WebControls.Expressions.RangeType
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: RangeType
  nameWithType: RangeType
  fullName: System.Web.UI.WebControls.Expressions.RangeType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MinType
  nameWithType: RangeExpression.MinType
  fullName: System.Web.UI.WebControls.Expressions.RangeExpression.MinType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: RangeExpression
  nameWithType: RangeExpression.RangeExpression
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: DataField
  nameWithType: RangeExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: GetQueryable
  nameWithType: RangeExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MaxType*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MaxType
  nameWithType: RangeExpression.MaxType
- uid: System.Web.UI.WebControls.Expressions.RangeExpression.MinType*
  parent: System.Web.UI.WebControls.Expressions.RangeExpression
  isExternal: false
  name: MinType
  nameWithType: RangeExpression.MinType
