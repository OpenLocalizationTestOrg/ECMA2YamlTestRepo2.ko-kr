### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.ICodeGenerator
  id: ICodeGenerator
  children:
  - System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  langs:
  - csharp
  name: ICodeGenerator
  nameWithType: ICodeGenerator
  fullName: System.CodeDom.Compiler.ICodeGenerator
  type: Interface
  summary: "코드 생성에 대 한 인터페이스를 정의 합니다."
  remarks: "> [!NOTE]>.NET Framework 버전 1.0 및 1.1에서는 코드 공급자 구성의 구현을 <xref:System.CodeDom.Compiler.CodeDomProvider>, ICodeGenerator, <xref:System.CodeDom.Compiler.ICodeParser>, 및 <xref:System.CodeDom.Compiler.ICodeCompiler>.</xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.ICodeParser> </xref:System.CodeDom.Compiler.CodeDomProvider> 에 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, 및 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>메서드는 사용 되지 ICodeGenerator 및 <xref:System.CodeDom.Compiler.ICodeCompiler> <xref:System.CodeDom.Compiler.CodeDomProvider>클래스</xref:System.CodeDom.Compiler.CodeDomProvider> 에서 직접 사용할 수</xref:System.CodeDom.Compiler.ICodeCompiler> 의 메서드 및</xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 코드 공급자 구현에서 이러한 메서드를 재정의 하 고 기본 메서드를 호출 하지 해야 합니다.       컴파일러 개발자는 사용자는 특정 언어의 코드를 동적으로 생성할 수 있도록 하려면이 인터페이스를 구현할 수 있습니다. ASP.NET 같은 포함 된 코드를 사용 하 여 템플릿 기반 문서에 대 한 다양 한 목적으로 디버깅할 수 있는 콘텐츠로 동적 어셈블리를 만드는 코드 생성 마법사를 만드는 등을 사용할 수 있습니다.       ICodeGenerator 구현은 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> <xref:System.CodeDom.Compiler.CodeDomProvider>안내 하십시오.</xref:System.CodeDom.Compiler.CodeDomProvider> 메서드</xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 호출을 통해 구입한 일반적으로"
  syntax:
    content: public interface ICodeGenerator
  implements: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 값에 대 한 이스케이프 된 식별자를 만듭니다."
  remarks: "CreateEscapedIdentifier 예약 된 식별자 충돌 하는지 여부를 테스트 하거나 언어 키워드 그렇다면 언어별 이스케이프 코드 서식으로 동일한 이름을 반환 합니다. 이스케이프 된 식별자 라고 합니다. 이스케이프 된 식별자는 동일 포함 됩니다 `value` 되지만 이스케이프 코드 서식이 키워드의 식별자를 구별 하기 위해 추가 됩니다. 두 가지 구현 예는 앞의 `value` 으로 &quot;@&quot; 붙이거나는 `value` 와 &quot;[&quot; 및 &quot;]&quot;입니다."
  syntax:
    content: public string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "에 대 한 이스케이프 된 식별자를 만들 문자열입니다."
    return:
      type: System.String
      description: "값에 대 한 이스케이프 된 식별자입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 값에 대 한 유효한 식별자를 만듭니다."
  remarks: "CreateValidIdentifier 테스트 하는지 여부를 예약 된 식별자 충돌 또는 언어 키워드 및 반환 된 유효한 식별자 이름을 충돌 하지 않습니다. 반환 된 id가 동일한 포함 됩니다 `value` 있지만와 충돌 하는 경우 예약 하거나 언어 키워드는 이스케이프 코드 서식이 키워드의 식별자를 구별 하기 위해 추가 됩니다. 일반적으로 수정&5;d; 값을 값은 밑줄 &quot;_&quot;로 반환 됩니다."
  syntax:
    content: public string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "에 대 한 유효한 식별자를 생성 하는 문자열입니다."
    return:
      type: System.String
      description: "지정된 된 값에 대 한 유효한 식별자입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정 된 코드 문서 개체 모델 (CodeDOM) 컴파일 단위에 대 한 코드를 생성 및 지정된 된 옵션을 사용 하 여 지정 된 텍스트 기록기에 출력 합니다."
  syntax:
    content: public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 에 대 한 코드를 생성 합니다."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력 하는 코드로.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> 코드 생성에 사용할 옵션을 나타내는입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정한 코드 문서 개체 모델 (CodeDOM) 식에 대 한 코드를 생성 하 고 지정된 된 텍스트 기록기에 출력 합니다."
  syntax:
    content: public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 나타내는 식에 대 한 코드를 생성 합니다."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력 하는 코드로.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> 코드 생성에 사용할 옵션을 나타내는입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 코드 문서 개체 모델 (CodeDOM) 네임 스페이스에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 기록기에 출력 합니다."
  syntax:
    content: public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "A <xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> 에 대 한 코드를 생성 하는 네임 스페이스를 나타내는입니다."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력 하는 코드로.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> 코드 생성에 사용할 옵션을 나타내는입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정 된 코드 문서 개체 모델 (CodeDOM) 문에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 기록기에 출력 합니다."
  syntax:
    content: public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> 변환할 CodeDOM 요소를 포함 합니다."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력 하는 코드로.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> 코드 생성에 사용할 옵션을 나타내는입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 코드 문서 개체 모델 (CodeDOM) 형식 선언에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 기록기에 출력 합니다."
  syntax:
    content: public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> 코드를 생성할 형식을 나타내는입니다."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력 하는 코드로.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> 코드 생성에 사용할 옵션을 나타내는입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정 된 표시 된 형식을 가져옵니다 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>합니다."
  syntax:
    content: public string GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 반환할 형식을 나타내는입니다."
    return:
      type: System.String
      description: "이 코드 생성기에서 코드를 생성 하도록 언어에 대 한 지정 된 형식의 텍스트 표현입니다. 예를 들어 Visual Basic의 System.Int32 형식 전달 &quot;정수&quot;를 반환 합니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 값이 현재 언어에 대 한 유효한 식별자 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 메서드는 식별자가 유효한 지 여부를 테스트 합니다. 파생된 클래스에서 IsValidIdentifier를 구현 하는 경우, 전달 된 값을 테스트 하는 방법을 디자인 하 고 반환 `true` 값 언어의 규칙에 맞는 키워드와 충돌 하지 않는 하는 경우에 합니다."
  syntax:
    content: public bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "유효한 식별자 인지 여부를 테스트할 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> value </code> 매개 변수는 유효한 식별자, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "생성기에서 지정 된 언어 기능에 대 한 지원을 제공 하는지 여부를 나타내는 값을 가져옵니다 <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 여러 가지 <xref:System.CodeDom.Compiler.GeneratorSupport>플래그를 이진 플래그 적절 한 기능 집합을 조인 하 여 기능 집합에 대 한 테스트를 한 번에 &quot;또는&quot; 연산자 (|).</xref:System.CodeDom.Compiler.GeneratorSupport>"
  syntax:
    content: public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);
    parameters:
    - id: supports
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "에 대 한 생성기를 테스트 기능입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 기능 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 값이 유효한 식별자 없으면 예외가 throw 됩니다."
  remarks: "값을 반환 하는 대신이 메서드는 지정 된 식별자 메서드 구현에 따라 유효 하지 않을 경우 예외가 throw 됩니다. 일반적으로 예외는 <xref:System.ArgumentException>.</xref:System.ArgumentException> 이 메서드는 잘못 된 식별자의 값에 따라 정보 오류 메시지를 생성 하기 위해이 메서드를 구현 하는 코드 생성기를 사용 합니다."
  syntax:
    content: public void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "유효성을 검사할 식별자입니다."
  overload: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "식별자의 형식이 올바르지 않습니다."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression
  nameWithType: ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement
  nameWithType: ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType
  nameWithType: ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports
  nameWithType: ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: ICodeGenerator.ValidateIdentifier
