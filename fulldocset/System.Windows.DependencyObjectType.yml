### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyObjectType
  id: DependencyObjectType
  children:
  - System.Windows.DependencyObjectType.BaseType
  - System.Windows.DependencyObjectType.FromSystemType(System.Type)
  - System.Windows.DependencyObjectType.GetHashCode
  - System.Windows.DependencyObjectType.Id
  - System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  - System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  - System.Windows.DependencyObjectType.Name
  - System.Windows.DependencyObjectType.SystemType
  langs:
  - csharp
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
  type: Class
  summary: "모든 내부 형식 캐시 구현 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 파생 형식입니다."
  remarks: "DependencyObjectType 특정 내부 시스템을 나타냅니다 ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Type> DependencyObjectType이 래퍼는 ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type>일부 기능을 확장할 수 있도록 합니다.</xref:System.Type>       이 클래스는 공용 생성자가 없습니다. 이 클래스 인스턴스의 다른 개체에 속성을 통해 얻을 수 있습니다 (예: <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>), 또는 <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.</xref:System.Windows.DependencyObjectType.FromSystemType%2A> 정적 메서드를 통해</xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>"
  syntax:
    content: public class DependencyObjectType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.BaseType
  id: BaseType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "가져옵니다는 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 현재는 직접 기본 클래스의 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.DependencyObjectType BaseType { get; }
    return:
      type: System.Windows.DependencyObjectType
      description: "기본 클래스의 형식입니다."
  overload: System.Windows.DependencyObjectType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  id: FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "반환 된 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 나타내는 지정된 된 시스템 ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) 형식입니다."
  remarks: "각 <xref:System.Windows.DependencyObject>유지 관리는 <xref:System.Windows.DependencyObject.DependencyObjectType%2A>속성을 반환 하는 <xref:System.Windows.DependencyObjectType>,이 위해서는 특정 필요 하지만 <xref:System.Windows.DependencyObject>인스턴스.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyObjectType> </xref:System.Windows.DependencyObject.DependencyObjectType%2A> </xref:System.Windows.DependencyObject> 아직 없는는 <xref:System.Windows.DependencyObject>인스턴스 및 <xref:System.Windows.DependencyObjectType>.</xref:System.Windows.DependencyObjectType> 필요로</xref:System.Windows.DependencyObject> 하는 경우이 정적 유틸리티 메서드를 사용할 수 있습니다."
  example:
  - "The following example calls FromSystemType , creating a <xref:System.Windows.DependencyObjectType> based on the type of the <xref:System.Windows.Window> class.  \n  \n [!code-cs[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/csharp/PropertiesOvwSupport/page3.xaml.cs#dotfromsystemtype)]\n [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/visualbasic/propertiesovwsupport/page3.xaml.vb#dotfromsystemtype)]"
  syntax:
    content: public static System.Windows.DependencyObjectType FromSystemType (Type systemType);
    parameters:
    - id: systemType
      type: System.Type
      description: "시스템 ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) 변환할 형식입니다."
    return:
      type: System.Windows.DependencyObjectType
      description: "A <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 시스템 나타내는 ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) 형식입니다."
  overload: System.Windows.DependencyObjectType.FromSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  remarks: "이 구현은의 값에 연결 된는 <xref:System.Windows.DependencyObjectType.Id%2A>속성.</xref:System.Windows.DependencyObjectType.Id%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Windows.DependencyObjectType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Id
  id: Id
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "조회 작업의 일정 한 시간 배열에 대 한&0;부터 시작 고유 식별자를 가져옵니다."
  remarks: "일반 해시 함수를 사용 하지 마십시오. 이 값에 보장이 없습니다. 응용 프로그램 실행 간에 달라질 수 있습니다."
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "내부 식별자입니다."
  overload: System.Windows.DependencyObjectType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  id: IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정된 된 개체의 현재 인스턴스 인지를 확인 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  remarks: "개체의 정확한 동일한 형식이 반환 `true`합니다."
  syntax:
    content: public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "현재와 비교할 개체 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재도 표시 되는 클래스 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 의 상속 계층 구조에는 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 변수로 전달 된 <code> d </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.DependencyObjectType.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  id: IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "결정 여부 현재 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 에서 지정 된 파생 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  syntax:
    content: public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);
    parameters:
    - id: dependencyObjectType
      type: System.Windows.DependencyObjectType
      description: "<xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> dependencyObjectType </code> 매개 변수 및 현재 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 클래스 및 현재 클래스의 형식을 나타내는 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 가 나타내는 클래스에서 파생 <code> dependencyObjectType </code>합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 또한이 메서드 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우 <code> dependencyObjectType </code> 및 현재 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> 같은 클래스를 나타내는입니다."
  overload: System.Windows.DependencyObjectType.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Name
  id: Name
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "표시 되는 이름을 가져옵니다 [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] 시스템 유형입니다."
  remarks: "이름의 값은 <xref:System.Type>.</xref:System.Type> 형식 이름의 이름으로 동일한 문자열"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "표시 되는 이름 [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] 시스템 유형입니다."
  overload: System.Windows.DependencyObjectType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.SystemType
  id: SystemType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "가져옵니다는 [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] 이 표시 되는 시스템 유형을 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  syntax:
    content: public Type SystemType { get; }
    return:
      type: System.Type
      description: "[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] 이 표시 되는 시스템 유형을 <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>합니다."
  overload: System.Windows.DependencyObjectType.SystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyObjectType.BaseType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType
  parent: System.Windows
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.DependencyObjectType.GetHashCode
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyObjectType.Id
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
- uid: System.Windows.DependencyObjectType.Name
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.DependencyObjectType.SystemType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
- uid: System.Windows.DependencyObjectType.BaseType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType.FromSystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType
  nameWithType: DependencyObjectType.FromSystemType
- uid: System.Windows.DependencyObjectType.GetHashCode*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyObjectType.GetHashCode
- uid: System.Windows.DependencyObjectType.Id*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType
  nameWithType: DependencyObjectType.IsInstanceOfType
- uid: System.Windows.DependencyObjectType.IsSubclassOf*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf
  nameWithType: DependencyObjectType.IsSubclassOf
- uid: System.Windows.DependencyObjectType.Name*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
- uid: System.Windows.DependencyObjectType.SystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
