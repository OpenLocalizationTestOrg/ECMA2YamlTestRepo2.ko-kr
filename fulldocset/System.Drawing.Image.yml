### YamlMime:ManagedReference
items:
- uid: System.Drawing.Image
  id: Image
  children:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Finalize
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  langs:
  - csharp
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
  type: Class
  summary: "에 대 한 기능을 제공 하는 추상 기본 클래스는 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 및 <xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref> 서브 클래스입니다."
  remarks: "Windows Form에 이미지를 그리기 위해 사용 해야 중 하나는 <xref:System.Drawing.Graphics.DrawImage%2A>메서드.</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \n  \n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image on the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/cpp/t-system.drawing.image_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/csharp/t-system.drawing.image_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/add/codesnippet/visualbasic/t-system.drawing.image_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.ImmutableObject(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Image.Clone
  id: Clone
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 정확한 복사본을 만듭니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 개체로 캐스팅,이 메서드를 만듭니다."
  overload: System.Drawing.Image.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose
  id: Dispose
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose 메서드를 호출 <xref:System.Drawing.Image>다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Image>       <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Drawing.Image>불안정 한 상태가.</xref:System.Drawing.Image> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Image>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Image>차지한.</xref:System.Drawing.Image> </xref:System.Drawing.Image> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Drawing.Image>개체의 `Finalize` 메서드.</xref:System.Drawing.Image>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: >-
    > [!NOTE]

    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Finalize
  id: Finalize
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~Image ();
    parameters: []
  overload: System.Drawing.Image.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Flags
  id: Flags
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "특성의 픽셀 데이터에 대 한 플래그를 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이 메서드에서 반환 된 정수 값의 합계에 대응 되며 <xref:System.Drawing.Imaging.ImageFlags>다음 표에 설명 된 대로.</xref:System.Drawing.Imaging.ImageFlags>      | ImageFlag 값 | 정수 표현을 |   |---------------------|----------------------------|   | `ImageFlagsNone`|0|   | `ImageFlagsScalable`|1|   | `ImageFlagsHasAlpha`|2|   | `ImageFlagsHasTranslucent`|4|   | `ImageFlagsPartiallyScalable`|8|   | `ImageFlagsColorSpaceRGB`|16|   | `ImageFlagsColorSpaceCMYK`|32|   | `ImageFlagsColorSpaceGRAY`|64|   | `ImageFlagsColorSpaceYCBCR`|128|   | `ImageFlagsColorSpaceYCCK`|256|   | `ImageFlagsHasRealDPI`|4096|   | `ImageFlagsHasRealPixelSize`|8192|   | `ImageFlagsReadOnly`| 65536 |   | `ImageFlagsCaching`| 131072 |       예를 들어 이미지에 대 한 플래그 속성 77960을 반환 하는 경우는 <xref:System.Drawing.Imaging.ImageFlags>이미지 될 것에 대 한 <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, <xref:System.Drawing.Imaging.ImageFlags>, 및 <xref:System.Drawing.Imaging.ImageFlags>.</xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags> </xref:System.Drawing.Imaging.ImageFlags>"
  syntax:
    content: public int Flags { get; }
    return:
      type: System.Int32
      description: "비트 조합을 나타내는 정수 <xref href=&quot;System.Drawing.Imaging.ImageFlags&quot;> </xref> 이 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FrameDimensionsList
  id: FrameDimensionsList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 프레임의 크기를 나타내는 Guid의 배열을 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이 메서드는 두 가지 스타일 다중 프레임 이미지에 대 한 정보를 반환 합니다: 여러 페이지 및 여러 해결 합니다.       다중 페이지 이미지에는 둘 이상의 이미지를 포함 하는 이미지가입니다. 각 페이지에는 단일 이미지 (또는 프레임) 포함 되어 있습니다. 일반적으로 이러한 페이지 또는 이미지, 또는 프레임 애니메이션된.gif 파일 등의 애니메이션 시퀀스를 연속적으로 표시 됩니다.       다중 해상도 이미지에는 해상도 서로 다른 이미지의 여러 복사본을 포함 하는 이미지가입니다. 이 일반적으로 사용 MIP 매핑에 의해 표시 되는 이미지 크기에 따라 그리기에 사용 되는 이미지의 해상도 결정 합니다. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]페이지 (또는, 이미지 또는 프레임), 임의 개수의 임의 개수의 해상도 뿐 아니라 지원할 수 있습니다. 정의 된 크기는 <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> 의 속성"
  syntax:
    content: public Guid[] FrameDimensionsList { get; }
    return:
      type: System.Guid[]
      description: "이 프레임의 크기를 지정 하는 Guid 배열의 <xref href=&quot;System.Drawing.Image&quot;> </xref> 에서 가장 덜 중요 한에 가장 중요 한 합니다."
  overload: System.Drawing.Image.FrameDimensionsList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String)
  id: FromFile(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 파일에서 합니다."
  remarks: "관리 GDI +에 기본 제공 인코더와 디코더가 다음 파일 형식을 지 원하는:-BMP-GIF-JPEG-PNG 파일까지 잠긴 상태로 유지 하는 TIFF는 <xref:System.Drawing.Image>삭제 됩니다.</xref:System.Drawing.Image>       파일에 올바른 이미지 형식이 없는 경우 또는 경우 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 픽셀 형식을 지원 하지 않는 파일의이 메서드에서 throw 한 <xref:System.OutOfMemoryException>예외.</xref:System.OutOfMemoryException>      > [!NOTE] >는 <xref:System.Drawing.Image>클래스 비트맵의 알파 투명도 지원 하지 않습니다.</xref:System.Drawing.Image> 알파 투명도 사용 하려면 32 비트 / 픽셀 PNG 이미지를 사용 합니다."
  example:
  - "The following code example demonstrates how to use the FromFile<xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.f_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.f_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.f_0_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "작성 하려는 파일의 이름을 포함 하는 문자열은 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "파일에 올바른 이미지 형식이 않아도 됩니다.       -또는- [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 픽셀 형식의 파일을 지원 하지 않습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정 된 파일이 존재 하지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  id: FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 파일에서 사용 하 여 색 관리 정보 파일에 포함 된 해당 합니다."
  remarks: "관리 GDI +에 기본 제공 인코더와 디코더가 다음 파일 형식을 지 원하는:-BMP-GIF-JPEG-PNG-TIFF 파일에 올바른 이미지 형식이 없는 경우 또는 경우 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 픽셀 형식을 지원 하지 않는 파일의이 메서드에서 throw는 <xref:System.OutOfMemoryException>예외.</xref:System.OutOfMemoryException>       파일은 될 때까지 잠깁니다는 <xref:System.Drawing.Image>삭제 됩니다.</xref:System.Drawing.Image>       `useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image>이미지 파일에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다.</xref:System.Drawing.Image> 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.      > [!NOTE] >는 <xref:System.Drawing.Image>클래스 비트맵의 알파 투명도 지원 하지 않습니다.</xref:System.Drawing.Image> 알파 투명도 사용 하려면 32 비트 / 픽셀 PNG 이미지를 사용 합니다."
  example:
  - "The following code example demonstrates how to obtain a new bitmap using the FromFile method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \n  \n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#2](~/add/codesnippet/csharp/m-system.drawing.image.f_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#2](~/add/codesnippet/cpp/m-system.drawing.image.f_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#2](~/add/codesnippet/visualbasic/m-system.drawing.image.f_1_1.vb)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);
    parameters:
    - id: filename
      type: System.String
      description: "작성 하려는 파일의 이름을 포함 하는 문자열은 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 이미지 파일에 포함 된 색 관리 정보를 사용 하 고, 그러지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "파일에 올바른 이미지 형식이 않아도 됩니다.       -또는- [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 픽셀 형식의 파일을 지원 하지 않습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정 된 파일이 존재 하지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filename</code>is a <xref:System.Uri>."
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  id: FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 에서 GDI 비트맵에 대 한 핸들입니다."
  remarks: "FromHbitmap 메서드의 복사본을 만듭니다는 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 비트맵; 들어오는 해제할 수 있도록 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 를 사용 하 여 비트맵의 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` 새 <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 를 만든 후 즉시 메서드"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 를 만들려는 비트맵 핸들의 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>합니다."
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  id: FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 에서 GDI 비트맵과 GDI 팔레트에 대 한 핸들에 대 한 핸들입니다."
  remarks: "FromHbitmap 메서드의 복사본을 만듭니다는 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 비트맵; 들어오는 해제할 수 있도록 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 를 사용 하 여 비트맵의 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject` 새 <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 를 만든 후 즉시 메서드"
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: "[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 를 만들려는 비트맵 핸들의 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>합니다."
    - id: hpalette
      type: System.IntPtr
      description: "에 대 한 핸들은 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 비트맵에 지정 된 경우 비트맵 색을 정의 하는 데 사용 되는 색상표는 `hBitmap` 매개 변수가 장치 독립적 비트맵 (DIB) 하지 않습니다."
    return:
      type: System.Drawing.Bitmap
      description: "<xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정 된 데이터 스트림에서 합니다."
  remarks: "유지 해야 스트림이 열려 있는 <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 의 수명 동안       스트림은 동일한 스트림을 사용 하 여이 메서드를 연속적으로 호출 하는 경우&0;으로 다시 설정 됩니다.      > [!NOTE] >는 <xref:System.Drawing.Image>클래스 비트맵의 알파 투명도 지원 하지 않습니다.</xref:System.Drawing.Image> 알파 투명도 사용 하려면 32 비트 / 픽셀 PNG 이미지를 사용 합니다."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>이 대 한 데이터를 포함 하 <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 올바른 이미지 형식이 없는-또는- <code> stream </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정한 데이터 스트림, 선택적으로 사용 하 여 색 관리 정보 해당 스트림에 포함 합니다."
  remarks: "유지 해야 스트림이 열려 있는 <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 의 수명 동안       `useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image>데이터 스트림을에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다.</xref:System.Drawing.Image> 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.       스트림은 동일한 스트림을 사용 하 여이 메서드를 연속적으로 호출 하는 경우&0;으로 다시 설정 됩니다.      > [!NOTE] >는 <xref:System.Drawing.Image>클래스 비트맵의 알파 투명도 지원 하지 않습니다.</xref:System.Drawing.Image> 알파 투명도 사용 하려면 32 비트 / 픽셀 PNG 이미지를 사용 합니다."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>이 대 한 데이터를 포함 하 <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>색 관리 정보를 사용 하기 위해 데이터 스트림을;에 포함 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 올바른 이미지 형식이 없는-또는- <code> stream </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정한 데이터 스트림, 선택적으로 사용 하 여 포함 된 관리 정보 색 및 이미지 데이터 유효성 검사 합니다."
  remarks: "`useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image>데이터 스트림을에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다.</xref:System.Drawing.Image> 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.      > [!NOTE] >는 <xref:System.Drawing.Image>클래스 비트맵의 알파 투명도 지원 하지 않습니다.</xref:System.Drawing.Image> 알파 투명도 사용 하려면 32 비트 / 픽셀 PNG 이미지를 사용 합니다."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>이 대 한 데이터를 포함 하 <xref href=&quot;System.Drawing.Image&quot;> </xref>.</xref:System.IO.Stream>"
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>색 관리 정보를 사용 하기 위해 데이터 스트림을;에 포함 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: validateImageData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이미지 데이터의 유효성을 검사 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이는 올바른 이미지 형식이 없습니다."
  platform:
  - net462
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  id: GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 단위로 이미지의 범위를 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/m-system.drawing.image.g_1_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/m-system.drawing.image.g_1_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/m-system.drawing.image.g_1_1.cpp)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);
    parameters:
    - id: pageUnit
      type: System.Drawing.GraphicsUnit
      description: "중 하나는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 경계 사각형에 대 한 측정 단위를 나타내는 값입니다."
    return:
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 지정 된 단위로 이미지의 경계를 나타내는입니다."
  overload: System.Drawing.Image.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  id: GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 이미지 인코더에서 지 원하는 매개 변수에 대 한 정보를 반환 합니다."
  syntax:
    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);
    parameters:
    - id: encoder
      type: System.Guid
      description: "이미지 인코더를 지정 하는 GUID입니다."
    return:
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> 배열을 포함 하는 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 개체입니다. 각 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 지정한 이미지 인코더에서 지 원하는 매개 변수 중 하나에 대 한 정보를 포함 합니다."
  overload: System.Drawing.Image.GetEncoderParameterList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 크기의 프레임 수를 반환합니다."
  remarks: "이 메서드는 두 가지 스타일 다중 프레임 이미지에 대 한 정보를 반환 합니다: 여러 페이지 및 여러 해결 합니다.       다중 페이지 이미지에는 둘 이상의 이미지를 포함 하는 이미지가입니다. 각 페이지에는 단일 이미지 (또는 프레임) 포함 되어 있습니다. 일반적으로 이러한 페이지 또는 이미지, 또는 프레임 애니메이션된.gif 파일 등의 애니메이션 시퀀스를 연속적으로 표시 됩니다.       다중 해상도 이미지에는 해상도 서로 다른 이미지의 여러 복사본을 포함 하는 이미지가입니다. 이 일반적으로 사용 MIP 매핑에 의해 표시 되는 이미지 크기에 따라 그리기에 사용 되는 이미지의 해상도 결정 합니다. [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]페이지 (또는, 이미지 또는 프레임), 임의 개수의 임의 개수의 해상도 뿐 아니라 지원할 수 있습니다. 정의 된 크기는 <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> 의 속성"
  syntax:
    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> 차원 유형의 id를 지정 하는 합니다."
    return:
      type: System.Int32
      description: "지정 된 차원의 프레임 수를 지정 합니다."
  overload: System.Drawing.Image.GetFrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 픽셀 형식의 픽셀 당 비트 수 만큼의 색 농도 반환합니다."
  syntax:
    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 크기를 찾기 위해 형식을 지정 하는 멤버입니다."
    return:
      type: System.Int32
      description: "지정 된 픽셀 형식의 색 농도 합니다."
  overload: System.Drawing.Image.GetPixelFormatSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  id: GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 지정 된 속성 항목을 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "속성 항목 Id 및 추가 정보 링크를 목록 <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.</xref:System.Drawing.Imaging.PropertyItem.Id%2A> 을 참조 하십시오.       어렵습니다 속성 항목 들을 설정 하기 때문에 <xref:System.Drawing.Imaging.PropertyItem>클래스 생성자가 없는 공개.</xref:System.Drawing.Imaging.PropertyItem> 이 제한을 해결 하기 위해 한 가지 방법은 얻으려고 것는 <xref:System.Drawing.Imaging.PropertyItem>검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A>GetPropertyItem 메서드를 호출 하거나 속성 값은 <xref:System.Drawing.Image>속성 항목에 이미 있는.</xref:System.Drawing.Image> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 다음의 <xref:System.Drawing.Imaging.PropertyItem> <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> 에 전달 하 고</xref:System.Drawing.Imaging.PropertyItem> 필드를 설정할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the GetPropertyItem and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls GetPropertyItem passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.g_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.g_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.g_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "가져올 속성 항목의 ID입니다."
    return:
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> 이 메서드를 가져옵니다."
  overload: System.Drawing.Image.GetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 이미지의 이미지 형식 속성 항목을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);
    parameters:
    - id: thumbWidth
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: thumbHeight
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Image.GetThumbnailImageAbort
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    return:
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
  overload: System.Drawing.Image.GetThumbnailImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Height
  id: Height
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "높이 픽셀 단위로이 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and Height properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.h_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.h_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.h_1.vb)]"
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "높이 픽셀 단위로이 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.HorizontalResolution
  id: HorizontalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 인치 당 픽셀의 수평 해상도 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  syntax:
    content: public float HorizontalResolution { get; }
    return:
      type: System.Single
      description: "이 인치 당 픽셀의 수평 해상도 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.HorizontalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "표시 하는 값을 반환 합니다.이 대 한 픽셀 형식 여부 <xref href=&quot;System.Drawing.Image&quot;> </xref> 알파 정보를 포함 합니다."
  syntax:
    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> pixfmt </code> 알파 정보가 포함 되어, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Image.IsAlphaPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "픽셀 형식이 32 비트 / 픽셀 인지 여부를 나타내는 값을 반환 합니다."
  remarks: "정식 픽셀 형식이 32 비트 / 픽셀의 픽셀 형식을 나타냅니다. 이 형식은 24 비트 색 및 깊이 8 비트 알파 채널을 지정합니다."
  syntax:
    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> pixfmt </code> 고, 그러지 않으면 정식 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Image.IsCanonicalPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "픽셀 형식이 64 비트 / 픽셀 인지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: "<xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 테스트 하는 열거형입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>pixfmt</code> is extended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Image.IsExtendedPixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Palette
  id: Palette
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 되는 색상표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이 속성은 <xref:System.Drawing.Imaging.ColorPalette>이 <xref:System.Drawing.Image>.</xref:System.Drawing.Image> 에서 사용 하는 개체</xref:System.Drawing.Imaging.ColorPalette> 의 복사본을 반환"
  syntax:
    content: public System.Drawing.Imaging.ColorPalette Palette { get; set; }
    return:
      type: System.Drawing.Imaging.ColorPalette
      description: "A <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> 이 사용 되는 색 팔레트를 나타내는 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.Palette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PhysicalDimension
  id: PhysicalDimension
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 이미지의 높이 너비를 가져옵니다."
  remarks: "비트맵 이미지의 경우 너비 및 높이 (픽셀)에서 반환 됩니다. 이미지의 메타 파일 크기는, 너비 및 높이 0.01 밀리미터 단위로 반환 됩니다."
  syntax:
    content: public System.Drawing.SizeF PhysicalDimension { get; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 너비와 높이이 나타내는 구조 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.PhysicalDimension*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 픽셀 형식을 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the PixelFormat property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.p_1_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.p_1_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.p_1_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 이 대 한 픽셀 형식을 나타내는 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.PixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyIdList
  id: PropertyIdList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 저장 된 속성 항목의 Id를 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이미지에 속성 또는 이미지 형식 속성 항목을 지원 하지 않는 경우 PropertyIdList 속성 빈 배열 (즉, 길이가&0; 인 배열)를 반환 합니다."
  syntax:
    content: public int[] PropertyIdList { get; }
    return:
      type: System.Int32[]
      description: "이 이미지에 저장 된 각 속성 항목에 대 한 Id 속성의 배열입니다."
  overload: System.Drawing.Image.PropertyIdList*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.PropertyItems
  id: PropertyItems
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "모든 항목을 가져옵니다 속성 (메타 데이터)이 저장 된 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이미지에 속성 또는 이미지 형식 속성 항목을 지원 하지 않는 경우 PropertyItems 빈 배열 (즉, 길이가&0; 인 배열)를 반환 합니다."
  example:
  - "The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the PropertyItems property.  \n  \n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#6](~/add/codesnippet/csharp/p-system.drawing.image.p_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#6](~/add/codesnippet/cpp/p-system.drawing.image.p_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#6](~/add/codesnippet/visualbasic/p-system.drawing.image.p_0_1.vb)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }
    return:
      type: System.Drawing.Imaging.PropertyItem[]
      description: "배열을 <xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> 개체, 항목 이미지에 저장 된 각 속성에 대 한 합니다."
  overload: System.Drawing.Image.PropertyItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RawFormat
  id: RawFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 파일 형식은 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }
    return:
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> 이 파일 형식은 나타내는 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.RawFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  id: RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 지정 된 속성 항목을 제거 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "어렵습니다 속성 항목 들을 설정 하기 때문에 <xref:System.Drawing.Imaging.PropertyItem>클래스 생성자가 없는 공개.</xref:System.Drawing.Imaging.PropertyItem> 이 제한을 해결 하기 위해 한 가지 방법은 얻으려고 것는 <xref:System.Drawing.Imaging.PropertyItem>검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A>속성 값 또는 호출은 <xref:System.Drawing.Image.GetPropertyItem%2A>의 메서드는 <xref:System.Drawing.Image>속성 항목에 이미 있는.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 다음의 <xref:System.Drawing.Imaging.PropertyItem> <xref:System.Drawing.Image.SetPropertyItem%2A>.</xref:System.Drawing.Image.SetPropertyItem%2A> 에 전달 하 고</xref:System.Drawing.Imaging.PropertyItem> 필드를 설정할 수 있습니다."
  syntax:
    content: public void RemovePropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: "제거할 속성 항목의 ID입니다."
  overload: System.Drawing.Image.RemovePropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이미지에 요청된 된 속성 항목이 없습니다.       -또는-이 이미지에 대 한 이미지 형식은 속성 항목을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  id: RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "회전,를 대칭 이동 또는 회전 및 대칭 이동 된 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "RotateFlip 메서드 이미지 시계 반대 방향으로 회전합니다.       회전 된 후에 이미지에 그릴 하려는 경우 항상 검색 해야 새 그래픽 개체는 이미지에서 예외가 발생할 수 있습니다."
  example:
  - "The following code example demonstrates how to call the RotateFlip method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \n  \n [!code-cs[System.Drawing.BitmapMembers#3](~/add/codesnippet/csharp/m-system.drawing.image.r_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#3](~/add/codesnippet/visualbasic/m-system.drawing.image.r_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#3](~/add/codesnippet/cpp/m-system.drawing.image.r_1.cpp)]"
  syntax:
    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);
    parameters:
    - id: rotateFlipType
      type: System.Drawing.RotateFlipType
      description: "A <xref href=&quot;System.Drawing.RotateFlipType&quot;> </xref> 회전 및 대칭 이동 이미지에 적용할의 형식을 지정 하는 멤버입니다."
  overload: System.Drawing.Image.RotateFlip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String)
  id: Save(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 저장 <xref href=&quot;System.Drawing.Image&quot;> </xref> 를 지정 된 파일이 나 스트림에 합니다."
  remarks: "이미지의 파일 형식에 대 한 없는 인코더 있으면 그래픽 PNG (이동식 네트워크) 인코더 사용 됩니다. Save 메서드를 사용 하 여 메타 파일 형식 WMF (Windows) 또는 확장 메타 파일 형식 (EMF) 파일로 그래픽 이미지를 저장 하려면 결과 파일은 PNG 이동식 네트워크 그래픽 () 파일로 저장 됩니다. 때문에이 문제가 발생 된 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 의 구성 요소는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] .wmf 또는.emf 파일로 저장 하는 데 사용할 수 있는 인코더에는 없습니다.       생성 된 동일한 파일에 이미지를 저장할 허용 되지 않습니다 및 예외를 throw 합니다."
  example:
  - "The following code example demonstrates how to call the Save method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#5](~/add/codesnippet/csharp/m-system.drawing.image.s_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#5](~/add/codesnippet/cpp/m-system.drawing.image.s_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#5](~/add/codesnippet/visualbasic/m-system.drawing.image.s_0_1.vb)]"
  syntax:
    content: public void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "이 저장 될 파일의 이름을 포함 하는 문자열 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>은<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "이미지는 잘못 된 이미지 형식으로 저장 되었습니다.       -또는-이미지에서 만들어진 같은 파일에 저장 되었습니다."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 이미지를 지정 된 형식의 지정 된 스트림에 저장 합니다."
  remarks: "이미지를 생성 하는 데 사용한 동일한 스트림에 저장 하면 안 됩니다. 이렇게 하면 스트림이 손상 될 수 있습니다.       오프셋을&0;에서 스트림에 이미지를 저장 해야 합니다. 이미지를 저장 하기 전에 추가 데이터 스트림이에 쓰여지기, 스트림에서 이미지 데이터가 손상 됩니다."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>이미지를 저장할.</xref:System.IO.Stream>"
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref> 저장된 된 이미지의 형식을 지정 하는 합니다."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>format</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "잘못 된 이미지 형식으로 저장 된 이미지"
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  id: Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 저장 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정 된 형식의 지정된 된 파일에 있습니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the Save method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/cpp/m-system.drawing.image.s_1_1.cpp)]\n [!code-cs[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/csharp/m-system.drawing.image.s_1_1.cs)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/add/codesnippet/visualbasic/m-system.drawing.image.s_1_1.vb)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: filename
      type: System.String
      description: "이 저장 될 파일의 이름을 포함 하는 문자열 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>format</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "이미지는 잘못 된 이미지 형식으로 저장 되었습니다.       -또는-이미지에서 만들어진 같은 파일에 저장 되었습니다."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 이미지를 지정 된 인코더 및 이미지 인코더 매개 변수를 지정 된 스트림에 저장합니다."
  remarks: "이미지는 이미지를 생성 하는 데 사용 된 동일한 스트림에 저장 하지 마십시오. 이렇게 하면 스트림이 손상 될 수 있습니다.       오프셋을&0;에서 스트림에 이미지를 저장 해야 합니다. 이미지를 저장 하기 전에 추가 데이터 스트림이에 쓰여지기, 스트림에서 이미지 데이터가 손상 됩니다."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>이미지를 저장할.</xref:System.IO.Stream>"
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> 이미지 인코더에서 사용 하는 매개 변수를 지정 하는 합니다."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "이미지는 잘못 된 이미지 형식으로 저장 되었습니다."
  platform:
  - net462
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 저장 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정 된 인코더 및 이미지 인코더 매개 변수를 가진 지정된 된 파일에 있습니다."
  remarks: "생성 된 동일한 파일에 이미지를 저장할 허용 되지 않습니다 및 예외를 throw 합니다."
  example:
  - "The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \n  \n [!code-cs[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/csharp/e093e484-33cc-46d5-936c-_1.cs)]\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/visualbasic/e093e484-33cc-46d5-936c-_1.vb)]\n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/add/codesnippet/cpp/e093e484-33cc-46d5-936c-_1.cpp)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: filename
      type: System.String
      description: "이 저장 될 파일의 이름을 포함 하는 문자열 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: "The <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "An <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;></xref> to use for this <xref href=&quot;System.Drawing.Image&quot;></xref>."
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>or <code>encoder</code> is<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "이미지는 잘못 된 이미지 형식으로 저장 되었습니다.       -또는-이미지에서 만들어진 같은 파일에 저장 되었습니다."
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "프레임을 파일이 나 스트림에 대 한 이전 호출에 지정 된 추가 <xref:System.Drawing.Image.Save*>메서드.</xref:System.Drawing.Image.Save*> 다중 프레임 이미지에서 다른 다중 프레임 이미지에 선택한 프레임을 저장 하려면이 메서드를 사용 합니다."
  syntax:
    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> 에서 사용 되는 이미지 인코더에 필요한 매개 변수를 보유 하는 저장-추가 작업 합니다."
  overload: System.Drawing.Image.SaveAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "프레임을 파일이 나 스트림에 대 한 이전 호출에 지정 된 추가 <xref:System.Drawing.Image.Save*>메서드.</xref:System.Drawing.Image.Save*>"
  syntax:
    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 추가할 프레임을 포함 하 합니다."
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: "<xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref> 에서 사용 되는 이미지 인코더에 필요한 매개 변수를 보유 하는 저장-추가 작업 합니다."
  overload: System.Drawing.Image.SaveAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "크기와 인덱스로 지정한 프레임을 선택 합니다."
  remarks: "가능한 값은 `dimensionID` 매개 변수는 <xref:System.Drawing.Imaging.FrameDimension>.</xref:System.Drawing.Imaging.FrameDimension> 의 속성 해당 시간, 해상도 또는 페이지 번호 하 여 이미지를 식별 데 사용할 수 있습니다 이러한.       이 메서드를 호출 하면 모든 변경 이전 프레임으로 삭제 됩니다. 다른 프레임을 선택 하기 전에 픽셀 값 및 속성에 대 한 변경을 포함 하는 현재 프레임에 대 한 모든 변경 내용을 저장 합니다. SelectActiveFrame 메서드에 대 한 호출에 성공 하면 (예외가 발생 하지 않으면) 메서드가 0을 반환 합니다."
  syntax:
    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: "A <xref href=&quot;System.Drawing.Imaging.FrameDimension&quot;> </xref> 차원 유형의 id를 지정 하는 합니다."
    - id: frameIndex
      type: System.Int32
      description: "현재 프레임의 인덱스입니다."
    return:
      type: System.Int32
      description: "항상 0을 반환 합니다."
  overload: System.Drawing.Image.SelectActiveFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 속성 항목 (메타 데이터의 일부)를 저장 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이미지 형식 속성 항목을 지원 하지 않으면 경우이 메서드에서 throw <xref:System.ArgumentException>메시지와 함께 &quot;속성이 지원 되지 않습니다.&quot;</xref:System.ArgumentException> 이미지 형식 속성 항목을 지원 하지만 설정 하려고 하는 특정 속성을 지원 하지 않습니다을이 메서드 시도가 무시 하지만 예외를 throw 하지 않습니다.       어렵습니다 속성 항목 들을 설정 하기 때문에 <xref:System.Drawing.Imaging.PropertyItem>클래스 생성자가 없는 공개.</xref:System.Drawing.Imaging.PropertyItem> 이 제한을 해결 하기 위해 한 가지 방법은 얻으려고 것는 <xref:System.Drawing.Imaging.PropertyItem>검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A>속성 값 또는 호출은 <xref:System.Drawing.Image.GetPropertyItem%2A>의 메서드는 <xref:System.Drawing.Image>속성 항목에 이미 있는.</xref:System.Drawing.Image> </xref:System.Drawing.Image.GetPropertyItem%2A> </xref:System.Drawing.Image.PropertyItems%2A> </xref:System.Drawing.Imaging.PropertyItem> 다음의 필드를 설정할 수는 <xref:System.Drawing.Imaging.PropertyItem>SetPropertyItem를 전달 합니다.</xref:System.Drawing.Imaging.PropertyItem>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and SetPropertyItem methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#7](~/add/codesnippet/csharp/m-system.drawing.image.s_2_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#7](~/add/codesnippet/cpp/m-system.drawing.image.s_2_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#7](~/add/codesnippet/visualbasic/m-system.drawing.image.s_2_1.vb)]"
  syntax:
    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);
    parameters:
    - id: propitem
      type: System.Drawing.Imaging.PropertyItem
      description: "<xref href=&quot;System.Drawing.Imaging.PropertyItem&quot;> </xref> 저장할 수 있습니다."
  overload: System.Drawing.Image.SetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 이미지의 이미지 형식 속성 항목을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Drawing.Image.Size
  id: Size
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 이미지의 픽셀에서 너비와 높이 가져옵니다."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 너비와 높이이 이미지를 픽셀 단위로 나타내는 구조입니다."
  overload: System.Drawing.Image.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Image
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 개체를 직렬화 하는 데 필요한 데이터를 사용 합니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "대상 (참조 <xref:System.Runtime.Serialization.StreamingContext>)이이 serialization에 대 한.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Tag
  id: Tag
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이미지에 대 한 추가 데이터를 제공 하는 개체를 가져오거나 설정 합니다."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>이미지에 대 한 추가 데이터를 제공 하는.</xref:System.Object>"
  overload: System.Drawing.Image.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.VerticalResolution
  id: VerticalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 인치 당 픽셀의 수직 해상도 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  syntax:
    content: public float VerticalResolution { get; }
    return:
      type: System.Single
      description: "세로 해상도이 인치 당 픽셀 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.VerticalResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Image.Width
  id: Width
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "너비를 픽셀 단위로이 가져옵니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, Width, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.ImageExample#1](~/add/codesnippet/csharp/p-system.drawing.image.w_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#1](~/add/codesnippet/cpp/p-system.drawing.image.w_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#1](~/add/codesnippet/visualbasic/p-system.drawing.image.w_1.vb)]"
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "너비를 픽셀 단위로이 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Image.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Drawing.Image.Clone
  parent: System.Drawing.Image
  isExternal: false
  name: Clone()
  nameWithType: Image.Clone()
  fullName: System.Drawing.Image.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Image.Dispose
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: System.Drawing.Image.Dispose()
- uid: System.Drawing.Image.Dispose(System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: System.Drawing.Image.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Image.Finalize
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: System.Drawing.Image.Finalize()
- uid: System.Drawing.Image.Flags
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: System.Drawing.Image.Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Image.FrameDimensionsList
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: System.Drawing.Image.FrameDimensionsList
- uid: System.Guid[]
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.FromFile(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: System.Drawing.Image.FromFile(String)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String,Boolean)
  nameWithType: Image.FromFile(String,Boolean)
  fullName: System.Drawing.Image.FromFile(String,Boolean)
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr,IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr,IntPtr)
  fullName: System.Drawing.Image.FromHbitmap(IntPtr,IntPtr)
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: System.Drawing.Image.FromStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream,Boolean,Boolean)
  nameWithType: Image.FromStream(Stream,Boolean,Boolean)
  fullName: System.Drawing.Image.FromStream(Stream,Boolean,Boolean)
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: System.Drawing.Image.GetBounds(GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: System.Drawing.Image.GetEncoderParameterList(Guid)
- uid: System.Drawing.Imaging.EncoderParameters
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameters
  nameWithType: EncoderParameters
  fullName: System.Drawing.Imaging.EncoderParameters
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: System.Drawing.Image.GetFrameCount(FrameDimension)
- uid: System.Drawing.Imaging.FrameDimension
  parent: System.Drawing.Imaging
  isExternal: false
  name: FrameDimension
  nameWithType: FrameDimension
  fullName: System.Drawing.Imaging.FrameDimension
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: System.Drawing.Image.GetPixelFormatSize(PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: System.Drawing.Image.GetPropertyItem(Int32)
- uid: System.Drawing.Imaging.PropertyItem
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
  fullName: System.Drawing.Image.GetThumbnailImage(Int32,Int32,Image+GetThumbnailImageAbort,IntPtr)
- uid: System.Drawing.Image.GetThumbnailImageAbort
  parent: System.Drawing
  isExternal: false
  name: Image+GetThumbnailImageAbort
  nameWithType: Image+GetThumbnailImageAbort
  fullName: System.Drawing.Image+GetThumbnailImageAbort
- uid: System.Drawing.Image.Height
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: System.Drawing.Image.Height
- uid: System.Drawing.Image.HorizontalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: System.Drawing.Image.HorizontalResolution
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsAlphaPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsCanonicalPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: System.Drawing.Image.IsExtendedPixelFormat(PixelFormat)
- uid: System.Drawing.Image.Palette
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: System.Drawing.Image.Palette
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Image.PhysicalDimension
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: System.Drawing.Image.PhysicalDimension
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Image.PixelFormat
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: System.Drawing.Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: System.Drawing.Image.PropertyIdList
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.PropertyItems
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: System.Drawing.Image.PropertyItems
- uid: System.Drawing.Imaging.PropertyItem[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem[]
  spec.csharp:
  - uid: System.Drawing.Imaging.PropertyItem
    name: PropertyItem
    nameWithType: PropertyItem
    fullName: PropertyItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.RawFormat
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: System.Drawing.Image.RawFormat
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: System.Drawing.Image.RemovePropertyItem(Int32)
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: System.Drawing.Image.RotateFlip(RotateFlipType)
- uid: System.Drawing.RotateFlipType
  parent: System.Drawing
  isExternal: false
  name: RotateFlipType
  nameWithType: RotateFlipType
  fullName: System.Drawing.RotateFlipType
- uid: System.Drawing.Image.Save(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: System.Drawing.Image.Save(String)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageFormat)
  nameWithType: Image.Save(Stream,ImageFormat)
  fullName: System.Drawing.Image.Save(Stream,ImageFormat)
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageFormat)
  nameWithType: Image.Save(String,ImageFormat)
  fullName: System.Drawing.Image.Save(String,ImageFormat)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(Stream,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(Stream,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Imaging.ImageCodecInfo
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String,ImageCodecInfo,EncoderParameters)
  nameWithType: Image.Save(String,ImageCodecInfo,EncoderParameters)
  fullName: System.Drawing.Image.Save(String,ImageCodecInfo,EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(Image,EncoderParameters)
  nameWithType: Image.SaveAdd(Image,EncoderParameters)
  fullName: System.Drawing.Image.SaveAdd(Image,EncoderParameters)
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame(FrameDimension,Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension,Int32)
  fullName: System.Drawing.Image.SelectActiveFrame(FrameDimension,Int32)
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: System.Drawing.Image.SetPropertyItem(PropertyItem)
- uid: System.Drawing.Image.Size
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: System.Drawing.Image.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Image.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Image.Tag
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: System.Drawing.Image.Tag
- uid: System.Drawing.Image.VerticalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: System.Drawing.Image.VerticalResolution
- uid: System.Drawing.Image.Width
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: System.Drawing.Image.Width
- uid: System.Drawing.Image.Clone*
  parent: System.Drawing.Image
  isExternal: false
  name: Clone
  nameWithType: Image.Clone
- uid: System.Drawing.Image.Dispose*
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose
  nameWithType: Image.Dispose
- uid: System.Drawing.Image.Finalize*
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize
  nameWithType: Image.Finalize
- uid: System.Drawing.Image.Flags*
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
- uid: System.Drawing.Image.FrameDimensionsList*
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
- uid: System.Drawing.Image.FromFile*
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile
  nameWithType: Image.FromFile
- uid: System.Drawing.Image.FromHbitmap*
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap
  nameWithType: Image.FromHbitmap
- uid: System.Drawing.Image.FromStream*
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream
  nameWithType: Image.FromStream
- uid: System.Drawing.Image.GetBounds*
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds
  nameWithType: Image.GetBounds
- uid: System.Drawing.Image.GetEncoderParameterList*
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList
  nameWithType: Image.GetEncoderParameterList
- uid: System.Drawing.Image.GetFrameCount*
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount
  nameWithType: Image.GetFrameCount
- uid: System.Drawing.Image.GetPixelFormatSize*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize
  nameWithType: Image.GetPixelFormatSize
- uid: System.Drawing.Image.GetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem
  nameWithType: Image.GetPropertyItem
- uid: System.Drawing.Image.GetThumbnailImage*
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage
  nameWithType: Image.GetThumbnailImage
- uid: System.Drawing.Image.Height*
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
- uid: System.Drawing.Image.HorizontalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
- uid: System.Drawing.Image.IsAlphaPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat
  nameWithType: Image.IsAlphaPixelFormat
- uid: System.Drawing.Image.IsCanonicalPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat
  nameWithType: Image.IsCanonicalPixelFormat
- uid: System.Drawing.Image.IsExtendedPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat
  nameWithType: Image.IsExtendedPixelFormat
- uid: System.Drawing.Image.Palette*
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
- uid: System.Drawing.Image.PhysicalDimension*
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
- uid: System.Drawing.Image.PixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
- uid: System.Drawing.Image.PropertyItems*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
- uid: System.Drawing.Image.RawFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
- uid: System.Drawing.Image.RemovePropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem
  nameWithType: Image.RemovePropertyItem
- uid: System.Drawing.Image.RotateFlip*
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip
  nameWithType: Image.RotateFlip
- uid: System.Drawing.Image.Save*
  parent: System.Drawing.Image
  isExternal: false
  name: Save
  nameWithType: Image.Save
- uid: System.Drawing.Image.SaveAdd*
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd
  nameWithType: Image.SaveAdd
- uid: System.Drawing.Image.SelectActiveFrame*
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame
  nameWithType: Image.SelectActiveFrame
- uid: System.Drawing.Image.SetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem
  nameWithType: Image.SetPropertyItem
- uid: System.Drawing.Image.Size*
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Image.Tag*
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
- uid: System.Drawing.Image.VerticalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
- uid: System.Drawing.Image.Width*
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
