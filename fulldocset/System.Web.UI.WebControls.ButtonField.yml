### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "데이터 바인딩된 컨트롤에서 단추로 표시 되는 필드를 나타냅니다."
  remarks: "ButtonField 클래스는 데이터 바인딩된 컨트롤에서 사용 됩니다 (예: <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>) 표시 되는 각 레코드에 대 한 단추를 표시 하려면.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> ButtonField 개체는 사용 되는 데이터 바인딩된 컨트롤에 따라 다르게 표시 됩니다. 예를 들어는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 열으로 ButtonField 개체를 표시 하는 동안는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 행으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       단추 필드에 단추를 클릭 하면 부모 데이터 바인딩된 컨트롤의 명령 이벤트를 발생 시킵니다. 명령 이벤트에 대 한 이벤트 처리기를 제공 하 여 명령 단추를 클릭할 때 수행 하는 사용자 정의 루틴을 제공할 수 있습니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView>발생는 <xref:System.Web.UI.WebControls.GridView.RowCommand>이벤트를 동안는 <xref:System.Web.UI.WebControls.DetailsView>발생는 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.RowCommand> </xref:System.Web.UI.WebControls.GridView>       명령 이벤트가 발생 하는 레코드의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>데이터 바인딩된 컨트롤에 대 한 명령 이벤트에 전달 되는 이벤트 인수의 속성.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> ButtonField 클래스를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>적절 한 인덱스 값을 갖는 속성입니다.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>       표시할 단추 종류를 지정 하려면 사용 된 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>속성.</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 링크 또는 명령 단추를 표시할 때 사용 된 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>속성을 단추에 표시할 캡션을 지정 합니다.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > 설정 하는 경우는 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>속성, 동일한 캡션 ButtonField 공유의 모든 단추.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       또는 ButtonField 개체의 필드는 데이터 원본에 바인딩할 수 있습니다. 이 옵션을 사용 하면 ButtonField 개체에 있는 단추에 대 한 서로 다른 캡션을 표시할 수 있습니다. 지정된 된 필드에 있는 값은 단추의 텍스트 캡션을에 사용 됩니다. 설정의 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>ButtonField 개체 데이터 원본의 필드에에서 바인딩할 속성.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       이미지 단추를 표시할 때 사용 된 <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>속성을 통해 ButtonField 개체 단추에 표시할 이미지를 지정 합니다.</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>      > [!NOTE] > ButtonField 개체의 모든 단추는 동일한 이미지를 공유 합니다.       데이터 바인딩된 컨트롤에서 ButtonField 개체를 설정 하 여 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>       ButtonField 개체를 사용 하는 머리글 및 바닥글 섹션을 사용자 지정할 수 있습니다. 캡션을 머리글 또는 바닥글 섹션에 표시 하려면 설정는 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>속성을 각각.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 헤더 섹션의 텍스트를 표시 하는 대신 설정 하 여 이미지를 표시할 수는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>속성.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> ButtonField 개체의 헤더 섹션을 숨기려면 설정는 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>속성을 `false`.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>      > [!NOTE] > 일부 데이터 바인딩된 컨트롤 (예:는 <xref:System.Web.UI.WebControls.GridView>컨트롤) 표시 하거나 컨트롤의 전체 헤더 섹션을 숨길 수.</xref:System.Web.UI.WebControls.GridView> 이러한 데이터 바인딩된 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>개별 단추 필드에 대 한 속성.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> 표시 하거나 사용 합니다 (있는 경우)는 데이터 바인딩된 컨트롤의 전체 헤더 섹션을 숨길는 `ShowHeader` 컨트롤에 대 한 속성입니다.       또한 사용자 지정할 수 있습니다 (글꼴 색, 배경색, 및 등) ButtonField 개체의 모양을 필드의 다른 부분에 대 한 스타일 속성을 설정 합니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 에 대 한 스타일 설정을 |   |--------------------|----------------------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| ButtonField의 자식 웹 서버 컨트롤입니다. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| ButtonField의 바닥글 섹션. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| ButtonField의 헤더 섹션. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| 데이터 항목에는 ButtonField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.ButtonField>클래스</xref:System.Web.UI.WebControls.ButtonField> 의 새 인스턴스를 초기화 ButtonField 생성자를 사용 합니다. 이 생성자는 동적으로 만든된 데이터 바인딩된 컨트롤에 필드를 추가 하는 경우 일반적으로 사용 됩니다.       추가 하는 <xref:System.Web.UI.WebControls.ButtonField>데이터 바인딩된 컨트롤에 동적으로 개체를 새 <xref:System.Web.UI.WebControls.ButtonField>개체 속성을 설정 하 고 데이터 바인딩된 컨트롤에 대 한 필드 컬렉션에 추가 합니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> 예를 들어, 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 추가 합니다는 <xref:System.Web.UI.WebControls.ButtonField>개체는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 추가할 수 있지만 필드 동적으로 데이터 바인딩된 컨트롤에 필드를 정적으로 선언 하 고 다음 표시 하거나 숨길 수, 적절 하 게 합니다. 부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄이는 모든 필드를 정적으로 선언 합니다."
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 단추 수행할 동작을 나타내는 문자열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체를 클릭 합니다."
  remarks: "CommandName 속성을 사용 하 여 명령 이름의와 같은 연결할 `&quot;Add&quot;` 또는 `&quot;Remove&quot;`의 단추는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> 명령 단추를 클릭할 때 수행할 동작을 식별 하는 모든 문자열을 CommandName 속성을 설정할 수 있습니다. 다음 프로그래밍 방식으로 이벤트 처리기에서 명령 이름을 확인 있고 적절 한 조치를 수행 합니다.      > [!NOTE] >의 모든 단추는 <xref:System.Web.UI.WebControls.ButtonField>동일한 명령 이름을 공유 하는 개체입니다.</xref:System.Web.UI.WebControls.ButtonField>       데이터 바인딩된 컨트롤 특정 명령 이름을 인식 하 고 자동으로 발생 하 고이 컨트롤에 대 한 적절 한 이벤트를 처리할 만듭니다. 다음 명령은 이름이 인식 됩니다:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;` 페이징을 호출 하기 위해 CommandName로 설정 `&quot;Page&quot;` 및 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>는 포함 된 <xref:System.Web.UI.WebControls.Button>컨트롤을 `&quot;First&quot;`, `&quot;Last&quot;`, `&quot;Prev&quot;`, `&quot;Next&quot;`, 페이지 번호 또는.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 그러나 이후에 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>에 대 한는 <xref:System.Web.UI.WebControls.ButtonField>컨트롤은 항상 정수 행 인덱스는 <xref:System.Web.UI.WebControls.ButtonField>컨트롤 페이징을 호출 하는 데 적합 하지 않습니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 마찬가지로, CommandName을 설정 하 여 정렬을 호출할 수 `&quot;Sort&quot;`, <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>속성에 대 한는 <xref:System.Web.UI.WebControls.ButtonField>컨트롤이 항상 정수 행 인덱스입니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 이러한 이유로 <xref:System.Web.UI.WebControls.ButtonField>컨트롤 정렬 호출에 적합 하지 않습니다.</xref:System.Web.UI.WebControls.ButtonField> 사용자 지정에 대 한 명령 이름와 같은 `&quot;Add&quot;` 및 `&quot;Remove&quot;`, 명령 이름을 확인 하 고 일부 사용자 지정 작업을 수행 하는 이벤트 코드를 작성 해야 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DataControlCommands>.</xref:System.Web.UI.WebControls.DataControlCommands> 을 참조 하십시오.      > [!NOTE] > 일부 명령 이름을 모든 데이터 바인딩된 컨트롤에 의해 인식 됩니다. 예를 들어 `&quot;New&quot;` 에서 인식 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView>제어 및 `&quot;Select&quot;` 에서 인식 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "에 있는 단추를 수행할 작업의 이름에서 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 를 클릭 합니다."
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재의 속성을 복사 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 를 지정한 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>에서 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>현재 속성 복사 하려면 <xref:System.Web.UI.WebControls.ButtonFieldBase>-파생 개체는 <xref:System.Web.UI.WebControls.DataControlField>하 여 만든 개체는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>메서드.</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 현재의 속성을 복사할 대상 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만들고의 새 인스턴스를 반환 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 클래스입니다."
  remarks: "CreateField 메서드는에서 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>를 만드는 빈 기본 클래스의 메서드 <xref:System.Web.UI.WebControls.ButtonField>현재의 속성을 복사할 대상 개체 <xref:System.Web.UI.WebControls.ButtonField>-파생 된 개체입니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "새 인스턴스는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 클래스입니다."
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 바인딩된 값을 데이터 필드의 이름을 가져오거나 설정 합니다.는 <xref:System.Web.UI.WebControls.Button.Text*>의 속성은 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> 통해 렌더링 되는 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체.</xref:System.Web.UI.WebControls.Button.Text*>"
  remarks: "때는 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>속성의는 <xref:System.Web.UI.WebControls.ButtonField>개체가으로 설정 되는 <xref:System.Web.UI.WebControls.ButtonType>또는 <xref:System.Web.UI.WebControls.ButtonType>DataTextField 속성을 사용 하 여 바인딩할 필드의 이름을 지정 하려면, 값의 <xref:System.Web.UI.WebControls.ButtonField>개체.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 단추에 대 한 텍스트 필드의 값이 표시 됩니다는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> 필요에 따라 표시 된 텍스트를 설정 하 여 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>속성.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>       바인딩할 DataTextField 속성을 사용 하는 대신 한 <xref:System.Web.UI.WebControls.ButtonField>개체 필드를 데이터 원본에서 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>속성에 있는 단추의 텍스트에 대 한 정적 텍스트를 표시 하는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.Text%2A> </xref:System.Web.UI.WebControls.ButtonField> 경우는 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>속성을 사용 하는 경우 각 단추에 같은 캡션이.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > 경우는 DataTextField 및 <xref:System.Web.UI.WebControls.ButtonField.Text%2A>속성이 모두 설정, DataTextField 속성이 우선 합니다.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "바인딩할 필드의 이름에서 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;), DataTextField 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드의 값에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "DataTextFormatString 속성을 사용 하 여에 표시 되는 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> DataTextFormatString 속성을 설정 하지 않으면 경우 필드에 대 한 값은 특수 한 서식을 없이 표시 됩니다.      > [!NOTE] > 형식 문자열 적용 된 경우에만 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>속성이 설정 되어.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       형식 문자열 리터럴 문자열일 수 및 일반적으로 필드의 값에 대 한 자리 표시자를 포함 합니다. 예를 들어 형식 문자열에서에서 `&quot;Item Value: {0}&quot;`, `{0}` 에 표시 될 때 자리 표시자 필드에 대 한 값으로 대체 됩니다는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> 형식 문자열의 나머지 리터럴 텍스트로 표시 됩니다.      > [!NOTE] > 데이터 원본의 필드에 대 한 값은 최종 표시 텍스트에 포함 되지 않은 형식 문자열에 자리 표시 자가 포함 되어 있지 않으면, 합니다.       자리 표시자 콜론으로 구분 하 고 형태로 중괄호 두 부분으로 이루어져 { `A` : `Bxx` }. 값의 콜론 앞 (`A` 예:에서)은&0;부터 시작 하는 매개 변수 목록의에 필드 값에 대 한 인덱스를 지정 합니다.      > [!NOTE] >이 `A` 매개 변수는 서식 지정 구문의 일부입니다. 각 셀에 하나의 필드 값이 있기 때문에이 값을 0으로 설정할 수만 있습니다.       콜론과 콜론 뒤의 값은 선택적입니다. 콜론 문자 (`B` 예:에서) 값을 표시 하는 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.      | 형식 문자와 | 설명 |   |----------------------|-----------------|   | `C`| 통화 형식으로 숫자 값을 표시 합니다. |   | `D`|&10; 진수 형식의 숫자 값을 표시 합니다. |   | `E`| Scientific (지 수) 형식으로 숫자 값을 표시 합니다. |   | `F`| 고정된 형식으로 숫자 값을 표시 합니다. |   | `G`| 일반 형식에서 숫자 값을 표시 합니다. |   | `N`| 숫자 형식으로 숫자 값을 표시 합니다. |   | `X`|&16; 진수 형식의 숫자 값을 표시 합니다. |      > [!NOTE] >을 제외 하 고 `X`, 형식 문자는 대/소문자 구분 하지 않습니다. `X` 형식 문자를&16; 진수 문자를 지정한 경우 표시 됩니다.       형식 문자 다음 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다. 예를 들어 형식 문자열 `&quot;{0:F2}&quot;` 소수 자릿수가 두 자리인 고정 소수점 숫자를 표시 합니다.       문자열 형식 지정에 대 한 자세한 내용은 참조 하십시오. [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다.       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "필드의 값에 대 한 표시 형식을 지정 하는 서식 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;), 필드 값에 특정 형식이 적용 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀에 대 한 지정 된 필드 값의 서식을 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체입니다."
  remarks: "FormatDataTextValue 메서드는 지정 된 형식으로 필드 값을 변환 하는 데 사용 되는 도우미 메서드는 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>속성.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "서식을 지정 하려면 필드 값입니다."
    return:
      type: System.String
      description: "필드 값으로 지정 된 형식으로 변환 된 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>속성.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "각 단추에 표시할 이미지를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체입니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>속성은 <xref:System.Web.UI.WebControls.ButtonField>개체가으로 설정 되는 <xref:System.Web.UI.WebControls.ButtonType>값, ImageUrl 속성을 사용 하 여 각 단추에 표시할 이미지를 지정 합니다.</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 이 이미지 클라이언트 브라우저에서 해당 형식을 지 원하는 모든 형식의 파일 (.jpg,.gif,.bmp, 및 등)도 가능 합니다.       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "각 단추에 표시할 이미지의 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;), ImageUrl 속성 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 초기화 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체입니다."
  remarks: "Initialize 메서드는 데이터 컨트롤에서 호출 됩니다는 <xref:System.Web.UI.WebControls.ButtonField>개체에 대 한 기본 개체 초기화를 수행 하려면 연결 된 필드 행 컬렉션에 추가 되기 전에 해당 필드의 인스턴스.</xref:System.Web.UI.WebControls.ButtonField> 와 같은 데이터 컨트롤 <xref:System.Web.UI.WebControls.DetailsView>및 <xref:System.Web.UI.WebControls.GridView>, 호출는 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>메서드에서 자신의 `CreateChildControls` 다른 메서드보다 먼저 메서드와 같은 `CreateRow`, 데이터와 특정 행을 만들기 위해 호출 됩니다.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Initialize 메서드를 호출 하 여 사용 하는 사용자 지정 데이터 바인딩된 컨트롤을 작성할 때 <xref:System.Web.UI.WebControls.TableCell>에 대 한 기본 초기화를 수행 하는 개체는 <xref:System.Web.UI.WebControls.ButtonField>개체입니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.TableCell> 이 메서드를 구현 프로그램 <xref:System.Web.UI.WebControls.ButtonField>-파생 된 형식 전에 개체를 초기화 해야 <xref:System.Web.UI.WebControls.TableCell>개체를 데이터 나 컨트롤에 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>메서드.</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정렬을; 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: control
      type: System.Web.UI.Control
      description: "소유 하는 데이터 컨트롤은 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>컨트롤을 나타내는 데이터를 다시 바인딩할 필요 하지 않습니다."
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 지정한 행 상태의 개체입니다."
  remarks: "InitializeCell 메서드 만듭니다 변수로 지정 된 단추 종류는 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>속성에 추가 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.DataControlFieldCell>개체입니다.</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>의 속성은 <xref:System.Web.UI.WebControls.Button>로 설정 되어 `rowIndex`.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 를 초기화 합니다."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> 행 (머리글, 바닥글 또는 데이터)의 유형을 나타내는 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    - id: rowIndex
      type: System.Int32
      description: "행의 인덱스&0;부터 시작 합니다."
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "각 단추에 대해 표시 되는 정적 캡션을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체입니다."
  remarks: "때 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> <xref:System.Web.UI.WebControls.ButtonField>개체가 <xref:System.Web.UI.WebControls.ButtonType>또는 <xref:System.Web.UI.WebControls.ButtonType> <xref:System.Web.UI.WebControls.ButtonField>.</xref:System.Web.UI.WebControls.ButtonField> 단추 캡션에 대 한 정적 텍스트를 표시 하려면 Text 속성을 사용 하는 값</xref:System.Web.UI.WebControls.ButtonType> 이</xref:System.Web.UI.WebControls.ButtonType> 설정</xref:System.Web.UI.WebControls.ButtonField> 의 속성</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> 각 단추에 동일한 캡션을 공유합니다.       정적 텍스트를 표시 하려면 Text 속성을 사용 하는 대신 한 <xref:System.Web.UI.WebControls.ButtonField>개체를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>바인딩할 속성은 <xref:System.Web.UI.WebControls.ButtonField>필드는 데이터 원본에.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField> 그러면 단추 한 캡션으로 필드의 값이 표시 됩니다.      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>텍스트 속성이 모두 설정 하 고, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       이 속성의 값은 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "각 단추에 대해 표시 되는 캡션을 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤이 있는 지 확인에 포함 된 한 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> 개체 콜백이 지원 합니다."
  remarks: "ValidateSupportsCallback 메서드는 지 여부를 확인할 컨트롤 하는 데 사용 되는 도우미 메서드입니다에 포함 된 한 <xref:System.Web.UI.WebControls.ButtonField>콜백이 지원 개체입니다.</xref:System.Web.UI.WebControls.ButtonField> 이 메서드는 콜백을 지원 되는 표시를 빈 메서드 (모든 코드를 포함 하지 않는 메서드)로 구현 됩니다.      > [!NOTE] > The ValidateSupportsCallback 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
