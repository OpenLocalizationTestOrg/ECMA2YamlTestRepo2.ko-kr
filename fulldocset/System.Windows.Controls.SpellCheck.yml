### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.SpellCheck
  id: SpellCheck
  children:
  - System.Windows.Controls.SpellCheck.CustomDictionaries
  - System.Windows.Controls.SpellCheck.CustomDictionariesProperty
  - System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)
  - System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)
  - System.Windows.Controls.SpellCheck.IsEnabled
  - System.Windows.Controls.SpellCheck.IsEnabledProperty
  - System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)
  - System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)
  - System.Windows.Controls.SpellCheck.SpellingReform
  - System.Windows.Controls.SpellCheck.SpellingReformProperty
  langs:
  - csharp
  name: SpellCheck
  nameWithType: SpellCheck
  fullName: System.Windows.Controls.SpellCheck
  type: Class
  summary: "와 같은 텍스트 편집 컨트롤에 실시간 맞춤법 검사 기능을 제공 <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 및 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
  remarks: "맞춤법 검사기를 사용 하려면 설정는 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName>속성을 `true` 텍스트 편집 컨트롤에.</xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> 이 맞춤법 검사기를 활성화 하면 다음 그림에 나와 있는 것 처럼 맞춤법이 틀린된 단어 빨간색 물결선을 사용 하 여 밑줄이 그어집니다. 맞춤법 검사기는 WPF는 기본 사전을 제공 하는 경우에 사용할 수 있습니다. [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], WPF 영어, 프랑스어, 독일어 및 스페인어로 대 한 사전을 제공 합니다.       ![맞춤법 검사 기능이 있는 Textbox](~/add/media/editing-textbox-with-spellchecking.png &quot;맞춤법 검사 기능이 있는 Textbox&quot;) 사용자 지정 사전에 추가 하려면 추가을 사전 파일의 위치는 <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A>컬렉션.</xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A>"
  syntax:
    content: public sealed class SpellCheck
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.CustomDictionaries
  id: CustomDictionaries
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: CustomDictionaries
  nameWithType: SpellCheck.CustomDictionaries
  fullName: System.Windows.Controls.SpellCheck.CustomDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "사전 컬렉션 사용자 지정 맞춤법 검사에 사용 되는 파일 위치를 가져옵니다."
  remarks: "사용자 지정 사전은 사전 파일은 확장명이.lex는 텍스트 파일을 사용 합니다. 사전 파일의 각 줄에는 올바른 철자도 허용 되는 한 단어를 포함 합니다. 파일의 첫 번째 줄 사전에 적용 되는 로캘 식별자 (LCID)를 지정할 수 있습니다. 로캘을 지정 하지 않으면 사전 모든 언어에 적용 됩니다. 자세한 내용은 참조 [로캘 Id](http://go.microsoft.com/fwlink/?LinkId=165561)합니다. 다음 예에서는 영어에 대 한 사전 파일의 처음 몇 줄을 보여 줍니다.      ```   #LID 1033   TextBlock   TextBox   ListBox   ```에 대 한 하나 이상의 사용자 지정 사전을 지정 하는 <xref:System.Windows.Controls.TextBox>또는에서 파생 되는 모든 클래스에 대 한 <xref:System.Windows.Controls.Primitives.TextBoxBase>, CustomDictionaries 컬렉션에 파일에 대 한 URI를 추가 하 여 사전 파일의 위치를 지정 합니다.</xref:System.Windows.Controls.Primitives.TextBoxBase> </xref:System.Windows.Controls.TextBox>      > [!NOTE] >를 사용 하 여 <xref:System.Collections.IList.Insert%2A>컬렉션은 CustomDictionaries에 파일을 추가 하는 예외를 발생 합니다.</xref:System.Collections.IList.Insert%2A> 대신를 사용 하 여 <xref:System.Collections.IList.Add%2A>및 <xref:System.Collections.IList.Remove%2A>컬렉션을 업데이트 하려면.</xref:System.Collections.IList.Remove%2A> </xref:System.Collections.IList.Add%2A>       사전 파일을 포함할 수는 로컬 컴퓨터에 설치 된 콘텐츠 파일 또는 로컬에 컴파일된 리소스 파일로 응용 프로그램에서 참조 된 어셈블리입니다. Pack Uri를 사용 하 여 파일을 참조할 수 있습니다. 자세한 내용은 참조 [WPF의 Pack Uri](~/add/includes/ajax-current-ext-md.md)합니다.       맞춤법 검사기를 사용 하려면 설정는 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName>속성을 `true` <xref:System.Windows.Controls.TextBox>또는 <xref:System.Windows.Controls.Primitives.TextBoxBase>.</xref:System.Windows.Controls.Primitives.TextBoxBase> 에서 파생 되는 임의의 클래스에</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> 에 대 한 모든 사용자 지정 사전 <xref:System.Windows.Controls.TextBox>기본 맞춤법 검사기 외에도 사용 됩니다.</xref:System.Windows.Controls.TextBox> 맞춤법 검사기에 대 한 자세한 내용은 <xref:System.Windows.Controls.SpellCheck>.</xref:System.Windows.Controls.SpellCheck> 을 참조 하십시오."
  example:
  - "The following example shows how to add two custom dictionaries to a <xref:System.Windows.Controls.RichTextBox>. The first custom dictionary (customwords.lex) is added in XAML. The file is included in the application as a content file and copied to the output directory. To use the <xref:System.Uri> element, you have to include the System namespace.  \n  \n `xmlns:sys=\"clr-namespace:System;assembly=System\"`  \n  \n The second custom dictionary (customwords2.lex) is added in the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler. The file is included as a resource file and compiled into the application assembly that is named WPFCustomDictionary.  \n  \n [!code-xml[WpfCustomDictionary#1](~/add/codesnippet/xaml/wpfcustomdictionary/window1.xaml#1)]  \n  \n [!code-cs[WpfCustomDictionary#2](~/add/codesnippet/csharp/wpfcustomdictionary/window1.xaml.cs#2)]\n [!code-vb[WpfCustomDictionary#2](~/add/codesnippet/visualbasic/wpfcustomdictionaries_vb/mainwindow.xaml.vb#2)]"
  syntax:
    content: public System.Collections.IList CustomDictionaries { get; }
    return:
      type: System.Collections.IList
      description: "용어 파일 위치의 컬렉션입니다."
  overload: System.Windows.Controls.SpellCheck.CustomDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.CustomDictionariesProperty
  id: CustomDictionariesProperty
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: CustomDictionariesProperty
  nameWithType: SpellCheck.CustomDictionariesProperty
  fullName: System.Windows.Controls.SpellCheck.CustomDictionariesProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.SpellCheck.CustomDictionaries*>종속성 속성입니다.</xref:System.Windows.Controls.SpellCheck.CustomDictionaries*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty CustomDictionariesProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)
  id: GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: GetCustomDictionaries(TextBoxBase)
  nameWithType: SpellCheck.GetCustomDictionaries(TextBoxBase)
  fullName: System.Windows.Controls.SpellCheck.GetCustomDictionaries(TextBoxBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 텍스트 편집 컨트롤에서 맞춤법 검사기를 사용자 지정에 사용 되는 어휘 집 파일 위치 컬렉션을 가져옵니다."
  remarks: "사용자 지정 사전은 사전 파일은 확장명이.lex 간단한 텍스트 파일을 사용 합니다. 사전 파일의 각 줄에는 올바른 철자도 허용 되는 한 단어를 포함 합니다. 파일의 첫 번째 줄 사전에 적용 되는 로캘 식별자 (LCID)를 지정할 수 있습니다. 로캘을 지정 하지 않으면 사전 모든 언어에 적용 됩니다. 자세한 내용은 참조 [로캘 Id](http://go.microsoft.com/fwlink/?LinkId=165561)합니다. 다음 예에서는 영어에 대 한 사전 파일의 처음 몇 줄을 보여 줍니다.      ```   #LID 1033   TextBlock   TextBox   ListBox   ```하나 이상의 사용자 지정 사전을 지정 하려면는 <xref:System.Windows.Controls.TextBox>또는 클래스에서 파생 되 <xref:System.Windows.Controls.Primitives.TextBoxBase>, 파일에 대 한 URI를 추가 하 여 사전 파일의 위치를 지정 된 <xref:System.Collections.IList>GetCustomDictionaries 메서드에 의해 반환 된.</xref:System.Collections.IList> </xref:System.Windows.Controls.Primitives.TextBoxBase> </xref:System.Windows.Controls.TextBox>       맞춤법 검사기를 사용 하려면 설정는 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName>속성을 `true` <xref:System.Windows.Controls.TextBox>또는 <xref:System.Windows.Controls.Primitives.TextBoxBase>.</xref:System.Windows.Controls.Primitives.TextBoxBase> 에서 파생 되는 임의의 클래스에</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> 에 대 한 모든 사용자 지정 사전 <xref:System.Windows.Controls.TextBox>기본 맞춤법 검사기 외에도 사용 됩니다.</xref:System.Windows.Controls.TextBox> 맞춤법 검사기에 대 한 자세한 내용은 <xref:System.Windows.Controls.SpellCheck>.</xref:System.Windows.Controls.SpellCheck> 을 참조 하십시오."
  syntax:
    content: public static System.Collections.IList GetCustomDictionaries (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);
    parameters:
    - id: textBoxBase
      type: System.Windows.Controls.Primitives.TextBoxBase
      description: "사전 파일의 해당 컬렉션에서 검색 되는 텍스트 편집 컨트롤입니다."
    return:
      type: System.Collections.IList
      description: "용어 파일 위치의 컬렉션입니다."
  overload: System.Windows.Controls.SpellCheck.GetCustomDictionaries*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>textBoxBase </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)
  id: GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: GetIsEnabled(TextBoxBase)
  nameWithType: SpellCheck.GetIsEnabled(TextBoxBase)
  fullName: System.Windows.Controls.SpellCheck.GetIsEnabled(TextBoxBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 텍스트 편집 컨트롤에서 맞춤법 검사기 사용 되는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public static bool GetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);
    parameters:
    - id: textBoxBase
      type: System.Windows.Controls.Primitives.TextBoxBase
      description: "확인 하는 텍스트 편집 컨트롤입니다. 예제 컨트롤에는 <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 및 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>텍스트 편집 컨트롤에서 맞춤법 검사기를 활성화 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.SpellCheck.GetIsEnabled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>textBoxBase </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.IsEnabled
  id: IsEnabled
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: IsEnabled
  nameWithType: SpellCheck.IsEnabled
  fullName: System.Windows.Controls.SpellCheck.IsEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "맞춤법 검사기가 텍스트 편집 컨트롤에서와 같은 사용 되는지 여부를 결정 하는 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
  remarks: "이 종속성 속성에는 다음과 같은 특수화 된 쓰기 전용 연결 된 속성 사용법입니다. [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 속성을 설정 하기 위한 구문은 `<` *textBoxBaseClass* **SpellCheck.IsEnabled**`=&quot;`*boolValue*`&quot; .../>`여기서 *textBoxBaseClass* 에서 파생 된 클래스에 대 한 개체 요소가 <xref:System.Windows.Controls.Primitives.TextBoxBase>, 및 *boolValue* 있거나 `true` 또는 `false` (대/소문자 구분).</xref:System.Windows.Controls.Primitives.TextBoxBase> 코드에서 연결된 된 속성으로 속성을 설정 하려면 참조는 <xref:System.Windows.Controls.SpellCheck.SetIsEnabled%2A>메서드.</xref:System.Windows.Controls.SpellCheck.SetIsEnabled%2A> 일치 하는 `GetIsEnabled` 접근자입니다. 값을 현재 <xref:System.Windows.Controls.SpellCheck>개체에서 <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName>속성을 선택한 다음 get <xref:System.Windows.Controls.SpellCheck>.</xref:System.Windows.Controls.SpellCheck> IsEnabled 속성의 값을</xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName> </xref:System.Windows.Controls.SpellCheck> 가져오기      <a name=&quot;xamlTextUsage_IsEnabled&quot;></a># # XAML 텍스트 사용 설명을 참조 하세요.      <a name=&quot;dependencyPropertyInfo_IsEnabled&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.SpellCheck.IsEnabledProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.SpellCheck.IsEnabledProperty>"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에서 맞춤법 검사기를 활성화 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.SpellCheck.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: SpellCheck.IsEnabledProperty
  fullName: System.Windows.Controls.SpellCheck.IsEnabledProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.SpellCheck.IsEnabled*>종속성 속성입니다.</xref:System.Windows.Controls.SpellCheck.IsEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)
  id: SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: SetIsEnabled(TextBoxBase,Boolean)
  nameWithType: SpellCheck.SetIsEnabled(TextBoxBase,Boolean)
  fullName: System.Windows.Controls.SpellCheck.SetIsEnabled(TextBoxBase,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 텍스트 편집 컨트롤에서 맞춤법 검사기를 같은 사용할지 <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
  remarks: "이 메서드는 연결된 속성의 사용에 대 한 활성화는 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A>속성 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].</xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> 다음 예제와 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 사용 합니다."
  syntax:
    content: public static void SetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value);
    parameters:
    - id: textBoxBase
      type: System.Windows.Controls.Primitives.TextBoxBase
      description: "맞춤법 검사기를 사용할지를 텍스트 편집 컨트롤입니다. 예제 컨트롤에는 <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 및 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
    - id: value
      type: System.Boolean
      description: "텍스트 편집 컨트롤에서 맞춤법 검사기 사용 되는지 여부를 지정 하는 부울 값입니다."
  overload: System.Windows.Controls.SpellCheck.SetIsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)
  id: SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: SetSpellingReform(TextBoxBase,SpellingReform)
  nameWithType: SpellCheck.SetSpellingReform(TextBoxBase,SpellingReform)
  fullName: System.Windows.Controls.SpellCheck.SetSpellingReform(TextBoxBase,SpellingReform)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "맞춤법 검사기에서 사용 되는 맞춤법 개정 규칙을 결정 합니다."
  remarks: "이 방법으로 액세스 되는 맞춤법 개정 규칙은 1990의 프랑스어 및 독일어 맞춤법 개정을 참조 합니다. 다른 언어와 함께 사용할 경우 효과가 없습니다.       이 메서드는 연결된 속성의 사용에 대 한 활성화는 <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A>속성 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].</xref:System.Windows.Controls.SpellCheck.SpellingReform%2A>"
  syntax:
    content: public static void SetSpellingReform (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, System.Windows.Controls.SpellingReform value);
    parameters:
    - id: textBoxBase
      type: System.Windows.Controls.Primitives.TextBoxBase
      description: "맞춤법 검사기 적용 되는 텍스트 편집 컨트롤입니다. 예제 컨트롤에는 <xref href=&quot;System.Windows.Controls.TextBox&quot;> </xref> 및 <xref href=&quot;System.Windows.Controls.RichTextBox&quot;> </xref>합니다."
    - id: value
      type: System.Windows.Controls.SpellingReform
      description: "<xref:System.Windows.Controls.SpellCheck.SpellingReform*>는 맞춤법 개정 규칙을 결정 하는 값입니다.</xref:System.Windows.Controls.SpellCheck.SpellingReform*>"
  overload: System.Windows.Controls.SpellCheck.SetSpellingReform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.SpellingReform
  id: SpellingReform
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: SpellingReform
  nameWithType: SpellCheck.SpellingReform
  fullName: System.Windows.Controls.SpellCheck.SpellingReform
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "맞춤법 검사기에서 사용 되는 맞춤법 개정 규칙을 가져오거나 설정 합니다."
  remarks: "이 속성에 의해 결정 되는 맞춤법 개정 규칙 프랑스어 및 독일어 맞춤법 개정을 참조 합니다. 이 속성이 적용 되지 않습니다 다른 언어와 함께 사용 합니다.       이 종속성 속성에는 다음과 같은 특수화 된 쓰기 전용 연결 된 속성 사용법입니다. [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 속성을 설정 하기 위한 구문은 `<` *textBoxBaseClass* **SpellCheck.SpellingReform**`=&quot;`*enumValue*`&quot; .../>`여기서 *textBoxBaseClass* 에서 파생 된 클래스에 대 한 개체 요소가 <xref:System.Windows.Controls.Primitives.TextBoxBase>, 및 *enumValue* 의 값에 대 한 문자열 이름이 <xref:System.Windows.Controls.SpellingReform>열거형.</xref:System.Windows.Controls.SpellingReform> </xref:System.Windows.Controls.Primitives.TextBoxBase> 코드에서 연결된 된 속성으로 속성을 설정 하려면 참조는 <xref:System.Windows.Controls.SpellCheck.SetSpellingReform%2A>메서드.</xref:System.Windows.Controls.SpellCheck.SetSpellingReform%2A> 일치 하는 `GetSpellingReform` 접근자입니다. 값을 현재 <xref:System.Windows.Controls.SpellCheck>개체에서 <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName>속성을 선택한 다음 get <xref:System.Windows.Controls.SpellCheck>.</xref:System.Windows.Controls.SpellCheck> SpellingReform 속성의 값을</xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName> </xref:System.Windows.Controls.SpellCheck> 가져오기      <a name=&quot;xamlTextUsage_SpellingReform&quot;></a># # XAML 텍스트 사용 설명을 참조 하세요.      <a name=&quot;dependencyPropertyInfo_SpellingReform&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Controls.SpellCheck.SpellingReformProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Controls.SpellCheck.SpellingReformProperty>"
  syntax:
    content: public System.Windows.Controls.SpellingReform SpellingReform { get; set; }
    return:
      type: System.Windows.Controls.SpellingReform
      description: "맞춤법 검사기에서 사용 되는 맞춤법 개정 규칙입니다. 기본값은 <xref href=&quot;System.Windows.Controls.SpellingReform&quot;> </xref> 프랑스어 및 <xref href=&quot;System.Windows.Controls.SpellingReform&quot;> </xref> 독일어에 대 한 합니다."
  overload: System.Windows.Controls.SpellCheck.SpellingReform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.SpellCheck.SpellingReformProperty
  id: SpellingReformProperty
  parent: System.Windows.Controls.SpellCheck
  langs:
  - csharp
  name: SpellingReformProperty
  nameWithType: SpellCheck.SpellingReformProperty
  fullName: System.Windows.Controls.SpellCheck.SpellingReformProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "식별 된 <xref:System.Windows.Controls.SpellCheck.SpellingReform*>종속성 속성입니다.</xref:System.Windows.Controls.SpellCheck.SpellingReform*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SpellingReformProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Controls.SpellCheck.CustomDictionaries
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: CustomDictionaries
  nameWithType: SpellCheck.CustomDictionaries
  fullName: System.Windows.Controls.SpellCheck.CustomDictionaries
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Controls.SpellCheck.CustomDictionariesProperty
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: CustomDictionariesProperty
  nameWithType: SpellCheck.CustomDictionariesProperty
  fullName: System.Windows.Controls.SpellCheck.CustomDictionariesProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: GetCustomDictionaries(TextBoxBase)
  nameWithType: SpellCheck.GetCustomDictionaries(TextBoxBase)
  fullName: System.Windows.Controls.SpellCheck.GetCustomDictionaries(TextBoxBase)
- uid: System.Windows.Controls.Primitives.TextBoxBase
  parent: System.Windows.Controls.Primitives
  isExternal: false
  name: TextBoxBase
  nameWithType: TextBoxBase
  fullName: System.Windows.Controls.Primitives.TextBoxBase
- uid: System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: GetIsEnabled(TextBoxBase)
  nameWithType: SpellCheck.GetIsEnabled(TextBoxBase)
  fullName: System.Windows.Controls.SpellCheck.GetIsEnabled(TextBoxBase)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.SpellCheck.IsEnabled
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: IsEnabled
  nameWithType: SpellCheck.IsEnabled
  fullName: System.Windows.Controls.SpellCheck.IsEnabled
- uid: System.Windows.Controls.SpellCheck.IsEnabledProperty
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: IsEnabledProperty
  nameWithType: SpellCheck.IsEnabledProperty
  fullName: System.Windows.Controls.SpellCheck.IsEnabledProperty
- uid: System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SetIsEnabled(TextBoxBase,Boolean)
  nameWithType: SpellCheck.SetIsEnabled(TextBoxBase,Boolean)
  fullName: System.Windows.Controls.SpellCheck.SetIsEnabled(TextBoxBase,Boolean)
- uid: System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SetSpellingReform(TextBoxBase,SpellingReform)
  nameWithType: SpellCheck.SetSpellingReform(TextBoxBase,SpellingReform)
  fullName: System.Windows.Controls.SpellCheck.SetSpellingReform(TextBoxBase,SpellingReform)
- uid: System.Windows.Controls.SpellingReform
  parent: System.Windows.Controls
  isExternal: false
  name: SpellingReform
  nameWithType: SpellingReform
  fullName: System.Windows.Controls.SpellingReform
- uid: System.Windows.Controls.SpellCheck.SpellingReform
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SpellingReform
  nameWithType: SpellCheck.SpellingReform
  fullName: System.Windows.Controls.SpellCheck.SpellingReform
- uid: System.Windows.Controls.SpellCheck.SpellingReformProperty
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SpellingReformProperty
  nameWithType: SpellCheck.SpellingReformProperty
  fullName: System.Windows.Controls.SpellCheck.SpellingReformProperty
- uid: System.Windows.Controls.SpellCheck.CustomDictionaries*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: CustomDictionaries
  nameWithType: SpellCheck.CustomDictionaries
- uid: System.Windows.Controls.SpellCheck.GetCustomDictionaries*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: GetCustomDictionaries
  nameWithType: SpellCheck.GetCustomDictionaries
- uid: System.Windows.Controls.SpellCheck.GetIsEnabled*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: GetIsEnabled
  nameWithType: SpellCheck.GetIsEnabled
- uid: System.Windows.Controls.SpellCheck.IsEnabled*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: IsEnabled
  nameWithType: SpellCheck.IsEnabled
- uid: System.Windows.Controls.SpellCheck.SetIsEnabled*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SetIsEnabled
  nameWithType: SpellCheck.SetIsEnabled
- uid: System.Windows.Controls.SpellCheck.SetSpellingReform*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SetSpellingReform
  nameWithType: SpellCheck.SetSpellingReform
- uid: System.Windows.Controls.SpellCheck.SpellingReform*
  parent: System.Windows.Controls.SpellCheck
  isExternal: false
  name: SpellingReform
  nameWithType: SpellCheck.SpellingReform
