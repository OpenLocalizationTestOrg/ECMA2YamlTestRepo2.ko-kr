### YamlMime:ManagedReference
items:
- uid: System.Data.ForeignKeyConstraint
  id: ForeignKeyConstraint
  children:
  - System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  - System.Data.ForeignKeyConstraint.AcceptRejectRule
  - System.Data.ForeignKeyConstraint.Columns
  - System.Data.ForeignKeyConstraint.DeleteRule
  - System.Data.ForeignKeyConstraint.Equals(System.Object)
  - System.Data.ForeignKeyConstraint.GetHashCode
  - System.Data.ForeignKeyConstraint.RelatedColumns
  - System.Data.ForeignKeyConstraint.RelatedTable
  - System.Data.ForeignKeyConstraint.Table
  - System.Data.ForeignKeyConstraint.UpdateRule
  langs:
  - csharp
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
  type: Class
  summary: "값 또는 행이 삭제 되거나 업데이트 하는 경우 기본 키/외래 키 관계의 열 집합에 적용 하는 동작 제한을 나타냅니다."
  remarks: "ForeignKeyConstraint 열 또는 열에 값이 삭제 되거나 업데이트할 때 수행 하는 작업을 제한 합니다. 이러한 제약 조건은 기본 키 열과 함께 사용 하는 데 사용 됩니다. 두 테이블 간에 부모/자식 관계에서 부모 테이블에서 값을 삭제할 영향을 줄 수 자식 행에서 다음 방법 중 하나입니다.      -자식 행 수도 있습니다 (연계 동작)를 삭제 합니다.      -자식 열 (또는 열)의 값은 null 값으로 설정할 수 있습니다.      -자식 열 (또는 열)의 값을 기본값으로 설정할 수 있습니다.      -예외를 생성할 수 있습니다.       외래 키 개체에 포함 됩니다는 <xref:System.Data.ConstraintCollection>의 <xref:System.Data.DataTable>를 통해 액세스할는 <xref:System.Data.DataTable.Constraints%2A>속성.</xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable> </xref:System.Data.ConstraintCollection>       경우가 아니면 제약 조건이 적용 되지 않습니다는 <xref:System.Data.DataSet.EnforceConstraints%2A>속성이 `true`.</xref:System.Data.DataSet.EnforceConstraints%2A>       <xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A>때마다 적용 되는 <xref:System.Data.DataTable>개체의 <xref:System.Data.DataTable.AcceptChanges%2A>메서드가 호출 됩니다.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A>"
  example:
  - "The following example creates a ForeignKeyConstraint, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint Example#1](~/add/codesnippet/visualbasic/t-system.data.foreignkey_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("ConstraintName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ForeignKeyConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class ForeignKeyConstraint : System.Data.Constraint
  inheritance:
  - System.Object
  - System.Data.Constraint
  implements: []
  inheritedMembers:
  - System.Data.Constraint._DataSet
  - System.Data.Constraint.CheckStateForProperty
  - System.Data.Constraint.ConstraintName
  - System.Data.Constraint.ExtendedProperties
  - System.Data.Constraint.SetDataSet(System.Data.DataSet)
  - System.Data.Constraint.ToString
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 지정한 부모 및 자식 클래스 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.ForeignKeyConstraint Example#1](~/add/codesnippet/visualbasic/7b884ca9-7295-4ee4-9e9f-_1.vb)]"
  syntax:
    content: public ForeignKeyConstraint (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
    - id: childColumn
      type: System.Data.DataColumn
      description: "자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 부모 및 자식의 지정 된 배열이 포함 된 클래스 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.ForeignKeyConstraint2 Example#1](~/add/codesnippet/visualbasic/6a5fdb43-18da-430f-89ae-_1.vb)]"
  syntax:
    content: public ForeignKeyConstraint (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "부모 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "자식 배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 된 지정 된 이름, 부모 및 자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.ForeignKeyConstraint1 Example#1](~/add/codesnippet/visualbasic/f49c9e20-f0ff-4865-a418-_1.vb)]"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: constraintName
      type: System.String
      description: "제약 조건의 이름입니다."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
    - id: childColumn
      type: System.Data.DataColumn
      description: "자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 된 지정한 이름과 부모 및 자식 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.ForeignKeyConstraint3 Example#1](~/add/codesnippet/visualbasic/a9316ee7-f4ba-4b40-ac64-_1.vb)]"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: constraintName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>합니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열인 경우 제약 조건 컬렉션에 추가할 때 지정 될 기본 이름입니다."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "부모 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "자식 배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에서입니다."
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  id: '#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공 됩니다. <xref href=&quot;System.Data.ForeignKeyConstraint&quot;></xref>이 생성자를 사용 하 여 만든 개체를 통해 컬렉션에 추가 다음 해야 <> </> *> 합니다. 테이블 및 열 지정한 이름 가진 메서드가 호출 시점에 존재 해야 경우 <> </> *>이 생성자, 테이블 및 지정 된 이름 가진 열이 시점에 존재 해야 하는 호출 하기 전에 호출 된 하 <xref:System.Data.DataTable.EndInit*>호출 됩니다.</xref:System.Data.DataTable.EndInit*>"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, string parentTableName, string[] parentColumnNames, string[] childColumnNames, System.Data.AcceptRejectRule acceptRejectRule, System.Data.Rule deleteRule, System.Data.Rule updateRule);
    parameters:
    - id: constraintName
      type: System.String
      description: "제약 조건의 이름입니다."
    - id: parentTableName
      type: System.String
      description: "부모의 이름이 <xref href=&quot;System.Data.DataTable&quot;> </xref> 포함 하는 부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: parentColumnNames
      type: System.String[]
      description: "부모의 이름 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: childColumnNames
      type: System.String[]
      description: "자식 이름 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: acceptRejectRule
      type: System.Data.AcceptRejectRule
      description: "중 하나는 <xref href=&quot;System.Data.AcceptRejectRule&quot;> </xref> 값입니다. Possible values include <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>."
    - id: deleteRule
      type: System.Data.Rule
      description: '중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 행이 삭제 되는 때 사용할 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다. Possible values include: <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetNull&quot; name=&quot;SetNull&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetDefault&quot; name=&quot;SetDefault&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>.'
    - id: updateRule
      type: System.Data.Rule
      description: '중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 행이 업데이트 될 때 사용할 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다. Possible values include: <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetNull&quot; name=&quot;SetNull&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetDefault&quot; name=&quot;SetDefault&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>.'
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공 됩니다. <xref href=&quot;System.Data.ForeignKeyConstraint&quot;></xref>이 생성자를 사용 하 여 만든 개체를 통해 컬렉션에 추가 다음 해야 <> </> *> 합니다. 테이블 및 열 지정한 이름 가진 메서드가 호출 시점에 존재 해야 경우 <> </> *>이 생성자, 테이블 및 지정 된 이름 가진 열이 시점에 존재 해야 하는 호출 하기 전에 호출 된 하 <xref:System.Data.DataTable.EndInit*>호출 됩니다.</xref:System.Data.DataTable.EndInit*>"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, string parentTableName, string parentTableNamespace, string[] parentColumnNames, string[] childColumnNames, System.Data.AcceptRejectRule acceptRejectRule, System.Data.Rule deleteRule, System.Data.Rule updateRule);
    parameters:
    - id: constraintName
      type: System.String
      description: "제약 조건의 이름입니다."
    - id: parentTableName
      type: System.String
      description: "부모의 이름이 <xref href=&quot;System.Data.DataTable&quot;> </xref> 포함 하는 부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: parentTableNamespace
      type: System.String
      description: "<xref:System.Data.DataTable.Namespace*>.</xref:System.Data.DataTable.Namespace*> 의 이름"
    - id: parentColumnNames
      type: System.String[]
      description: "부모의 이름 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: childColumnNames
      type: System.String[]
      description: "자식 이름 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건에는 개체입니다."
    - id: acceptRejectRule
      type: System.Data.AcceptRejectRule
      description: "중 하나는 <xref href=&quot;System.Data.AcceptRejectRule&quot;> </xref> 값입니다. Possible values include <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>."
    - id: deleteRule
      type: System.Data.Rule
      description: '중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 행이 삭제 되는 때 사용할 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다. Possible values include: <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetNull&quot; name=&quot;SetNull&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetDefault&quot; name=&quot;SetDefault&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>.'
    - id: updateRule
      type: System.Data.Rule
      description: '중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 행이 업데이트 될 때 사용할 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다. Possible values include: <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetNull&quot; name=&quot;SetNull&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SetDefault&quot; name=&quot;SetDefault&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>.'
  overload: System.Data.ForeignKeyConstraint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 두 열 모두이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야 합니다.       -또는-테이블에 동일한 속해 있지 않습니다 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.AcceptRejectRule
  id: AcceptRejectRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: AcceptRejectRule
  nameWithType: ForeignKeyConstraint.AcceptRejectRule
  fullName: System.Data.ForeignKeyConstraint.AcceptRejectRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 제약 조건에서 수행 해야 하는 작업을 나타냅니다 때 <xref:System.Data.DataTable.AcceptChanges*>가 호출 됩니다.</xref:System.Data.DataTable.AcceptChanges*>"
  remarks: "로 변경 된 <xref:System.Data.DataRow>또는 <xref:System.Data.DataTable>최종 될 때까지 적용 되지 않습니다는 `AcceptChanges` 메서드가 호출 됩니다.</xref:System.Data.DataTable> </xref:System.Data.DataRow> 해당 시점에 AcceptRejectRule 변경 되거나 삭제 된 모든 값에는 작업 과정을 결정 합니다."
  example:
  - "The following example creates a <xref:System.Data.ForeignKeyConstraint>, sets its AcceptRejectRule, and adds the constraint to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.DeleteRule Example#1](~/add/codesnippet/visualbasic/p-system.data.foreignkey_4_1.vb)]"
  syntax:
    content: public virtual System.Data.AcceptRejectRule AcceptRejectRule { get; set; }
    return:
      type: System.Data.AcceptRejectRule
      description: "중 하나는 <xref href=&quot;System.Data.AcceptRejectRule&quot;> </xref> 값입니다. 가능한 값에는 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ForeignKeyConstraint.AcceptRejectRule*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.Columns
  id: Columns
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Columns
  nameWithType: ForeignKeyConstraint.Columns
  fullName: System.Data.ForeignKeyConstraint.Columns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "자식에이 제약 조건의 열을 가져옵니다."
  remarks: ''
  example:
  - "The following example returns an array of <xref:System.Data.DataColumn> objects through the Columns property.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.Columns Example#1](~/add/codesnippet/visualbasic/p-system.data.foreignkey_0_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] Columns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건의 자식 열에는 개체입니다."
  overload: System.Data.ForeignKeyConstraint.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.DeleteRule
  id: DeleteRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: DeleteRule
  nameWithType: ForeignKeyConstraint.DeleteRule
  fullName: System.Data.ForeignKeyConstraint.DeleteRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행이 삭제 되는 경우이 제약 조건에서 발생 하는 동작을 가져오거나 설정 합니다."
  remarks: "행은 부모 테이블에서 삭제 되 면는 DeleteRule 자식 테이블 (또는 테이블)의 열에서 수행 될 작업을 결정 합니다. 규칙 설정 된 경우 `Cascade`, 자식 행이 삭제 됩니다.       경우로 설정 `SetNull`, `DBnull` 영향을 받는 행의 해당 열에 배치 됩니다. 데이터 원본에 따라 null 값 수 또는 열에 허용 되지 않을 수 있습니다. 예를 들어 sql Server를 사용 하면 여러 null 값이 기본 키 열에서 찾을 수 고유 하지 않습니다. 에 <xref:System.Data.DataTable>그러나 하는 경우는 <xref:System.Data.DataColumn>개체의 <xref:System.Data.DataColumn.Unique%2A>속성이로 설정 되어 `true`, 기본 키 열에 여러 null 값이 허용 되지 않습니다.</xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable>       경우 설정 `SetDefault`, 열에 대 한 기본값이 할당 됩니다."
  example:
  - "The following example creates a ForeignKeyConstraint, sets various of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.DeleteRule Example#1](~/add/codesnippet/visualbasic/p-system.data.foreignkey_3_1.vb)]"
  syntax:
    content: public virtual System.Data.Rule DeleteRule { get; set; }
    return:
      type: System.Data.Rule
      description: "중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ForeignKeyConstraint.DeleteRule*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ForeignKeyConstraint.Equals(Object)
  fullName: System.Data.ForeignKeyConstraint.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 여부 현재 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 지정된 된 개체와 동일 합니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint> and checks it against other collection members with the Equals method before adding it to a <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ForeignKeyConstraint.Equals Example#1](~/add/codesnippet/csharp/m-system.data.foreignkey_1.cs)]\n [!code-vb[Classic WebData ForeignKeyConstraint.Equals Example#1](~/add/codesnippet/visualbasic/m-system.data.foreignkey_1.vb)]"
  syntax:
    content: public override bool Equals (object key);
    parameters:
    - id: key
      type: System.Object
      description: "이 개체 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 비교 됩니다. 두 개의 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 동일한 열을 제한 하는 경우는 동일 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체가 동일 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ForeignKeyConstraint.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.GetHashCode
  id: GetHashCode
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ForeignKeyConstraint.GetHashCode()
  fullName: System.Data.ForeignKeyConstraint.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 인스턴스의 해시 코드를 가져옵니다는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 개체입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.Data.ForeignKeyConstraint.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.RelatedColumns
  id: RelatedColumns
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: RelatedColumns
  nameWithType: ForeignKeyConstraint.RelatedColumns
  fullName: System.Data.ForeignKeyConstraint.RelatedColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 제약 조건의 부모 열을 지정 합니다."
  syntax:
    content: public virtual System.Data.DataColumn[] RelatedColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 제약 조건의 부모 열에는 개체입니다."
  overload: System.Data.ForeignKeyConstraint.RelatedColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.RelatedTable
  id: RelatedTable
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: RelatedTable
  nameWithType: ForeignKeyConstraint.RelatedTable
  fullName: System.Data.ForeignKeyConstraint.RelatedTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 제약 조건의 부모 테이블을 가져옵니다."
  syntax:
    content: public virtual System.Data.DataTable RelatedTable { get; }
    return:
      type: System.Data.DataTable
      description: "부모 <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 제약 조건의 합니다."
  overload: System.Data.ForeignKeyConstraint.RelatedTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.Table
  id: Table
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Table
  nameWithType: ForeignKeyConstraint.Table
  fullName: System.Data.ForeignKeyConstraint.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 제약 조건의 자식 테이블을 가져옵니다."
  remarks: ''
  example:
  - '[!code-vb[Classic WebData ForeignKeyConstraint.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.foreignkey_1_1.vb)]'
  syntax:
    content: public override System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 제약 조건에 자식 테이블입니다."
  overload: System.Data.ForeignKeyConstraint.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ForeignKeyConstraint.UpdateRule
  id: UpdateRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: UpdateRule
  nameWithType: ForeignKeyConstraint.UpdateRule
  fullName: System.Data.ForeignKeyConstraint.UpdateRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행이 업데이트 하는 경우에이 제약 조건에서 발생 하는 동작을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.ForeignKeyConstraint>, sets various of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ForeignKeyConstraint.DeleteRule Example#1](~/add/codesnippet/visualbasic/p-system.data.foreignkey_2_1.vb)]"
  syntax:
    content: public virtual System.Data.Rule UpdateRule { get; set; }
    return:
      type: System.Data.Rule
      description: "중 하나는 <xref href=&quot;System.Data.Rule&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Cascade&quot; name=&quot;Cascade&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ForeignKeyConstraint.UpdateRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Constraint
  isExternal: false
  name: System.Data.Constraint
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.AcceptRejectRule
  parent: System.Data
  isExternal: false
  name: AcceptRejectRule
  nameWithType: AcceptRejectRule
  fullName: System.Data.AcceptRejectRule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
- uid: System.Data.ForeignKeyConstraint.AcceptRejectRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: AcceptRejectRule
  nameWithType: ForeignKeyConstraint.AcceptRejectRule
  fullName: System.Data.ForeignKeyConstraint.AcceptRejectRule
- uid: System.Data.ForeignKeyConstraint.Columns
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Columns
  nameWithType: ForeignKeyConstraint.Columns
  fullName: System.Data.ForeignKeyConstraint.Columns
- uid: System.Data.ForeignKeyConstraint.DeleteRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: DeleteRule
  nameWithType: ForeignKeyConstraint.DeleteRule
  fullName: System.Data.ForeignKeyConstraint.DeleteRule
- uid: System.Data.ForeignKeyConstraint.Equals(System.Object)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Equals(Object)
  nameWithType: ForeignKeyConstraint.Equals(Object)
  fullName: System.Data.ForeignKeyConstraint.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.ForeignKeyConstraint.GetHashCode
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: GetHashCode()
  nameWithType: ForeignKeyConstraint.GetHashCode()
  fullName: System.Data.ForeignKeyConstraint.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ForeignKeyConstraint.RelatedColumns
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedColumns
  nameWithType: ForeignKeyConstraint.RelatedColumns
  fullName: System.Data.ForeignKeyConstraint.RelatedColumns
- uid: System.Data.ForeignKeyConstraint.RelatedTable
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedTable
  nameWithType: ForeignKeyConstraint.RelatedTable
  fullName: System.Data.ForeignKeyConstraint.RelatedTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.ForeignKeyConstraint.Table
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Table
  nameWithType: ForeignKeyConstraint.Table
  fullName: System.Data.ForeignKeyConstraint.Table
- uid: System.Data.ForeignKeyConstraint.UpdateRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: UpdateRule
  nameWithType: ForeignKeyConstraint.UpdateRule
  fullName: System.Data.ForeignKeyConstraint.UpdateRule
- uid: System.Data.ForeignKeyConstraint.#ctor*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint
- uid: System.Data.ForeignKeyConstraint.AcceptRejectRule*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: AcceptRejectRule
  nameWithType: ForeignKeyConstraint.AcceptRejectRule
- uid: System.Data.ForeignKeyConstraint.Columns*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Columns
  nameWithType: ForeignKeyConstraint.Columns
- uid: System.Data.ForeignKeyConstraint.DeleteRule*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: DeleteRule
  nameWithType: ForeignKeyConstraint.DeleteRule
- uid: System.Data.ForeignKeyConstraint.Equals*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Equals
  nameWithType: ForeignKeyConstraint.Equals
- uid: System.Data.ForeignKeyConstraint.GetHashCode*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: GetHashCode
  nameWithType: ForeignKeyConstraint.GetHashCode
- uid: System.Data.ForeignKeyConstraint.RelatedColumns*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedColumns
  nameWithType: ForeignKeyConstraint.RelatedColumns
- uid: System.Data.ForeignKeyConstraint.RelatedTable*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedTable
  nameWithType: ForeignKeyConstraint.RelatedTable
- uid: System.Data.ForeignKeyConstraint.Table*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Table
  nameWithType: ForeignKeyConstraint.Table
- uid: System.Data.ForeignKeyConstraint.UpdateRule*
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: UpdateRule
  nameWithType: ForeignKeyConstraint.UpdateRule
