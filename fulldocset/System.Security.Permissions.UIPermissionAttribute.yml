### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UIPermissionAttribute
  id: UIPermissionAttribute
  children:
  - System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.UIPermissionAttribute.Clipboard
  - System.Security.Permissions.UIPermissionAttribute.CreatePermission
  - System.Security.Permissions.UIPermissionAttribute.Window
  langs:
  - csharp
  name: UIPermissionAttribute
  nameWithType: UIPermissionAttribute
  fullName: System.Security.Permissions.UIPermissionAttribute
  type: Class
  summary: "에 대 한 보안 동작 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 선언적 보안을 사용 하 여 코드에 적용 될 수 있습니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "허용 되는 선언의 범위에 따라 달라 집니다는 <xref:System.Security.Permissions.SecurityAction>사용 되는.</xref:System.Security.Permissions.SecurityAction>       보안 특성에 의해 선언 된 보안 정보 특성 대상의 메타 데이터에 저장 되 고 실행 시 시스템에서 액세스 됩니다. 보안 특성은 선언적 보안에만 사용 됩니다. 명령적 보안을 위해 해당 권한 클래스를 사용 합니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UIPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.UIPermissionAttribute
  langs:
  - csharp
  name: UIPermissionAttribute(SecurityAction)
  nameWithType: UIPermissionAttribute.UIPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UIPermissionAttribute.UIPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.UIPermissionAttribute&quot;> </xref> 지정된 된 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>합니다."
  syntax:
    content: public UIPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.UIPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermissionAttribute.Clipboard
  id: Clipboard
  parent: System.Security.Permissions.UIPermissionAttribute
  langs:
  - csharp
  name: Clipboard
  nameWithType: UIPermissionAttribute.Clipboard
  fullName: System.Security.Permissions.UIPermissionAttribute.Clipboard
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "허용 되는 클립보드에 복사 액세스 유형을 가져오거나 설정 합니다."
  syntax:
    content: public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionClipboard
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.UIPermissionClipboard&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.UIPermissionAttribute.Clipboard*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.UIPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: UIPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UIPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고 새 반환 <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref>합니다."
  remarks: "이 메서드가 응용 프로그램 코드 보안 시스템에서만 호출 해야 합니다.       컴파일 타임에 특성은 보안 선언을 메타 데이터의 serialize 된 형식으로 변환 합니다. 선언적 보안 메타 데이터의 데이터는이 특성에 해당 하는이 메서드가 반환 하는 권한에서 생성 됩니다."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.UIPermission&quot;> </xref> 이 특성에 해당 하는 합니다."
  overload: System.Security.Permissions.UIPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UIPermissionAttribute.Window
  id: Window
  parent: System.Security.Permissions.UIPermissionAttribute
  langs:
  - csharp
  name: Window
  nameWithType: UIPermissionAttribute.Window
  fullName: System.Security.Permissions.UIPermissionAttribute.Window
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "허용 되는 창 리소스에 액세스 유형을 가져오거나 설정 합니다."
  syntax:
    content: public System.Security.Permissions.UIPermissionWindow Window { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.UIPermissionWindow&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.UIPermissionAttribute.Window*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: UIPermissionAttribute(SecurityAction)
  nameWithType: UIPermissionAttribute.UIPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UIPermissionAttribute.UIPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.UIPermissionAttribute.Clipboard
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: Clipboard
  nameWithType: UIPermissionAttribute.Clipboard
  fullName: System.Security.Permissions.UIPermissionAttribute.Clipboard
- uid: System.Security.Permissions.UIPermissionClipboard
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionClipboard
  nameWithType: UIPermissionClipboard
  fullName: System.Security.Permissions.UIPermissionClipboard
- uid: System.Security.Permissions.UIPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: UIPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UIPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UIPermissionAttribute.Window
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: Window
  nameWithType: UIPermissionAttribute.Window
  fullName: System.Security.Permissions.UIPermissionAttribute.Window
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermissionAttribute.#ctor*
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: UIPermissionAttribute
  nameWithType: UIPermissionAttribute.UIPermissionAttribute
- uid: System.Security.Permissions.UIPermissionAttribute.Clipboard*
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: Clipboard
  nameWithType: UIPermissionAttribute.Clipboard
- uid: System.Security.Permissions.UIPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: UIPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.UIPermissionAttribute.Window*
  parent: System.Security.Permissions.UIPermissionAttribute
  isExternal: false
  name: Window
  nameWithType: UIPermissionAttribute.Window
