### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.GraphicsPath
  id: GraphicsPath
  children:
  - System.Drawing.Drawing2D.GraphicsPath.#ctor
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  - System.Drawing.Drawing2D.GraphicsPath.Clone
  - System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  - System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  - System.Drawing.Drawing2D.GraphicsPath.Dispose
  - System.Drawing.Drawing2D.GraphicsPath.FillMode
  - System.Drawing.Drawing2D.GraphicsPath.Finalize
  - System.Drawing.Drawing2D.GraphicsPath.Flatten
  - System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.PathData
  - System.Drawing.Drawing2D.GraphicsPath.PathPoints
  - System.Drawing.Drawing2D.GraphicsPath.PathTypes
  - System.Drawing.Drawing2D.GraphicsPath.PointCount
  - System.Drawing.Drawing2D.GraphicsPath.Reset
  - System.Drawing.Drawing2D.GraphicsPath.Reverse
  - System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  - System.Drawing.Drawing2D.GraphicsPath.StartFigure
  - System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  langs:
  - csharp
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
  type: Class
  summary: "일련을의 연결 된 선 및 곡선을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "도형의 윤곽선을 그리고, 도형의 내부를 채우는, 클리핑 영역을 만드는에 경로 사용 하는 응용 프로그램. 그래픽 엔진 세계 좌표 공간에서 경로에 기 하 도형의 좌표를 유지 관리합니다.       여러 개의 그림 (하위 경로)의 경로 구성 될 수 있습니다. 각 수치는 일련의 연결 된 선 및 곡선 또는 도형 기본 하거나 구성 됩니다. 그림의 시작 위치는 연결 된 선 및 곡선 시퀀스의 첫 번째 지점입니다. 끝점은 시퀀스에서 마지막 지점입니다. 도형 기본의 시작과 끝은 기본 요소 사양에서 정의 됩니다.       일련의 연결 된 선으로 구성 된 및 곡선 (시작 및 끝 포인트가 있는 일치 수 있음)는 열린 그림을 명시적으로 닫지 않으면 됩니다. 사용 하 여 그림을 명시적으로 닫을 수 있습니다는 <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A>메서드를 시작 점으로 선을 끝점에서 연결 하 여 현재 그림을 닫으면.</xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> 도형 기본 구성 된 그림은 폐쇄형된 도형은입니다.       채우기와 클리핑의 목적에 (사용 하 여 경로 렌더링 하는 경우에 예를 들어 <xref:System.Drawing.Graphics.FillPath%2A>) 열려 있는 모든, 마지막 시점으로 그림의 첫 번째 요소에서 줄을 추가 하 여 그림을 닫습니다.</xref:System.Drawing.Graphics.FillPath%2A>       새 그림 figure 닫힐 때 또는 경로 만들 때에 암시적으로 시작 됩니다. 새 그림 명시적으로 생성 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A>메서드를 호출 합니다.</xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A>       도형 기본 경로에 추가 되 면 기하학 다각형 셰이프를 포함 하는 그림을 추가 하 고 새 그림을 암시적으로 시작 합니다. 따라서에 없는 경우 항상 현재 그림 경로 선 및 곡선 경로에 추가 되 면 현재 그림의 끝 지점을 새 선 및 곡선으로 분할 하는 연결 된 일련의 및 곡선의 시작점에 연결할 필요에 따라 암시적 줄이 추가 됩니다.       그림에는 시작 지점 및 끝 지점 간의 선과 곡선 세그먼트를 추적 하는 방법을 설명 하는 방향입니다. 그림에서에 추가 되거나 도형 기본으로 정의 된 선 및 곡선 순서에서 방향 정의 됩니다. 방향을은 클리핑 및 채우기에 대 한 내부 경로 결정 하는 데 사용 됩니다."
  syntax:
    content: 'public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath()
  nameWithType: GraphicsPath.GraphicsPath()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 클래스와 <xref:System.Drawing.Drawing2D.GraphicsPath.FillMode*>값 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.FillMode*>"
  syntax:
    content: public GraphicsPath ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(FillMode)
  nameWithType: GraphicsPath.GraphicsPath(FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 열거 합니다."
  syntax:
    content: public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "<xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 결정 하는 방법을이 내부 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 채워집니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  id: '#ctor(System.Drawing.Point[],System.Byte[])'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(Point[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 및 <xref href=&quot;System.Drawing.Point&quot;> </xref> 배열입니다."
  syntax:
    content: public GraphicsPath (System.Drawing.Point[] pts, byte[] types);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 이 구성 하는 점의 좌표를 정의 하는 구조 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
    - id: types
      type: System.Byte[]
      description: "배열을 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 열거형 요소에 있는 각 해당 요소의 형식을 지정 하는 `pts` 배열입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  id: '#ctor(System.Drawing.PointF[],System.Byte[])'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(PointF[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 배열 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 및 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 배열입니다."
  syntax:
    content: public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 이 구성 하는 점의 좌표를 정의 하는 구조 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
    - id: types
      type: System.Byte[]
      description: "배열을 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 열거형 요소에 있는 각 해당 요소의 형식을 지정 하는 `pts` 배열입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(Point[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 및 <xref href=&quot;System.Drawing.Point&quot;> </xref> 배열 및 지정 된 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 열거형 요소입니다."
  syntax:
    content: public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 이 구성 하는 점의 좌표를 정의 하는 구조 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
    - id: types
      type: System.Byte[]
      description: "배열을 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 열거형 요소에 있는 각 해당 요소의 형식을 지정 하는 `pts` 배열입니다."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 지정 하는 열거형 방법을이 도형의 내부 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 채워집니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(PointF[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 배열 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 및 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 배열 및 지정 된 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 열거형 요소입니다."
  syntax:
    content: public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 이 구성 하는 점의 좌표를 정의 하는 구조 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
    - id: types
      type: System.Byte[]
      description: "배열을 <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> 열거형 요소에 있는 각 해당 요소의 형식을 지정 하는 `pts` 배열입니다."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 지정 하는 열거형 방법을이 도형의 내부 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 채워집니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  id: AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddArc(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "타원형 호 현재 그림을 추가합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.       지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다. 원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다. 끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다. 스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a rectangle, from which the arc is defined.  \n  \n-   Creates a path, `myPath`.  \n  \n-   Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/csharp/e9f8971e-41e5-4f3a-9883-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/cpp/e9f8971e-41e5-4f3a-9883-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/visualbasic/e9f8971e-41e5-4f3a-9883-_1.vb)]"
  syntax:
    content: public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 호 수행 되는 타원의 사각형 범위를 나타내는입니다."
    - id: startAngle
      type: System.Single
      description: "호의 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 호의 끝과 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  id: AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(RectangleF,Single,Single)
  nameWithType: GraphicsPath.AddArc(RectangleF,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "타원형 호 현재 그림을 추가합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.       지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다. 원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다. 끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다. 스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 호 수행 되는 타원의 사각형 범위를 나타내는입니다."
    - id: startAngle
      type: System.Single
      description: "호의 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 호의 끝과 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  id: AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "타원형 호 현재 그림을 추가합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.       지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다. 원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다. 끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다. 스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Int32
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 너비입니다."
    - id: height
      type: System.Int32
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "호의 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 호의 끝과 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "타원형 호 현재 그림을 추가합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.       지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다. 원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다. 끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다. 스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Single
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 너비입니다."
    - id: height
      type: System.Single
      description: "호를 그릴 타원을 정의 하는 사각형 영역의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "호의 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 호의 끝과 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  id: AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Point,Point,Point,Point)
  nameWithType: GraphicsPath.AddBezier(Point,Point,Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Point,Point,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 입방 형&3; 차원 곡선을 추가합니다."
  remarks: "입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.       이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);
    parameters:
    - id: pt1
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선의 시작점을 나타내는입니다."
    - id: pt2
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선의 첫 번째 제어점을 나타내는입니다."
    - id: pt3
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선의 둘째 제어점을 나타내는입니다."
    - id: pt4
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선의 끝점을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  id: AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(PointF,PointF,PointF,PointF)
  nameWithType: GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 입방 형&3; 차원 곡선을 추가합니다."
  remarks: "입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.       이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);
    parameters:
    - id: pt1
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선의 시작점을 나타내는입니다."
    - id: pt2
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선의 첫 번째 제어점을 나타내는입니다."
    - id: pt3
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선의 둘째 제어점을 나타내는입니다."
    - id: pt4
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선의 끝점을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 입방 형&3; 차원 곡선을 추가합니다."
  remarks: "입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.       이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.  \n  \n-   Closes the curve.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/csharp/745fdee9-1ec2-4fd8-a91a-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/cpp/745fdee9-1ec2-4fd8-a91a-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/visualbasic/745fdee9-1ec2-4fd8-a91a-_1.vb)]"
  syntax:
    content: public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
    parameters:
    - id: x1
      type: System.Int32
      description: "곡선의 시작점의 x 좌표입니다."
    - id: y1
      type: System.Int32
      description: "곡선의 시작점의 y 좌표입니다."
    - id: x2
      type: System.Int32
      description: "곡선의 첫째 제어점의 x 좌표입니다."
    - id: y2
      type: System.Int32
      description: "곡선의 첫째 제어점의 y 좌표입니다."
    - id: x3
      type: System.Int32
      description: "곡선의 둘째 제어점의 x 좌표입니다."
    - id: y3
      type: System.Int32
      description: "곡선의 둘째 제어점의 y 좌표입니다."
    - id: x4
      type: System.Int32
      description: "곡선의 끝점의 x 좌표입니다."
    - id: y4
      type: System.Int32
      description: "곡선의 끝점의 y 좌표입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 입방 형&3; 차원 곡선을 추가합니다."
  remarks: "입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.       이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
    parameters:
    - id: x1
      type: System.Single
      description: "곡선의 시작점의 x 좌표입니다."
    - id: y1
      type: System.Single
      description: "곡선의 시작점의 y 좌표입니다."
    - id: x2
      type: System.Single
      description: "곡선의 첫째 제어점의 x 좌표입니다."
    - id: y2
      type: System.Single
      description: "곡선의 첫째 제어점의 y 좌표입니다."
    - id: x3
      type: System.Single
      description: "곡선의 둘째 제어점의 x 좌표입니다."
    - id: y3
      type: System.Single
      description: "곡선의 둘째 제어점의 y 좌표입니다."
    - id: x4
      type: System.Single
      description: "곡선의 끝점의 x 좌표입니다."
    - id: y4
      type: System.Single
      description: "곡선의 끝점의 y 좌표입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  id: AddBeziers(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBeziers(Point[])
  nameWithType: GraphicsPath.AddBeziers(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림에 연결 된 입방 형&3; 베 지 어 곡선의 시퀀스를 추가합니다."
  remarks: "`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다. 첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 `points` 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다. 이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.       이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of seven points (representing two connected Bézier curves).  \n  \n-   Creates a path and adds the series of Bézier curve points to the path.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/csharp/m-system.drawing.drawing_9_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/cpp/m-system.drawing.drawing_9_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_9_1.vb)]"
  syntax:
    content: public void AddBeziers (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  id: AddBeziers(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBeziers(PointF[])
  nameWithType: GraphicsPath.AddBeziers(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림에 연결 된 입방 형&3; 베 지 어 곡선의 시퀀스를 추가합니다."
  remarks: "`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다. 첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 `points` 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다. 이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.       이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다."
  example:
  - "For an example see:  \n  \n [AddBeziers(Point\\[\\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False)"
  syntax:
    content: public void AddBeziers (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  id: AddClosedCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(Point[])
  nameWithType: GraphicsPath.AddClosedCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 닫힌된 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다. 경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다. 이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  id: AddClosedCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(PointF[])
  nameWithType: GraphicsPath.AddClosedCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 닫힌된 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다. 경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다. 이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  id: AddClosedCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(Point[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 닫힌된 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다. 경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of six points (representing a cardinal spline).  \n  \n-   Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).  \n  \n-   Draws the path to screen.  \n  \n Notice that a tension of 0.5 is used.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/csharp/1adde1d4-17a0-40d7-b406-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/cpp/1adde1d4-17a0-40d7-b406-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/visualbasic/1adde1d4-17a0-40d7-b406-_1.vb)]"
  syntax:
    content: public void AddClosedCurve (System.Drawing.Point[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: tension
      type: System.Single
      description: "0부터 가장 작은 곡선 (가장 선명 하 게 모퉁이) 있는데 0 및 1 매끄러운 곡선 되 고 데이터 요소 사이의 곡률을 지정 하는 1에서 사이의 값입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  id: AddClosedCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 닫힌된 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다. 경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.PointF[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: tension
      type: System.Single
      description: "0부터 가장 작은 곡선 (가장 선명 하 게 모퉁이) 있는데 0 및 1 매끄러운 곡선 되 고 데이터 요소 사이의 곡률을 지정 하는 1에서 사이의 값입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  id: AddCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[])
  nameWithType: GraphicsPath.AddCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  id: AddCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[])
  nameWithType: GraphicsPath.AddCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다. 카디널 스플라인 곡선 곡선 배열의 각 항목을 통해 이동 하기 때문에 사용 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  id: AddCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[],Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: tension
      type: System.Single
      description: "제어점 사이 곡률 크기를 지정 하는 값입니다. 1 보다 큰 값에 예기치 않은 결과입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  id: AddCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: tension
      type: System.Single
      description: "제어점 사이 곡률 크기를 지정 하는 값입니다. 1 보다 큰 값에 예기치 않은 결과입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  id: AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.       변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선은 `offset` 매개 변수에서 지정한 지점 (세그먼트)의 수를 포함 `numberOfSegments`합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of four points (representing a cardinal spline).  \n  \n-   Creates a path and using the array of points, adds the curve to the path.  \n  \n-   Draws the path to the screen.  \n  \n Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/csharp/ceb7a1f2-0262-4010-ad5e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/cpp/ceb7a1f2-0262-4010-ad5e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/visualbasic/ceb7a1f2-0262-4010-ad5e-_1.vb)]"
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: offset
      type: System.Int32
      description: "에 있는 요소의 인덱스는 `points` 곡선의 첫 번째 지점으로 사용 되는 배열입니다."
    - id: numberOfSegments
      type: System.Int32
      description: "제어점 사이 곡률 크기를 지정 하는 값입니다. 1 보다 큰 값에 예기치 않은 결과입니다."
    - id: tension
      type: System.Single
      description: "제어점 사이 곡률 크기를 지정 하는 값입니다. 1 보다 큰 값에 예기치 않은 결과입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  id: AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 스플라인 곡선을 추가합니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.       변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선 `offset`, 점 (세그먼트)로 지정 된 개수를 포함 하 고 `numberOfSegments`합니다."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 지점을 나타내는 구조입니다."
    - id: offset
      type: System.Int32
      description: "에 있는 요소의 인덱스는 `points` 곡선의 첫 번째 지점으로 사용 되는 배열입니다."
    - id: numberOfSegments
      type: System.Int32
      description: "곡선을 그리는 데 사용 되는 세그먼트의 수입니다. 두 개의 점을 연결 하는 선 세그먼트를 생각할 수 있습니다."
    - id: tension
      type: System.Single
      description: "제어점 사이 곡률 크기를 지정 하는 값입니다. 1 보다 큰 값에 예기치 않은 결과입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  id: AddEllipse(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Rectangle)
  nameWithType: GraphicsPath.AddEllipse(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 경로에 타원을 추가합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n Creates a bounding rectangle that defines an ellipse.  \n  \n Creates a path and adds the ellipse to the path.  \n  \n Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/csharp/m-system.drawing.drawing_15_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/cpp/m-system.drawing.drawing_15_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.drawing_15_1.vb)]"
  syntax:
    content: public void AddEllipse (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 타원을 정의 하는 경계 사각형을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  id: AddEllipse(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(RectangleF)
  nameWithType: GraphicsPath.AddEllipse(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 경로에 타원을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 타원을 정의 하는 경계 사각형을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 경로에 타원을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  id: AddEllipse(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddEllipse(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 경로에 타원을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽된 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  id: AddLine(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Point,Point)
  nameWithType: GraphicsPath.AddLine(Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 선 세그먼트를 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 메서드는이 <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> 의 끝에 지정된 된 요소에 정의 된 선 세그먼트 추가 이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);
    parameters:
    - id: pt1
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 줄의 시작 지점을 나타내는입니다."
    - id: pt2
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 선의 끝점을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  id: AddLine(System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(PointF,PointF)
  nameWithType: GraphicsPath.AddLine(PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 선 세그먼트를 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 메서드는이 <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> 의 끝에 지정된 된 요소에 정의 된 선 세그먼트 추가 이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);
    parameters:
    - id: pt1
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 줄의 시작 지점을 나타내는입니다."
    - id: pt2
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 선의 끝점을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 선 세그먼트를 추가합니다."
  remarks: "이 메서드는 현재 그림의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 합니다. 이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/csharp/d1f4d9ed-8464-43dc-8776-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/cpp/d1f4d9ed-8464-43dc-8776-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/visualbasic/d1f4d9ed-8464-43dc-8776-_1.vb)]"
  syntax:
    content: public void AddLine (int x1, int y1, int x2, int y2);
    parameters:
    - id: x1
      type: System.Int32
      description: "선의 시작점의 x 좌표입니다."
    - id: y1
      type: System.Int32
      description: "선의 시작점의 y 좌표입니다."
    - id: x2
      type: System.Int32
      description: "선의 끝점의 x 좌표입니다."
    - id: y2
      type: System.Int32
      description: "선의 끝점의 y 좌표입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  id: AddLine(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddLine(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 선 세그먼트를 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 메서드는이 <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> 의 끝에 지정된 된 요소에 정의 된 선 세그먼트 추가 이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (float x1, float y1, float x2, float y2);
    parameters:
    - id: x1
      type: System.Single
      description: "선의 시작점의 x 좌표입니다."
    - id: y1
      type: System.Single
      description: "선의 시작점의 y 좌표입니다."
    - id: x2
      type: System.Single
      description: "선의 끝점의 x 좌표입니다."
    - id: y2
      type: System.Single
      description: "선의 끝점의 y 좌표입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  id: AddLines(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLines(Point[])
  nameWithType: GraphicsPath.AddLines(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "일련의 연결 된 선 세그먼트의 끝에 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다. `points` 매개 변수는 끝점의 배열을 지정 합니다. 처음 두 첫 번째 줄을 지정합니다. 각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of four points that describe a triangle.  \n  \n-   Creates a path and adds the array of lines.  \n  \n-   Draws the path to screen.  \n  \n Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/csharp/m-system.drawing.drawing_24_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/cpp/m-system.drawing.drawing_24_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.drawing_24_1.vb)]"
  syntax:
    content: public void AddLines (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조를 추가 하는 선 세그먼트를 정의 하는 지점을 나타냅니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  id: AddLines(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLines(PointF[])
  nameWithType: GraphicsPath.AddLines(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "일련의 연결 된 선 세그먼트의 끝에 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다. `points` 매개 변수는 끝점의 배열을 지정 합니다. 처음 두 첫 번째 줄을 지정합니다. 각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다."
  example:
  - For an example, see [AddLines(Point\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddLines (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조를 추가 하는 선 세그먼트를 정의 하는 지점을 나타냅니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  id: AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPath(GraphicsPath,Boolean)
  nameWithType: GraphicsPath.AddPath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPath(GraphicsPath,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정 된 추가 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 이 경로에 있습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates two paths one a right-side-up triangle and the other an up-side-down triangle.  \n  \n-   Adds the second path to the first.  \n  \n-   Draws the resultant path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/csharp/4c3ef7f8-9fc4-4762-b79e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/cpp/4c3ef7f8-9fc4-4762-b79e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/visualbasic/4c3ef7f8-9fc4-4762-b79e-_1.vb)]"
  syntax:
    content: public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);
    parameters:
    - id: addingPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "The <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref> to add."
    - id: connect
      type: System.Boolean
      description: "첫 번째 그림 추가 된 경로에이 경로에 마지막 그림의 일부 인지를 지정 하는 부울 값입니다. 값이 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 첫 번째 그림 추가 된 경로에이 경로에 마지막 그림의 일부 인지 (가능한 경우) 지정 합니다. 값이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 첫 번째 그림 추가 된 경로에이 경로에 마지막 형상이 별도로 임을 지정 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  id: AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddPie(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 원형 도형의 윤곽선을 추가합니다."
  remarks: "원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다. 시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 원형 차트를 그릴 타원을 정의 하는 경계 사각형을 나타내는입니다."
    - id: startAngle
      type: System.Single
      description: "원형 섹션에 대 한 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 에서 시계 방향으로 측정 되는 원형 섹션의 끝과 `startAngle`합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  id: AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 원형 도형의 윤곽선을 추가합니다."
  remarks: "원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다. 시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a graphics path, adds the pie shape, and then draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/csharp/b8813bf5-5d25-47d2-b607-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/cpp/b8813bf5-5d25-47d2-b607-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/visualbasic/b8813bf5-5d25-47d2-b607-_1.vb)]"
  syntax:
    content: public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Int32
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "원형 섹션에 대 한 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 에서 시계 방향으로 측정 되는 원형 섹션의 끝과 `startAngle`합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 원형 도형의 윤곽선을 추가합니다."
  remarks: "원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다. 시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Single
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "원형 차트를 그릴 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "원형 섹션에 대 한 시작 각도 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "사이의 각도 `startAngle` 에서 시계 방향으로 측정 되는 원형 섹션의 끝과 `startAngle`합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  id: AddPolygon(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPolygon(Point[])
  nameWithType: GraphicsPath.AddPolygon(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 다각형을 추가합니다."
  remarks: "에 있는 요소는 `points` 배열 다각형의 꼭 짓 점을 지정 합니다. 배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of points that defines a polygon.  \n  \n-   Creates a path and adds the polygon to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/csharp/m-system.drawing.drawing_14_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/cpp/m-system.drawing.drawing_14_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/visualbasic/m-system.drawing.drawing_14_1.vb)]"
  syntax:
    content: public void AddPolygon (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "배열을 <xref href=&quot;System.Drawing.Point&quot;> </xref> 추가할 다각형을 정의 하는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  id: AddPolygon(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPolygon(PointF[])
  nameWithType: GraphicsPath.AddPolygon(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 다각형을 추가합니다."
  remarks: "에 있는 요소는 `points` 배열 다각형의 꼭 짓 점을 지정 합니다. 배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다."
  example:
  - For an example, see [AddPolygon(Point\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddPolygon (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 추가할 다각형을 정의 하는 구조입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  id: AddRectangle(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangle(Rectangle)
  nameWithType: GraphicsPath.AddRectangle(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 사각형을 추가합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Creates a rectangle and adds the rectangle to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/csharp/m-system.drawing.drawing_13_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/cpp/m-system.drawing.drawing_13_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/visualbasic/m-system.drawing.drawing_13_1.vb)]"
  syntax:
    content: public void AddRectangle (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 추가할 사각형을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  id: AddRectangle(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangle(RectangleF)
  nameWithType: GraphicsPath.AddRectangle(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 사각형을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddRectangle (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 추가할 사각형을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  id: AddRectangles(System.Drawing.Rectangle[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangles(Rectangle[])
  nameWithType: GraphicsPath.AddRectangles(Rectangle[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 일련의 사각형을 추가합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Creates an array of rectangles and adds the rectangles to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/csharp/0c74854d-da2e-4c90-801f-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/cpp/0c74854d-da2e-4c90-801f-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/visualbasic/0c74854d-da2e-4c90-801f-_1.vb)]"
  syntax:
    content: public void AddRectangles (System.Drawing.Rectangle[] rects);
    parameters:
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "배열을 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조를 나타내는 사각형을 추가 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  id: AddRectangles(System.Drawing.RectangleF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangles(RectangleF[])
  nameWithType: GraphicsPath.AddRectangles(RectangleF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 일련의 사각형을 추가합니다."
  remarks: ''
  example:
  - For an example, see [AddRectangles(Rectangle\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddRectangles (System.Drawing.RectangleF[] rects);
    parameters:
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "배열을 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조를 나타내는 사각형을 추가 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 텍스트 문자열을 추가합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Sets up string and font arguments.  \n  \n-   Adds the string to the path.  \n  \n-   Draws the string to the screen.  \n  \n There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer. The AddString method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle> and <xref:System.Drawing.FontStyle>). Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method. If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/csharp/6c72550e-791b-4037-846e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/cpp/6c72550e-791b-4037-846e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/visualbasic/6c72550e-791b-4037-846e-_1.vb)]"
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>에 추가</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> 텍스트를 그릴 글꼴 이름을 나타내는입니다."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> 텍스트 (굵게, 기울임꼴 및 등)에 대 한 스타일 정보를 나타내는 열거형입니다. 정수로 캐스팅 되어야 합니다 (이 섹션의 뒷부분에 나오는 예제 코드 참조)."
    - id: emSize
      type: System.Single
      description: "Em 사각형 상자에는 다음 문자를 제한의 높이입니다."
    - id: origin
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 텍스트가 시작 지점을 나타내는입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> 텍스트 줄 간격 및 맞춤과 같은 서식 정보를 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 텍스트 문자열을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>에 추가</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> 텍스트를 그릴 글꼴 이름을 나타내는입니다."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> 텍스트 (굵게, 기울임꼴 및 등)에 대 한 스타일 정보를 나타내는 열거형입니다. 정수로 캐스팅 되어야 합니다 (이 섹션의 뒷부분에 나오는 예제 코드 참조)."
    - id: emSize
      type: System.Single
      description: "Em 사각형 상자에는 다음 문자를 제한의 높이입니다."
    - id: origin
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 텍스트가 시작 지점을 나타내는입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> 텍스트 줄 간격 및 맞춤과 같은 서식 정보를 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 텍스트 문자열을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>에 추가</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> 텍스트를 그릴 글꼴 이름을 나타내는입니다."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> 텍스트 (굵게, 기울임꼴 및 등)에 대 한 스타일 정보를 나타내는 열거형입니다. 정수로 캐스팅 되어야 합니다 (이 섹션의 뒷부분에 나오는 예제 코드 참조)."
    - id: emSize
      type: System.Single
      description: "Em 사각형 상자에는 다음 문자를 제한의 높이입니다."
    - id: layoutRect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 텍스트를 제한 하는 사각형을 나타내는입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> 텍스트 줄 간격 및 맞춤과 같은 서식 정보를 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 텍스트 문자열을 추가합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>에 추가</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> 텍스트를 그릴 글꼴 이름을 나타내는입니다."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> 텍스트 (굵게, 기울임꼴 및 등)에 대 한 스타일 정보를 나타내는 열거형입니다. 정수로 캐스팅 되어야 합니다 (이 섹션의 뒷부분에 나오는 예제 코드 참조)."
    - id: emSize
      type: System.Single
      description: "Em 사각형 상자에는 다음 문자를 제한의 높이입니다."
    - id: layoutRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 텍스트를 제한 하는 사각형을 나타내는입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> 텍스트 줄 간격 및 맞춤과 같은 서식 정보를 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  id: ClearMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: ClearMarkers()
  nameWithType: GraphicsPath.ClearMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에서 모든 마커를 지웁니다."
  remarks: "<xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> 현재 위치에 표식을 만드는 메서드를</xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> 사용 하 여 <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>경로에 있는 기존 마커를 반복 하는 메서드</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 를 사용 하 여       마커가 별도 하위 경로 그룹에 사용 됩니다. 두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several objects to the path.  \n  \n-   Adds markers to the path.  \n  \n-   Clears all markers from the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/csharp/m-system.drawing.drawing_21_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/cpp/m-system.drawing.drawing_21_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/visualbasic/m-system.drawing.drawing_21_1.vb)]"
  syntax:
    content: public void ClearMarkers ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Clone()
  nameWithType: GraphicsPath.Clone()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로의 정확한 복사본을 만듭니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several figures to the path.  \n  \n-   Draws the path to the screen.  \n  \n-   Clones a copy of that path.  \n  \n-   Draws the new path to the screen.  \n  \n Notice that the call the Clone method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/csharp/m-system.drawing.drawing_2_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/cpp/m-system.drawing.drawing_2_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/visualbasic/m-system.drawing.drawing_2_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 개체로 캐스팅,이 메서드를 만듭니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  id: CloseAllFigures
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: CloseAllFigures()
  nameWithType: GraphicsPath.CloseAllFigures()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경로에 열려 있는 모든 숫자 값을 닫고 새 그림을 시작 합니다. 시작 점으로 선을 끝점에서 연결 하 여 각 열린 그림을 닫습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several open figures to the path.  \n  \n-   Closes all figures in the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/csharp/m-system.drawing.drawing_23_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/cpp/m-system.drawing.drawing_23_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/visualbasic/m-system.drawing.drawing_23_1.vb)]"
  syntax:
    content: public void CloseAllFigures ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  id: CloseFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: CloseFigure()
  nameWithType: GraphicsPath.CloseFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseFigure()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 닫고 새 그림을 시작 합니다. 연결 된 선 및 곡선 시퀀스를 포함 하는 현재 그림을 메서드 시작 점으로 선을 끝점에서 연결 하 여 루프를 닫습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle. The path is then drawn to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/csharp/m-system.drawing.drawing_19_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/cpp/m-system.drawing.drawing_19_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/visualbasic/m-system.drawing.drawing_19_1.vb)]"
  syntax:
    content: public void CloseFigure ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.CloseFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Dispose()
  nameWithType: GraphicsPath.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose를 호출 <xref:System.Drawing.Drawing2D.GraphicsPath>다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode
  id: FillMode
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: FillMode
  nameWithType: GraphicsPath.FillMode
  fullName: System.Drawing.Drawing2D.GraphicsPath.FillMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 열거형 결정 하는 방법을이 도형의 내부 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 채워집니다."
  syntax:
    content: public System.Drawing.Drawing2D.FillMode FillMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 지정 하는 열거형 방법을이 도형의 내부 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 채워집니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.FillMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Finalize()
  nameWithType: GraphicsPath.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~GraphicsPath ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten
  id: Flatten
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten()
  nameWithType: GraphicsPath.Flatten()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "일련의 연결 된 선 세그먼트에이 경로에 각 곡선으로 변환합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Flatten ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  id: Flatten(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten(Matrix)
  nameWithType: GraphicsPath.Flatten(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 변환을 적용 하 고 그런 다음이 각 곡선으로 변환 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 일련의 연결 된 선 세그먼트에 있습니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Flatten (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 이 변환 하는 기준인 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 결합 하기 전입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  id: Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten(Matrix,Single)
  nameWithType: GraphicsPath.Flatten(Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 각 곡선으로 변환 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 일련의 연결 된 선 세그먼트에 있습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and a translation matrix.  \n  \n-   Adds a curve to the path using four points.  \n  \n-   Draws the path (curve) to the screen, using a black pen.  \n  \n-   Shifts the curve down 10 pixels and flattens it.  \n  \n-   Draws the curve to the screen using, a red pen.  \n  \n Notice that the red curve has flattened lines connecting the points.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/csharp/3641dbbe-5db3-4043-b7d1-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/cpp/3641dbbe-5db3-4043-b7d1-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/visualbasic/3641dbbe-5db3-4043-b7d1-_1.vb)]"
  syntax:
    content: public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 이 변환 하는 기준인 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 결합 하기 전입니다."
    - id: flatness
      type: System.Single
      description: "곡선와 결합 된 근사값 사이의 최대 허용된 오차를 지정합니다. 기본값은 0.25 값이입니다. 이 값을 낮추면 근사에서 선 세그먼트의 수를 증가 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds
  id: GetBounds
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds()
  nameWithType: GraphicsPath.GetBounds()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경계를 지정 하는 사각형을 반환 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: '반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 &quot;느슨한 맞춤&quot;를 생성 합니다. 대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Adds an ellipse (circle) to it and draws it to the screen.  \n  \n-   Retrieves the bounding rectangle for the circle with a call to GetBounds and draws the rectangle to the screen.  \n  \n-   Creates a second graphics path.  \n  \n-   Adds a circle and widens the path to a width of 10.  \n  \n-   Draws the path to the screen.  \n  \n-   Retrieves the bounding rectangle for the second circle.  \n  \n-   Draws the bounding rectangle to the screen.  \n  \n-   Displays the rectangle size in a dialog box.  \n  \n Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/csharp/m-system.drawing.drawing_4_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/cpp/m-system.drawing.drawing_4_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/visualbasic/m-system.drawing.drawing_4_1.vb)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds ();
    parameters: []
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이 경계를 지정 하는 사각형을 나타내는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  id: GetBounds(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds(Matrix)
  nameWithType: GraphicsPath.GetBounds(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경계를 지정 하는 사각형을 반환 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 이 경로 변환 되는 경우 지정 된 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>합니다."
  remarks: '반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 &quot;느슨한 맞춤&quot;를 생성 합니다. 대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.'
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.
  syntax:
    content: public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 경계 사각형을 계산 하기 전에이 경로에 적용 될 수 변환을 지정 하는 합니다. 이 경로 영구적으로 변환 하지 않습니다. 변환은 프로세스 경계 사각형을 계산 하는 동안에 사용 됩니다."
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이 경계를 지정 하는 사각형을 나타내는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  id: GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds(Matrix,Pen)
  nameWithType: GraphicsPath.GetBounds(Matrix,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 경계를 지정 하는 사각형을 반환 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 현재 경로 변환 되는 경우 지정 된 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 지정 된 및 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: '반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 &quot;느슨한 맞춤&quot;를 생성 합니다. 대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.'
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.
  syntax:
    content: public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 경계 사각형을 계산 하기 전에이 경로에 적용 될 수 변환을 지정 하는 합니다. 이 경로 영구적으로 변환 하지 않습니다. 변환은 프로세스 경계 사각형을 계산 하는 동안에 사용 됩니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 와 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이 경계를 지정 하는 사각형을 나타내는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  id: GetLastPoint
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetLastPoint()
  nameWithType: GraphicsPath.GetLastPoint()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "에 마지막 지점을 가져옵니다는 <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>이 배열을 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path, adds a line to the path, and then gets the last point in the path.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/csharp/m-system.drawing.drawing_10_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/cpp/m-system.drawing.drawing_10_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/visualbasic/m-system.drawing.drawing_10_1.vb)]"
  syntax:
    content: public System.Drawing.PointF GetLastPoint ();
    parameters: []
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 이 마지막 점을 나타내는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  id: IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Point,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 테스트할 위치를 지정 하는 합니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  id: IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(PointF,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 테스트할 위치를 지정 하는 합니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Point,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 및 지정 된 사용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다. 테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 테스트할 위치를 지정 하는 합니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 대로 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(PointF,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 및 지정 된 사용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다. 테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 테스트할 위치를 지정 하는 합니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> (이 개요 아래) 내에서 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 대로 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  id: IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Int32,Int32,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);
    parameters:
    - id: x
      type: System.Int32
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "테스트할 점의 y 좌표입니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  id: IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Single,Single,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);
    parameters:
    - id: x
      type: System.Single
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "테스트할 점의 y 좌표입니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Int32,Int32,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 및 지정 된 사용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다. 테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds a rectangle to the path.  \n  \n-   Creates a wide pen and widens the path with that pen (to make the example clearer),  \n  \n-   Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling IsOutlineVisible.  \n  \n The result is shown in the message box (in this case, true). In other words the edge is rendered over that point.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/csharp/87b60199-549b-488d-9f2b-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/cpp/87b60199-549b-488d-9f2b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/visualbasic/87b60199-549b-488d-9f2b-_1.vb)]"
  syntax:
    content: public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Int32
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "테스트할 점의 y 좌표입니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 개요가 내의 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 대로 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Single,Single,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이 (이 개요 아래)에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 경우 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 및 지정 된 사용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다. 테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Single
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "테스트할 점의 y 좌표입니다."
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;> </xref> 를 테스트 합니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> (이 개요 아래) 내에서 지정된 된 지점이 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 지정 된 대로 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  id: IsVisible(System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Point)
  nameWithType: GraphicsPath.IsVisible(Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.
  syntax:
    content: public bool IsVisible (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 테스트할 점의 나타내는입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  id: IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(PointF)
  nameWithType: GraphicsPath.IsVisible(PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (System.Drawing.PointF point);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 테스트할 점의 나타내는입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  id: IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Point,Graphics)
  nameWithType: GraphicsPath.IsVisible(Point,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.
  syntax:
    content: public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 테스트할 점의 나타내는입니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  id: IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(PointF,Graphics)
  nameWithType: GraphicsPath.IsVisible(PointF,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 테스트할 점의 나타내는입니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이 고, 그렇지 않으면이 포함 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Int32,Int32)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  id: IsVisible(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Single,Single)
  nameWithType: GraphicsPath.IsVisible(Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  id: IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Int32,Int32,Graphics)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>를 사용 하 여 지정 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds an ellipse to the path.  \n  \n-   Tests whether the specified point is contained within the path.  \n  \n-   Displays the result in a dialog box.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/csharp/dcc5e859-c137-4241-9ba4-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/cpp/dcc5e859-c137-4241-9ba4-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/visualbasic/dcc5e859-c137-4241-9ba4-_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Int32
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "테스트할 점의 y 좌표입니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  id: IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Single,Single,Graphics)
  nameWithType: GraphicsPath.IsVisible(Single,Single,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "지정된 된 점이이 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 에 표시 된 클립 영역 지정 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "테스트할 점의 좌표는 세계 좌표에서 제공 됩니다. 변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Single
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "테스트할 점의 y 좌표입니다."
    - id: graphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> 표시 여부를 테스트 하려면입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정된 된 점이이에 포함 되어 있으면 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData
  id: PathData
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathData
  nameWithType: GraphicsPath.PathData
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathData
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "가져옵니다는 <xref href=&quot;System.Drawing.Drawing2D.PathData&quot;> </xref> 점의 배열을 캡슐화 하는 (<code>points</code>) 및 형식 (<code>types</code>)이 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Drawing2D.PathData PathData { get; }
    return:
      type: System.Drawing.Drawing2D.PathData
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PathData&quot;> </xref> 모두 지점에 대 한 배열 및이 대 한 형식 캡슐화 하 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  id: PathPoints
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "경로에 있는 지점을 가져옵니다."
  syntax:
    content: public System.Drawing.PointF[] PathPoints { get; }
    return:
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 경로 나타내는 개체입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  id: PathTypes
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "해당 요소의 형식을 가져옵니다는 <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>배열.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: "PathTypes 속성에서 반환 되는 바이트 배열을 경로에서 지점 유형 및 데이터 요소에 대 한 플래그를 지정 합니다. 각 지점에 대 한 비트 0-2는 지점의 유형을 나타내며 지점의 특성을 지정 하는 플래그 집합을 보유 하는 3 ~ 7 비트. 다음 표에서 가능한 값과 그 의미를 보여 줍니다.      | 값 | 즉 |   |-----------|-------------|   |&0; | 그림의 시작 지점 임을 나타냅니다. |   |&1; | 지점 줄의 두 끝점 중 하나 임을 나타냅니다. |   |&3; | 지점에는 끝점 또는 제어 지점의 입방 형&3; 차원 곡선 스플라인 임을 나타냅니다. |   |&0;x7 | 지점 종류를 나타내는 세 가지 낮은 순서 비트를 제외 하 고 모든 비트 마스크입니다. |   |&0;x20 | 지점 표식의 임을 지정 합니다. |   |&0;x80 | 지점 닫힌된 (그림 참조) 하위 경로에서 마지막 점 임을 지정 합니다. |"
  syntax:
    content: public byte[] PathTypes { get; }
    return:
      type: System.Byte[]
      description: "경로에 해당 지점 종류를 지정 하는 바이트 배열입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount
  id: PointCount
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PointCount
  nameWithType: GraphicsPath.PointCount
  fullName: System.Drawing.Drawing2D.GraphicsPath.PointCount
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "에 있는 요소의 수를 가져옵니다는 <> </> *> 또는 <> </> *> 배열입니다."
  syntax:
    content: public int PointCount { get; }
    return:
      type: System.Int32
      description: "에 있는 요소의 수를 지정 하는 정수는 <> </> *> 또는 <> </> *> 배열입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.PointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset
  id: Reset
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Reset()
  nameWithType: GraphicsPath.Reset()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reset()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "비웁니다는 <> </> *> 및 <> </> *> 배열 및 설정 하는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 를 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several primitives to it.  \n  \n-   Draws the path's points array to the screen.  \n  \n-   Resets the path to an empty state.  \n  \n-   Re-acquires the points array (if it exists).  \n  \n-   Draws the array to the screen.  \n  \n Notice that it finds no array following the reset call.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/csharp/m-system.drawing.drawing_8_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/cpp/m-system.drawing.drawing_8_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/visualbasic/m-system.drawing.drawing_8_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse
  id: Reverse
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Reverse()
  nameWithType: GraphicsPath.Reverse()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reverse()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "요소의 순서를 반대로 바꿉니다.는 <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>이 배열을 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds several primitives to the path.  \n  \n-   Draws the path's points array to the screen.  \n  \n-   Draws the reversed points array to the screen.  \n  \n Notice that the second listing of points is in reverse order from the first.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/csharp/m-system.drawing.drawing_22_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/cpp/m-system.drawing.drawing_22_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/visualbasic/m-system.drawing.drawing_22_1.vb)]"
  syntax:
    content: public void Reverse ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Reverse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  id: SetMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: SetMarkers()
  nameWithType: GraphicsPath.SetMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.SetMarkers()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 대 한 표식을 설정 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 메서드는 표식을 경로 섹션을 구분 하는 데 사용할 수 있는 경로에 만듭니다. <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>경로에 표식을 반복 하는 메서드를</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 사용할 수 있습니다.       마커가 별도 하위 경로 그룹에 사용 됩니다. 경로에 두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/csharp/m-system.drawing.drawing_7_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/cpp/m-system.drawing.drawing_7_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/visualbasic/m-system.drawing.drawing_7_1.vb)]"
  syntax:
    content: public void SetMarkers ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.SetMarkers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure
  id: StartFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: StartFigure()
  nameWithType: GraphicsPath.StartFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.StartFigure()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "현재 그림을 닫지 않고 새 그림을 시작 합니다. 경로에 추가 하는 모든 후속 지점이 새 그림에 추가 됩니다."
  remarks: "사용자는 필요할 경우 원래 포인트를 유지 해야 합니다. 원점은 입방 형&3; 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.       이 메서드는 경로에 새 하위 경로 시작합니다. 하위 경로 허용 하는 경로 섹션으로 구분 하 여 사용할는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator>하위 경로 확인을 반복 하는 클래스입니다.</xref:System.Drawing.Drawing2D.GraphicsPathIterator>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds two sets of figures. The first set of figures combines four primitives into two figures. The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.  \n  \n-   Draws all the figures to the screen.  \n  \n Notice the difference in the appearance between the two sets of figures.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/csharp/m-system.drawing.drawing_0_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/cpp/m-system.drawing.drawing_0_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/visualbasic/m-system.drawing.drawing_0_1.vb)]"
  syntax:
    content: public void StartFigure ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.StartFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  id: Transform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Transform(Matrix)
  nameWithType: GraphicsPath.Transform(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Transform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "변환 매트릭스를이 적용 됩니다. <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "변환 수 크기 조정, 변환, 회전 하거나 <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds an ellipse to the path.  \n  \n-   Draws path to the screen.  \n  \n-   Creates a transform matrix to translate the path 100 units in the x-axis direction.  \n  \n-   Draws the transformed path to the screen.  \n  \n Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/csharp/40450369-76ad-4f55-a17b-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/cpp/40450369-76ad-4f55-a17b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/visualbasic/40450369-76ad-4f55-a17b-_1.vb)]"
  syntax:
    content: public void Transform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 적용 하도록 변환을 나타내는입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사각형 및이 평행 사변형에 의해 정의 되는 warp 변환을 적용 합니다. <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 에 정의 된 사각형을 평행 사변형을 정의 하는 `srcRect` 변환 됩니다. 배열 서너 개의 요소를 포함할 수 있습니다. 배열에 세 개의 요소가 있으면 평행 사변형의 오른쪽 아래 모서리 처음 세 점을 포함 됩니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 정의한 평행 사변형을 변환 되는 사각형을 나타내는 `destPoints`합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사각형 및이 평행 사변형에 의해 정의 되는 warp 변환을 적용 합니다. <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 에 정의 된 사각형을 평행 사변형을 정의 하는 `srcRect` 변환 됩니다. 배열 서너 개의 요소를 포함할 수 있습니다. 배열에 세 개의 요소가 있으면 평행 사변형의 오른쪽 아래 모서리 처음 세 점을 포함 됩니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 정의한 평행 사변형을 변환 되는 사각형을 나타내는 `destPoints`합니다."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 경로에 적용할 기하학적 변환을 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix,WarpMode)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사각형 및이 평행 사변형에 의해 정의 되는 warp 변환을 적용 합니다. <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조에 정의 된 사각형을 평행 사변형을 정의 하는 `srcRect` 변환 됩니다. 배열 서너 개의 요소를 포함할 수 있습니다. 배열에 세 개의 요소가 있으면 평행 사변형의 오른쪽 아래 모서리 처음 세 점을 포함 됩니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 정의한 평행 사변형을 변환 되는 사각형을 나타내는 `destPoints`합니다."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 경로에 적용할 기하학적 변환을 지정 하는 합니다."
    - id: warpMode
      type: System.Drawing.Drawing2D.WarpMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WarpMode&quot;> </xref> 이 warp 작업 관점 또는 쌍선형 모드를 사용 하는지 여부를 지정 하는 열거형입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사각형 및이 평행 사변형에 의해 정의 되는 warp 변환을 적용 합니다. <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds a rectangle to the path.  \n  \n-   Draws that rectangle to the screen in black.  \n  \n-   Warps the path with a perspective warp.  \n  \n-   Draws the warped rectangle (path) to the screen in red.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/csharp/55b0be67-c94c-4de0-a933-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/cpp/55b0be67-c94c-4de0-a933-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/visualbasic/55b0be67-c94c-4de0-a933-_1.vb)]"
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "배열을 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 에 정의 된 사각형을 평행 사변형을 정의 하는 `srcRect` 변환 됩니다. 배열 서너 개의 요소를 포함할 수 있습니다. 배열에 세 개의 요소가 있으면 평행 사변형의 오른쪽 아래 모서리 처음 세 점을 포함 됩니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 정의한 평행 사변형을 변환 되는 사각형을 나타내는 `destPoints`합니다."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 경로에 적용할 기하학적 변환을 지정 하는 합니다."
    - id: warpMode
      type: System.Drawing.Drawing2D.WarpMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WarpMode&quot;> </xref> 이 warp 작업 관점 또는 쌍선형 모드를 사용 하는지 여부를 지정 하는 열거형입니다."
    - id: flatness
      type: System.Single
      description: "0에서 어떻게 플랫 결과 경로 지정 하는 1 사이의 값은입니다. 자세한 내용은 참조는 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten*>메서드.</xref:System.Drawing.Drawing2D.GraphicsPath.Flatten*>"
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  id: Widen(System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen)
  nameWithType: GraphicsPath.Widen(Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "경로에 추가 개요를 추가합니다."
  remarks: "이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen>넓은 호출에 사용 되는.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> 사용 해야 <xref:System.Drawing.Graphics.FillPath%2A>아니라 있는 <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A> 줄 사이 공백을 입력 하려는 경우"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Widen (System.Drawing.Pen pen);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> 경로의 원래 개요 및이 메서드가 만드는 새 개요 간의 너비를 지정 하는 합니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  id: Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen,Matrix)
  nameWithType: GraphicsPath.Widen(Pen,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "추가 개요를 추가 하는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen>넓은 호출에 사용 되는.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> 사용 해야 <xref:System.Drawing.Graphics.FillPath%2A>아니라 있는 <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A> 줄 사이 공백을 입력 하려는 경우"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> 경로의 원래 개요 및이 메서드가 만드는 새 개요 간의 너비를 지정 하는 합니다."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 확대 하기 전에 경로에 적용할 변환 지정입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  id: Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen,Matrix,Single)
  nameWithType: GraphicsPath.Widen(Pen,Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 대체 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 이 경로 지정된 된 펜으로 그릴 때 채워진 영역을 둘러싸는 곡선으로 합니다."
  remarks: "이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen>넓은 호출에 사용 되는.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> 사용 해야 <xref:System.Drawing.Graphics.FillPath%2A>아니라 있는 <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A> 줄 사이 공백을 입력 하려는 경우"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds two ellipses to the path.  \n  \n-   Draws the path in black.  \n  \n-   Widens the path.  \n  \n-   Draws the path in red.  \n  \n Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/csharp/baafea63-e45c-4b80-99b6-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/cpp/baafea63-e45c-4b80-99b6-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/visualbasic/baafea63-e45c-4b80-99b6-_1.vb)]"
  syntax:
    content: public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> 경로의 원래 개요 및이 메서드가 만드는 새 개요 간의 너비를 지정 하는 합니다."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 확대 하기 전에 경로에 적용할 변환 지정입니다."
    - id: flatness
      type: System.Single
      description: "평면 곡선에 지정 하는 값입니다."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath()
  nameWithType: GraphicsPath.GraphicsPath()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath()
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(FillMode)
  nameWithType: GraphicsPath.GraphicsPath(FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(FillMode)
- uid: System.Drawing.Drawing2D.FillMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FillMode
  nameWithType: FillMode
  fullName: System.Drawing.Drawing2D.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(Point[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(PointF[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(Point[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(PointF[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddArc(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Rectangle,Single,Single)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(RectangleF,Single,Single)
  nameWithType: GraphicsPath.AddArc(RectangleF,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Point,Point,Point,Point)
  nameWithType: GraphicsPath.AddBezier(Point,Point,Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Point,Point,Point,Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(PointF,PointF,PointF,PointF)
  nameWithType: GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers(Point[])
  nameWithType: GraphicsPath.AddBeziers(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers(PointF[])
  nameWithType: GraphicsPath.AddBeziers(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(Point[])
  nameWithType: GraphicsPath.AddClosedCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(PointF[])
  nameWithType: GraphicsPath.AddClosedCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(Point[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[])
  nameWithType: GraphicsPath.AddCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[])
  nameWithType: GraphicsPath.AddCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[],Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Rectangle)
  nameWithType: GraphicsPath.AddEllipse(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Rectangle)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(RectangleF)
  nameWithType: GraphicsPath.AddEllipse(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddEllipse(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Point,Point)
  nameWithType: GraphicsPath.AddLine(Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Point,Point)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(PointF,PointF)
  nameWithType: GraphicsPath.AddLine(PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(PointF,PointF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddLine(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines(Point[])
  nameWithType: GraphicsPath.AddLines(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines(PointF[])
  nameWithType: GraphicsPath.AddLines(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPath(GraphicsPath,Boolean)
  nameWithType: GraphicsPath.AddPath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPath(GraphicsPath,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddPie(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Rectangle,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon(Point[])
  nameWithType: GraphicsPath.AddPolygon(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon(PointF[])
  nameWithType: GraphicsPath.AddPolygon(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle(Rectangle)
  nameWithType: GraphicsPath.AddRectangle(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(Rectangle)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle(RectangleF)
  nameWithType: GraphicsPath.AddRectangle(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles(Rectangle[])
  nameWithType: GraphicsPath.AddRectangles(Rectangle[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(Rectangle[])
- uid: System.Drawing.Rectangle[]
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle[]
  spec.csharp:
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Rectangle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles(RectangleF[])
  nameWithType: GraphicsPath.AddRectangles(RectangleF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(RectangleF[])
- uid: System.Drawing.RectangleF[]
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF[]
  spec.csharp:
  - uid: System.Drawing.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: RectangleF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.FontFamily
  parent: System.Drawing
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Drawing.FontFamily
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: ClearMarkers()
  nameWithType: GraphicsPath.ClearMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers()
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Clone()
  nameWithType: GraphicsPath.Clone()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseAllFigures()
  nameWithType: GraphicsPath.CloseAllFigures()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures()
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseFigure()
  nameWithType: GraphicsPath.CloseFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseFigure()
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsPath.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Dispose()
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: FillMode
  nameWithType: GraphicsPath.FillMode
  fullName: System.Drawing.Drawing2D.GraphicsPath.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Finalize()
  nameWithType: GraphicsPath.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Finalize()
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten()
  nameWithType: GraphicsPath.Flatten()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten()
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten(Matrix)
  nameWithType: GraphicsPath.Flatten(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten(Matrix,Single)
  nameWithType: GraphicsPath.Flatten(Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds()
  nameWithType: GraphicsPath.GetBounds()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds()
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds(Matrix)
  nameWithType: GraphicsPath.GetBounds(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds(Matrix,Pen)
  nameWithType: GraphicsPath.GetBounds(Matrix,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix,Pen)
- uid: System.Drawing.Pen
  parent: System.Drawing
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetLastPoint()
  nameWithType: GraphicsPath.GetLastPoint()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint()
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Point,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(PointF,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Point,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(PointF,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Int32,Int32,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Single,Single,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Int32,Int32,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Single,Single,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Point)
  nameWithType: GraphicsPath.IsVisible(Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(PointF)
  nameWithType: GraphicsPath.IsVisible(PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Point,Graphics)
  nameWithType: GraphicsPath.IsVisible(Point,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(PointF,Graphics)
  nameWithType: GraphicsPath.IsVisible(PointF,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Int32,Int32)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Single,Single)
  nameWithType: GraphicsPath.IsVisible(Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Int32,Int32,Graphics)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Single,Single,Graphics)
  nameWithType: GraphicsPath.IsVisible(Single,Single,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathData
  nameWithType: GraphicsPath.PathData
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathData
- uid: System.Drawing.Drawing2D.PathData
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PathData
  nameWithType: PathData
  fullName: System.Drawing.Drawing2D.PathData
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathPoints
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathTypes
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PointCount
  nameWithType: GraphicsPath.PointCount
  fullName: System.Drawing.Drawing2D.GraphicsPath.PointCount
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reset()
  nameWithType: GraphicsPath.Reset()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reset()
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reverse()
  nameWithType: GraphicsPath.Reverse()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reverse()
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: SetMarkers()
  nameWithType: GraphicsPath.SetMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.SetMarkers()
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: StartFigure()
  nameWithType: GraphicsPath.StartFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.StartFigure()
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Transform(Matrix)
  nameWithType: GraphicsPath.Transform(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Transform(Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix,WarpMode)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
- uid: System.Drawing.Drawing2D.WarpMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WarpMode
  nameWithType: WarpMode
  fullName: System.Drawing.Drawing2D.WarpMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen)
  nameWithType: GraphicsPath.Widen(Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen,Matrix)
  nameWithType: GraphicsPath.Widen(Pen,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen,Matrix,Single)
  nameWithType: GraphicsPath.Widen(Pen,Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath.GraphicsPath
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc
  nameWithType: GraphicsPath.AddArc
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier
  nameWithType: GraphicsPath.AddBezier
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers
  nameWithType: GraphicsPath.AddBeziers
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve
  nameWithType: GraphicsPath.AddClosedCurve
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve
  nameWithType: GraphicsPath.AddCurve
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse
  nameWithType: GraphicsPath.AddEllipse
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine
  nameWithType: GraphicsPath.AddLine
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines
  nameWithType: GraphicsPath.AddLines
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPath
  nameWithType: GraphicsPath.AddPath
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie
  nameWithType: GraphicsPath.AddPie
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon
  nameWithType: GraphicsPath.AddPolygon
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle
  nameWithType: GraphicsPath.AddRectangle
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles
  nameWithType: GraphicsPath.AddRectangles
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString
  nameWithType: GraphicsPath.AddString
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: ClearMarkers
  nameWithType: GraphicsPath.ClearMarkers
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Clone
  nameWithType: GraphicsPath.Clone
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseAllFigures
  nameWithType: GraphicsPath.CloseAllFigures
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseFigure
  nameWithType: GraphicsPath.CloseFigure
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Dispose
  nameWithType: GraphicsPath.Dispose
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: FillMode
  nameWithType: GraphicsPath.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Finalize
  nameWithType: GraphicsPath.Finalize
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten
  nameWithType: GraphicsPath.Flatten
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds
  nameWithType: GraphicsPath.GetBounds
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetLastPoint
  nameWithType: GraphicsPath.GetLastPoint
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible
  nameWithType: GraphicsPath.IsOutlineVisible
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible
  nameWithType: GraphicsPath.IsVisible
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathData
  nameWithType: GraphicsPath.PathData
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PointCount
  nameWithType: GraphicsPath.PointCount
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reset
  nameWithType: GraphicsPath.Reset
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reverse
  nameWithType: GraphicsPath.Reverse
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: SetMarkers
  nameWithType: GraphicsPath.SetMarkers
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: StartFigure
  nameWithType: GraphicsPath.StartFigure
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Transform
  nameWithType: GraphicsPath.Transform
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp
  nameWithType: GraphicsPath.Warp
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen
  nameWithType: GraphicsPath.Widen
