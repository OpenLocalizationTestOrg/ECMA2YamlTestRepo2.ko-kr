### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProviderTraceListener
  id: EventProviderTraceListener
  children:
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Close
  - System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  - System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  - System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  - System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener
  type: Class
  summary: "에 대 한 수신기 <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> ETW 하위 시스템에 이벤트를 기록 하는 합니다."
  remarks: "원본 이벤트에서 모든 이벤트 데이터 (trace 또는 debug)을 문자열로 ETW 하위 시스템에 기록 됩니다. 쉼표를 사용 하 여 데이터 요소 구분 됩니다. 서로 다른 구분 기호를 지정 하려면 사용 된 <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>속성.</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>       수신기를 추가 <xref:System.Diagnostics.TraceSource?displayProperty=fullName>ETW 하위 시스템 공급자를 등록 합니다.</xref:System.Diagnostics.TraceSource?displayProperty=fullName> ETW 추적 세션을 로그 파일에는 이벤트를 쓸 Logman.exe 실행 가능한 프로그램 (또는 이와 유사한)를 사용 하 여 만들어야 합니다.       이벤트 데이터는 단일 문자열 때문에 이벤트 수신기를 사용 하 여 매니페스트가 필요가 없습니다.       호출 하는 경우는 <xref:System.Diagnostics.TraceSource?displayProperty=fullName>전달 하면 이벤트를 기록 하는 메서드는 <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>열거형 값입니다.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource?displayProperty=fullName> 열거형에는 수준과 키워드 값을 포함 합니다. ETW 세션에서 추적 수신기 공급자를 사용 하도록 설정 하면 사용자가 지정한 수준 값 값일 수는 다음 <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>열거형 값 중 하 나와 연관:-위험 (값 = 1)-오류 (값은 2)-정보 (값은 8)-자세한 정보 (값은 16)-경고 (값은 4) 세션에는 다음 <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>열거형 값 중 하 나와 연결 된 값 수에 대해 지정 하는 키워드 값 :-다시 시작 (값은 2, 048)-(값이 256) 시작-중지 (값은 512)-일시 중단 (값은 1024)-(값은 4, 096) 전송</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceEventType?displayProperty=fullName>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}\");  \n  \n    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), \"Test Listener\", \"::\");  \n  \n    // You should use the All default level and control the level using the  \n    // ETW session; otherwise, you may not log all the events requested by the  \n    // session.  \n    TraceSource source = new TraceSource(\"MyProvider\", SourceLevels.All);  \n  \n    source.Listeners.Add(listener);  \n  \n    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { \"abc\", \"def\", true, 123 });  \n  \n    source.TraceEvent(TraceEventType.Warning, 12, \"Provider guid: {0}\", new object[] { providerId });  \n  \n    source.TraceInformation(\"string {0}, bool {1}, int {2}, ushort {3}\", new object[] { \"abc\", false, 123, (UInt32)5 });  \n```"
  syntax:
    content: 'public class EventProviderTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> 클래스 지정된 된 공급자 식별자를 사용 합니다."
  syntax:
    content: public EventProviderTraceListener (string providerId);
    parameters:
    - id: providerId
      type: System.String
      description: "고유 문자열 <xref:System.Guid>공급자 식별 합니다.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> 클래스 된 지정 된 공급자 식별자와 수신기의 이름을 사용 합니다."
  syntax:
    content: public EventProviderTraceListener (string providerId, string name);
    parameters:
    - id: providerId
      type: System.String
      description: "고유 문자열 <xref:System.Guid>공급자 식별 합니다.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "수신기의 이름입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> 클래스 지정된 된 공급자 식별자, 이름, 수신기 및 구분 기호를 사용 합니다."
  remarks: '-'
  syntax:
    content: public EventProviderTraceListener (string providerId, string name, string delimiter);
    parameters:
    - id: providerId
      type: System.String
      description: "고유 문자열 <xref:System.Guid>공급자 식별 합니다.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "수신기의 이름입니다."
    - id: delimiter
      type: System.String
      description: "이벤트 데이터를 구분 하는 데 사용 하는 구분 기호입니다. (자세한 내용은 참조는 <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>속성입니다.)</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "더 이상 추적 또는 디버깅 출력을 받지 않도록 출력 스트림을 닫습니다."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "가져오고 ETW 하위 시스템에 기록 된 이벤트 데이터를 구분 하는 데 사용 되는 구분 기호를 설정 합니다."
  remarks: "수신기는 데이터 요소를 문자열로 변환한 다음 연결 문자열을 지정된 된 구분 기호를 사용 하 여 문자열의 각 데이터 요소 구분 합니다. 그런 다음 문자열은 ETW 하위 시스템의 이벤트 데이터를로 기록 됩니다.       문자열을 성공적으로 구문 분석 하려면 소비자는 데 사용 된 구분 기호를 알고 있어야 합니다.       포함 되 면 데이터는 다음에 쉼표를 포함할 수 있는 이벤트 데이터를 올바르게 구문 분석할 수 있도록 적절 한 구분 기호를 지정 합니다.       이벤트 데이터는 단일 문자열 때문에 이벤트 수신기를 사용 하 여 매니페스트가 필요가 없습니다.       구분 기호를 사용 하 여 기록 된 이벤트 데이터에 적용 된 <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>메서드.</xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "이벤트 데이터를 구분 하는 데 사용 하는 구분 기호입니다. 기본 구분 기호는 쉼표 합니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "오류를 내보냅니다 구현할 때 만든 수신기에 자세한 오류 메시지 및 메시지는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 클래스입니다."
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "내보낼 메시지입니다."
    - id: detailMessage
      type: System.String
      description: "내보낼 자세한 메시지입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "출력 버퍼를 플러시합니다."
  syntax:
    content: public override sealed void Flush ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적 수신기에서 지 원하는 사용자 지정 특성을 가져옵니다."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "추적 수신기에서 지 원하는 사용자 지정 특성 이름을 지정 하는 문자열 배열을 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 사용자 지정 특성이 없는 경우."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "안전한 추적 수신기가 스레드로부터 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public override sealed bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>추적 수신기가 스레드로부터 안전 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적을 기록 정보, 데이터 개체 및 이벤트 정보를 수신기 별 출력 합니다."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: data
      type: System.Object
      description: "내보낼 추적 데이터입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적을 기록 정보, 데이터 개체 및 이벤트 정보를 수신기 별 출력 합니다."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: data
      type: System.Object[]
      description: "데이터로 내보낼 개체의 배열입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "쓰기 추적 및 이벤트 정보를 수신기 별 출력 합니다."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적 정보, 메시지 및 이벤트 정보를 수신기 별 출력에 씁니다."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적 정보, 형식이 지정 된 배열 개체 및 이벤트 정보를 수신기 별 출력에 씁니다."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "중 하나는 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> 추적을 발생 시킨 이벤트의 유형을 지정 하는 값입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: format
      type: System.String
      description: "개체에 해당 하는&0; 개 이상의 서식 항목이 포함 된 형식 문자열은 `args` 배열입니다."
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> 형식을 지정할 개체가&0; 개 이상 포함 된 배열입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "추적 정보, 메시지, 관련된 작업 id 및 이벤트 정보를 수신기 별 출력에 씁니다."
  syntax:
    content: public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> 프로세스 ID, 스레드 ID 및 스택 추적 정보가 현재 포함 된 개체입니다."
    - id: source
      type: System.String
      description: "일반적으로 추적 이벤트를 생성 하는 응용 프로그램의 이름을 출력을 식별 하는 데 사용 되는 이름입니다."
    - id: id
      type: System.Int32
      description: "이벤트에 대 한 숫자 식별자입니다."
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>관련된 작업을 식별 하는 개체입니다.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "파생된 클래스에서 재정의 하는 경우 지정된 된 메시지를 씁니다 파생된 클래스에서 만든 수신기에 있습니다."
  syntax:
    content: public override sealed void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "파생된 클래스에서 재정의 되 면 수신기에 메시지를 만든 씁니다 줄 종결자 파생된 클래스에 있습니다."
  syntax:
    content: public override sealed void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "쓸 메시지입니다."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener.EventProviderTraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close
  nameWithType: EventProviderTraceListener.Close
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail
  nameWithType: EventProviderTraceListener.Fail
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush
  nameWithType: EventProviderTraceListener.Flush
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: EventProviderTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventProviderTraceListener.TraceData
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventProviderTraceListener.TraceEvent
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: EventProviderTraceListener.TraceTransfer
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write
  nameWithType: EventProviderTraceListener.Write
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventProviderTraceListener.WriteLine
