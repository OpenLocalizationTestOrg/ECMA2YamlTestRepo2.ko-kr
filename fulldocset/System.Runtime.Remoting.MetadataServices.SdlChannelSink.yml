### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  id: SdlChannelSink
  children:
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  langs:
  - csharp
  name: SdlChannelSink
  nameWithType: SdlChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  type: Class
  summary: "서버에 대 한 구현을 서버에 WSDL 웹 서비스 설명 언어 ()을 동적으로 생성 하는 채널 싱크를 제공 합니다."
  remarks: "SdlChannelSink ´ â WSDL URL 문자열로 끝나는 경우에 &quot;? wsdl&quot;입니다.       다음 표에서 채널이 채널 싱크에 지정할 수 있는 구성 속성을 보여 줍니다. 처음 두 속성은 응용 프로그램 도메인에 의해 게시 된 개체의 WSDL 게시를 제어 하는 결합 합니다. 경우 `false` 없습니다 WSDL은 두 번째 속성에 관계 없이 반환 된 첫 번째 속성에 지정 됩니다. (기본값은 `true`.) 그렇지 않으면 두 번째 전역 메타 데이터 개체 URI 응답 하도록 허용 되는지 여부를 제어 합니다. (기본값은 `false`.)      | 속성 | 설명 |   |--------------|-----------------|   | `metadataEnabled`| 로 끝나는 요청을 허용 여부를 지정 하는 부울 값 &quot;? wsdl&quot;이이 싱크 채널 싱크 체인에 있는 경우. 기본 설정은 `true`합니다. 경우 `false`, 싱크 응용 프로그램 도메인의 모든 개체에 대 한 메타 데이터를 요청한 하는 모든 경우에 예외를 throw 합니다.<br /><br /> 이 속성은.NET Framework 버전 1.1의 다음 플랫폼에 의해서만 지원: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군. |   | `remoteApplicationMetadataEnabled`| URI 개체에 대 한 요청을 허용 여부를 지정 하는 부울 값 &quot;RemoteApplicationMetadata? wsdl&quot;, 응용 프로그램 도메인에 의해 게시 된 모든 개체를 설명 하는 WSDL을 반환 하는 합니다. 경우 `false`, &quot;RemoteApplicationMetadata.rem&quot;에 대 한 요청이 예외를 throw 합니다. 다른 모든 &quot;? wsdl&quot; 특정 개체 Uri에 대 한 요청에 적용 됩니다. 경우 `true`, 전역 메타 데이터 요청이 수행 됩니다. 기본 설정은 `false`합니다.<br /><br /> 이 속성은.NET Framework 버전 1.1의 다음 플랫폼에 의해서만 지원: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군. |"
  syntax:
    content: 'public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IServerChannelSink
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  id: '#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)'
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;> </xref> 클래스입니다."
  syntax:
    content: public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);
    parameters:
    - id: receiver
      type: System.Runtime.Remoting.Channels.IChannelReceiver
      description: "새 인스턴스에서 직렬화 할 메시지를 받을 채널 나타냅니다 <xref href=&quot;System.Runtime.Remoting.MetadataServices.SdlChannelSink&quot;> </xref>합니다."
    - id: nextSink
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "싱크 체인의 다음 싱크입니다."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "비동기적으로 전송 하는 메서드 호출에서 응답이 현재 싱크에서 처리 하도록 요청 합니다."
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "서버 전송 싱크에 돌아가도록 싱크 스택."
    - id: state
      type: System.Object
      description: "요청 측을 생성 하 고 필요한 응답 측에서 현재 싱크와 관련 된 정보입니다."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "응답 메시지입니다."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "클라이언트에 반환 메시지 머리글에 추가할 헤더입니다."
    - id: stream
      type: System.IO.Stream
      description: "전송 싱크에 다시 향하는 스트림입니다."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "반환 된 <xref:System.IO.Stream>serialize 되는 제공 된 응답 메시지에.</xref:System.IO.Stream>"
  remarks: "현재 메서드는 응답 스트림에 작성 해야 하는 경우 호출 됩니다."
  syntax:
    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "서버 전송 싱크에 돌아가도록 싱크 스택."
    - id: state
      type: System.Object
      description: "요청 측을 생성 하 고 필요한 응답 측에서 현재 싱크와 관련 된 정보입니다."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "직렬화 하는 데 사용 되는 응답 메시지입니다."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "클라이언트에 응답 스트림에서 추가 헤더입니다."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>serialize 되는 제공 된 응답 메시지에.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  id: NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "다음 가져옵니다 <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> 싱크 체인에 있습니다."
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "다음 <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> 싱크 체인에 있습니다."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "현재 싱크에서 처리 하는 요청 메시지입니다."
  remarks: "프록시의 역할은 메시지 개체에 대해 호출 되는 메서드 호출을 변환 하는 것입니다. 구현 하는 메시지 개체는 <xref:System.Runtime.Remoting.Messaging.IMessage>인터페이스를 호출 하 여 서버 쪽에 클라이언트 쪽에서 전달 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>메시지 싱크 개체에서.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> </xref:System.Runtime.Remoting.Messaging.IMessage> 즉, 모든 메시지 싱크는 호출 메시지 싱크 함께 연결 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>해당 작업을 수행한 후 다음 메시지 싱크에서에.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 예를 들어,는 동기화 관련 메시지 싱크 잠금이 획득 또는 해제 및 다운스트림 메시지 싱크에 위임 될 수 있습니다.       포맷터가 채널 싱크 보내야 하는 채널을 통해 호출 하는 메시지를 가져옵니다 때 <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, 메시지를 매개 변수로 전달 합니다.</xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> 포맷터 싱크는 다음 전송 헤더 배열과 호출 만듭니다 <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A>포맷터 싱크에.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> 이 호출은 싱크 체인으로 전달 되 고 싱크는 포맷터 싱크로 다시 전달 되는 요청 스트림을 만들 수 있습니다. 이 호출이 반환, 메시지를 serialize <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>싱크 체인에서 첫 번째 체인에서 호출 되는 메시지 채널 싱크에 전달 됩니다.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>       채널 싱크 후 메시지가 표시 될, 스트림에 데이터를 쓸, 헤더 배열에 헤더를 추가 및 다음 싱크에 대 한 호출을 전달 하기 전에 싱크 스택에서에 추가 되도록 수 있습니다. 호출 체인의 끝에 있는 전송 싱크에 도달 하면 전송 싱크가 헤더를 보내고 프로세스 속도가 반대로 바뀝니다 서버로 채널을 통해 메시지를 직렬화 합니다.       메시지가 서버 쪽에 도달 하면 전송 싱크가 헤더 및 serialize 된 스트림에서 메시지 가져오고 포맷터 싱크에 도달할 때까지 싱크 체인을 통해 전달 합니다. 포맷터 싱크는 다음 메시지를 deserialize 하 고 원격을 사용할 수 있는 메시지는 메서드 호출으로 설정 되어 있으며 해당 서버 개체를 호출에 전달 합니다."
  syntax:
    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "채널 싱크에서 현재 싱크를 호출한."
    - id: requestMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "요청을 포함 하는 메시지입니다."
    - id: requestHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "클라이언트에서 들어오는 메시지에서 검색 된 헤더입니다."
    - id: requestStream
      type: System.IO.Stream
      description: "처리 하 고 deserialization 싱크로 전달 해야 하는 스트림."
    - id: responseMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "이 메서드가 반환 될 때를 포함 한 <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> 응답 메시지를 보유 하는 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: responseHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "이 메서드가 반환 될 때를 포함 한 <xref href=&quot;System.Runtime.Remoting.Channels.ITransportHeaders&quot;> </xref> 클라이언트에 반환 되는 메시지 머리글에 추가할 헤더를 보유 하는 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: responseStream
      type: System.IO.Stream
      description: "이 메서드가 반환 될 때를 포함 한 <xref:System.IO.Stream>전송 싱크에 머리글 즉.</xref:System.IO.Stream> 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;> </xref> 메시지를 처리 하는 방법에 대 한 정보를 제공 하는 상태 값입니다."
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  id: Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  langs:
  - csharp
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "가져옵니다는 <xref:System.Collections.IDictionary>현재 채널 싱크에 대 한 속성.</xref:System.Collections.IDictionary>"
  remarks: >-
    > [!NOTE]

    >  For more information, see [&#91;\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>현재 채널 싱크에 대 한 속성.</xref:System.Collections.IDictionary>"
  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink(IChannelReceiver,IServerChannelSink)
  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.SdlChannelSink(IChannelReceiver,IServerChannelSink)
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerResponseChannelSinkStack
  nameWithType: IServerResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: SdlChannelSink
  nameWithType: SdlChannelSink.SdlChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: SdlChannelSink.AsyncProcessResponse
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: GetResponseStream
  nameWithType: SdlChannelSink.GetResponseStream
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: NextChannelSink
  nameWithType: SdlChannelSink.NextChannelSink
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: ProcessMessage
  nameWithType: SdlChannelSink.ProcessMessage
- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*
  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink
  isExternal: false
  name: Properties
  nameWithType: SdlChannelSink.Properties
