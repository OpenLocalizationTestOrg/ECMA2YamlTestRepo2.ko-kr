### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.RelatedEnd
  id: RelatedEnd
  children:
  - System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  - System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.RelatedEnd.Load
  - System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  langs:
  - csharp
  name: RelatedEnd
  nameWithType: RelatedEnd
  fullName: System.Data.Objects.DataClasses.RelatedEnd
  type: Class
  summary: "관련된 end에 대 한 일반 기능을 구현 하는 기본 클래스를 나타냅니다."
  remarks: "RelatedEnd는 되는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>클래스 및 <xref:System.Data.Objects.DataClasses.EntityReference%601>클래스</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> 에 대 한 기본 클래스       RelatedEnd 클래스 간에 공유 되는 기능을 구현 하는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>및 <xref:System.Data.Objects.DataClasses.EntityReference%601>클래스.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       이 클래스는 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd
  inheritance:
  - System.Object
  implements:
  - System.Data.Objects.DataClasses.IRelatedEnd
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  id: AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 end에 변경 될 때 발생 합니다."
  remarks: "다음과 같은 방법으로 AssociationChanged 이벤트 발생:- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName>- <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName>대량 작업 중와 같은 이벤트를 숨겨지지 않을 수 있습니다 `Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A>, 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=fullName> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=fullName>"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "반환 된 <xref:System.Collections.IEnumerator>관련된 개체의 컬렉션을 반복 하는.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>관련된 개체의 컬렉션을 반복 하는.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 개체가 모두 로드 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "호출 된 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>IsLoaded 플래그를 설정 하는 메서드 `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       호출의 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>에서 메서드는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>IsLoaded 설정 하는 `false`.</xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>       <xref:System.Data.Objects.DataClasses.EntityCollection%601> <xref:System.Data.Objects.DataClasses.EntityReference%601>관련된 end가 쿼리 경로에 포함 된 경우에 로드 될 수 있습니다</xref:System.Data.Objects.DataClasses.EntityReference%601> 또는</xref:System.Data.Objects.DataClasses.EntityCollection%601> 범위에 대 한 자세한 내용은 참조 [관련 개체 로드](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)합니다.       `Load` 메서드를 <xref:System.Data.Objects.DataClasses.EntityCollection%601>및 <xref:System.Data.Objects.DataClasses.EntityReference%601>IsLoaded 인지 아닌지 데이터 원본에서 관련된 개체를 로드 `true`.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       IsLoaded 플래그에서 변경 되는 개체 분리 되 면 `false` 를 `true`합니다.       IsLoaded 적용 되는지 확인 해야 처리 하기 전에 관련된 end가 완전히 로드 되도록 `false`합니다. IsLoaded 이면 `false`를 호출 해야는 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>메서드.</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>"
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관련된 end; 데이터베이스의 모든 관련된 개체를 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "파생된 클래스에서 재정의 되 면 관련된 개체 또는 개체 기본 병합 옵션을 사용 하는 관련된 end에 로드 합니다."
  remarks: "<xref:System.Data.Objects.MergeOption>추적 된 개체 또는 <xref:System.Data.Objects.MergeOption>개체 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 에서 추적 되지 않은 경우</xref:System.Data.Objects.MergeOption> 에 대 한</xref:System.Data.Objects.MergeOption> 기본 병합 옵션은 이외의 다른 병합 옵션을 지정 하려면 <xref:System.Data.Objects.MergeOption>, 호출의 `Load` 메서드를는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>또는 <xref:System.Data.Objects.DataClasses.EntityReference%601>특정 생긴다는 <xref:System.Data.Objects.MergeOption>매개 변수.</xref:System.Data.Objects.MergeOption> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> </xref:System.Data.Objects.MergeOption>       부하 메서드 집합을 호출는 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>나타내는 플래그입니다. `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       Load 메서드에서 데이터 소스에서 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>은 `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "원본 개체를 사용 하 여 검색 된 경우는 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 쿼리 및 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 않습니다 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 또는 관련된 개체는 이미 로드 합니다.       -또는-소스 개체가에 연결 되지 않은 경우는 <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>합니다.       -또는-소스 개체가 추적 되 고 하지만 경우에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태 또는 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 사용 되는 부하는 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "파생된 클래스에서 재정의 되 면 지정 된 병합 옵션을 사용 하 여 관련된 end에서 개체 또는 개체를 로드 합니다."
  remarks: "둘 다 <xref:System.Data.Objects.DataClasses.EntityCollection%601>및 <xref:System.Data.Objects.DataClasses.EntityReference%601>관련된 개체를 로드 하려면이 메서드를 재정의 합니다.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601> `Load`탐색 속성에 의해 노출 되는 관련된 end에서 관련된 개체를 명시적으로 로드 하 라고 합니다. 자세한 내용은 참조 [관련 개체 로드](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)합니다.       호출의 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>메서드 집합은 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>플래그를 `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       Load 메서드에서 데이터 소스에서 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>은 `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       <xref:System.Data.Objects.MergeOption>추적 된 개체 또는 <xref:System.Data.Objects.MergeOption>개체 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 에서 추적 되지 않은 경우</xref:System.Data.Objects.MergeOption> 에 대 한</xref:System.Data.Objects.MergeOption> 기본 병합 옵션은"
  syntax:
    content: public abstract void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 를 기존 개체를 병합할 때 사용할 &lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;합니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.Load*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "원본 개체를 사용 하 여 검색 된 경우는 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 쿼리 및 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 않습니다 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 또는 관련된 개체는 이미 로드 합니다.       -또는-소스 개체가에 연결 되지 않은 경우는 <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>합니다.       -또는-소스 개체가 추적 되 고 하지만 경우에 <xref href=&quot;System.Data.EntityState&quot;> </xref> 또는 <xref href=&quot;System.Data.EntityState&quot;> </xref> 상태 또는 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 에 사용 되는 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>은 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>.</xref:System.Data.Objects.DataClasses.RelatedEnd.Load*>"
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "와 함께 엔터티 개체를 deserialize 하기 위해 내부적으로 사용 된 <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> 인스턴스."
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Serialize 된 스트림입니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "이 관련된 end가 참여 하는 관계의 이름을 가져옵니다."
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "이 관계의 이름을 <xref href=&quot;System.Data.Objects.DataClasses.RelatedEnd&quot;> </xref> 참여 합니다. 관계 이름이 정규화 된 네임 스페이스 않습니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 end에 대 한 메타 데이터에 대 한 참조를 가져옵니다."
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;> </xref> 관계의 끝에 대 한 메타 데이터가 포함 된 개체입니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 소스 끝 역할 이름을 가져옵니다."
  remarks: "역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [Association 요소 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)합니다."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>이며, 역할 이름입니다.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 end에 있는 개체를 추가합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.DataClasses.RelatedEnd>인스턴스로 캐스팅 되는 <xref:System.Data.Objects.DataClasses.IRelatedEnd>인터페이스.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Add 메서드는.NET Framework의 이전 버전과 호환성을 위해만 유지 됩니다."
  syntax:
    content: void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "컬렉션에 추가 하는 개체입니다. 이 개체를 구현 해야는 <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref> 인터페이스입니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 end에 있는 개체를 추가합니다."
  remarks: "원본 엔터티 개체가 캐시에 연결 되 면 다음 연결 된 모든 끝 개체 캐시에 추가 되 고 해당 관계에 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 에 추가 <xref:System.Data.Objects.DataClasses.RelatedEnd>관계의 고정.</xref:System.Data.Objects.DataClasses.RelatedEnd>"
  syntax:
    content: void IRelatedEnd.Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "엔터티 인스턴스를 관련된 end에 추가 합니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "개체를 관련된 end에 연결합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.DataClasses.RelatedEnd>인스턴스로 캐스팅 되는 <xref:System.Data.Objects.DataClasses.IRelatedEnd>인터페이스.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Attach 메서드는.NET Framework의 이전 버전과 호환성을 위해만 유지 됩니다."
  syntax:
    content: void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "연결 되는 개체입니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "개체를 관련된 end에 연결 합니다."
  remarks: "관련된 end에 연결 된 일부 엔터티 이미 있으면 새 엔터티와 기존 엔터티에 병합 됩니다. 새 엔터티는 관련 된 엔터티 개체의 전체 집합이 아닐 수도 있습니다.       원본 엔터티 개체가 및 전달 되는 모든 엔터티 개체에 있어야는 <xref:System.Data.EntityState>또는 <xref:System.Data.EntityState>상태.</xref:System.Data.EntityState> </xref:System.Data.EntityState> 삭제 된 요소는 상태 관리자가 관계 인스턴스를 이미 추적 하는 경우에 허용 됩니다."
  syntax:
    content: void IRelatedEnd.Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "엔터티 인스턴스를 관련된 end에 연결 합니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  id: System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "반환 된 <xref:System.Collections.IEnumerable>관련된 end에 속하는 개체를 나타내는입니다.</xref:System.Collections.IEnumerable>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.DataClasses.RelatedEnd>인스턴스로 캐스팅 되는 <xref:System.Data.Objects.DataClasses.IRelatedEnd>인터페이스.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       <xref:System.Data.Objects.DataClasses.EntityCollection%601><xref:System.Data.Objects.DataClasses.EntityReference%601>반환할 <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> IRelatedEnd.CreateSourceQuery 둘 다</xref:System.Data.Objects.DataClasses.EntityReference%601> 재정</xref:System.Data.Objects.DataClasses.EntityCollection%601> 이 쿼리를 실행 되 면 관련된 end에 속하는 개체의 동일한 집합을 반환 합니다."
  syntax:
    content: System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>관련된 end에 속하는 개체를 나타내는입니다.</xref:System.Collections.IEnumerable>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관련된 end의 컬렉션에서 개체를 제거 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.DataClasses.RelatedEnd>인스턴스로 캐스팅 되는 <xref:System.Data.Objects.DataClasses.IRelatedEnd>인터페이스.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd>       IRelatedEnd.Remove 메서드는.NET Framework의 이전 버전과 호환성을 위해만 유지 됩니다."
  syntax:
    content: bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "컬렉션에서 제거할 엔터티 인스턴스입니다."
    return:
      type: System.Boolean
      description: "개체가 제거 되었는지 여부를 나타내는 값입니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  id: System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  isEii: true
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "개체를 관련된 end의 일부인 경우 관련된 end에서 개체를 제거 합니다."
  remarks: "원본 엔터티 개체가 캐시에 연결 되 면 관계 삭제 되도록 표시 됩니다."
  syntax:
    content: bool IRelatedEnd.Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "엔터티 인스턴스를 관련된 end에서 제거 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>엔터티가는 성공적으로 제거 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "관계의 대상 끝에 있는 역할 이름을 가져옵니다."
  remarks: "역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다. 자세한 내용은 참조 [Association 요소 (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)합니다."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>이며, 역할 이름입니다.</xref:System.String>"
  overload: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: AssociationChanged
  nameWithType: RelatedEnd.AssociationChanged
  fullName: System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: RelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load()
  nameWithType: RelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: RelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: RelatedEnd.OnDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: RelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.RelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: RelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.RelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: Load
  nameWithType: RelatedEnd.Load
- uid: System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: OnDeserialized
  nameWithType: RelatedEnd.OnDeserialized
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: RelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: RelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: RelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Add
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Attach
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.IRelatedEnd.Remove
  nameWithType: RelatedEnd.System.Data.Objects.DataClasses.IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: RelatedEnd.TargetRoleName
