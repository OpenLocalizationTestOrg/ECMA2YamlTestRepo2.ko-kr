### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProperty
  id: CngProperty
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  summary: "암호화 CNG (Next Generation) 키 또는 공급자의 속성을 캡슐화합니다."
  remarks: "이 클래스는 속성 이름 (문자열) 값 (바이트 배열)를 캡슐화 한 <xref:System.Security.Cryptography.CngPropertyOptions>플래그, 접근자 속성, 비교 및 해시 함수입니다.</xref:System.Security.Cryptography.CngPropertyOptions>       이 클래스와 함께 사용 되는 <xref:System.Security.Cryptography.CngKey.SetProperty%2A>및 <xref:System.Security.Cryptography.CngKey.GetProperty%2A>메서드.</xref:System.Security.Cryptography.CngKey.GetProperty%2A> </xref:System.Security.Cryptography.CngKey.SetProperty%2A>"
  syntax:
    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProperty>
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 클래스입니다."
  remarks: "특정 집합으로 저장 된 속성을 <xref:System.Security.Cryptography.CngPropertyOptions>플래그 검색 되는 경우 동일한 플래그 집합이 필요 합니다.</xref:System.Security.Cryptography.CngPropertyOptions>"
  syntax:
    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "초기화 속성 이름입니다."
    - id: value
      type: System.Byte[]
      description: "초기화 속성 값입니다."
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: "속성이 저장 되는 방법을 지정 하는 열거형 값의 비트 조합입니다."
  overload: System.Security.Cryptography.CngProperty.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "현재 지정 된 개체와 비교 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Security.Cryptography.CngProperty>개체는 해당 이름, 값 및 옵션 동일 하면 같은 것으로 간주 됩니다.</xref:System.Security.Cryptography.CngProperty> 이름을 비교는 대/소문자 구분 방식으로 수행 됩니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 비교할 개체 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> obj </code> 매개 변수는는 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체가 현재 개체와 동일한 속성을 지정 하 고, 그러지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "지정 된 비교 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체를 현재 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Security.Cryptography.CngProperty>개체는 해당 이름, 값 및 옵션 동일 하면 같은 것으로 간주 됩니다.</xref:System.Security.Cryptography.CngProperty> 이름을 비교는 대/소문자 구분 방식으로 수행 됩니다."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProperty other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
      description: "현재 비교할 개체 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> other </code> 매개 변수가 현재 개체와 동일한 속성을 나타내는, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.CngProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "현재에 대 한 해시 값을 생성 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 해시 값 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.CngProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "속성 값을 가져옵니다 현재 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체를 지정 합니다."
  syntax:
    content: public byte[] GetValue ();
    parameters: []
    return:
      type: System.Byte[]
      description: "속성에 저장 된 값을 나타내는 배열입니다."
  overload: System.Security.Cryptography.CngProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "속성을 가져옵니다 이름을 지정 하는 현재 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체를 지정 합니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "현재에서 설정 된 속성 이름을 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.CngProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "두 결정 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체가 동일한 속성 이름, 값 및 옵션을 지정 합니다."
  remarks: "<xref:System.Security.Cryptography.CngProperty>개체는 해당 이름, 값 및 옵션 동일 하면 같은 것으로 간주 됩니다.</xref:System.Security.Cryptography.CngProperty> 이름을 비교는 대/소문자 구분 방식으로 수행 됩니다."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "암호화 CNG (Next Generation) 키 또는 공급자의 속성을 지정 하는 개체입니다."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "로 식별 되는 개체와 비교할 두 번째 개체는 `left` 매개 변수입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 개체가 동일한 속성을 지정 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.CngProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "두 결정 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체가 동일한 속성 이름, 값 및 옵션을 지정 하지 않으면 합니다."
  remarks: "<xref:System.Security.Cryptography.CngProperty>개체는 해당 이름, 값 및 옵션 동일 하면 같은 것으로 간주 됩니다.</xref:System.Security.Cryptography.CngProperty> 이름을 비교는 대/소문자 구분 방식으로 수행 됩니다."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
      description: "암호화 CNG (Next Generation) 키 또는 공급자의 속성을 지정 하는 개체입니다."
    - id: right
      type: System.Security.Cryptography.CngProperty
      description: "로 식별 되는 개체와 비교할 두 번째 개체는 `left` 매개 변수입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 개체가 동일한 속성을 지정 하지 않을 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.CngProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "속성 옵션을 가져옵니다 현재 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체를 지정 합니다."
  remarks: "<xref:System.Security.Cryptography.CngKey>개체에 포함 되어 <xref:System.Security.Cryptography.CngProperty>포함 된 개체는 <xref:System.Security.Cryptography.CngPropertyOptions>속성에 함께 저장 되었습니다.</xref:System.Security.Cryptography.CngPropertyOptions> </xref:System.Security.Cryptography.CngProperty></xref:System.Security.Cryptography.CngKey>"
  syntax:
    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }
    return:
      type: System.Security.Cryptography.CngPropertyOptions
      description: "현재 설정 된 옵션을 지정 하는 개체 <xref href=&quot;System.Security.Cryptography.CngProperty&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.CngProperty.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty(String,Byte[],CngPropertyOptions)
  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProperty.Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals(CngProperty)
  nameWithType: CngProperty.Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProperty.GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProperty.GetValue
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue()
  nameWithType: CngProperty.GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
- uid: System.Security.Cryptography.CngProperty.Name
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
  fullName: System.Security.Cryptography.CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality(CngProperty,CngProperty)
  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)
  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)
- uid: System.Security.Cryptography.CngProperty.Options
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
  fullName: System.Security.Cryptography.CngProperty.Options
- uid: System.Security.Cryptography.CngProperty.#ctor*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty.CngProperty
- uid: System.Security.Cryptography.CngProperty.Equals*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Equals
  nameWithType: CngProperty.Equals
- uid: System.Security.Cryptography.CngProperty.GetHashCode*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetHashCode
  nameWithType: CngProperty.GetHashCode
- uid: System.Security.Cryptography.CngProperty.GetValue*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: GetValue
  nameWithType: CngProperty.GetValue
- uid: System.Security.Cryptography.CngProperty.Name*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Name
  nameWithType: CngProperty.Name
- uid: System.Security.Cryptography.CngProperty.op_Equality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Equality
  nameWithType: CngProperty.op_Equality
- uid: System.Security.Cryptography.CngProperty.op_Inequality*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: op_Inequality
  nameWithType: CngProperty.op_Inequality
- uid: System.Security.Cryptography.CngProperty.Options*
  parent: System.Security.Cryptography.CngProperty
  isExternal: false
  name: Options
  nameWithType: CngProperty.Options
