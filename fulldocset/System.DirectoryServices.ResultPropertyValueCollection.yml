### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyValueCollection
  id: ResultPropertyValueCollection
  children:
  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  langs:
  - csharp
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
  type: Class
  summary: "값을 포함 한 <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> 속성입니다."
  remarks: "<xref:System.DirectoryServices.SearchResult>인스턴스는 비슷합니다 <xref:System.DirectoryServices.DirectoryEntry>인스턴스.</xref:System.DirectoryServices.DirectoryEntry></xref:System.DirectoryServices.SearchResult> 주목할 만한 차이점은는 <xref:System.DirectoryServices.DirectoryEntry>해당 정보를 검색에서 Active Directory 도메인 서비스 계층 될 때마다 새 개체에 액세스 하는 반면에 대 한 데이터는 <xref:System.DirectoryServices.SearchResult>에 이미 있지 않은지는 <xref:System.DirectoryServices.SearchResultCollection>하는 <xref:System.DirectoryServices.DirectorySearcher>쿼리에서 반환 합니다.</xref:System.DirectoryServices.DirectorySearcher> </xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResult> </xref:System.DirectoryServices.DirectoryEntry> 가져오려는 경우는 <xref:System.DirectoryServices.SearchResult>검색에 대 한 쿼리를 지정 하지 않은 속성을 속성은 사용할 수 없습니다.</xref:System.DirectoryServices.SearchResult>"
  syntax:
    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Contains 메서드 지정 된 속성 값이이 컬렉션에 있는지 여부를 확인 합니다."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 속성 값입니다."
    return:
      type: System.Boolean
      description: "반환 값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정한 속성이이 컬렉션에 속하는 경우 이렇게 하지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "CopyTo 메서드를 사용 하면이 컬렉션에서 속성 값을 복사 하는 배열의 특정 인덱스부터 시작 하 여 배열에 있습니다."
  syntax:
    content: public void CopyTo (object[] values, int index);
    parameters:
    - id: values
      type: System.Object[]
      description: "형식의 배열 <xref:System.Object>이 컬렉션의 속성 값을 받는.</xref:System.Object>"
    - id: index
      type: System.Int32
      description: "속성 값의 복사를 시작 하는&0;부터 시작 배열 인덱스입니다."
  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "IndexOf 메서드는이 컬렉션의 지정 된 속성 값의 인덱스를 검색 합니다."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 속성 값입니다."
    return:
      type: System.Int32
      description: "지정된 된 속성 값의&0;부터 시작 하는 인덱스입니다. 개체가 없을 경우 반환 값은-1입니다."
  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "이 항목은 지정된 된 인덱스에 있는 속성 값을 가져옵니다."
  remarks: "C#에서이 속성은 <xref:System.DirectoryServices.ResultPropertyValueCollection>클래스</xref:System.DirectoryServices.ResultPropertyValueCollection> 에 대 한 인덱서       Jscript에서는 형식에 의해 정의 된 기본 인덱싱된 속성을 사용할 수 있습니다 하지만 정의할 수는 없습니다 명시적으로 직접. 그러나 기본을 자동으로 제공 하는 클래스에 expando 특성을 지정 인덱싱된 개체의 유형 및 인덱스 형식이 <xref:System.String>.</xref:System.String> 속성"
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "검색할 속성 값의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 있는 속성 값입니다."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyValueCollection.Contains
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyValueCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: ResultPropertyValueCollection.IndexOf
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyValueCollection.Item
