### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IStateRuntime
  id: IStateRuntime
  children:
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.StopProcessing
  langs:
  - csharp
  name: IStateRuntime
  nameWithType: IStateRuntime
  fullName: System.Web.SessionState.IStateRuntime
  type: Interface
  summary: "세션 데이터를 관리 하는 ASP.NET 상태 서비스에서 사용 되는 인터페이스를 정의 합니다."
  remarks: "ASP.NET 상태 서비스 라고 하는 Windows 서비스를 사용 하 여 ASP.NET 세션 상태 out of process를 관리할 수 있습니다. <xref:System.Web.SessionState.StateRuntime>클래스 세션 데이터를 관리 하려면이 서비스에서 관리 되지 않는 코드에서 사용 됩니다.</xref:System.Web.SessionState.StateRuntime> 이 클래스는 ASP.NET 상태 서비스의.NET Framework 인프라 구현을 지원 하며가 의도 한 사용자 코드에서 직접 사용할 수 있습니다.       Asp.net; sessionstate 관리의 기본 메서드가 아닙니다 ASP.NET 상태 서비스를 사용 하 여 ASP.NET에서는 기본적으로 in-process에 세션 상태 관리를 지원 합니다. 또한 Microsoft SQL Server 데이터베이스에 세션 상태를 관리 하는 두 번째 독립 프로세스 옵션을 지원 하 고 통해 사용자 지정 세션 상태 관리 솔루션입니다. 세션 상태 저장소 옵션에 대 한 자세한 내용은 참조 [세션 상태 모드](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IStateRuntime
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 데이터를 처리 하는 ASP.NET 상태 서버에서 사용합니다."
  remarks: "ASP.NET 상태 서비스 라고 하는 Windows 서비스를 사용 하 여 ASP.NET 세션 상태 out of process를 관리할 수 있습니다. <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>메서드는이 서비스에서 관리 되지 않는 코드에서 세션 데이터를 관리 합니다.</xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>       이 멤버는 ASP.NET 상태 서비스의.NET Framework 인프라 구현을 지원 하며가 의도 한 사용자 코드에서 직접 사용할 수 있습니다. 세션 상태 저장소 옵션에 대 한 자세한 내용은 참조 [세션 상태 모드](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>관리 되지 않는 ASP.NET 상태 서버에 저장 된 개체에 대 한 포인터입니다.</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "동작 개체입니다."
    - id: uri
      type: System.String
      description: "세션에 대 한 식별자입니다."
    - id: exclusive
      type: System.Int32
      description: "저장소에서 개체에 대 한 액세스의 형식입니다."
    - id: timeout
      type: System.Int32
      description: "세션 데이터 저장 된 분 수입니다."
    - id: lockCookieExists
      type: System.Int32
      description: "잠금 쿠키 ASP.NET 상태 서버에 ASP.NET 웹 서버에서 원래 요청에 있는지 여부를 나타내는 값입니다."
    - id: lockCookie
      type: System.Int32
      description: "세션 상태에 대 한 잠금의 소유자입니다."
    - id: contentLength
      type: System.Int32
      description: "세션에 대해 저장 된 데이터의 길이 (바이트)를 합니다."
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>관리 되지 않는 ASP.NET 상태 서버에 세션에 대 한 저장 된 내용에 대 한 포인터입니다.</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 데이터를 처리 하는 ASP.NET 상태 서버에서 사용합니다."
  remarks: "ASP.NET 상태 서비스 라고 하는 Windows 서비스를 사용 하 여 ASP.NET 세션 상태 out of process를 관리할 수 있습니다. ProcessRequest 메서드는 세션 데이터를 관리 하려면이 서비스에서 관리 되지 않는 코드에 의해 사용 됩니다.       이 멤버는 ASP.NET 상태 서비스의.NET Framework 인프라 구현을 지원 하며가 의도 한 사용자 코드에서 직접 사용할 수 있습니다. 세션 상태 저장소 옵션에 대 한 자세한 내용은 참조 [세션 상태 모드](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>관리 되지 않는 ASP.NET 상태 서버에 저장 된 개체에 대 한 포인터입니다.</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "동작 개체입니다."
    - id: uri
      type: System.String
      description: "세션에 대 한 식별자입니다."
    - id: exclusive
      type: System.Int32
      description: "저장소에서 개체에 대 한 액세스의 형식입니다."
    - id: extraFlags
      type: System.Int32
      description: "현재 세션에는 초기화 되지 않은 쿠키 없는 세션 인지 여부를 나타내는 값입니다."
    - id: timeout
      type: System.Int32
      description: "세션 데이터 저장 된 분 수입니다."
    - id: lockCookieExists
      type: System.Int32
      description: "잠금 쿠키 ASP.NET 상태 서버에 ASP.NET 웹 서버에서 원래 요청에 있는지 여부를 나타내는 값입니다."
    - id: lockCookie
      type: System.Int32
      description: "세션 상태에 대 한 잠금의 소유자입니다."
    - id: contentLength
      type: System.Int32
      description: "세션에 대해 저장 된 데이터의 길이 (바이트)를 합니다."
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>관리 되지 않는 ASP.NET 상태 서버에 세션에 대 한 저장 된 내용에 대 한 포인터입니다.</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  id: StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "ASP.NET 상태 서버에 저장 된 세션 데이터의 처리를 중지 합니다."
  remarks: "ASP.NET 상태 서비스 라고 하는 Windows 서비스를 사용 하 여 ASP.NET 세션 상태 out of process를 관리할 수 있습니다. <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A>메서드 세션 데이터 처리를 중지 하려면이 서비스에서 관리 되지 않는 코드에 의해 사용 됩니다.</xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> 이 멤버는 ASP.NET 상태 서비스의.NET Framework 인프라 구현을 지원 하기 위해 제공 되며 하지 않습니다 의도 한 사용자 코드에서 직접 사용할 수 있습니다. 세션 상태 저장소 옵션에 대 한 자세한 내용은 참조 [세션 상태 모드](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void StopProcessing ();
    parameters: []
  overload: System.Web.SessionState.IStateRuntime.StopProcessing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest
  nameWithType: IStateRuntime.ProcessRequest
- uid: System.Web.SessionState.IStateRuntime.StopProcessing*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing
  nameWithType: IStateRuntime.StopProcessing
