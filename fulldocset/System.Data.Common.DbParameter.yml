### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbParameter
  id: DbParameter
  children:
  - System.Data.Common.DbParameter.#ctor
  - System.Data.Common.DbParameter.DbType
  - System.Data.Common.DbParameter.Direction
  - System.Data.Common.DbParameter.IsNullable
  - System.Data.Common.DbParameter.ParameterName
  - System.Data.Common.DbParameter.Precision
  - System.Data.Common.DbParameter.ResetDbType
  - System.Data.Common.DbParameter.Scale
  - System.Data.Common.DbParameter.Size
  - System.Data.Common.DbParameter.SourceColumn
  - System.Data.Common.DbParameter.SourceColumnNullMapping
  - System.Data.Common.DbParameter.SourceVersion
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.Data.Common.DbParameter.Value
  langs:
  - csharp
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
  type: Class
  summary: "매개 변수를 나타내는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 에 대 한 매핑도 필요에 따라는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 열입니다. 매개 변수에 대 한 자세한 내용은 참조 하십시오. [구성 매개 변수 및 매개 변수 데이터 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: 'public abstract class DbParameter : MarshalByRefObject, System.Data.IDbDataParameter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Data.IDbDataParameter
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbParameter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: DbParameter()
  nameWithType: DbParameter.DbParameter()
  fullName: System.Data.Common.DbParameter.DbParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DbParameter ();
    parameters: []
  overload: System.Data.Common.DbParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.DbType
  id: DbType
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: DbType
  nameWithType: DbParameter.DbType
  fullName: System.Data.Common.DbParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.DbType&quot;> </xref> 매개 변수입니다."
  syntax:
    content: public abstract System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "중 하나는 <xref href=&quot;System.Data.DbType&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Data.DbType&quot;> </xref>합니다."
  overload: System.Data.Common.DbParameter.DbType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "유효한는 속성이 설정 되어 있지 <xref href=&quot;System.Data.DbType&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.Common.DbParameter.Direction
  id: Direction
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: Direction
  nameWithType: DbParameter.Direction
  fullName: System.Data.Common.DbParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "여부는 매개 변수는 입력 전용, 출력 전용, 양방향 또는 저장된 프로시저 반환 값 매개 변수를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.Data.ParameterDirection>출력과 연결 된 실행은 <xref:System.Data.Common.DbCommand>는 값을 반환 하지 않습니다는 <xref:System.Data.Common.DbParameter>null 값을 포함 합니다.</xref:System.Data.Common.DbParameter> </xref:System.Data.Common.DbCommand> </xref:System.Data.ParameterDirection>       `Output``InputOut`, 및 `ReturnValue` <xref:System.Data.Common.DbCommand.ExecuteReader%2A> <xref:System.Data.Common.DbDataReader.Close%2A>또는 <xref:System.Data.Common.DbDataReader.Dispose%2A> <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbDataReader.Dispose%2A> </xref:System.Data.Common.DbDataReader.Close%2A> 호출할 때까지 액세스할 수 없습니다</xref:System.Data.Common.DbCommand.ExecuteReader%2A> 호출 하 여 반환 하는 매개 변수"
  syntax:
    content: public abstract System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "중 하나는 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "유효 기간 중 하나에 속성이 설정 되어 있지 <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbParameter.IsNullable
  id: IsNullable
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: DbParameter.IsNullable
  fullName: System.Data.Common.DbParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "매개 변수가 null 값을 허용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.DBNull>클래스</xref:System.DBNull> 를 사용 하 여 null 값 처리"
  syntax:
    content: public abstract bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>null 값이 허용 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.ParameterName
  id: ParameterName
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: DbParameter.ParameterName
  fullName: System.Data.Common.DbParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref>합니다."
  syntax:
    content: public abstract string ParameterName { get; set; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.Common.DbParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.Precision
  id: Precision
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: Precision
  nameWithType: DbParameter.Precision
  fullName: System.Data.Common.DbParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "[.NET Framework 4.5.1 이상 버전에서 지원 됨]       나타내는 데 사용 되는 최대 자릿수를 가져오거나 설정 합니다.는 <xref:System.Data.Common.DbParameter.Value*>속성.</xref:System.Data.Common.DbParameter.Value*>"
  syntax:
    content: public virtual byte Precision { get; set; }
    return:
      type: System.Byte
      description: "나타내는 데 사용 하는 최대 자릿수는 <xref:System.Data.Common.DbParameter.Value*>속성.</xref:System.Data.Common.DbParameter.Value*>"
  overload: System.Data.Common.DbParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: DbParameter.ResetDbType()
  fullName: System.Data.Common.DbParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "다시 설정 된 **DbType** 속성을 원래 설정 합니다."
  syntax:
    content: public abstract void ResetDbType ();
    parameters: []
  overload: System.Data.Common.DbParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.Scale
  id: Scale
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: Scale
  nameWithType: DbParameter.Scale
  fullName: System.Data.Common.DbParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "소수 자릿수를 가져오거나 <xref:System.Data.Common.DbParameter.Value*>확인 됩니다.</xref:System.Data.Common.DbParameter.Value*>"
  syntax:
    content: public virtual byte Scale { get; set; }
    return:
      type: System.Byte
      description: "에 소수 자릿수 <xref:System.Data.Common.DbParameter.Value*>확인 됩니다.</xref:System.Data.Common.DbParameter.Value*>"
  overload: System.Data.Common.DbParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.Size
  id: Size
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: Size
  nameWithType: DbParameter.Size
  fullName: System.Data.Common.DbParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "열에 데이터를 바이트 단위로 최대 크기를 가져오거나 설정 합니다."
  remarks: "Size 속성 이진 및 문자열 형식에 사용 됩니다.       문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터의 크기 속성이 바이트 수를 의미합니다. 유니코드 문자열 데이터에 대 한 크기는 문자 수를 나타냅니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.       가변 길이 데이터 형식에 대 한 크기는 서버에 전송할 데이터의 최대 크기를 설명 합니다. 예를 들어 유니코드 문자열 값에 대 한 크기&1; 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하는 데 사용 수 없습니다.       양방향 및 출력 매개 변수 및 반환 값에 대 한 크기의 값을 설정 해야 합니다. 이 입력된 매개 변수에 대 한 및 않으면 명시적으로 값을 설정 매개 변수가 있는 문을 실행할 때 지정된 된 매개 변수의 실제 크기에서 유추 됩니다.       <xref:System.Data.Common.DbParameter.DbType%2A> <xref:System.Data.Common.DbParameter.Value%2A>.</xref:System.Data.Common.DbParameter.Value%2A> 를 설정 하 여 매개 변수 크기 속성을 유추할 수</xref:System.Data.Common.DbParameter.DbType%2A> 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.Common.DbParameter>속성 설정을.</xref:System.Data.Common.DbParameter> 예를 들어 매개 변수의 크기 유추 된 경우 문 실행 다음 유추 된 값 크기에 포함 되지 않습니다.       고정된 길이 데이터 형식에 대 한 크기의 값은 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다.       <xref:System.Data.Common.DbParameter>지정된 된 크기는 <xref:System.Data.Common.DbParameter.Value%2A> <xref:System.Data.Common.DbParameter>잘린 <xref:System.Data.Common.DbParameter>.</xref:System.Data.Common.DbParameter> 의 크기를 지정된 된 값을 포함 됩니다</xref:System.Data.Common.DbParameter> 의</xref:System.Data.Common.DbParameter.Value%2A> 초과</xref:System.Data.Common.DbParameter> 에 제공 된 값의 크기       형식의 매개 변수로 `DbType`.`String`, 크기의 값이 길이 유니코드 문자입니다. 형식의 매개 변수로 `DbType`.`Xml`, 크기는 무시 됩니다."
  syntax:
    content: public abstract int Size { get; set; }
    return:
      type: System.Int32
      description: "열에 데이터를 바이트 단위로 최대 크기입니다. 기본값은 매개 변수 값에서 유추 됩니다."
  overload: System.Data.Common.DbParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: DbParameter.SourceColumn
  fullName: System.Data.Common.DbParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "에 매핑되는 원본 열의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 를 로드 하거나 반환 <xref:System.Data.Common.DbParameter.Value*>.</xref:System.Data.Common.DbParameter.Value*> 사용"
  remarks: "SourceColumn은 빈 문자열 이외의 값으로 설정 되 면 매개 변수의 값은 SourceColumn 이름으로 열에서 검색 됩니다. 경우 <xref:System.Data.Common.DbParameter.Direction%2A>로 설정 된 `Input`, <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 값을 가져옵니다</xref:System.Data.Common.DbParameter.Direction%2A> 경우 <xref:System.Data.Common.DbParameter.Direction%2A>로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다.</xref:System.Data.Common.DbParameter.Direction%2A> A <xref:System.Data.Common.DbParameter.Direction%2A>의 `InputOutput` 둘의 조합입니다.</xref:System.Data.Common.DbParameter.Direction%2A>       SourceColumn 속성을 사용 하는 방법에 대 한 자세한 내용은 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md) 및 [Dataadapter로 데이터 원본 업데이트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public abstract string SourceColumn { get; set; }
    return:
      type: System.String
      description: "에 매핑되는 원본 열의 이름은 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다. 기본값은 빈 문자열입니다."
  overload: System.Data.Common.DbParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: DbParameter.SourceColumnNullMapping
  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "원본 열이 null을 허용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다. 이 통해 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> null 허용 열에 대 한 Update 문을 올바르게 생성할 하 합니다."
  remarks: "SourceColumnNullMapping에서 사용 되는 <xref:System.Data.Common.DbCommandBuilder>null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 일반적으로 SourceColumnNullMapping의 사용이 <xref:System.Data.Common.DbCommandBuilder>.</xref:System.Data.Common.DbCommandBuilder> 으로 제한       <xref:System.Data.Common.DbCommandBuilder>원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우.</xref:System.Data.Common.DbCommandBuilder> 때 <xref:System.Data.Common.DbCommandBuilder>은 각 매개 변수에 대해 SourceColumnNullMapping 검사는 Update 문을 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 속성이 `true`, <xref:System.Data.Common.DbCommandBuilder>다음과 같은 WHERE 절을 생성 (이 쿼리 식은 &quot;FieldName&quot; 나타냅니다 필드의 이름): ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ``` 필드에 대 한 경우 SourceColumnNullMapping는 `false`, <xref:System.Data.Common.DbCommandBuilder>다음 WHERE 절을 생성: ```   FieldName = @OriginalFieldName   ``` 또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder> 이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다."
  syntax:
    content: public abstract bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>원본 열이 null을 허용 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 없는 경우."
  overload: System.Data.Common.DbParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: DbParameter.SourceVersion
  fullName: System.Data.Common.DbParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> <xref:System.Data.Common.DbParameter.Value*>.</xref:System.Data.Common.DbParameter.Value*> 를 로드할 때 사용할"
  remarks: "사용 하는 <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>중는 <xref:System.Data.Common.DbDataAdapter.Update%2A>매개 변수 값 설정 되는지 여부를 결정 하는 작업 `Current` 또는 `Original`.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> 이렇게 하면 기본 키를 업데이트할 수 있습니다. 이 속성의 버전에는 <xref:System.Data.DataRow>에서 사용 하는 `DataRow.Item` 속성을 또는 <xref:System.Data.DataRow.GetChildRows%2A>의 메서드는 <xref:System.Data.DataRow>개체입니다.</xref:System.Data.DataRow> </xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow>"
  syntax:
    content: public virtual System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbParameter.SourceVersion*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "중 하나에 속성이 설정 되어 있지는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  id: System#Data#IDbDataParameter#Precision
  isEii: true
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: System.Data.IDbDataParameter.Precision
  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "숫자 매개 변수의 전체 자릿수를 나타냅니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbParameter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataParameter>인터페이스.</xref:System.Data.IDbDataParameter> </xref:System.Data.Common.DbParameter>       자세한 내용은 <xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName>.</xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: byte System.Data.IDbDataParameter.Precision { get; set; }
    return:
      type: System.Byte
      description: "나타내는 데 사용 하는 최대 자릿수는 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> 데이터 공급자의 속성 <xref uid=&quot;langword_csharp_Parameter&quot; name=&quot;Parameter&quot; href=&quot;&quot;> </xref> 개체입니다. 기본값은 0으로,이 데이터 공급자에 대 한 전체 자릿수 <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  id: System#Data#IDbDataParameter#Scale
  isEii: true
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: System.Data.IDbDataParameter.Scale
  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataParameter.Scale%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbParameter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataParameter>인터페이스.</xref:System.Data.IDbDataParameter> </xref:System.Data.Common.DbParameter>       자세한 내용은 <xref:System.Data.IDbDataParameter.Scale%2A>.</xref:System.Data.IDbDataParameter.Scale%2A> 을 참조 하십시오."
  syntax:
    content: byte System.Data.IDbDataParameter.Scale { get; set; }
    return:
      type: System.Byte
      description: "에 소수 자릿수 <xref href=&quot;System.Data.OleDb.OleDbParameter.Value&quot;> </xref> 확인 됩니다. 기본값은 0입니다."
  overload: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbParameter.Value
  id: Value
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  name: Value
  nameWithType: DbParameter.Value
  fullName: System.Data.Common.DbParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "매개 변수의 값을 가져오거나 설정 합니다."
  remarks: "에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.Common.DbCommand>서버로 보내집니다.</xref:System.Data.Common.DbCommand> 완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.Common.DbCommand>후는 <xref:System.Data.Common.DbDataReader>닫힙니다.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbCommand>       서버에 null 매개 변수 값을 보낼 때 지정 해야 <xref:System.DBNull>, null이 아닌.</xref:System.DBNull> 시스템에서 null 값은 값이 없는 빈 개체입니다. <xref:System.DBNull>null 값을 나타내는 데 사용 됩니다.</xref:System.DBNull>       응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible>인터페이스.</xref:System.IConvertible> 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.       <xref:System.Data.Common.DbParameter.DbType%2A>속성 값을 설정 하 여 유추할 수 있습니다.</xref:System.Data.Common.DbParameter.DbType%2A>       Value 속성을 덮어씁니다 `DbDataAdapter.Update`합니다."
  syntax:
    content: public abstract object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>매개 변수 값.</xref:System.Object> 기본값은 null입니다."
  overload: System.Data.Common.DbParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.DbParameter.#ctor
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: DbParameter()
  nameWithType: DbParameter.DbParameter()
  fullName: System.Data.Common.DbParameter.DbParameter()
- uid: System.Data.Common.DbParameter.DbType
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: DbType
  nameWithType: DbParameter.DbType
  fullName: System.Data.Common.DbParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.Common.DbParameter.Direction
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Direction
  nameWithType: DbParameter.Direction
  fullName: System.Data.Common.DbParameter.Direction
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Data.Common.DbParameter.IsNullable
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: IsNullable
  nameWithType: DbParameter.IsNullable
  fullName: System.Data.Common.DbParameter.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbParameter.ParameterName
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: ParameterName
  nameWithType: DbParameter.ParameterName
  fullName: System.Data.Common.DbParameter.ParameterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbParameter.Precision
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Precision
  nameWithType: DbParameter.Precision
  fullName: System.Data.Common.DbParameter.Precision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbParameter.ResetDbType
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: DbParameter.ResetDbType()
  fullName: System.Data.Common.DbParameter.ResetDbType()
- uid: System.Data.Common.DbParameter.Scale
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Scale
  nameWithType: DbParameter.Scale
  fullName: System.Data.Common.DbParameter.Scale
- uid: System.Data.Common.DbParameter.Size
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Size
  nameWithType: DbParameter.Size
  fullName: System.Data.Common.DbParameter.Size
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbParameter.SourceColumn
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceColumn
  nameWithType: DbParameter.SourceColumn
  fullName: System.Data.Common.DbParameter.SourceColumn
- uid: System.Data.Common.DbParameter.SourceColumnNullMapping
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: DbParameter.SourceColumnNullMapping
  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping
- uid: System.Data.Common.DbParameter.SourceVersion
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceVersion
  nameWithType: DbParameter.SourceVersion
  fullName: System.Data.Common.DbParameter.SourceVersion
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.IDbDataParameter.Precision
  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.IDbDataParameter.Scale
  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale
- uid: System.Data.Common.DbParameter.Value
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Value
  nameWithType: DbParameter.Value
  fullName: System.Data.Common.DbParameter.Value
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbParameter.#ctor*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter.DbParameter
- uid: System.Data.Common.DbParameter.DbType*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: DbType
  nameWithType: DbParameter.DbType
- uid: System.Data.Common.DbParameter.Direction*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Direction
  nameWithType: DbParameter.Direction
- uid: System.Data.Common.DbParameter.IsNullable*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: IsNullable
  nameWithType: DbParameter.IsNullable
- uid: System.Data.Common.DbParameter.ParameterName*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: ParameterName
  nameWithType: DbParameter.ParameterName
- uid: System.Data.Common.DbParameter.Precision*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Precision
  nameWithType: DbParameter.Precision
- uid: System.Data.Common.DbParameter.ResetDbType*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: ResetDbType
  nameWithType: DbParameter.ResetDbType
- uid: System.Data.Common.DbParameter.Scale*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Scale
  nameWithType: DbParameter.Scale
- uid: System.Data.Common.DbParameter.Size*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Size
  nameWithType: DbParameter.Size
- uid: System.Data.Common.DbParameter.SourceColumn*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceColumn
  nameWithType: DbParameter.SourceColumn
- uid: System.Data.Common.DbParameter.SourceColumnNullMapping*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: DbParameter.SourceColumnNullMapping
- uid: System.Data.Common.DbParameter.SourceVersion*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: SourceVersion
  nameWithType: DbParameter.SourceVersion
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.IDbDataParameter.Precision
  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.IDbDataParameter.Scale
  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale
- uid: System.Data.Common.DbParameter.Value*
  parent: System.Data.Common.DbParameter
  isExternal: false
  name: Value
  nameWithType: DbParameter.Value
