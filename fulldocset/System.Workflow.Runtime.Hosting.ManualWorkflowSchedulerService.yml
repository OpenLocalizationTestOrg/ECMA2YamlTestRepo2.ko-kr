### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  id: ManualWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  type: Class
  summary: "기부에 워크플로 인스턴스를 만드는 호스트 응용 프로그램이 있는 스레딩 서비스를 제공는 <xref href=&quot;System.Threading.Thread&quot;> </xref> 에 워크플로 인스턴스가 실행 됩니다. 에서는이 스레딩 서비스 응용 프로그램을 호스트에서 실행할 수는 워크플로 인스턴스는 단일 <xref href=&quot;System.Threading.Thread&quot;> </xref> 동기 모드에서 (워크플로에 지연 활동이 포함 된 경우 작업에서 생성 된 별도 스레드에서 지연 활동이 실행 된 후까지 연기 됩니다 [System.Threading.Timer](~/add/includes/ajax-current-ext-md.md)). 이 모드는 워크플로 인스턴스가 유휴 상태가 될 때까지 호스트 응용 프로그램의 실행을 차단 합니다. 그 후 워크플로 인스턴스만 실행 될 수 있습니다는 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*>이 서비스의 메서드에.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*>"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]ManualWorkflowSchedulerService 큐에 워크플로 인스턴스를 자동으로 실행 되지 않습니다. 호스트에서는 호출 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A>지정된 된 워크플로 실행 합니다.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> 클래스입니다."
  syntax:
    content: public ManualWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> 클래스입니다."
  syntax:
    content: public ManualWorkflowSchedulerService (bool useActiveTimers);
    parameters:
    - id: useActiveTimers
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>지연 활동이 처리 되는 방법을 결정 하는. 경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, (사용 하 여 메모리 내 타이머) 지연 활동이 만료 된 후 스케줄러 서비스가 워크플로 자동으로 계속 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 지연 활동이 만료 된 후 호스트에서 워크플로 수동 재개 해야 합니다."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> 클래스입니다."
  syntax:
    content: public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 에 대 한 매개 변수가 포함 된 `useActiveTimers`합니다. 경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, (사용 하 여 메모리 내 타이머) 지연 활동이 만료 된 후 스케줄러 서비스가 워크플로 자동으로 계속 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 지연 활동이 만료 된 후 호스트에서 워크플로 수동 재개 해야 합니다."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정 된 기존 워크플로 인스턴스 작업 항목을 취소합니다."
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "<xref:System.Guid>취소할 기존의 예약 된 작업 항목과 연관.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "오버 로드 된 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt;합니다. 이 메서드는 때마다 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A?displayProperty=fullName&gt; 호출 되 고에서 사용 되는 <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> 때 필요한 작업을 수행 하는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 시작 합니다."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  id: RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정된 된 워크플로 인스턴스를 실행합니다."
  remarks: "현재 스레드를 사용 하 여 워크플로 실행 하는 동기 호출입니다. 워크플로가 유휴 상태가, 일시 중단, 완료, 종료 되 면 또는 중단 될 때까지 반환 하지 않습니다."
  syntax:
    content: public bool RunWorkflow (Guid workflowInstanceId);
    parameters:
    - id: workflowInstanceId
      type: System.Guid
      description: "<xref:System.Guid>워크플로 인스턴스를 실행 합니다.</xref:System.Guid>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>워크플로가 실행 되기 시작 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>빈 GUID입니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정된 된 멀티 캐스트 대리자를 사용 하 여 지정 된 워크플로 인스턴스를 사용 하 여 보류 중인 작업 항목 큐에 워크플로 인스턴스를 추가 합니다."
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>워크플로 인스턴스를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정된 된 멀티 캐스트 대리자를 사용 하 여 보류 중인 작업 항목 큐에 지정된 된 워크플로 인스턴스를 추가 <xref:System.DateTime>및 Guid.</xref:System.DateTime>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>워크플로 인스턴스를 나타내는입니다.</xref:System.Guid>"
    - id: whenUtc
      type: System.DateTime
      description: "<xref:System.DateTime>스레드 실행을 시작 하려면 시간을 나타냅니다.</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "A <xref:System.Guid>예약된 된 스레드를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>또는 <code>timerId</code> 빈 GUID가 사용 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "오버 로드 된 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A?displayProperty=fullName&gt;합니다. <xref href=&quot;System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&quot;> </xref> 때 사용 하 여 작업을 수행 하려면이 메서드 필요한는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 중지 합니다."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService()
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(Boolean)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService(NameValueCollection)
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.ManualWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: ManualWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: ManualWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow(Guid)
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow(Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(Guid)
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: ManualWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: ManualWorkflowSchedulerService
  nameWithType: ManualWorkflowSchedulerService.ManualWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: ManualWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: ManualWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: RunWorkflow
  nameWithType: ManualWorkflowSchedulerService.RunWorkflow
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: ManualWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: ManualWorkflowSchedulerService.Stop
