### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionManager
  id: TransactionManager
  children:
  - System.Transactions.TransactionManager.DefaultTimeout
  - System.Transactions.TransactionManager.DistributedTransactionStarted
  - System.Transactions.TransactionManager.HostCurrentCallback
  - System.Transactions.TransactionManager.MaximumTimeout
  - System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  - System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  langs:
  - csharp
  name: TransactionManager
  nameWithType: TransactionManager
  fullName: System.Transactions.TransactionManager
  type: Class
  summary: "트랜잭션 관리에 사용 되는 메서드를 포함 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스는 정적 속성 및 메서드 정보를 가져오는 데 기본값에 대 한 트랜잭션 옵션을 포함 합니다. 또한 지속적인 리소스 오류가 발생 하는 경우 내구성이 있는 리소스의 복구에 사용 되는 몇 가지 정적 메서드를 포함 합니다. 특별 한 조치가 필요 하지 않습니다 내구성이 있는 리소스의의 Microsoft Distributed Transaction Coordinator (MSDTC)에 실패 하는 경우입니다."
  syntax:
    content: public static class TransactionManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DefaultTimeout
  id: DefaultTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "새 트랜잭션에 대 한 기본 시간 제한 간격을 가져옵니다."
  remarks: "트랜잭션의 제한 시간 간격은 트랜잭션이 완료 되어야 하는 시간입니다. 트랜잭션 관리자가 시간 제한 간격 내에서 모든 트랜잭션 참가자에서 듣지가 트랜잭션을 중단 합니다.       이 값을 설정할 수는 `DefaultSettingsSection` config 파일의 합니다."
  syntax:
    content: public static TimeSpan DefaultTimeout { get; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>새 트랜잭션 시간 제한 간격을 지정 하는 값입니다.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.DefaultTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  id: DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "분산된 트랜잭션이 시작 되었음을 나타냅니다."
  remarks: "**주의** 이 이벤트는 모든 분산 트랜잭션의 성능을 저하에 등록 합니다. 로컬 트랜잭션 성능이 더욱 저하으로 모니터링 되지 않습니다.       **하지만 참고** 이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction>신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 `FullTrust` 사용 권한 집합입니다.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;
    return:
      type: System.Transactions.TransactionStartedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  id: HostCurrentCallback
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "사용자 지정 트랜잭션 팩터리를 가져오거나 설정 합니다."
  remarks: '**하지만 참고** 이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction>신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 `FullTrust` 사용 권한 집합입니다.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }
    return:
      type: System.Transactions.HostCurrentTransactionCallback
      description: "A <xref href=&quot;System.Transactions.HostCurrentTransactionCallback&quot;> </xref> 사용자 지정 트랜잭션 팩터리를 포함 하는 합니다."
  overload: System.Transactions.TransactionManager.HostCurrentCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.MaximumTimeout
  id: MaximumTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "새 트랜잭션에 대 한 기본 최대 제한 시간 간격을 가져옵니다."
  remarks: "에 대 한 설명은 제한 시간 간격에 대 한 설명서를 참조 하십시오.는 <xref:System.Transactions.TransactionManager.DefaultTimeout%2A>속성.</xref:System.Transactions.TransactionManager.DefaultTimeout%2A>       이 값을 설정할 수는 `MachineSettingsSection` config 파일의 합니다."
  syntax:
    content: public static TimeSpan MaximumTimeout { get; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>새 트랜잭션을 만들 때 허용 되는 최대 시간 제한 간격을 지정 하는 값입니다.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionManager.MaximumTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  id: RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "오류에서 복구 하는 리소스 관리자가 모든 트랜잭션에 미해결 된 트랜잭션 관리자에 알립니다."
  remarks: "모든 영 속 리소스 관리자는 처음 시작 될 때 호출 하 여 복구를 수행 해야는 <xref:System.Transactions.TransactionManager.Reenlist%2A>메서드가 처리 중인 각 트랜잭션에 대해.</xref:System.Transactions.TransactionManager.Reenlist%2A>  다시 참여가 모두 완료 하는 경우에 리소스 관리자를 호출 해야 RecoveryComplete 합니다.       복구에 대 한 자세한 내용은 참조 하십시오. [복구 수행](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)합니다.       **하지만 참고** 이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction>신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 `FullTrust` 사용 권한 집합입니다.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static void RecoveryComplete (Guid resourceManagerIdentifier);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "A <xref:System.Guid>에서 복구 해야 하는 리소스를 고유 하 게 식별 합니다.</xref:System.Guid>"
  overload: System.Transactions.TransactionManager.RecoveryComplete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>resourceManagerIdentifier</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  id: Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션에서 영 속 참가자를 reenlists 합니다."
  remarks: "리소스 관리자 리소스 오류가 발생 한 후에 트랜잭션 참가 요소를 미해결 함으로써 트랜잭션에서 영속적 참여의 해상도 지원 합니다.       `resourceManagerIdentifier` 리소스 오류가 발생할 경우 트랜잭션 참가자를 일관 되 게 레이블을 매개 변수를 사용 합니다.  리소스 관리자는 동일한 제공 해야 Reenlist 메서드를 호출할 때 `resourceManagerIdentifier` 처음 호출 될 때 사용한 것과 <xref:System.Transactions.Transaction.EnlistDurable%2A>참여 중 메서드 또는 <xref:System.Transactions.TransactionException>throw 됩니다.</xref:System.Transactions.TransactionException> </xref:System.Transactions.Transaction.EnlistDurable%2A>       이 방법에서는의 2 단계 메서드를 사용 하 여 참가자가 알맞게 때 <xref:System.Transactions.IEnlistmentNotification>트랜잭션의 결과에 해당 하는 (즉, <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>또는 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>) 호출 됩니다.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification>       다음 호출 해야는 참가 요소가 성공적으로, 후 <xref:System.Transactions.TransactionManager.RecoveryComplete%2A>복구를 완료할.</xref:System.Transactions.TransactionManager.RecoveryComplete%2A>       리소스 관리자 오류를 다시 시작 될 때에이 메서드를 호출 해야 합니다. 또한 있습니다 해야 확인 되지 않은 로그 트랜잭션만 리소스 관리자가&2; 단계 커밋의 초기 준비 단계입니다. 잘못 된 시간에이 메서드를 호출 하려고 잘못 된 결과가 발생할 수 있습니다.       트랜잭션 관리자가 실패 하 고 리소스 관리자 복구를 수행 일시적으로 호출한 후의 <xref:System.Transactions.PreparingEnlistment.Prepared%2A>2 단계 커밋 프로토콜의 1 단계에서 한 참여에서 메서드를 리소스 관리자 받을 수 있습니다는 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>또는 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>콜백.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.PreparingEnlistment.Prepared%2A>       복구에 대 한 자세한 내용은 참조 하십시오. [복구 수행](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)합니다.       **하지만 참고** 이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction>신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 `FullTrust` 사용 권한 집합입니다.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static System.Transactions.Enlistment Reenlist (Guid resourceManagerIdentifier, byte[] recoveryInformation, System.Transactions.IEnlistmentNotification enlistmentNotification);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: "A <xref:System.Guid>리소스 관리자를 고유 하 게 식별 합니다.</xref:System.Guid>"
    - id: recoveryInformation
      type: System.Byte[]
      description: "복구 정보의 추가 정보를 포함합니다."
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: "구현 하는 리소스 개체가 <xref href=&quot;System.Transactions.IEnlistmentNotification&quot;> </xref> 알림을 받을 수 있습니다."
    return:
      type: System.Transactions.Enlistment
      description: "<xref href=&quot;System.Transactions.Enlistment&quot;> </xref> 참여를 설명 하는 합니다."
  overload: System.Transactions.TransactionManager.Reenlist*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>recoveryInformation</code>잘못 되었습니다.       -또는-의 트랜잭션 관리자 정보 <code>recoveryInformation</code> 구성 된 트랜잭션 관리자와 일치 하지 않습니다.       -또는- <code>RecoveryInformation</code> 에서 인식할 수 없는 <xref href=&quot;System.Transactions&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Transactions.TransactionManager.RecoveryComplete*>가 이미 호출에서 지정 된 <code> resourceManagerIdentifier </code>합니다.</xref:System.Transactions.TransactionManager.RecoveryComplete*> 다시 참여가 거부 됩니다."
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "<code> resourceManagerIdentifier </code> 에 지정 된 복구 정보의 내용을 일치 하지 않습니다 <code> recoveryInformation </code>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.Transactions.TransactionManager.DefaultTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
- uid: System.Transactions.TransactionStartedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionStartedEventHandler
  nameWithType: TransactionStartedEventHandler
  fullName: System.Transactions.TransactionStartedEventHandler
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
- uid: System.Transactions.HostCurrentTransactionCallback
  parent: System.Transactions
  isExternal: false
  name: HostCurrentTransactionCallback
  nameWithType: HostCurrentTransactionCallback
  fullName: System.Transactions.HostCurrentTransactionCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
- uid: System.Transactions.TransactionManager.DefaultTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
- uid: System.Transactions.TransactionManager.HostCurrentCallback*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
- uid: System.Transactions.TransactionManager.RecoveryComplete*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete
  nameWithType: TransactionManager.RecoveryComplete
- uid: System.Transactions.TransactionManager.Reenlist*
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist
  nameWithType: TransactionManager.Reenlist
