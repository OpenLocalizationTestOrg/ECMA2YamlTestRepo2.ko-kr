### YamlMime:ManagedReference
items:
- uid: System.Windows.LocalValueEnumerator
  id: LocalValueEnumerator
  children:
  - System.Windows.LocalValueEnumerator.Count
  - System.Windows.LocalValueEnumerator.Current
  - System.Windows.LocalValueEnumerator.Equals(System.Object)
  - System.Windows.LocalValueEnumerator.GetHashCode
  - System.Windows.LocalValueEnumerator.MoveNext
  - System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  - System.Windows.LocalValueEnumerator.Reset
  - System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
  type: Struct
  summary: "에 존재 하는 종속성 속성의 로컬 값에 대 한 열거형 지원을 제공는 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
  remarks: "A *로컬 값* 호출 하 여 종속성 속성에 직접 설정 하는 종속성 속성에 대 한 값은 <xref:System.Windows.DependencyObject.SetValue%2A>, 또는의 set 접근자를 사용 하 여 보다 일반적인 방법으로 [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] 입니다 <xref:System.Windows.DependencyObject.SetValue%2A>내부적으로.</xref:System.Windows.DependencyObject.SetValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> 로컬 값이 아닌 다른 속성 시스템 행렬식에는 스타일을 통해 설정 된 값 또는 종속성 속성의 기본값이 있습니다. 자세한 내용은 참조 [종속성 속성 값 우선 순위](~/add/includes/ajax-current-ext-md.md)합니다.       반환 되는 LocalValueEnumerator는 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>메서드 및 구현 하는 <xref:System.Collections.IEnumerator>인터페이스.</xref:System.Collections.IEnumerator> </xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> 공용 LocalValueEnumerator 생성자가 없습니다. 따라서 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>이 클래스의 인스턴스를</xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> 호출 해야 합니다.       로컬 값을 수정 하지 마십시오 (호출 하 여 <xref:System.Windows.DependencyObject.SetValue%2A>또는 <xref:System.Windows.DependencyObject.ClearValue%2A>) 로컬 값 열거 하는 동안.</xref:System.Windows.DependencyObject.ClearValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> 변경 하거나 선택 취소 열거자가 반환 되는 속성에 따라 속성 값 변경 또는 지우기 작업 무효화 하지 않는 열거자 컬렉션 대부분의 경우 처럼 <xref:System.Collections.IEnumerator>구현.</xref:System.Collections.IEnumerator> 또한 열거자 뷰는 스냅숏입니다. 컬렉션에 대 한 변경 스레드로부터 안전 하 게 보장 되지 않으며 잠금이 적용 됩니다. 다른 스레드가 여전히 액세스할 수 있으며 무료 로컬 값으로 열거자 이외의 컨텍스트에서       이 유형을 사용 클래스에 작업을 설정한 경우이 속성의 값을 로컬 값에서 가져왔는지 여부가 중요 합니다. 예를 들어에서이 형식을 사용 하 여 프로그램 <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>구현에서 속성을 설정 하는 메타 데이터를 쿼리할 모든에서 로컬로 저장할 또는.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>"
  syntax:
    content: 'public struct LocalValueEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.ValueType
  implements:
  - System.Collections.IEnumerator
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Count
  id: Count
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "컬렉션에 표시 되는 항목의 수를 가져옵니다."
  remarks: "이 속성의 정의 된 구성원이 아닙니다. <xref:System.Collections.IEnumerator>아니지만 편의 위해 제공 됩니다.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 항목의 수입니다."
  overload: System.Windows.LocalValueEnumerator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Current
  id: Current
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "컬렉션의 현재 요소를 가져옵니다."
  remarks: "일반적으로 액세스 가능한이 버전의 속성 생성 시 사용 되는 컬렉션의 스냅숏을 기반으로 합니다."
  syntax:
    content: public System.Windows.LocalValueEntry Current { get; }
    return:
      type: System.Windows.LocalValueEntry
      description: "현재 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 컬렉션에 있습니다."
  overload: System.Windows.LocalValueEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "결정 여부 제공 된 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 동일 하지만 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>합니다."
  remarks: "이 구현은 참조 일치만을 지원합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 현재과 비교할 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 현재 같은지 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.LocalValueEnumerator.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  id: GetHashCode
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "현재에 대 한 해시 코드를 반환 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 비트 정수 해시 코드입니다."
  overload: System.Windows.LocalValueEnumerator.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.MoveNext
  id: MoveNext
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "열거자는 컬렉션의 다음 요소로 이동 합니다."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열거자를 다음 요소로 이동 성공 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 열거자가 컬렉션의 끝을 통과 하는 경우."
  overload: System.Windows.LocalValueEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "두 비교 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 개체는 동일 합니다."
  remarks: "이 구현은 참조 일치만을 지원합니다."
  syntax:
    content: public static bool op_Equality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "비교할 첫 번째 개체입니다."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "비교할 두 번째 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>obj1</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref> is equal to the <code>obj2</code><xref href=&quot;System.Windows.LocalValueEnumerator&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEnumerator.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  id: op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정 된 두 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 않은지 여부 동일 결정 하는 개체입니다."
  remarks: "이 구현은 참조 일치만을 지원합니다."
  syntax:
    content: public static bool op_Inequality (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEnumerator
      description: "비교할 첫 번째 개체입니다."
    - id: obj2
      type: System.Windows.LocalValueEnumerator
      description: "비교할 두 번째 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스가 서로 다르면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.LocalValueEnumerator.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.Reset
  id: Reset
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정 합니다."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Windows.LocalValueEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Windows.LocalValueEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 멤버에 대 한 참조 <xref:System.Collections.IEnumerator.Current*>.</xref:System.Collections.IEnumerator.Current*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.LocalValueEnumerator>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerator>인터페이스.</xref:System.Collections.IEnumerator> </xref:System.Windows.LocalValueEnumerator>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "컬렉션의 현재 요소입니다."
  overload: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.LocalValueEnumerator.Count
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
  fullName: System.Windows.LocalValueEnumerator.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.LocalValueEnumerator.Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEntry
  parent: System.Windows
  isExternal: false
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
- uid: System.Windows.LocalValueEnumerator.Equals(System.Object)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals(Object)
  nameWithType: LocalValueEnumerator.Equals(Object)
  fullName: System.Windows.LocalValueEnumerator.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LocalValueEnumerator.GetHashCode
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode()
  nameWithType: LocalValueEnumerator.GetHashCode()
  fullName: System.Windows.LocalValueEnumerator.GetHashCode()
- uid: System.Windows.LocalValueEnumerator.MoveNext
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: LocalValueEnumerator.MoveNext()
  fullName: System.Windows.LocalValueEnumerator.MoveNext()
- uid: System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Equality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator
  parent: System.Windows
  isExternal: false
  name: LocalValueEnumerator
  nameWithType: LocalValueEnumerator
  fullName: System.Windows.LocalValueEnumerator
- uid: System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  nameWithType: LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
  fullName: System.Windows.LocalValueEnumerator.op_Inequality(LocalValueEnumerator,LocalValueEnumerator)
- uid: System.Windows.LocalValueEnumerator.Reset
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset()
  nameWithType: LocalValueEnumerator.Reset()
  fullName: System.Windows.LocalValueEnumerator.Reset()
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Windows.LocalValueEnumerator.System.Collections.IEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Count*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Count
  nameWithType: LocalValueEnumerator.Count
- uid: System.Windows.LocalValueEnumerator.Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Current
  nameWithType: LocalValueEnumerator.Current
- uid: System.Windows.LocalValueEnumerator.Equals*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Equals
  nameWithType: LocalValueEnumerator.Equals
- uid: System.Windows.LocalValueEnumerator.GetHashCode*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: GetHashCode
  nameWithType: LocalValueEnumerator.GetHashCode
- uid: System.Windows.LocalValueEnumerator.MoveNext*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: LocalValueEnumerator.MoveNext
- uid: System.Windows.LocalValueEnumerator.op_Equality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Equality
  nameWithType: LocalValueEnumerator.op_Equality
- uid: System.Windows.LocalValueEnumerator.op_Inequality*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: op_Inequality
  nameWithType: LocalValueEnumerator.op_Inequality
- uid: System.Windows.LocalValueEnumerator.Reset*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: Reset
  nameWithType: LocalValueEnumerator.Reset
- uid: System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Windows.LocalValueEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: LocalValueEnumerator.System.Collections.IEnumerator.Current
