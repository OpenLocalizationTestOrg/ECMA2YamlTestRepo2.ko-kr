### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.UndoEngine
  id: UndoEngine
  children:
  - System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  - System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  - System.ComponentModel.Design.UndoEngine.Dispose
  - System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  - System.ComponentModel.Design.UndoEngine.Enabled
  - System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  - System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  - System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  - System.ComponentModel.Design.UndoEngine.Undoing
  - System.ComponentModel.Design.UndoEngine.UndoInProgress
  - System.ComponentModel.Design.UndoEngine.Undone
  langs:
  - csharp
  name: UndoEngine
  nameWithType: UndoEngine
  fullName: System.ComponentModel.Design.UndoEngine
  type: Class
  summary: "디자인 타임에 제네릭 실행 취소/다시 실행 기능을 지정합니다."
  remarks: "UndoEngine 추상 클래스에는 디자인 타임에 실행 취소 기능의 기본 구현을 제공합니다. 실행 취소 단위를 취소할 수 있는 작업의 단일 단위를 나타냅니다. 이 단위는 스택에 추가 됩니다 및 사용자 스택을 각 작업 실행을 취소 한 다음 수 있습니다. 실행 취소 단위 일반적으로 설정/해제할 수, 즉, 해당 호출 실행 취소를 시작 상태로 응용 프로그램을 두 번 반환 합니다.       디자이너 내에서 실행 되는 개체의 다음과 같은 특징 활용 UndoEngine 클래스:-모든 흥미로운 개체 수를 특정 형식에 의해 유지 될 디자이너 로더 합니다.      -모든 개체 속성이 변경 되 면 속성 변경 알림을 발생 시킵니다.      - <xref:System.ComponentModel.Design.IDesignerHost>여러 개의 작은 작업에 걸쳐 있는 실행 취소 작업을 만드는 데 사용할 수 있는 트랜잭션 아이디어를 제공 하므로.</xref:System.ComponentModel.Design.IDesignerHost>       이러한 기능 UndoEngine 필요한 자동으로 실행 취소 단위를 만들 수 있습니다.      > [!NOTE] > 속성 값을 직접 변경 하지 마십시오. UndoEngine 클래스 적절 한 사용 해야 <xref:System.ComponentModel.TypeDescriptor>속성 값을 변경 합니다.</xref:System.ComponentModel.TypeDescriptor>       실행 취소 단위를 UndoEngine 모니터를 만드는 변경 알림 및 직렬화 된 개체 상태의 단위 자체 구성 됩니다. 다음 표에서 UndoEngine를 만들 때 사용할 수 있어야 하는 서비스를 보여 줍니다.      | 서비스 | 설명 |   |-------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>| 전후 변경 되는 구성 요소에 대 한 속성 및 개체 값을 저장 합니다. |   | <xref:System.ComponentModel.Design.IComponentChangeService>| 구성 요소에 대 한 변경 내용 실행 취소 엔진에 알립니다. |   | <xref:System.ComponentModel.Design.IDesignerHost>| 트랜잭션을 추적 하는 데 사용 합니다. |      > [!NOTE] > UndoEngine 클래스 필요 하기 때문에 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>및 <xref:System.ComponentModel.Design.IComponentChangeService>, 디자인 타임에만 가능 합니다.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> </xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>       실행 취소 엔진 거래를 추적 하 고, 트랜잭션을 포함 하는 단일 실행 취소 단위를 만듭니다. 결과적으로, 실행 취소 엔진에는 실행 취소할 수 있는 작업의 기간을 제어 합니다. 또한 트랜잭션을 이름을 지정할 수 있습니다, 때문에 실행 취소할 수 있는 작업이 해당 이름을를 현재 트랜잭션에서 상속 합니다. 트랜잭션이 없습니다. 사용할 수 있고 변경을 보고에서 실행 취소 엔진 변경 (예를 들어 &quot;변경 속성 &quot;Text&quot;&quot;)의 형식에 따라 실행 취소 이름을 만듭니다."
  syntax:
    content: 'public abstract class UndoEngine : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.ComponentModel.Design.UndoEngine>에서 몇 가지 서비스를 필요는 `provider` 유용 하 게 되려면 매개 변수.</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected UndoEngine (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "부모/자식 관리 서비스 공급자입니다."
  overload: System.ComponentModel.Design.UndoEngine.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "필요한 서비스를 찾을 수 없습니다. 참조 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> 필요한 서비스에 대 한 합니다. 이 서비스를 제거한 경우에 대체를 제공 하는 확인 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected abstract void AddUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "추가할 수 있습니다."
  overload: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  id: CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "에 새 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 만듭니다."
  remarks: "CreateUndoUnit 메서드의 기본 구현에 새 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit> 반환       기본적으로 <xref:System.ComponentModel.Design.UndoEngine>으로 아무 작업도 수행는 `primary` 매개 변수, 하지만 일부 실행 취소 같은 com 구현 `Microsoft.VisualStudio.OLE.Interop.IOleParentUndoUnit` 디자인 패턴을 주 단위와 해당 자식 사이의 차이 식별 해야 할 수 있습니다.</xref:System.ComponentModel.Design.UndoEngine>"
  syntax:
    content: protected virtual System.ComponentModel.Design.UndoEngine.UndoUnit CreateUndoUnit (string name, bool primary);
    parameters:
    - id: name
      type: System.String
      description: "만들 단위의의 이름입니다."
    - id: primary
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>첫 번째; 중첩 된 단위를 만들려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 후속 중첩 된 단위를 만들려고 합니다."
    return:
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "새 <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>지정 된 이름의.</xref:System.ComponentModel.Design.UndoEngine.UndoUnit>"
  overload: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  id: DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  syntax:
    content: protected virtual void DiscardUndoUnit (System.ComponentModel.Design.UndoEngine.UndoUnit unit);
    parameters:
    - id: unit
      type: System.ComponentModel.Design.UndoEngine.UndoUnit
      description: "추가할 수 있습니다."
  overload: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.ComponentModel.Design.UndoEngine.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "설정 하거나 해제는 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref>합니다."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.ComponentModel.Design.UndoEngine&quot;> </xref> 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.UndoEngine.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  id: GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "요청한 서비스를 가져옵니다."
  syntax:
    content: protected object GetRequiredService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "검색할 서비스의 형식입니다."
    return:
      type: System.Object
      description: "요청된 된 서비스를 경우 찾을 수 있습니다."
  overload: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>serviceType</code>가 필요 하지만 찾을 수 없습니다. 이 서비스를 제거한 경우에 대체를 제공 하는 확인 합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "요청한 서비스를 가져옵니다."
  syntax:
    content: protected object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "검색할 서비스의 형식입니다."
    return:
      type: System.Object
      description: "요청 된 서비스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 요청 된 서비스가 없는 경우."
  overload: System.ComponentModel.Design.UndoEngine.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  id: OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.UndoEngine.Undoing&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnUndoing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndoing*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  id: OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 된 <xref href=&quot;System.ComponentModel.Design.UndoEngine.Undone&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnUndone (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.UndoEngine.OnUndone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  id: Undoing
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "실행 취소 작업을 수행 하기 전에 즉시 발생 합니다."
  syntax:
    content: public event EventHandler Undoing;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  id: UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "실행 취소 작업이 진행에서 여부를 나타냅니다."
  syntax:
    content: public bool UndoInProgress { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>실행 취소 작업이 진행 중인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.UndoEngine.Undone
  id: Undone
  parent: System.ComponentModel.Design.UndoEngine
  langs:
  - csharp
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "실행 취소 동작을 수행한 직후에 발생 합니다."
  remarks: "실행 취소할된 이벤트는 예외가 발생 하는 경우에 항상 발생 됩니다."
  syntax:
    content: public event EventHandler Undone;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine(IServiceProvider)
  nameWithType: UndoEngine.UndoEngine(IServiceProvider)
  fullName: System.ComponentModel.Design.UndoEngine.UndoEngine(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.AddUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.UndoUnit
  parent: System.ComponentModel.Design
  isExternal: false
  name: UndoEngine+UndoUnit
  nameWithType: UndoEngine+UndoUnit
  fullName: System.ComponentModel.Design.UndoEngine+UndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit(String,Boolean)
  nameWithType: UndoEngine.CreateUndoUnit(String,Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.CreateUndoUnit(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit(UndoEngine+UndoUnit)
  nameWithType: UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
  fullName: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(UndoEngine+UndoUnit)
- uid: System.ComponentModel.Design.UndoEngine.Dispose
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose()
  nameWithType: UndoEngine.Dispose()
  fullName: System.ComponentModel.Design.UndoEngine.Dispose()
- uid: System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: UndoEngine.Dispose(Boolean)
  fullName: System.ComponentModel.Design.UndoEngine.Dispose(Boolean)
- uid: System.ComponentModel.Design.UndoEngine.Enabled
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
  fullName: System.ComponentModel.Design.UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService(Type)
  nameWithType: UndoEngine.GetRequiredService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetRequiredService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.UndoEngine.GetService(System.Type)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService(Type)
  nameWithType: UndoEngine.GetService(Type)
  fullName: System.ComponentModel.Design.UndoEngine.GetService(Type)
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing(EventArgs)
  nameWithType: UndoEngine.OnUndoing(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndoing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone(EventArgs)
  nameWithType: UndoEngine.OnUndone(EventArgs)
  fullName: System.ComponentModel.Design.UndoEngine.OnUndone(EventArgs)
- uid: System.ComponentModel.Design.UndoEngine.Undoing
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undoing
  nameWithType: UndoEngine.Undoing
  fullName: System.ComponentModel.Design.UndoEngine.Undoing
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
  fullName: System.ComponentModel.Design.UndoEngine.UndoInProgress
- uid: System.ComponentModel.Design.UndoEngine.Undone
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Undone
  nameWithType: UndoEngine.Undone
  fullName: System.ComponentModel.Design.UndoEngine.Undone
- uid: System.ComponentModel.Design.UndoEngine.#ctor*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoEngine
  nameWithType: UndoEngine.UndoEngine
- uid: System.ComponentModel.Design.UndoEngine.AddUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: AddUndoUnit
  nameWithType: UndoEngine.AddUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.CreateUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: CreateUndoUnit
  nameWithType: UndoEngine.CreateUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.DiscardUndoUnit*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: DiscardUndoUnit
  nameWithType: UndoEngine.DiscardUndoUnit
- uid: System.ComponentModel.Design.UndoEngine.Dispose*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Dispose
  nameWithType: UndoEngine.Dispose
- uid: System.ComponentModel.Design.UndoEngine.Enabled*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: Enabled
  nameWithType: UndoEngine.Enabled
- uid: System.ComponentModel.Design.UndoEngine.GetRequiredService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetRequiredService
  nameWithType: UndoEngine.GetRequiredService
- uid: System.ComponentModel.Design.UndoEngine.GetService*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: GetService
  nameWithType: UndoEngine.GetService
- uid: System.ComponentModel.Design.UndoEngine.OnUndoing*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndoing
  nameWithType: UndoEngine.OnUndoing
- uid: System.ComponentModel.Design.UndoEngine.OnUndone*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: OnUndone
  nameWithType: UndoEngine.OnUndone
- uid: System.ComponentModel.Design.UndoEngine.UndoInProgress*
  parent: System.ComponentModel.Design.UndoEngine
  isExternal: false
  name: UndoInProgress
  nameWithType: UndoEngine.UndoInProgress
