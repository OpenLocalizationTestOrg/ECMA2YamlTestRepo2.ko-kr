### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.IComSoapPublisher
  id: IComSoapPublisher
  children:
  - System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  langs:
  - csharp
  name: IComSoapPublisher
  nameWithType: IComSoapPublisher
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher
  type: Interface
  summary: "SOAP 기반 COM + 응용 프로그램에 대 한 COM 인터페이스를 게시합니다."
  remarks: "IComSoapPublisher의 구현은 <xref:System.EnterpriseServices.Internal.Publish>; 구체적인 내용은 해당 항목을 참조 하십시오.</xref:System.EnterpriseServices.Internal.Publish>       IComSoapPublisher는.NET Framework에서 내부적으로 사용 됩니다. 코드에서 직접 사용할 필요가 없습니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013eee-730b-45e2-ba24-874b7242c425")]

      public interface IComSoapPublisher
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "지정된 된 URL에 SOAP 가능 COM + 응용 프로그램 사서함을 만듭니다. 완전히 구현 되지 않았습니다."
  remarks: "완전히 구현 되지 않은; 사서함을 현재 생성 되지 않습니다. &quot;COM + SOAP services의 SMTP 게시는 지원 되지 않습니다.&quot; 오류 메시지를 반환 합니다."
  syntax:
    content: public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "루트 메일 서버에 대 한 URL입니다."
    - id: MailBox
      type: System.String
      description: "만들려는 사서함입니다."
    - id: SmtpName
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 사서함이 들어 SMTP Simple Mail Transfer Protocol () 서버의 이름을 포함 합니다."
    - id: Domain
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 SMTP 서버의 도메인을 포함 합니다."
    - id: PhysicalPath
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 사서함에 대 한 파일 시스템 경로 포함 합니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 기반 COM + 응용 프로그램 가상 루트를 만듭니다."
  remarks: "것이 좋습니다 <xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>CreateVirtualRoot 대신 사용할 수 있습니다.</xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>"
  syntax:
    content: public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);
    parameters:
    - id: Operation
      type: System.String
      description: "수행할 작업입니다."
    - id: FullUrl
      type: System.String
      description: "가상 루트에 대 한 전체 URL 주소를 지정 합니다."
    - id: BaseUrl
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 기본 URL 주소를 포함 합니다."
    - id: VirtualRoot
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수에 가상 루트의 이름을 포함 합니다."
    - id: PhysicalPath
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수에 가상 루트에 대 한 파일 경로 포함 합니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다.       -또는-호출자에 게 도메인 DNS (Name System) 정보에 액세스할 수 있는 사용 권한이 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>FullUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "로컬 호스트 이름을 확인 하는 동안 오류가 발생 합니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>FullUrl</code>가 비어 있습니다.       -또는-에 지정 된 체계 <code>FullUrl</code> 올바르지 않습니다.       -또는- <code>FullUrl</code> 두 개 이상의 연속 된 슬래시를 포함 합니다.       -또는-에 지정 된 암호가 <code>FullUrl</code> 올바르지 않습니다.       -또는-호스트 이름에 지정 된 <code>FullUrl</code> 올바르지 않습니다.       -또는-파일 이름에 지정 된 <code>FullUrl</code> 올바르지 않습니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  id: DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: DeleteMailBox(String,String,String)
  nameWithType: IComSoapPublisher.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "지정된 된 URL에 SOAP 가능 COM + 응용 프로그램 사서함을 삭제합니다. 완전히 구현 되지 않았습니다."
  remarks: "완전히 구현 되지 않은; 사서함을 삭제 하지 않습니다. &quot;COM + SOAP services의 SMTP 게시는 지원 되지 않습니다.&quot; 오류 메시지를 반환 합니다."
  syntax:
    content: public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "루트 메일 서버에 대 한 URL입니다."
    - id: MailBox
      type: System.String
      description: "삭제할 사서함입니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  id: DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 기반 COM + 응용 프로그램 가상 루트를 삭제합니다. 완전히 구현 되지 않았습니다."
  remarks: "에 대 한 기능 <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>아직 제공 되지 않습니다.</xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>      > [!CAUTION] > 메서드는 오류 없이 현재 반환 되지만 가상 루트 삭제 되지 않습니다.       권장 되는 방법 <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>.</xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A> 됩니다 기능 사용 가능 해지면"
  syntax:
    content: public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);
    parameters:
    - id: RootWebServer
      type: System.String
      description: "루트 웹 서버입니다."
    - id: FullUrl
      type: System.String
      description: "가상 루트에 대 한 전체 URL 주소를 지정 합니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  id: GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GacInstall(String)
  nameWithType: IComSoapPublisher.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "전역 어셈블리 캐시에 어셈블리를 설치합니다."
  syntax:
    content: public void GacInstall (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "어셈블리에 대 한 파일 시스템 경로입니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  id: GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GacRemove(String)
  nameWithType: IComSoapPublisher.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "전역 어셈블리 캐시에서 어셈블리를 제거합니다."
  syntax:
    content: public void GacRemove (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "어셈블리에 대 한 파일 시스템 경로입니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>AssemblyPath</code>가 비어 있습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>´ ù."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드 되었습니다."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>유효한 어셈블리가 않습니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  id: GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GetAssemblyNameForCache(String,String)
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "강력한 이름의 서명 된 생성 된 어셈블리를 SoapCache 디렉터리에 대 한 전체 경로 반환합니다."
  remarks: "관리 되지 않는 COM + 구성 요소는 SOAP 끝점으로.NET remoting을 통해 게시에 대 한 프록시를.NET Framework에 대 한 관리 되지 않는 구성 요소를 사용할 수 있도록 하기 위해 생성 해야 합니다. 프로그래밍 방식으로 형식 라이브러리 가져오기 (Tlbimp.exe)와 같은 단계를 수행 하 여 이렇게는 [!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)] 프록시 메타 데이터 어셈블리에 관리 되지 않는 COM + 형식 라이브러리를 변환 하는 데 사용 되는 도구입니다. 그러나 성공 하려면 SOAP 통해 클라이언트 정품 인증에 대 한 클라이언트와 서버 컴퓨터 같은 강력한 이름의 서명 된 메타 데이터 프록시 공유 해야 합니다. 이러한 이유로 관리 되지 않는 COM + 구성 요소에 대 한 관리 되는 프록시 어셈블리를 생성할 때 강력한 이름 키도 생성 이며 프록시 어셈블리를 서명 하는 데 사용 합니다."
  syntax:
    content: public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);
    parameters:
    - id: TypeLibPath
      type: System.String
      description: "Typelib를 포함 하는 파일에 대 한 경로입니다."
    - id: CachePath
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 SoapCache 디렉터리에 있는 프록시 어셈블리의 전체 경로 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>TypeLibPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "파일 이름이 비어, 공백만 포함 또는 잘못 된 문자가 있습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "에 대 한 액세스 <code> TypeLibPath </code> 거부 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>TypeLibPath</code>문자열 중간에 콜론 (:)을 포함합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  id: GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GetTypeNameFromProgId(String,String)
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "어셈블리를 통해 반영 되어 있으며 ProgID와 일치 하는 형식 이름을 반환 합니다."
  syntax:
    content: public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "어셈블리에 대 한 파일 시스템 경로입니다."
    - id: ProgId
      type: System.String
      description: "클래스의 프로그래밍 id입니다."
    return:
      type: System.String
      description: "ProgID와 일치 하는 형식 이름입니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "클라이언트에서 구성 파일을 만드는 클라이언트 형식 라이브러리를 처리 합니다."
  remarks: "이 메서드는 원격 구성 파일을 생성 하는 클라이언트 프록시 가져오기에 사용 됩니다.       구현에서 하는 경우는 `Mode` 매개 변수는 &quot;wellknownobject&quot; 또는 빈 문자열 (&quot;&quot;), 잘 알려진 개체 간주 됩니다. 그렇지 않으면 클라이언트 활성화 가정 합니다.       것이 좋습니다 <xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>ProcessClientTlb 대신 사용할 수 있습니다.</xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>"
  syntax:
    content: public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "클래스의 프로그래밍 id입니다."
    - id: SrcTlbPath
      type: System.String
      description: "Typelib를 포함 하는 파일에 대 한 경로입니다."
    - id: PhysicalPath
      type: System.String
      description: "웹 응용 프로그램 디렉터리입니다."
    - id: VRoot
      type: System.String
      description: "가상 루트의 이름입니다."
    - id: BaseUrl
      type: System.String
      description: "가상 루트를 포함 하는 기준 URL입니다."
    - id: Mode
      type: System.String
      description: "정품 인증 모드입니다."
    - id: Transport
      type: System.String
      description: "사용되지 않습니다. 지정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 매개 변수에 대 한 합니다."
    - id: AssemblyName
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 어셈블리의 표시 이름을 포함 합니다."
    - id: TypeName
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 어셈블리의 정규화 된 형식 이름을 포함 합니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "서버 형식 라이브러리를 추가 하거나 Default.disco 및 Web.config 파일에 구성 항목 삭제를 처리 합니다. 필요한 경우 프록시를 생성 합니다."
  remarks: "COM + 구성 요소에 대 한 Web.config 및 Default.disco 파일 항목을 생성합니다. 필요한 경우 프록시를 생성 합니다.       것이 좋습니다 <xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>및 <xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A>ProcessServerTlb 대신 사용할 수 있습니다.</xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A> </xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>"
  syntax:
    content: public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string AssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "클래스의 프로그래밍 id입니다."
    - id: SrcTlbPath
      type: System.String
      description: "형식 라이브러리를 포함 하는 파일에 대 한 경로입니다."
    - id: PhysicalPath
      type: System.String
      description: "웹 응용 프로그램 디렉터리입니다."
    - id: Operation
      type: System.String
      description: "수행할 작업입니다."
    - id: AssemblyName
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 어셈블리의 표시 이름을 포함 합니다."
    - id: TypeName
      type: System.String
      description: "이 메서드가 반환 될 때이 매개 변수는 어셈블리의 정규화 된 형식 이름을 포함 합니다."
    - id: Error
      type: System.String
      description: "이 메서드가 반환 될 때 문제가 발생 한 경우이 매개 변수는 오류 메시지를 포함 합니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다."
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "<code> SrcTlbPath </code> 매개 변수가 참조 scrobj.dll; 따라서 스크립트 구성 요소의 SOAP 게시가 지원 되지 않습니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  id: RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: RegisterAssembly(String)
  nameWithType: IComSoapPublisher.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "COM interop에 대 한 어셈블리를 등록합니다."
  remarks: "RegisterAssembly의 구현에서 어셈블리의 생성 가능한 클래스를 등록 하려면 어셈블리 등록 도구 (Regasm.exe)을 사용 합니다. 자세한 내용은 참조 [Regasm.exe (어셈블리 등록 도구)](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void RegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "어셈블리에 대 한 파일 시스템 경로입니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "입력된 어셈블리에 강력한 이름이 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다.       -또는-&quot;file://&quot;로 시작 하지 않는 코드 베이스를 지정 하지 않고 필요한 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>찾을 수 없습니다 또는 파일 이름 확장명을 지정 하지 않으면 합니다."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>유효한 어셈블리가 않습니다."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드 되었습니다 또는 어셈블리 이름이 MAX_PATH 문자 보다 깁니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드를로 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 않습니다 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>합니다.       -또는-로 표시 하는 둘 이상의 메서드가 없는 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 계층의 지정 된 수준입니다.       -또는-로 메서드의 서명을 표시 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 올바르지 않습니다."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  id: UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: UnRegisterAssembly(String)
  nameWithType: IComSoapPublisher.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "COM interop 어셈블리를 등록 취소합니다."
  remarks: "UnRegisterAssembly의 구현에서 어셈블리의 생성 가능한 클래스가 등록을 취소 하려면 Regasm.exe를 사용 합니다. 자세한 내용은 참조 [Regasm.exe (어셈블리 등록 도구)](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void UnRegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "어셈블리에 대 한 파일 시스템 경로입니다."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출 체인에 호출자에 비관리 코드에 액세스할 수 있는 권한이 없는 합니다.       -또는-&quot;file://&quot;로 시작 하지 않는 코드 베이스를 지정 하지 않고 필요한 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>찾을 수 없습니다 또는 파일 이름 확장명을 지정 하지 않으면 합니다."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>유효한 어셈블리가 않습니다."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드 되었습니다 또는 어셈블리 이름이 MAX_PATH 문자 보다 깁니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드를로 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 않습니다 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>합니다.       -또는-로 표시 하는 둘 이상의 메서드가 없는 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 계층의 지정 된 수준입니다.       -또는-로 메서드의 서명을 표시 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 올바르지 않습니다."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.FileLoadException
  isExternal: true
  name: System.IO.FileLoadException
- uid: System.BadImageFormatException
  isExternal: true
  name: System.BadImageFormatException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteMailBox(String,String,String)
  nameWithType: IComSoapPublisher.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacInstall(String)
  nameWithType: IComSoapPublisher.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacRemove(String)
  nameWithType: IComSoapPublisher.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetAssemblyNameForCache(String,String)
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetTypeNameFromProgId(String,String)
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: RegisterAssembly(String)
  nameWithType: IComSoapPublisher.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: UnRegisterAssembly(String)
  nameWithType: IComSoapPublisher.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateMailBox
  nameWithType: IComSoapPublisher.CreateMailBox
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateVirtualRoot
  nameWithType: IComSoapPublisher.CreateVirtualRoot
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteMailBox
  nameWithType: IComSoapPublisher.DeleteMailBox
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteVirtualRoot
  nameWithType: IComSoapPublisher.DeleteVirtualRoot
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacInstall
  nameWithType: IComSoapPublisher.GacInstall
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacRemove
  nameWithType: IComSoapPublisher.GacRemove
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetAssemblyNameForCache
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetTypeNameFromProgId
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessClientTlb
  nameWithType: IComSoapPublisher.ProcessClientTlb
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessServerTlb
  nameWithType: IComSoapPublisher.ProcessServerTlb
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: RegisterAssembly
  nameWithType: IComSoapPublisher.RegisterAssembly
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: UnRegisterAssembly
  nameWithType: IComSoapPublisher.UnRegisterAssembly
