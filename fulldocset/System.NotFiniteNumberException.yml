### YamlMime:ManagedReference
items:
- uid: System.NotFiniteNumberException
  id: NotFiniteNumberException
  children:
  - System.NotFiniteNumberException.#ctor
  - System.NotFiniteNumberException.#ctor(System.Double)
  - System.NotFiniteNumberException.#ctor(System.String)
  - System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double)
  - System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  - System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.OffendingNumber
  langs:
  - csharp
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException
  fullName: System.NotFiniteNumberException
  type: Class
  summary: "부동 소수점 값이 양의 무한대, 음의 무한대 또는 숫자가 아님 (NaN) 하는 경우 throw 되는 예외입니다."
  remarks: "부동 소수점 연산에서 무한대 및 숫자 이외의 Not의 개념을 지원 하지 않는 프로그래밍 언어에 대해 NotFiniteNumberException ´ ù.       NotFiniteNumberException은 0x80131528 값이 있는 HRESULT COR_E_NOTFINITENUMBER를 사용 합니다.       목록이 NotFiniteNumberException의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.NotFiniteNumberException.%23ctor%2A>생성자.</xref:System.NotFiniteNumberException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class NotFiniteNumberException : ArithmeticException
  inheritance:
  - System.ArithmeticException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor
  id: '#ctor'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: System.NotFiniteNumberException.NotFiniteNumberException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 클래스입니다."
  remarks: "이 생성자에는 <xref:System.Exception.Message%2A>속성의 새 인스턴스를 &quot;는 숫자가 유한한 값이 아닙니다.&quot;와 같은 오류를 설명 하는 시스템 제공 메시지로</xref:System.Exception.Message%2A> 초기화합니다. 이 메시지는 현재 시스템 문화권을 고려 합니다.       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.Exception.Message%2A>| 지역화 된 오류 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException ();
    parameters: []
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(Double)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 클래스는 잘못 된 수를 사용 합니다."
  remarks: "`offendingNumber` 매개 변수 둘 다 있어야는 <xref:System.Double>및 잘못 된 수.</xref:System.Double>       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.NotFiniteNumberException.OffendingNumber%2A>| 잘못 된 번호입니다. |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException (double offendingNumber);
    parameters:
    - id: offendingNumber
      type: System.Double
      description: "예외를 발생 시킨 인수 값입니다."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 지정된 된 오류 메시지를 사용 하 여 클래스입니다."
  remarks: "확인 하는 `message` 및 현재 문화권에 맞게 지역화 된 문자열은 사용자를 이해할 수 있습니다.       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException (string message);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> serialize 된 데이터 클래스입니다."
  remarks: "이 생성자는 스트림을 통해 전송 된 예외 개체를 다시 구성 하기 위해 역직렬화 하는 동안 호출 됩니다."
  syntax:
    content: protected NotFiniteNumberException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 된 지정된 된 오류 메시지와 잘못 된 번호입니다."
  remarks: "확인 하는 `message` 및 현재 문화권에 맞게 지역화 된 문자열은 사용자를 이해할 수 있습니다.       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열입니다. |   | <xref:System.NotFiniteNumberException.OffendingNumber%2A>| 잘못 된 번호입니다. |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
    - id: offendingNumber
      type: System.Double
      description: "예외를 발생 시킨 인수 값입니다."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 된 지정된 된 오류 메시지 및 내부 예외는이 예외의 근본 원인에 대 한 참조입니다."
  remarks: "에 이전 예외에 대 한 참조를 포함할 수 있습니다 이전 예외의 직접적인 결과로 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>속성은 생성자에 전달 되는 동일한 값을 반환 하거나 `null` 경우는 <xref:System.Exception.InnerException%2A>생성자에 내부 예외 값을 제공 하지 않는.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| 내부 예외를 참조 합니다. |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
    - id: innerException
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다. 경우는 `innerException` 매개 변수가 null 참조 하지 않습니다. (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)에서 현재 예외가 발생 한 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> 내부 예외를 처리 하는 블록."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  id: '#ctor(System.String,System.Double,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String,Double,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.NotFiniteNumberException&quot;> </xref> 지정된 된 오류 메시지, 잘못 된 수를이 예외를 발생 시킨 내부 예외에 대 한 참조와 클래스입니다."
  remarks: "에 이전 예외에 대 한 참조를 포함할 수 있습니다 이전 예외의 직접적인 결과로 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>속성은 생성자에 전달 되는 동일한 값을 반환 하거나 `null` 경우는 <xref:System.Exception.InnerException%2A>생성자에 내부 예외 값을 제공 하지 않는.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.NotFiniteNumberException>안내 하십시오.</xref:System.NotFiniteNumberException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| 내부 예외를 참조 합니다. |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열입니다. |   | <xref:System.NotFiniteNumberException.OffendingNumber%2A>| 잘못 된 번호입니다. |</xref:System.NotFiniteNumberException.OffendingNumber%2A> </xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
    - id: offendingNumber
      type: System.Double
      description: "예외를 발생 시킨 인수 값입니다."
    - id: innerException
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다. 경우는 `innerException` 매개 변수가 null 참조 하지 않습니다. (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)에서 현재 예외가 발생 한 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> 내부 예외를 처리 하는 블록."
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "설정의 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 잘못 된 번호 및 추가 예외 정보 포함 된 개체입니다."
  remarks: "<xref:System.TypeLoadException.GetObjectData%2A>설정 하는 <xref:System.Runtime.Serialization.SerializationInfo>serialization 대상인 모든 예외 개체 데이터가.</xref:System.Runtime.Serialization.SerializationInfo></xref:System.TypeLoadException.GetObjectData%2A> 역직렬화 하는 동안 예외 개체에서 다시 구성 되는 <xref:System.Runtime.Serialization.SerializationInfo>스트림을 통해 전송 된.</xref:System.Runtime.Serialization.SerializationInfo>       자세한 내용은 <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> 을 참조 하십시오."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상에 대 한 컨텍스트 정보입니다."
  overload: System.NotFiniteNumberException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.NotFiniteNumberException.OffendingNumber
  id: OffendingNumber
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: System.NotFiniteNumberException.OffendingNumber
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "양의 무한대, 음의 무한대 또는 숫자가 아님 (NaN)은 잘못 된 수를 가져옵니다."
  remarks: "OffendingNumber 속성 제공 된 값이 없으면&0; 또는 생성자에 전달 된 것과 동일한 값을 반환 합니다. 내용이 나 잘못 된 값의 형식을 사용자 지정 하려면 OffendingNumber 속성을 재정의 합니다.       이 속성은 읽기 전용입니다."
  syntax:
    content: public double OffendingNumber { get; }
    return:
      type: System.Double
      description: "잘못 된 수입니다."
  overload: System.NotFiniteNumberException.OffendingNumber*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArithmeticException
  isExternal: false
  name: System.ArithmeticException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotFiniteNumberException.#ctor
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: System.NotFiniteNumberException.NotFiniteNumberException()
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.NotFiniteNumberException.#ctor(System.String)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double)
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String,Double,Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
  fullName: System.NotFiniteNumberException.NotFiniteNumberException(String,Double,Exception)
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.NotFiniteNumberException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.NotFiniteNumberException.OffendingNumber
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: System.NotFiniteNumberException.OffendingNumber
- uid: System.NotFiniteNumberException.#ctor*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException.NotFiniteNumberException
- uid: System.NotFiniteNumberException.GetObjectData*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData
  nameWithType: NotFiniteNumberException.GetObjectData
- uid: System.NotFiniteNumberException.OffendingNumber*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
