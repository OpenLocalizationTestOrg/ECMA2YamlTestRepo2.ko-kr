### YamlMime:ManagedReference
items:
- uid: System.Data.DataColumnCollection
  id: DataColumnCollection
  children:
  - System.Data.DataColumnCollection.Add
  - System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Add(System.String)
  - System.Data.DataColumnCollection.Add(System.String,System.Type)
  - System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  - System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  - System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Clear
  - System.Data.DataColumnCollection.CollectionChanged
  - System.Data.DataColumnCollection.Contains(System.String)
  - System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  - System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  - System.Data.DataColumnCollection.IndexOf(System.String)
  - System.Data.DataColumnCollection.Item(System.Int32)
  - System.Data.DataColumnCollection.Item(System.String)
  - System.Data.DataColumnCollection.List
  - System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Remove(System.String)
  - System.Data.DataColumnCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataColumnCollection
  nameWithType: DataColumnCollection
  fullName: System.Data.DataColumnCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 에 대 한 개체는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  remarks: "스키마를 정의 하는 한 <xref:System.Data.DataTable>, 각 데이터의 종류를 결정 하 고 <xref:System.Data.DataColumn>포함 될 수 있습니다.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> 통해 DataColumnCollection에 액세스할 수 있습니다는 <xref:System.Data.DataTable.Columns%2A>의 속성은 <xref:System.Data.DataTable>개체.</xref:System.Data.DataTable> </xref:System.Data.DataTable.Columns%2A>       사용 하 여는 <xref:System.Data.DataColumnCollection.Add%2A>및 <xref:System.Data.DataColumnCollection.Remove%2A>삽입 및 삭제 하는 메서드를 <xref:System.Data.DataColumn>개체.</xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection.Remove%2A> </xref:System.Data.DataColumnCollection.Add%2A> 사용 하 여는 <xref:System.Data.InternalDataCollectionBase.Count%2A>속성을 확인 수 <xref:System.Data.DataColumn>는 컬렉션에 있는 개체입니다.</xref:System.Data.DataColumn> </xref:System.Data.InternalDataCollectionBase.Count%2A> 사용 된 <xref:System.Data.DataColumnCollection.Contains%2A>메서드는 지정 된 인덱스 또는 열 이름 컬렉션에 있는지 여부를 확인 하려면.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/csharp/t-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datacolumn_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add
  id: Add
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 추가 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체는 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>합니다."
  remarks: "기본 이름 (&quot;Column1&quot;, &quot;Column2&quot; 등) 열에 제공 됩니다.       컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_9_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add ();
    parameters: []
    return:
      type: System.Data.DataColumn
      description: "새로 만든 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  overload: System.Data.DataColumnCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  id: Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 지정 된 추가 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체는 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>합니다."
  remarks: "컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "The <xref href=&quot;System.Data.DataColumn&quot;></xref> to add."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "열에는 이미이 컬렉션에 나 다른 컬렉션에 속해 있습니다."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "컬렉션에 이미 지정 된 이름의 열을 있습니다. (비교는 대/소문자 구분.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "식이 잘못 되었습니다. 참조는 <xref:System.Data.DataColumn.Expression*>속성 식을 만들 수는 방법에 대 한 자세한 내용은.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 추가 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 에 지정된 된 이름을 가진 개체는 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>합니다."
  remarks: "기본적으로는 <xref:System.Data.DataColumn.DataType%2A>새 열에 대 한 `string`.</xref:System.Data.DataColumn.DataType%2A>       경우 `null` 또는 빈 문자열 (&quot;&quot;) 전달에서 이름에 대 한 기본 (&quot;Column1&quot;, &quot;Column2&quot; 등)에 이름이 지정 된 열입니다.       사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A>메서드를 제안된 된 이름 가진 열 컬렉션에 이미 존재 하는지 확인 합니다.</xref:System.Data.DataColumnCollection.Contains%2A>       컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Data.DataColumn
      description: "새로 만든 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "컬렉션에 이미 지정 된 이름의 열을 있습니다. (비교는 대/소문자 구분.)"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 추가 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 이름을 지정 하 고 형식을 지정 된 개체는 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>합니다."
  remarks: "경우 `null` 또는 빈 문자열 (&quot;&quot;) 전달에서 이름에 대 한 기본 (&quot;Column1&quot;, &quot;Column2&quot; 등)에 이름이 지정 된 열입니다.       사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A>메서드를 제안된 된 이름 가진 열 컬렉션에 이미 존재 하는지 확인 합니다.</xref:System.Data.DataColumnCollection.Contains%2A>       컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_7_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type);
    parameters:
    - id: columnName
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>열을 만들 때 사용할.</xref:System.Data.DataColumn.ColumnName*>"
    - id: type
      type: System.Type
      description: "<xref:System.Data.DataColumn.DataType*>새 열의.</xref:System.Data.DataColumn.DataType*>"
    return:
      type: System.Data.DataColumn
      description: "새로 만든 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "컬렉션에 이미 지정 된 이름의 열을 있습니다. (비교는 대/소문자 구분.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "식이 잘못 되었습니다. 참조는 <xref:System.Data.DataColumn.Expression*>속성 식을 만들 수는 방법에 대 한 자세한 내용은.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  id: Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 추가 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 지정한 이름, 형식 및 식에 있는 개체는 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>합니다."
  remarks: "경우 `null` 또는 빈 문자열 (&quot;&quot;) 전달에서 이름에 대 한 기본 (&quot;Column1&quot;, &quot;Column2&quot; 등)에 이름이 지정 된 열입니다.       사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A>메서드를 제안된 된 이름 가진 열 컬렉션에 이미 존재 하는지 확인 합니다.</xref:System.Data.DataColumnCollection.Contains%2A>       컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type, string expression);
    parameters:
    - id: columnName
      type: System.String
      description: "열을 만들 때 사용할 이름입니다."
    - id: type
      type: System.Type
      description: "<xref:System.Data.DataColumn.DataType*>새 열의.</xref:System.Data.DataColumn.DataType*>"
    - id: expression
      type: System.String
      description: "식에 할당 하는 <xref:System.Data.DataColumn.Expression*>속성.</xref:System.Data.DataColumn.Expression*>"
    return:
      type: System.Data.DataColumn
      description: "새로 만든 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "컬렉션에 이미 지정 된 이름의 열을 있습니다. (비교는 대/소문자 구분.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "식이 잘못 되었습니다. 참조는 <xref:System.Data.DataColumn.Expression*>속성 식을 만들 수는 방법에 대 한 자세한 내용은.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  id: AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 요소에 복사 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 배열 컬렉션의 끝입니다."
  syntax:
    content: public void AddRange (System.Data.DataColumn[] columns);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션에 추가할 개체입니다."
  overload: System.Data.DataColumnCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  id: CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션에서 특정 열을 제거할 수 있는지 여부를 확인 합니다."
  remarks: "반환 하기 전에 여러 검사를 수행 하는 CanRemove 메서드는 `true` 또는 `false` 결과입니다. 여기에 다음: 여부 열는 테이블에 속해 있거나는 제약 조건 또는 관계에 참여 합니다.       컬렉션에서 모든 열을 제거 하려고 하기 전에 CanRemove 메서드를 사용 합니다. <xref:System.Data.DataColumnCollection.Contains%2A>특정 열 제거 하십시오 하려고 하기 전에 있는지 확인 하는 메서드</xref:System.Data.DataColumnCollection.Contains%2A> 를 사용할 수도 있습니다."
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If found, the CanRemove method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_16_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_16_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 열을 제거할 수 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>if,      -   The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -열이이 컬렉션에 속해 있지 않습니다.      -열이 관계의 일부입니다.      -다른 열 식은이 열에 따라 다릅니다."
  overload: System.Data.DataColumnCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Clear
  id: Clear
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "모든 열의 컬렉션을 지웁니다."
  remarks: "컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example clears the columns collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_0_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_0_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataColumnCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "추가 하거나 열을 제거 하 여 columns 컬렉션 변경 될 때 발생 합니다."
  remarks: "사용 하 여는 <xref:System.Data.DataColumnCollection.Contains%2A>및 <xref:System.Data.DataColumnCollection.CanRemove%2A>열 있으며 제거할 수 있는지 여부를 확인 하는 메서드.</xref:System.Data.DataColumnCollection.CanRemove%2A> </xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example adds an event handler for the CollectionChanged event.  \n  \n [!code-cs[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datacolumn_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션에서 지정한 이름 가진 열이 포함 되어 있는지 여부를 확인 합니다."
  remarks: "Contains 메서드를 사용 하 여 열에 대 한 추가 작업을 수행 하기 전에 열이 있는지 확인 합니다. 메서드가 반환 `false` 동일 하지만 서로 다른 네임 스페이스의 이름을 두 개 이상의 열이 있는 경우. 정확히 하나의 열에 열 이름을 일치 시킬 때 모든 모호성이 있으면 호출이 성공 하지 않습니다."
  example:
  - "The following example uses the Contains method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed. If so, the column is removed.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_3_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_3_1.cs)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>>for 찾을 열의의</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 이름의; 열이 존재 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataColumnCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  id: CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "전체 컬렉션을 배열 내에서 지정된 된 인덱스에서 시작 하 여 기존 배열에 복사 합니다."
  syntax:
    content: public void CopyTo (System.Data.DataColumn[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션을 복사할 개체입니다."
    - id: index
      type: System.Int32
      description: "시작 하는 인덱스입니다."
  overload: System.Data.DataColumnCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  id: IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이름으로 지정 된 열의 인덱스를 가져옵니다."
  remarks: "IndexOf 메서드 구분 하지 않습니다."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>. If so, the IndexOf method returns the index of the column.  \n  \n [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "반환할 열의 이름입니다."
    return:
      type: System.Int32
      description: "지정 된 열의 인덱스 <code> column </code> 경우이 고, 그렇지 않으면-1입니다."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "특정 이름 (이름은 대/소문자 구분 하지 않습니다.)를 사용 하 여 열의 인덱스를 가져옵니다."
  syntax:
    content: public int IndexOf (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "찾을 열의 이름입니다."
    return:
      type: System.Int32
      description: "지정된 된 이름, 또는 열 컬렉션에 존재 하지 않는 경우-1을 사용 하 여 열의&0;부터 시작 하는 인덱스입니다."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션에서 지정된 된 인덱스에 있습니다."
  remarks: "<xref:System.Data.DataColumnCollection.Contains%2A>열의 존재 여부를 테스트 메서드를 사용할 수 있습니다.</xref:System.Data.DataColumnCollection.Contains%2A> 항목을 사용 하려고 하기 전에 유용 합니다."
  example:
  - "The following example uses the Item property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index. The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.  \n  \n [!code-cs[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_11_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "반환할 열의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Data.DataColumnCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "인덱스 값이 컬렉션의 항목 개수 보다 큽니다."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션에서 지정된 된 이름 갖는 합니다."
  remarks: "<xref:System.Data.DataColumnCollection.Item%2A>열 이름을 검색할 때 조건에 따라 대/소문자를 구분 합니다.</xref:System.Data.DataColumnCollection.Item%2A> 예를 들어 하나의 <xref:System.Data.DataColumn>&quot;mydatacolumn&quot; 라고 하 고 &quot;Mydatacolumn&quot; 라는 다른, 열 중 하나를 검색 하는 데 사용 하는 문자열은 대/소문자 구분으로 간주 됩니다.</xref:System.Data.DataColumn> 그러나 &quot;mydatacolumn&quot; 있으며 &quot;Mydatacolumn&quot; 하지 않는 경우 검색 문자열 대 소문자를 구분 간주 됩니다."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.  \n  \n [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public System.Data.DataColumn this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>반환할 열입니다.</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> 지정 된 컬렉션에 <xref:System.Data.DataColumn.ColumnName*>; 그렇지 않으면 null 값의 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 존재 하지 않습니다.</xref:System.Data.DataColumn.ColumnName*>"
  overload: System.Data.DataColumnCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.List
  id: List
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "추가할 수 있습니다."
  overload: System.Data.DataColumnCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  id: Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 제거 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists. If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column. The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the Remove method removes it.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_10_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_10_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> 를 제거 합니다."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "열이이 컬렉션에 속해 있지 않습니다.       -또는-열이 관계의 일부입니다.       -또는-다른 열 식은이 열에 따라 다릅니다."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 컬렉션에서 지정한 이름을 가진 개체입니다."
  remarks: "컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_12_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_12_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "제거할 열의 이름입니다."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "컬렉션에는 지정 된 이름의 열이 없습니다."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션에서 지정된 된 인덱스에 열을 제거합니다."
  remarks: "컬렉션 추가 하거나 열을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.DataColumnCollection.CollectionChanged>이벤트가 발생 합니다.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_4_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 열의 인덱스입니다."
  overload: System.Data.DataColumnCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정된 된 인덱스에 컬렉션 열을 않아도 됩니다."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidExpressionException
  parent: System.Data
  isExternal: false
  name: InvalidExpressionException
  nameWithType: InvalidExpressionException
  fullName: System.Data.InvalidExpressionException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataColumnCollection.Add
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
- uid: System.Data.DataColumnCollection.Add(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataColumnCollection.Clear
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
- uid: System.Data.DataColumnCollection.CollectionChanged
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataColumnCollection.Contains(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
- uid: System.Data.DataColumnCollection.Item(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
- uid: System.Data.DataColumnCollection.List
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
- uid: System.Data.DataColumnCollection.Remove(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
- uid: System.Data.DataColumnCollection.Add*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add
  nameWithType: DataColumnCollection.Add
- uid: System.Data.DataColumnCollection.AddRange*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange
  nameWithType: DataColumnCollection.AddRange
- uid: System.Data.DataColumnCollection.CanRemove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataColumnCollection.CanRemove
- uid: System.Data.DataColumnCollection.Clear*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear
  nameWithType: DataColumnCollection.Clear
- uid: System.Data.DataColumnCollection.Contains*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains
  nameWithType: DataColumnCollection.Contains
- uid: System.Data.DataColumnCollection.CopyTo*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataColumnCollection.CopyTo
- uid: System.Data.DataColumnCollection.IndexOf*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataColumnCollection.IndexOf
- uid: System.Data.DataColumnCollection.Item*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item
  nameWithType: DataColumnCollection.Item
- uid: System.Data.DataColumnCollection.List*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
- uid: System.Data.DataColumnCollection.Remove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove
  nameWithType: DataColumnCollection.Remove
- uid: System.Data.DataColumnCollection.RemoveAt*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataColumnCollection.RemoveAt
