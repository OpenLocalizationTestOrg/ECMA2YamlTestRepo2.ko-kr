### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  id: LinqDataSourceSelectEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters
  - System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters
  langs:
  - csharp
  name: LinqDataSourceSelectEventArgs
  nameWithType: LinqDataSourceSelectEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Selecting&quot;> </xref> 이벤트입니다."
  remarks: "LinqDataSourceSelectEventArgs 개체에 대 한 이벤트 처리기로 전달 되는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>의 이벤트는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting> LinqDataSourceSelectEventArgs 개체를 사용 하 여 반환 되는 데이터와 데이터 정렬 되 고 반환 될 때 호출 되는 방식을 수동으로 지정 합니다. 프로그래밍 방식으로 추가 하거나 GroupBy, OrderBy, OrderGroupsBy, Select, 매개 변수를 제거할 수 및 위치를 사용 하 여 절은 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A>, 및 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters%2A>       <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>속성을 사용 하면 쿼리에 사용 되는 데이터 개체를 변경할 수 있습니다.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> 개체를 할당 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>속성에 지정 된 개체는 대신 쿼리에 대 한 해당 개체를 사용할는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>       <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>속성을 사용 정렬 되 고 paged 어떻게 반환 된 데이터를 사용자 지정할 수 있습니다.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> 데이터 바인딩된 컨트롤을 정렬 및 페이징을 속성을 통해 전달 된 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments%2A> 정렬 또는 페이징을 직접 처리 해야 할 경우 설정의 <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>속성 또는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어를 `false`.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> </xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> 정렬 또는 페이징에 대 한 처리기에 대 한 사용자 지정 된 쿼리를 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting>       경우는 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>속성이 `true`에 대 한 값을 반환 해야 합니다는 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>속성.</xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> </xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>"
  example:
  - "The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the result of a search made by using language-integrated query (LINQ).  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_282_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_282_1.vb)]  \n  \n The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to an array of string values that is defined in the Web page.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_282_2.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_282_2.vb)]"
  syntax:
    content: 'public class LinqDataSourceSelectEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public LinqDataSourceSelectEventArgs (System.Web.UI.DataSourceSelectArguments arguments, System.Collections.Generic.IDictionary<string,object> whereParameters, System.Collections.Specialized.IOrderedDictionary orderByParameters, System.Collections.Generic.IDictionary<string,object> groupByParameters, System.Collections.Generic.IDictionary<string,object> orderGroupsByParameters, System.Collections.Generic.IDictionary<string,object> selectParameters);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "값 데이터 바인딩된 컨트롤에서 전달 되는 데이터는 페이징 및 정렬 하는 방법을 결정 하는입니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*>"
    - id: whereParameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Where를 만드는 데 사용 되는 매개 변수 컬렉션 절. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*>"
    - id: orderByParameters
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Order By 절을 만드는 사용 되는 컬렉션 매개 변수입니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*>"
    - id: groupByParameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Group By 절을 만드는 사용 되는 컬렉션 매개 변수입니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*>"
    - id: orderGroupsByParameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "정렬에 사용 되는 절을 만드는 데 사용 되는 매개 변수 컬렉션으로 데이터를 그룹화 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*>"
    - id: selectParameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Select 절을 만드는 데 사용 되는 컬렉션 매개 변수입니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*>"
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments
  id: Arguments
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: Arguments
  nameWithType: LinqDataSourceSelectEventArgs.Arguments
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 반환 되는 방법을 결정 하는 값을 가져옵니다."
  remarks: "데이터 바인딩된 컨트롤 속성을 전달는 <xref:System.Web.UI.WebControls.LinqDataSource>페이징 및 정렬과 수행 되는 방법을 지정 하려면 인수 속성을 통해 제어 됩니다.</xref:System.Web.UI.WebControls.LinqDataSource> 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>속성 또는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>속성이 `true`, <xref:System.Web.UI.WebControls.LinqDataSource>정렬 또는 페이지를 데이터 바인딩된 컨트롤에서에서 속성에 따라 자동으로 제어 합니다.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>       데이터 정렬 되 고 설정 하 여 쿼리에서 페이징 되는 방식을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>및 <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>속성을 `false` 에 대 한 처리기를 만든 다음는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> 이벤트 처리기 인수 속성을 정렬 하는 검색 및 데이터 바인딩된 컨트롤에서 페이징 속성을 사용 합니다. 다음 쿼리를 사용자 지정 필요에 따라 인수 속성에서 속성에 기반 합니다. 경우는 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>속성은 <xref:System.Web.UI.DataSourceSelectArguments>개체로 설정 되어 `true`에 대 한 값을 반환 해야 합니다는 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>속성.</xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>"
  syntax:
    content: public System.Web.UI.DataSourceSelectArguments Arguments { get; }
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "데이터 반환 되는 방법을 결정 하는 값을 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters
  id: GroupByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: GroupByParameters
  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "GroupBy 절을 만드는 데 사용 되는 매개 변수 컬렉션을 가져옵니다."
  remarks: "에 대 한 처리기의 GroupBy 절에 대 한 매개 변수에 액세스 하려면 GroupByParameters 속성을 사용 하면는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> GroupBy 절을 추가 하거나이 컬렉션에서 매개 변수를 제거 하 여 수정할 수 있습니다. GroupByParameters 속성은 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>에 추가 된 모든 매개 변수를 포함 하는 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> GroupByParameters { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "GroupBy 절에 대 한 매개 변수를 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "OrderBy 절을 만드는 데 사용 되는 매개 변수 컬렉션을 가져옵니다."
  remarks: "OrderBy 절에 대 한 처리기에 대 한 매개 변수에 액세스 하려면 경우에 OrderByParameters 속성을 사용 하면는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> OrderBy 절을 추가 하거나이 컬렉션에서 매개 변수를 제거 하 여 수정할 수 있습니다. 경우에 OrderByParameters 속성은 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>에 추가 된 모든 매개 변수를 포함 하는 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>의 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>       경우는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>속성이 `true`, 경우에 OrderByParameters 컬렉션의 매개 변수 이름을 지정할 필요가 없습니다.</xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> 데이터는 경우에 OrderByParameters 컬렉션에서 매개 변수의 시퀀스에 따라 정렬 됩니다."
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary OrderByParameters { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "OrderBy 절에 대 한 매개 변수를 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  id: OrderGroupsByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: OrderGroupsByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "정렬 된 어떻게 그룹화 된 데이터를 지정 하는 절을 만드는 데 사용 되는 매개 변수의 컬렉션을 가져옵니다."
  remarks: "설정 하 여 데이터를 그룹화 할는 <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>속성을 설정 하 여 그룹화 된 데이터를 정렬할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>속성을 데이터를 그룹화 하는 데 사용 되는 속성 중 하나로.</xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>       에 대 한 처리기에서 그룹 Order By 절에 대 한 매개 변수에 액세스 하려면 OrderGroupsByParameters 속성을 사용 하면는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> 그룹 Order By 절을 추가 하거나이 컬렉션에서 매개 변수를 제거 하 여 수정할 수 있습니다.       OrderGroupsByParameters 속성은 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>선언적으로 추가 된 모든 매개 변수를 포함 하는 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>의 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> OrderGroupsByParameters { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "어떻게 그룹화 된 데이터를 지정 하는 절에 대 한 매개 변수를 포함 하는 개체 정렬 됩니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result
  id: Result
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: LinqDataSourceSelectEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 쿼리에 사용 되는 데이터 개체를 가져오거나 설정 합니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSource>에 정의 된 개체에는 쿼리 식을 적용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 에 대 한 처리기에는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트를 수동으로 변경할 수 있습니다는 개체에 결과 속성을 설정 하 여 쿼리 되는 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> 예를 들어 웹 페이지에는 메모리 내 컬렉션을 쿼리할 수 또는 LINQ 쿼리 식에서 결과 가져오려면 결과 속성을 사용할 수 있습니다. 개체에 결과 속성을 설정할 수 있습니다. 개체를 구현 하지 않는 경우는 <xref:System.Collections.Generic.IEnumerable%601>인터페이스는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤은 구현 하는 개체에는 개체를 래핑합니다는 <xref:System.Collections.Generic.IEnumerable%601>인터페이스.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Collections.Generic.IEnumerable%601>       결과 속성은로 설정 하면 모든 값 이외의 다른 `null`, <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤에 정의 된 개체를 쿼리하지 않습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 대신, 결과 속성에 개체를 쿼리합니다.      > [!NOTE] > 개체에 결과 속성을 설정 하면 사용 하지 않는 `null` 모든 데이터를 포함 하지 않는 개체를 나타내는입니다. <xref:System.Web.UI.WebControls.LinqDataSource>해석할지 `null` 결과 속성을 설정 하지 않으면 고를 만들고에서 개체를 쿼리할는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> 데이터를 포함 하지 않는 개체를 나타내도록 하려면 결과 속성을 설정는 <xref:System.Collections.IList>또는 <xref:System.Collections.Generic.IList%601>요소를 포함 하지 않는 개체입니다.</xref:System.Collections.Generic.IList%601> </xref:System.Collections.IList>       <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>, <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, 및 <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing>프로그래밍 방식으로 설정 하면 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>속성 개체를 사용 하 고 두 개의 추가 조건이 적용 하는 경우.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> 조건에 해당 원래 값에서 개체 또는 상태 보기에 저장할 수 필요가 없습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>속성이 구현 하는 <xref:System.Data.Linq.ITable>인터페이스.</xref:System.Data.Linq.ITable> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  example:
  - "The following example shows how to set the Result property to the result of a LINQ query.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_995_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_995_1.vb)]  \n  \n The following example shows how to set the Result property to an array of string values is defined in the Web page.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_995_2.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_995_2.vb)]"
  syntax:
    content: public object Result { get; set; }
    return:
      type: System.Object
      description: "쿼리에 대 한 데이터를 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: SelectParameters
  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Select 절을 만드는 데 사용 되는 매개 변수 컬렉션을 가져옵니다."
  remarks: "Select 절에 대 한 처리기에 대 한 매개 변수에 액세스 하려면 SelectParameters 속성을 사용 하면는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> Select 절을 추가 하거나이 컬렉션에서 매개 변수를 제거 하 여 수정할 수 있습니다. SelectParameters 속성은 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>에 추가 된 모든 매개 변수를 포함 하는 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>의 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>"
  example:
  - "The following example shows how to add a parameter to the SelectParameters collection. The added parameter is used to calculate an adjusted price for a product based on whether products are on discounted. The first part of the example shows the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_535_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_535_1.aspx)]  \n  \n The second part of the example shows the markup that defines the Select clause.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_535_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_535_2.aspx)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> SelectParameters { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Select 절에 대 한 매개 변수를 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  langs:
  - csharp
  name: WhereParameters
  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Where를 만드는 데 사용 되는 매개 변수 컬렉션을 가져옵니다 절."
  remarks: "매개 변수에 액세스 하려면 WhereParameters 속성을 사용 하 여 where 절에 대 한 처리기는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> Where 수정할 수 있습니다 절 추가 하거나이 컬렉션에서 매개 변수를 제거 합니다. WhereParameters 속성은 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>에 추가 된 모든 매개 변수를 포함 하는 개체는 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>의 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>       WhereParameters 컬렉션을 통해 매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>개체의 매개 변수에 대 한 자리 표시자를 포함 하거나 해야는 <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>또는 속성 집합은 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>속성을 `true`.</xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> 예를 들어, 명명 된 매개 변수를 추가 하는 경우 `ProductName` 에 대 한 이벤트 처리기에는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트를 설정 하거나 해야는 <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>속성을 `true` 설정 또는 <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>속성을 `ProductName=@ProductName`.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> </xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting>"
  example:
  - "The following example shows how to add a parameter to the WhereParameters collection. The added parameter will limit the returned products to only those products with a value of \"Bike\" in the `Name` property. The <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is set to `true` so that the parameter is automatically included in the Where clause.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_828_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_828_1.aspx)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> WhereParameters { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Where에 대 한 매개 변수를 포함 하는 개체 절."
  overload: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs(DataSourceSelectArguments,IDictionary<String,Object>,IOrderedDictionary,IDictionary<String,Object>,IDictionary<String,Object>,IDictionary<String,Object>)
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: Arguments
  nameWithType: LinqDataSourceSelectEventArgs.Arguments
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: GroupByParameters
  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: OrderByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: OrderGroupsByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceSelectEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: SelectParameters
  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: WhereParameters
  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: LinqDataSourceSelectEventArgs
  nameWithType: LinqDataSourceSelectEventArgs.LinqDataSourceSelectEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: Arguments
  nameWithType: LinqDataSourceSelectEventArgs.Arguments
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: GroupByParameters
  nameWithType: LinqDataSourceSelectEventArgs.GroupByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: OrderByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: OrderGroupsByParameters
  nameWithType: LinqDataSourceSelectEventArgs.OrderGroupsByParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceSelectEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: SelectParameters
  nameWithType: LinqDataSourceSelectEventArgs.SelectParameters
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters*
  parent: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  isExternal: false
  name: WhereParameters
  nameWithType: LinqDataSourceSelectEventArgs.WhereParameters
