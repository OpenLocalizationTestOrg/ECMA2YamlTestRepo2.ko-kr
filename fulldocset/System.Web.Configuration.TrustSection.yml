### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.TrustSection
  id: TrustSection
  children:
  - System.Web.Configuration.TrustSection.#ctor
  - System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  - System.Web.Configuration.TrustSection.LegacyCasModel
  - System.Web.Configuration.TrustSection.Level
  - System.Web.Configuration.TrustSection.OriginUrl
  - System.Web.Configuration.TrustSection.PermissionSetName
  - System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  - System.Web.Configuration.TrustSection.Properties
  langs:
  - csharp
  name: TrustSection
  nameWithType: TrustSection
  fullName: System.Web.Configuration.TrustSection
  type: Class
  summary: "응용 프로그램에 적용 되는 코드 액세스 보안 수준을 구성 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "TrustSection 클래스를 사용 하면 프로그래밍 방식으로 액세스 하 고 구성 파일 수정 `<trust>` 섹션. `<trust>` 섹션 특정 응용 프로그램을 실행 하는 데 사용 되는 코드 액세스 보안 권한 집합을 구성 합니다. 이 섹션은 시스템, 사이트 및 응용 프로그램 수준에서 선언할 수 있습니다."
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the TrustSection class. The second demonstrates how to use the TrustSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the TrustSection class.  \n  \n```  \n<system.web>  \n  <trust level=\"Full\" originUrl=\"\"/>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the TrustSection type.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#1](~/add/codesnippet/csharp/t-system.web.configurati_21_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_21_1.vb)]"
  syntax:
    content: 'public sealed class TrustSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Configuration.TrustSection&quot;> </xref> 클래스 기본 설정을 사용 합니다."
  remarks: "사용자 코드에서 직접 사용할 TrustSection 생성자를 사용 하는 것이 없습니다. ASP.NET 구성 시스템에 의해 호출 됩니다. 인스턴스를 가져올 수는 <xref:System.Web.Configuration.TrustSection>클래스를 사용 하 여는 <xref:System.Configuration.Configuration.GetSection%2A>메서드.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.TrustSection>       다음 표에서 TrustSection 생성자에 사용 되는 기본 설정을 보여 줍니다.      | 설정 | 기본 값 |   |-------------|-------------------|   | <xref:System.Web.Configuration.TrustSection.Level%2A>| `Full`|   | <xref:System.Web.Configuration.TrustSection.OriginUrl%2A>| `&quot;&quot;`|</xref:System.Web.Configuration.TrustSection.OriginUrl%2A></xref:System.Web.Configuration.TrustSection.Level%2A>"
  syntax:
    content: public TrustSection ();
    parameters: []
  overload: System.Web.Configuration.TrustSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  id: HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "사용자 지정 보안 정책 확인 유형을 가져오거나 설정 합니다."
  remarks: "HostSecurityPolicyResolverType은 빈 문자열을 응용 프로그램 ASP.NET 기본 정책을 사용 하 여 어셈블리의 사용 권한을 결정 합니다. 사용 권한을 평가 하기 위한 기본 정책을 부분 신뢰를 다른 어셈블리와 전역 어셈블리 캐시 (GAC) 어셈블리에 완전 신뢰를 부여 합니다.       이 특성 설정할 수 없습니다는 `null` 값입니다."
  syntax:
    content: public string HostSecurityPolicyResolverType { get; set; }
    return:
      type: System.String
      description: "사용자 지정 보안 정책 확인 형식입니다."
  overload: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  id: LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "가져오거나 레거시 코드 액세스 보안이 사용 되는지 여부를 나타내는 값을 설정 합니다."
  remarks: "레거시 코드 액세스 보안을 사용 하는 경우 다음 보안 규칙이 적용 됩니다.-컴퓨터 정책 및 지정 된 ASP.NET 부분 신뢰 정책 파일의 조합을 통해 코드 액세스 보안 (CA) 정책 설정 됩니다.      -부분 신뢰 응용 프로그램 도메인으로 응용 프로그램 도메인 수준에서 완전 신뢰 되 고 되돌아갑니다.      -레거시 부분 신뢰 파일의 구성 디렉터리에 있는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 설치 디렉터리는 같은 디렉터리에 있는 새 부분 신뢰 구성 파일 대신 사용 됩니다. 레거시 파일에서 발견 된 멤버 자격 조건이 포함 된 [!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)] 또는 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] 버전의는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다.      -추가 멤버 자격 조건이 권한을 평가 하는 ASP.NET 부분 신뢰 파일에 정의 된 대로 적용 됩니다. 와 함께 제공 되는 CONFIG 디렉터리는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] 릴리스 레거시 부분 신뢰 정책 파일을 포함 합니다. 이러한 파일의 이름은 &quot;레거시&quot; 문자열을 포함 하 고 포함 된 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] 섹션. 이 섹션에는 어셈블리에 대해 CAS 정책을 평가 하는 데 필요한 비어 있지 않은 멤버 자격 조건을 포함 합니다.      -부분 신뢰 및 신뢰 수준 지도 대 한 보안 정책 파일의 기본 부분 신뢰 구성 파일 중 하나에 ASP.NET 응용 프로그램을 실행 하는 경우 asp 합니다. 예를 들어 보안 정책 Web_mediumtrust.config에서 로드 일반적으로, 다음 레거시 모드에서 ASP.NET가 대신 보안 정책을 로드 Legacy.web_mediumtrust.config에서."
  syntax:
    content: public bool LegacyCasModel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>레거시 코드 액세스 보안은 사용할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.TrustSection.LegacyCasModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Level
  id: Level
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "응용 프로그램이 실행 될 보안 수준의 이름을 가져오거나 설정 합니다."
  remarks: "수준 속성에는 응용 프로그램이 됩니다 실행 보안 수준을 지정 합니다. 기본값은 `&quot;Full&quot;`합니다.       다섯 가지 사용할 수 있는 신뢰 수준이:-전체-높은-중간-낮은-최소 명명 된 수준에 정의 된 보안 수준에 해당 하는 `<trustLevel>` 요소에 대 한 `<securityPolicy>`합니다."
  example:
  - "The following code example demonstrates how to use the Level property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#2](~/add/codesnippet/csharp/p-system.web.configurati_147_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_147_1.vb)]"
  syntax:
    content: public string Level { get; set; }
    return:
      type: System.String
      description: "신뢰 수준의 이름입니다. 기본값은 <xref uid=&quot;langword_csharp_&quot;Full&quot;&quot; name=&quot;&quot;Full&quot;&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.TrustSection.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.OriginUrl
  id: OriginUrl
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "응용 프로그램에 대 한 원본 URL을 지정합니다."
  remarks: "OriginUrl 속성의 응용 프로그램에 대 한 원본 URL을 지정합니다. 있는 경우이 사용할 수 있습니다 관련 <xref:System.Net.WebRequest>클래스</xref:System.Net.WebRequest> 기능과 같은 일부 권한 통해 사용 권한을 만드는 데 사용 되는 단일 URL을 지정할 수 있습니다는 <xref:System.Net.WebPermission>인스턴스.</xref:System.Net.WebPermission> 이 사용 권한은 다음 ASP.NET 코드 부분 신뢰에는 해당 URL에 HTTP 호출 (예를 들어 웹 서비스 호출)를 만들 수 있는 권한을 부여 합니다. 값은 올바른 형식의 HTTP URL 이어야 합니다."
  example:
  - "The following code example demonstrates how to use the OriginUrl property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#3](~/add/codesnippet/csharp/p-system.web.configurati_332_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_332_1.vb)]"
  syntax:
    content: public string OriginUrl { get; set; }
    return:
      type: System.String
      description: "잘 구성 된 HTTP URL 또는 빈 문자열 (&quot;&quot;). 기본값은 빈 문자열입니다."
  overload: System.Web.Configuration.TrustSection.OriginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  id: PermissionSetName
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "사용 권한 집합의 이름을 가져오거나 설정 합니다."
  remarks: "PermissionSetName 속성을 사용 하면 부분 신뢰 구성 파일에서 응용 프로그램 도메인을 초기화 하는 동안 사용 되는 명명 된 권한 집합을 정의할 수 있습니다.       기본적으로 PermissionSetName 속성은 &quot;ASP.Net&quot; 응용 프로그램 도메인 초기화 하는 데 사용 되는 권한 집합의 이름입니다.       이 특성은 빈 문자열로 설정할 수 없습니다 또는 `null` 값입니다."
  syntax:
    content: public string PermissionSetName { get; set; }
    return:
      type: System.String
      description: "사용 권한 집합의 이름입니다."
  overload: System.Web.Configuration.TrustSection.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  id: ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "가져오거나 설정 페이지 요청 하는지 여부를 나타내는 값은 ASP.NET 응용 프로그램에 적용 되는 트러스트 정책 파일에 구성 된 사용 권한을 자동으로 제한 됩니다."
  syntax:
    content: public bool ProcessRequestInApplicationTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요청은 자동으로 트러스트 정책 파일에 구성 된 사용 권한을 제한 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Properties
  id: Properties
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "추가할 수 있습니다."
  overload: System.Web.Configuration.TrustSection.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.TrustSection.#ctor
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.TrustSection.Level
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.TrustSection.#ctor*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection
  nameWithType: TrustSection.TrustSection
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
- uid: System.Web.Configuration.TrustSection.LegacyCasModel*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
- uid: System.Web.Configuration.TrustSection.Level*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
