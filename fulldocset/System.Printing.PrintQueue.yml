### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueue
  id: PrintQueue
  children:
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.AddJob
  - System.Printing.PrintQueue.AddJob(System.String)
  - System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AveragePagesPerMinute
  - System.Printing.PrintQueue.ClientPrintSchemaVersion
  - System.Printing.PrintQueue.Comment
  - System.Printing.PrintQueue.Commit
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CurrentJobSettings
  - System.Printing.PrintQueue.DefaultPrintTicket
  - System.Printing.PrintQueue.DefaultPriority
  - System.Printing.PrintQueue.Description
  - System.Printing.PrintQueue.FullName
  - System.Printing.PrintQueue.GetJob(System.Int32)
  - System.Printing.PrintQueue.GetPrintCapabilities
  - System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintJobInfoCollection
  - System.Printing.PrintQueue.HasPaperProblem
  - System.Printing.PrintQueue.HasToner
  - System.Printing.PrintQueue.HostingPrintServer
  - System.Printing.PrintQueue.InPartialTrust
  - System.Printing.PrintQueue.InternalDispose(System.Boolean)
  - System.Printing.PrintQueue.IsBidiEnabled
  - System.Printing.PrintQueue.IsBusy
  - System.Printing.PrintQueue.IsDevQueryEnabled
  - System.Printing.PrintQueue.IsDirect
  - System.Printing.PrintQueue.IsDoorOpened
  - System.Printing.PrintQueue.IsHidden
  - System.Printing.PrintQueue.IsInError
  - System.Printing.PrintQueue.IsInitializing
  - System.Printing.PrintQueue.IsIOActive
  - System.Printing.PrintQueue.IsManualFeedRequired
  - System.Printing.PrintQueue.IsNotAvailable
  - System.Printing.PrintQueue.IsOffline
  - System.Printing.PrintQueue.IsOutOfMemory
  - System.Printing.PrintQueue.IsOutOfPaper
  - System.Printing.PrintQueue.IsOutputBinFull
  - System.Printing.PrintQueue.IsPaperJammed
  - System.Printing.PrintQueue.IsPaused
  - System.Printing.PrintQueue.IsPendingDeletion
  - System.Printing.PrintQueue.IsPowerSaveOn
  - System.Printing.PrintQueue.IsPrinting
  - System.Printing.PrintQueue.IsProcessing
  - System.Printing.PrintQueue.IsPublished
  - System.Printing.PrintQueue.IsQueued
  - System.Printing.PrintQueue.IsRawOnlyEnabled
  - System.Printing.PrintQueue.IsServerUnknown
  - System.Printing.PrintQueue.IsShared
  - System.Printing.PrintQueue.IsTonerLow
  - System.Printing.PrintQueue.IsWaiting
  - System.Printing.PrintQueue.IsWarmingUp
  - System.Printing.PrintQueue.IsXpsDevice
  - System.Printing.PrintQueue.KeepPrintedJobs
  - System.Printing.PrintQueue.Location
  - System.Printing.PrintQueue.MaxPrintSchemaVersion
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  - System.Printing.PrintQueue.Name
  - System.Printing.PrintQueue.NeedUserIntervention
  - System.Printing.PrintQueue.NumberOfJobs
  - System.Printing.PrintQueue.PagePunt
  - System.Printing.PrintQueue.Pause
  - System.Printing.PrintQueue.PrintingIsCancelled
  - System.Printing.PrintQueue.Priority
  - System.Printing.PrintQueue.Purge
  - System.Printing.PrintQueue.QueueAttributes
  - System.Printing.PrintQueue.QueueDriver
  - System.Printing.PrintQueue.QueuePort
  - System.Printing.PrintQueue.QueuePrintProcessor
  - System.Printing.PrintQueue.QueueStatus
  - System.Printing.PrintQueue.Refresh
  - System.Printing.PrintQueue.Resume
  - System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  - System.Printing.PrintQueue.SeparatorFile
  - System.Printing.PrintQueue.ShareName
  - System.Printing.PrintQueue.StartTimeOfDay
  - System.Printing.PrintQueue.UntilTimeOfDay
  - System.Printing.PrintQueue.UserPrintTicket
  langs:
  - csharp
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
  type: Class
  summary: "프린터 및 인쇄 작업을 관리합니다."
  remarks: "PrintQueue 개체의 일부 속성은 컴퓨터에서 실행 되는 인쇄 큐 유틸리티의 특성을 나타내는 나타내지만 다른 기능이 나 프린터 자체의 상태입니다. 예를 들어 <xref:System.Printing.PrintQueue.NumberOfJobs%2A>인쇄 큐의 특징은 있지만 <xref:System.Printing.PrintQueue.Location%2A>프린터의 속성입니다.</xref:System.Printing.PrintQueue.Location%2A> </xref:System.Printing.PrintQueue.NumberOfJobs%2A> 방법으로 전달 해야 하는 사용자 개입이 필요한 지 여부와 같은 프린터의 속성 중 상당수는 <xref:System.Printing.PrintQueue.Refresh%2A>PrintQueue 개체에 프린터 자체에서 메서드를.</xref:System.Printing.PrintQueue.Refresh%2A> 해당 하는 속성 하기 전에이 작업이 필요 합니다 (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) 프로그램에서 읽혀집니다.</xref:System.Printing.PrintQueue.NeedUserIntervention%2A> 마찬가지로, 프로그램 PrintQueue 개체의 하나 이상의 속성 값이 변경 되 면 변경 작성 되어야 합니다는 실제 인쇄 큐 유틸리티에는 컴퓨터에서. 이 작업을 수행는 <xref:System.Printing.PrintQueue.Commit%2A>메서드.</xref:System.Printing.PrintQueue.Commit%2A>      > [!CAUTION] > 내에서 클래스는 <xref:System.Printing>Windows 서비스 또는 ASP.NET 응용 프로그램 또는 서비스 내에서 사용 하기 위해 네임 스페이스를 사용할 수 없습니다.</xref:System.Printing> 이러한 응용 프로그램 종류 중 하나에서 이러한 클래스를 사용 하는 동안 예기치 않은 문제가 발생할 수 있습니다, 그리고 감소와 같은 서비스 성능 및 런타임 예외입니다.       Windows Forms 응용 프로그램에서 인쇄 하는 경우 참조는 <xref:System.Drawing.Printing>네임 스페이스.</xref:System.Drawing.Printing>"
  syntax:
    content: 'public class PrintQueue : System.Printing.PrintSystemObject'
  inheritance:
  - System.Object
  - System.Printing.PrintSystemObject
  implements: []
  inheritedMembers:
  - System.Printing.PrintSystemObject.BaseAttributeNames
  - System.Printing.PrintSystemObject.Dispose
  - System.Printing.PrintSystemObject.Dispose(System.Boolean)
  - System.Printing.PrintSystemObject.Initialize
  - System.Printing.PrintSystemObject.IsDisposed
  - System.Printing.PrintSystemObject.Parent
  - System.Printing.PrintSystemObject.PropertiesCollection
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  id: '#ctor(System.Printing.PrintServer,System.String)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 및 큐 이름입니다."
  remarks: "<xref:System.Printing.PrintQueue>포함 하지 않는 생성자는 <xref:System.Printing.PrintSystemDesiredAccess>매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess>액세스.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>"
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름 및 스키마 버전을 인쇄 합니다."
  remarks: "<xref:System.Printing.PrintQueue>포함 하지 않는 생성자는 <xref:System.Printing.PrintSystemDesiredAccess>매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess>액세스.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 &quot;1&quot;."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: printSchemaVersion
      type: System.Int32
      description: "사용할 인쇄 스키마의 버전입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름 및 배열을 <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> 초기화 하는 값입니다."
  remarks: "<xref:System.Printing.PrintQueue>포함 하지 않는 생성자는 <xref:System.Printing.PrintSystemDesiredAccess>매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess>액세스.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       와 생성자를 사용 하는 `propertyFilter` 매개 변수 성능이 향상 됩니다."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "배열을 <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> 초기화 하는 속성 값을 지정 하는 값입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름 및 원하는 액세스 합니다."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "중 하나는 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> 프로그램에 필요한 인쇄 큐에 대 한 액세스의 유형을 지정 하는 값입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>에 적용할 수 있는 값은 한 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 개체가 아니라는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체입니다. 예를 들어 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름 및 초기화 하려면 속성 이름 배열입니다."
  remarks: "<xref:System.Printing.PrintQueue>포함 하지 않는 생성자는 <xref:System.Printing.PrintSystemDesiredAccess>매개 변수 기본값으로 <xref:System.Printing.PrintSystemDesiredAccess>액세스.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintSystemDesiredAccess></xref:System.Printing.PrintQueue>       와 생성자를 사용 하는 `propertyFilter` 매개 변수 성능이 향상 됩니다."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: propertyFilter
      type: System.String[]
      description: "배열 초기화 하는 속성의 이름입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름, 스키마 버전과 적절된 한 액세스를 인쇄 합니다."
  remarks: "[Schema](http://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 &quot;1&quot;."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: printSchemaVersion
      type: System.Int32
      description: "사용할 인쇄 스키마의 버전입니다."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "중 하나는 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> 프로그램에 필요한 인쇄 큐에 대 한 액세스의 유형을 지정 하는 값입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>에 적용할 수 있는 값은 한 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 개체가 아니라는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체입니다. 예를 들어 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 지정된 된 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름, 배열 <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> 값을, 초기화 및 적절된 한 액세스."
  remarks: "와 생성자를 사용 하는 `propertyFilter` 매개 변수 성능이 향상 됩니다."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "배열을 <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;> </xref> 초기화 하는 속성을 지정 하는 값입니다."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "중 하나는 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> 프로그램에 필요한 인쇄 큐에 대 한 액세스의 유형을 지정 하는 값입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>에 적용할 수 있는 값은 한 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 개체가 아니라는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체입니다. 예를 들어 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Printing.PrintServer&quot;> </xref>, 큐 이름, 속성 필터 및 원하는 액세스 합니다."
  remarks: "와 생성자를 사용 하는 `propertyFilter` 매개 변수 성능이 향상 됩니다."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "인쇄 큐를 호스팅하는 인쇄 서버."
    - id: printQueueName
      type: System.String
      description: "인쇄 큐의 이름입니다."
    - id: propertyFilter
      type: System.String[]
      description: "배열 초기화 하는 속성의 이름입니다."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "중 하나는 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref> 프로그램에 필요한 인쇄 큐에 대 한 액세스의 유형을 지정 하는 값입니다."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code>에 적용할 수 있는 값은 한 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 개체가 아니라는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 개체입니다. 예를 들어 <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob
  id: AddJob
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "콘텐츠가 새 (일반적으로 이름이 지정된 됨) 인쇄 작업을 삽입 한 <xref:System.Byte>큐에 배열.</xref:System.Byte>"
  remarks: "이 메서드를 사용 하 여 스풀 파일을 자동으로 포함 되지 않는에 장치 관련 정보를 쓸 수는 [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] 스풀러 합니다. 스풀 파일 인지 확인 해야 하는 물론, [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] 또는 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]합니다. 사용 하려는 경우는 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]를 사용할 수 있습니다는 <xref:System.Printing.PrintQueueStream>이 메서드 대신 클래스.</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       AddJob 메서드가 호출 된 후 작성 해야 합니다는 <xref:System.Byte>배열을 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>의 속성에서 <xref:System.Printing.PrintSystemJobInfo>AddJob에서 반환 하는 또는 없는 인쇄 작업이 만들어집니다.</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> 이 배열이 프린터가 작동 하 고 일시 중지 되지 않은 경우 인쇄 하는 기능입니다.      > [!CAUTION] > 경우는 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>와 닫혀 있지 않으면 <xref:System.IO.Stream.Close%2A>AddJob 호출 되는 스레드 종료 되기 전에 아니라면 <xref:System.InvalidOperationException>스풀러 스레드 제어할 수 있으므로 해당 스레드가 종료 될 때 throw 되는 <xref:System.IO.Stream>개체입니다.</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       인쇄 큐에서 [!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)], 작업에 이름이 &quot;인쇄 시스템 문서&quot;입니다. 사용 하 여 작업에 다른 이름을 지정 하는 <xref:System.Printing.PrintQueue.AddJob%28System.String%29>오버 로드.</xref:System.Printing.PrintQueue.AddJob%28System.String%29>       다른 방법으로에 인쇄할 수 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>메서드를 사용할 수 있는 대화 상자를 닫고의 다양 한 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> 의</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 메서드와</xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 열려 있지 않아도</xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> 포함"
  example:
  - "The following example shows how to use AddJob to send a <xref:System.Byte> array to a print queue. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addunnamedjob)]\n [!code-cs[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addunnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob ();
    parameters: []
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 인쇄 작업 및 서버 인스턴스의 상태를 나타내는입니다."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String)
  id: AddJob(System.String)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "콘텐츠가 새 인쇄 작업을 삽입 한 <xref:System.Byte>큐에 배열.</xref:System.Byte>"
  remarks: "이 메서드를 사용 하 여 스풀 파일을 자동으로 포함 되지 않는에 장치 관련 정보를 쓸 수는 [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] 스풀러 합니다. 스풀 파일 인지 확인 해야 하는 물론, [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] 또는 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]합니다. 사용 하려는 경우는 <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]를 사용할 수 있습니다는 <xref:System.Printing.PrintQueueStream>이 메서드 대신 클래스.</xref:System.Printing.PrintQueueStream> </xref:System.IO.Stream>       후의 <xref:System.Printing.PrintQueue.AddJob%2A>작성 해야 메서드를 호출는 <xref:System.Byte>배열을 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>속성은 <xref:System.Printing.PrintSystemJobInfo>AddJob에서 반환 하는 또는 없는 인쇄 작업이 만들어집니다.</xref:System.Printing.PrintSystemJobInfo> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Byte> </xref:System.Printing.PrintQueue.AddJob%2A> 이 배열이 프린터가 작동 하 고 일시 중지 되지 않은 경우 인쇄 하는 기능입니다.      > [!CAUTION] > 경우는 <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>와 닫혀 있지 않으면 <xref:System.IO.Stream.Close%2A>스레드가 종료 되기 전에 <xref:System.Printing.PrintQueue.AddJob%2A>호출 됩니다는 <xref:System.InvalidOperationException>스풀러 스레드 제어할 수 있으므로 해당 스레드가 종료 될 때 throw 되는 <xref:System.IO.Stream>개체입니다.</xref:System.IO.Stream> </xref:System.InvalidOperationException> </xref:System.Printing.PrintQueue.AddJob%2A> </xref:System.IO.Stream.Close%2A> </xref:System.Printing.PrintSystemJobInfo.JobStream%2A>       다른 방법으로에 인쇄할 수 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>메서드를 사용할 수 있는 대화 상자를 닫고의 다양 한 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> 의</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 메서드와</xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 열려 있지 않아도</xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> 포함"
  example:
  - "The following example shows how to use AddJob to read a file into a <xref:System.Byte> array and send the array to a print queue. This code assumes that there is a file called test.txt in the root of the C: drive. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addnamedjob)]\n [!code-cs[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName);
    parameters:
    - id: jobName
      type: System.String
      description: "인쇄 작업의 이름입니다."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 인쇄 작업 및 서버 인스턴스의 상태를 나타내는입니다."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  id: AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "에 대 한 새 인쇄 작업을 삽입 한 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] 의 큐로 문서 하 고 지정한 이름 및 설정을 제공 합니다."
  remarks: "자세한 내용은 <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%29> 을 참조 하십시오."
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "경로 인쇄 중인 문서의 이름입니다."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "인쇄 작업의 설정입니다."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 인쇄 작업 및 서버 인스턴스의 상태를 나타내는입니다."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  id: AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "에 대 한 새 인쇄 작업을 삽입 한 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] 문서를 queue가 지정된 된 이름, 보고서 파트와 여부 검사 하도록 지정 합니다."
  remarks: "경우 `fastCopy` 은 `true`, 프린터 이어야 합니다는 [인쇄 개요](~/add/includes/ajax-current-ext-md.md)합니다. 그럴 경우 AddJob 메서드 예외를 throw 합니다.       경우 `fastCopy` 은 `false`, 다음 XPSDrv 프린터를 사용할 필요는 없습니다. [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] 파일 큐에 추가 되 고 프린터의 페이지 설명 언어 PCL 또는 포스트 스크립트 등으로 변환 됩니다. 그러나 이런이 종류의 인쇄에 대 한 호출을 사용 하면 [!INCLUDE[TLA#tla_com](~/add/includes/ajax-current-ext-md.md)]합니다. 에 대 한 호출 [!INCLUDE[TLA2#tla_com](~/add/includes/tla2sharptla-com-md.md)] 호출 스레드가 단일 스레드 아파트 있어야 (<xref:System.Threading.ApartmentState>) 대신 다중 스레드 아파트 (<xref:System.Threading.ApartmentState>)의 기본값 [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] 2.0 이상.</xref:System.Threading.ApartmentState> </xref:System.Threading.ApartmentState> (참조에 대 한 자세한 스레드 및 아파트 상태를 [관리 / 관리 되지 않는 스레딩](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), 및 <xref:System.Threading.ApartmentState>.)</xref:System.Threading.ApartmentState> 이 작업을 수행 하는 방법은 두 가지가:-는 가장 간단한 방법은 추가 하는 것은 <xref:System.STAThreadAttribute>(즉, &quot;`[System.STAThreadAttribute()]`&quot;) 응용 프로그램의 첫 번째 줄 바로 위에 `Main` 메서드 (일반적으로 &quot;`static void Main(string[] args)`&quot;).</xref:System.STAThreadAttribute>      -필요한 경우 프로그램 `Main` <xref:System.Threading.ApartmentState> <xref:System.Threading.ApartmentState> <xref:System.Threading.Thread.SetApartmentState%2A>.</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.Threading.ApartmentState> 를 아파트 상태가 설정 된 별도 스레드에서 AddJob에 대 한 호출을 유지할 수 있습니다</xref:System.Threading.ApartmentState> , 스레드의 아파트 상태 다음 예제에서는이 두 번째 방법을 보여 줍니다.      > [!NOTE] > 적용할 수 없습니다는 <xref:System.STAThreadAttribute>제외 하 고 모든 메서드에 `Main` 을 사용할 수 없는 <xref:System.Threading.Thread.SetApartmentState%2A>에 대 한는 `Main` 스레드.</xref:System.Threading.Thread.SetApartmentState%2A> </xref:System.STAThreadAttribute>       다른 방법으로에 인쇄할 수 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName>메서드를 사용할 수 있는 대화 상자를 닫고의 다양 한 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> <xref:System.Windows.Xps.XpsDocumentWriter>.</xref:System.Windows.Xps.XpsDocumentWriter> 의</xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 메서드와</xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 열려 있지 않아도</xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> 포함"
  example:
  - "The following example shows how to use AddJob to batch print all the [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] files in a directory.  \n  \n [!code-cs[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/csharp/BatchPrintXPSFiles/Program.cs#batchprintxpsfiles)]\n [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/visualbasic/batchprintxpsfiles/program.vb#batchprintxpsfiles)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);
    parameters:
    - id: jobName
      type: System.String
      description: "인쇄 작업의 이름입니다."
    - id: documentPath
      type: System.String
      description: "경로 인쇄 중인 문서의 이름입니다."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>피드백 페이지-진행률 및 파일이 유효한 지 유효성 검사 없이 신속 하 게 스풀링하기 [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 인쇄 작업 및 서버 인스턴스의 상태를 나타내는입니다."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  id: AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "에 대 한 새 인쇄 작업을 삽입 한 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] 문서를 queue가 지정한 이름 및 설정, 보고서 파트와 여부 검사 하도록 지정 합니다."
  remarks: "자세한 내용은 <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> 을 참조 하십시오."
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "경로 인쇄 중인 문서의 이름입니다."
    - id: documentPath
      type: System.String
      description: "경로 인쇄 중인 문서의 이름입니다."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>피드백 페이지-진행률 및 파일이 유효한 지 유효성 검사 없이 신속 하 게 스풀링하기 [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "인쇄 작업의 설정입니다."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 인쇄 작업 및 서버 인스턴스의 상태를 나타내는입니다."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  id: AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "분당 페이지 단위로 지정 하는 프린터의 속도를 가져옵니다."
  syntax:
    content: public virtual int AveragePagesPerMinute { get; }
    return:
      type: System.Int32
      description: "프린터의 분당 평균 페이지 인쇄 합니다."
  overload: System.Printing.PrintQueue.AveragePagesPerMinute*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  id: ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "버전을 가져옵니다는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397)합니다."
  remarks: "[Schema](http://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된 버전은 1입니다."
  syntax:
    content: public int ClientPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "버전의는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 사용에서 합니다."
  overload: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Comment
  id: Comment
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터에 대 한 설명을 가져오거나 설정 합니다."
  remarks: "주석으로 처리는 Windows 일반 인쇄 대화 상자와 창 프린터 목록에서 사용자에 게 표시 됩니다. 프린터의 이름, 모델 또는; 위치에도 볼 수 있는 위치 속성에 포함 되지 않은 정보를 제공할 수 있습니다. 예를 들어, &quot;Reserved 급여 부서 오후 3 시와 오후 4 시 사이 대 한 합니다.&quot; (의 <xref:System.Printing.PrintQueue.Description%2A>속성을 사용 하면 응용 프로그램에서 표시 하지 않는 한 사용자가 볼 수 있는 정보를 저장 합니다.)</xref:System.Printing.PrintQueue.Description%2A>"
  syntax:
    content: public virtual string Comment { get; set; }
    return:
      type: System.String
      description: "프린터에 대 한 설명입니다."
  overload: System.Printing.PrintQueue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Commit
  id: Commit
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "현재 속성을 씁니다는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 실제 인쇄 큐 인쇄 서버에는 개체입니다."
  remarks: "프로그램의 속성에 수행 하는 변경 내용을 <xref:System.Printing.PrintQueue>개체 실제로 적용 하려면 Commit 메서드가 실행 될 때까지.</xref:System.Printing.PrintQueue>       메서드를 사용 하려면는 <xref:System.Printing.PrintQueue>개체를 사용 하 여 만들어야 <xref:System.Printing.PrintSystemDesiredAccess>권한.</xref:System.Printing.PrintSystemDesiredAccess> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Printing.PrintQueue.Commit*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "속성 중 일부를 커밋할 수 없으며 합니다."
  - type: System.Printing.PrintCommitAttributesException
    commentId: T:System.Printing.PrintCommitAttributesException
    description: "Some of the properties could not be committed.  \n  \n \\- or -  \n  \n The <xref href=\"System.Printing.PrintQueue\"></xref> object was not created with sufficient rights."
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 개체는 Windows 일반 인쇄 대화 상자 열고 반환는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서) 표현 가능 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수입니다."
  remarks: "대부분의 프린터 그립 용지를 각 페이지 가장자리 주위 토너가 공간의 인치 분기 및 프린터를 통해 이동 필요 합니다. 그렇지 않으면 토너 용지 흐름 메커니즘을 생일 것입니다. 인쇄할 수 있는 영역이 &quot;영역의.&quot;       형식 <xref:System.Printing.PrintDocumentImageableArea>public 생성자가 없습니다.</xref:System.Printing.PrintDocumentImageableArea> 따라서 변수 `documentImageableArea` 선언 이어야 하며에 할당 된 `null` 메서드에 전달 된 후에 합니다. 이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog>사용자의 입력을 요구 합니다.</xref:System.Windows.Controls.PrintDialog> 사용자가 프린터, 용지 크기 및 방향을 선택 하 고 대화 상자를 닫은 후 `documentImageableArea` 포인트 실제 개체 및 해당 속성에 초기화 됩니다.       반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다. 반환 값을에 대 한 검사 해야 하는 결과적으로 `null` 응용 프로그램에 있습니다."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "장치 인쇄할 수 있는 페이지의 영역 크기를 포함 하는 개체에 대 한 참조입니다. 데이터 형식에 public 생성자가 없습니다가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 데이터를 스트림에 쓰는 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. (매개 변수 <code> documentImageableArea </code> 는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서] 매개 변수는 초기화 메서드에서 초를 나타내는 반환 된 항목입니다.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  id: CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 개체 및 지정 된 인쇄 큐와 연결 합니다."
  remarks: ''
  example:
  - "The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.  \n  \n [!code-cs[XpsPrint#PrintQueueSnip](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#printqueuesnip)]\n [!code-vb[XpsPrint#PrintQueueSnip](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#printqueuesnip)]"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "XPS 문서를 인쇄 하려면 인쇄 큐입니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 스트림에 쓰는 합니다."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  id: CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 지정 된 차원 개체입니다."
  remarks: "이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog>사용자의 입력을 요구 합니다.</xref:System.Windows.Controls.PrintDialog> 반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다. 반환 값을에 대 한 검사 해야 하는 결과적으로 `null` 응용 프로그램에 있습니다."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);
    parameters:
    - id: width
      type: System.Double
      description: "XPS 문서의 너비입니다."
    - id: height
      type: System.Double
      description: "XPS 문서의 높이입니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 스트림에 쓰는 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 개체에서 Windows 일반 인쇄 대화 상자를 엽니다 (마우스 작업 설명이 제공)를 반환 하 고는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual Basic의) 표현 가능 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수입니다."
  remarks: "대부분의 프린터 그립 용지를 각 페이지 가장자리 주위 토너가 공간의 인치 분기 및 프린터를 통해 이동 필요 합니다. 그렇지 않으면 토너 용지 흐름 메커니즘을 생일 것입니다. 인쇄할 수 있는 영역이 &quot;영역의.&quot;       형식 <xref:System.Printing.PrintDocumentImageableArea>public 생성자가 없습니다.</xref:System.Printing.PrintDocumentImageableArea> 따라서 변수 `documentImageableArea` 선언 이어야 하며에 할당 된 `null` 메서드에 전달 된 후에 합니다. 이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog>사용자의 입력을 요구 합니다.</xref:System.Windows.Controls.PrintDialog> 사용자가 프린터, 용지 크기 및 방향을 선택 하 고 대화 상자를 닫은 후 `documentImageableArea` 포인트는 실제 개체 및 해당 속성에 초기화 됩니다.       반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다. 반환 값을에 대 한 검사 해야 하는 결과적으로 `null` 응용 프로그램에 있습니다."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: jobDescription
      type: System.String
      description: "인쇄 작업에 대 한 이름입니다. Windows 인쇄 사용자 인터페이스에 나타납니다."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "장치 인쇄할 수 있는 페이지의 영역 크기를 포함 하는 개체에 대 한 참조입니다. 데이터 형식에 public 생성자가 없습니다가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 데이터를 스트림에 쓰는 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. (매개 변수 <code> documentImageableArea </code> 는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서] 매개 변수는 초기화 메서드에서 초를 나타내는 반환 된 항목입니다.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 개체는 Windows 일반 인쇄 대화 상자, 페이지 범위와 인쇄 작업에 대 한 설명을 포함 하는 대화 상자 제공을 열고 반환는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서) 표현 가능 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수입니다."
  remarks: "대부분의 프린터 그립 용지를 각 페이지 가장자리 주위 토너가 공간의 인치 분기 및 프린터를 통해 이동 필요 합니다. 그렇지 않으면 토너 용지 흐름 메커니즘을 생일 것입니다. 인쇄할 수 있는 영역이 &quot;영역의.&quot;       형식 <xref:System.Printing.PrintDocumentImageableArea>public 생성자가 없습니다.</xref:System.Printing.PrintDocumentImageableArea> 따라서 변수 `documentImageableArea` 선언 이어야 하며에 할당 된 `null` 메서드에 전달 된 후에 합니다. 이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog>사용자의 입력을 요구 합니다.</xref:System.Windows.Controls.PrintDialog> 사용자 등 프린터, 용지 크기, 방향 및 페이지 범위를 선택 하 여 대화 상자에서 그의 인쇄 작업을 구성 합니다. 대화 상자를 닫을 때 `pageRangeSelection` 및 `pageRange` 값을 갖고 및 `documentImageableArea` 속성이 초기화 되는 실제 개체를 가리킵니다.       반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다. 반환 값을에 대 한 검사 해야 하는 결과적으로 `null` 응용 프로그램에 있습니다."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "장치 인쇄할 수 있는 페이지의 영역 크기를 포함 하는 개체에 대 한 참조입니다. 데이터 형식에 public 생성자가 없습니다가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "모든 페이지 또는 사용자가 지정 된 범위만 인쇄할지 여부를 지정 하는 값입니다."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "인쇄 되는 페이지 범위입니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 데이터를 스트림에 쓰는 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. (매개 변수 <code> documentImageableArea </code>, <code> pageRangeSelection </code>, 및 <code> pageRange </code> 는 모두 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서] 사용자가 초기화 되 고 각각 나타내는 추가 반환 항목 대화 상자를 닫을 때 반환 되는 매개 변수.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "만듭니다는 <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> 개체는 Windows 일반 인쇄 대화 상자, 페이지 범위는 대화 상자를 제공을 열고 반환는 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서) 표현 가능 영역 및 미디어의 크기에 대 한 정보를 나타내는 매개 변수입니다."
  remarks: "대부분의 프린터 그립 용지를 각 페이지 가장자리 주위 토너가 공간의 인치 분기 및 프린터를 통해 이동 필요 합니다. 그렇지 않으면 토너 용지 흐름 메커니즘을 생일 것입니다. 인쇄할 수 있는 영역이 &quot;영역의.&quot;       형식 <xref:System.Printing.PrintDocumentImageableArea>public 생성자가 없습니다.</xref:System.Printing.PrintDocumentImageableArea> 따라서 변수 `documentImageableArea` 선언 이어야 하며에 할당 된 `null` 메서드에 전달 된 후에 합니다. 이 메서드를 표시 한 <xref:System.Windows.Controls.PrintDialog>사용자의 입력을 요구 합니다.</xref:System.Windows.Controls.PrintDialog> 사용자 등 프린터, 용지 크기, 방향 및 페이지 범위를 선택 하 여 대화 상자에서 그의 인쇄 작업을 구성 합니다. 대화 상자를 닫을 때 `pageRangeSelection` 및 `pageRange` 값을 갖고 및 `documentImageableArea` 속성이 초기화 되는 실제 개체를 가리킵니다.       반환 값은 사용자를 취소 하거나 대화 상자를 닫습니다, `null`합니다. 반환 값을에 대 한 검사 해야 하는 결과적으로 `null` 응용 프로그램에 있습니다."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: jobDescription
      type: System.String
      description: "인쇄 작업에 대 한 이름입니다. Windows 인쇄 사용자 인터페이스에 나타납니다."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "장치 인쇄할 수 있는 페이지의 영역 크기를 포함 하는 개체에 대 한 참조입니다. 데이터 형식에 public 생성자가 없습니다가 있으므로이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "모든 페이지 또는 사용자가 지정 된 범위만 인쇄할지 여부를 지정 하는 값입니다."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "인쇄 되는 페이지 범위입니다."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "<xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;> </xref> XPS 데이터를 스트림에 쓰는 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. (매개 변수 <code> documentImageableArea </code>, <code> pageRangeSelection </code>, 및 <code> pageRange </code> 는 모두 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual basic에서] 사용자가 초기화 되 고 각각 나타내는 추가 반환 항목 대화 상자를 닫을 때 반환 되는 매개 변수.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CurrentJobSettings
  id: CurrentJobSettings
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "현재 인쇄 작업에 대 한 구성 설정을 포함 하는 개체를 가져옵니다."
  syntax:
    content: public System.Printing.PrintJobSettings CurrentJobSettings { get; }
    return:
      type: System.Printing.PrintJobSettings
      description: "A <xref href=&quot;System.Printing.PrintJobSettings&quot;> </xref> 현재 인쇄 작업의 설정을 보유 하는 값입니다. 이러한 설정에는 작업과 작업에 대 한 참조에 대 한 설명을 포함 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.CurrentJobSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  id: DefaultPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "이 연결 된 기본 프린터 옵션을 가져오거나 설정 합니다. <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>합니다."
  remarks: "기본 <xref:System.Printing.PrintTicket>같은 인쇄 작업 옵션을 지정 <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, 등에.</xref:System.Printing.PrintTicket.Stapling%2A> </xref:System.Printing.PrintTicket.Duplexing%2A> </xref:System.Printing.PrintTicket.PageOrientation%2A> </xref:System.Printing.PrintTicket.CopyCount%2A> </xref:System.Printing.PrintTicket>       각 <xref:System.Printing.PrintQueue>자체 DefaultPrintTicket 유지 관리 합니다.</xref:System.Printing.PrintQueue>       정상 작동은 DefaultPrintTicket 속성에 <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> 를 반환합니다.  경우는 <xref:System.Printing.PrintQueue>DefaultPrintTicket 반환 반환 된 잘못 된 상태를 감지 `null`.</xref:System.Printing.PrintQueue>  DefaultPrintTicket 반환 하는 경우 `null`, 응용 프로그램이이 인쇄 큐에서 오류가 발생 한 알림 대화 상자가 표시 되 고 인쇄 작업의 출력을 다른 인쇄 큐로 보낸 다시 시작 해야 합니다.       가져오거나 설정할 DefaultPrintTicket 속성 <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> 유효성이 확인 되지 않습니다.  <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>유효성을 검사할 <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> 메서드를 사용할 수</xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>"
  example:
  - "The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "기본 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 인쇄 큐에 대 한 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 인쇄 대기열에 오류가 발생 했습니다."
  overload: System.Printing.PrintQueue.DefaultPrintTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPriority
  id: DefaultPriority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "각 새 인쇄 작업이 큐에 추가으로 지정 된 기본 우선 순위를 가져오거나 설정 합니다."
  remarks: "인쇄 큐에 입력 되 면 사용자가 인쇄 작업의 우선 순위를 변경할 수 있습니다."
  syntax:
    content: public virtual int DefaultPriority { get; set; }
    return:
      type: System.Int32
      description: "큐에 추가 하는 인쇄 작업에 대 한 기본 우선 순위입니다. 1에서 99 사이의 범위를 사용할 수 있는 값입니다. 기본값은 1입니다."
  overload: System.Printing.PrintQueue.DefaultPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Description
  id: Description
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐에 대 한 설명을 가져옵니다."
  remarks: "큐를 만들면 기본 설명이 생성 큐 이름, 모델 및 위치를 쉼표로 구분 하 여 구성 된 세 부분 문자열입니다. Description 속성와 대조는 <xref:System.Printing.PrintQueue.Comment%2A>일반 인쇄 대화 상자와 프린터 및 팩스 목록을 사용자에 게 표시 되는.</xref:System.Printing.PrintQueue.Comment%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "인쇄 큐에 대 한 설명"
  overload: System.Printing.PrintQueue.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.FullName
  id: FullName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐의 전체 이름을 가져옵니다."
  remarks: "이 속성의이 값은 동일 로컬 인쇄 서버의 인쇄 대기열에 <xref:System.Printing.PrintQueue.Name%2A>, 그렇지 않으면 전체 UNC (Universal Naming Convention) 이름이 포함 됩니다.</xref:System.Printing.PrintQueue.Name%2A>       <xref:System.Printing.PrintQueue>개체에 쓰기 가능한 <xref:System.Printing.PrintQueue.Name%2A>및 <xref:System.Printing.PrintQueue.ShareName%2A>속성.</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "인쇄 큐의 전체 이름입니다."
  overload: System.Printing.PrintQueue.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  id: GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "지정 된 ID 번호를 가진 인쇄 작업을 가져옵니다."
  remarks: "사용할 수도 있습니다는 <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>메서드 같은 목적을 위해.</xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use this method when diagnosing a problem with a print job.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo GetJob (int jobId);
    parameters:
    - id: jobId
      type: System.Int32
      description: "큐에서 작업의 수입니다."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 작업 및 서버 인스턴스의 상태의 속성을 지정 하는 합니다."
  overload: System.Printing.PrintQueue.GetJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  id: GetPrintCapabilities
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "가져옵니다는 <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 는 프린터의 기능을 식별 하는 개체입니다."
  remarks: ''
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities ();
    parameters: []
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 프린터가 수 있고 양면 복사 또는 자동 스테이플 등을 지정 하는 개체입니다."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 개체를 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  id: GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "가져옵니다는 <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 는 프린터의 기능을 식별 하는 개체입니다."
  remarks: "<xref:System.Printing.PrintTicket>매개 변수는 생성 하는 기준으로 사용 되는 <xref:System.Printing.PrintCapabilities>개체입니다.</xref:System.Printing.PrintCapabilities> </xref:System.Printing.PrintTicket> 예를 들어 프린터 미디어 형식 A와 b 입력된 함 1에서에서만 입력된 함 2에서에서 미디어 유형을 C를 지원 합니다. 경우는 `printTicket` 매개 변수 입력된 함 1, 다음은 <xref:System.Printing.PrintCapabilities>개체를 반환 하는 3 개의 미디어 형식을 모두를 포함 하지만 형식 C &quot;제한 합니다.&quot;를로 보고할 수</xref:System.Printing.PrintCapabilities> 를 지정 합니다. 경우는 `printTicket` 매개 변수 입력된 함 2, 다음은 <xref:System.Printing.PrintCapabilities>개체를 반환 하는 3 개의 미디어 형식을 모두를 포함 하지만 유형 A와 B &quot;제한&quot;으로 보고할 수</xref:System.Printing.PrintCapabilities> 를 지정 합니다. 참조는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 제약 조건에 대 한 자세한 내용은 합니다.       경우 `printTicket` 은 `null`, <xref:System.Printing.PrintQueue.UserPrintTicket%2A>사용 됩니다.</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "인쇄 기능 보고의 기반을 제공 하는 인쇄 티켓입니다."
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 프린터가 수 있고 양면 복사 또는 자동 스테이플 등을 지정 하는 개체입니다."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<xref href=&quot;System.Printing.PrintCapabilities&quot;> </xref> 개체를 검색할 수 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>형식이 잘못 되었습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  id: GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "가져옵니다는 <xref:System.IO.MemoryStream>스트림의 XML 형식으로 프린터의 기능을 지정 하는 개체가 준수는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397).</xref:System.IO.MemoryStream>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();
    parameters: []
    return:
      type: System.IO.MemoryStream
      description: "A <xref:System.IO.MemoryStream>&quot;PrintCapabilities를&quot;의 일부 XML 스키마를 사용 하 여 프린터의 기능을 지정 하는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 시스템.</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "인쇄 기능을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  id: GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "가져옵니다는 <xref:System.IO.MemoryStream>프린터의 기능 xml에서 형식으로 지정 하는 개체가 준수는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397).</xref:System.IO.MemoryStream>"
  remarks: "<xref:System.Printing.PrintTicket>매개 변수는 인쇄 기능 XML을 생성 하는 기준으로 사용 됩니다.</xref:System.Printing.PrintTicket> 예를 들어 프린터 미디어 형식 A와 b 입력된 함 1에서에서만 입력된 함 2에서에서 미디어 유형을 C를 지원 합니다. 경우는 `printTicket` 매개 변수가 입력된 함 1을 지정 하면 인쇄 기능 반환 되는 XML 모두 3 개의 미디어 형식을 포함 그러나 형식 C &quot;제한&quot;으로 보고 됩니다 경우는 `printTicket` 입력된 함 2, 매개 변수를 지정 하면 인쇄 기능 반환 되는 XML 모두 3 개의 미디어 형식을 포함 그러나 유형 A와 B &quot;제한&quot;을 보고 합니다 참조는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 제약 조건에 대 한 자세한 내용은 합니다.       경우 `printTicket` 은 `null`, <xref:System.Printing.PrintQueue.UserPrintTicket%2A>사용 됩니다.</xref:System.Printing.PrintQueue.UserPrintTicket%2A>"
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "인쇄 기능 보고의 기반을 제공 하는 인쇄 티켓입니다."
    return:
      type: System.IO.MemoryStream
      description: "A <xref:System.IO.MemoryStream>&quot;PrintCapabilities를&quot;의 일부 XML 스키마를 사용 하 여 프린터의 기능을 지정 하는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 시스템.</xref:System.IO.MemoryStream>"
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "인쇄 기능을 검색할 수 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code>형식이 잘못 되었습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  id: GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "포함 된 컬렉션을 만듭니다는 <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 큐에 있는 각 작업에 대 한 개체입니다."
  remarks: ''
  example:
  - "The following example shows how to use this method when performing the same action on every job in a queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();
    parameters: []
    return:
      type: System.Printing.PrintJobInfoCollection
      description: "반환 된 <xref href=&quot;System.Printing.PrintJobInfoCollection&quot;> </xref> 의 <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;> </xref> 개체입니다. 큐에 있는 각 작업에 대해 하나씩 있습니다."
  overload: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasPaperProblem
  id: HasPaperProblem
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터가 지정 되지 않은 용지 문제 있는 경우를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.       <xref:System.Printing.PrintQueue>개체에는 <xref:System.Printing.PrintQueue.IsPaperJammed%2A>및 <xref:System.Printing.PrintQueue.IsOutOfPaper%2A>속성.</xref:System.Printing.PrintQueue.IsOutOfPaper%2A> </xref:System.Printing.PrintQueue.IsPaperJammed%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasPaperProblem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 되지 않은 용지 문제가; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.HasPaperProblem*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasToner
  id: HasToner
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 토너에 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "일부 프린터 제조업체를 나타내는 토너 부족이 신호를 사용할 수 있습니다. 다른 사용자 임을 나타내기 위해 토너 카트리지 있고 올바르게 삽입 사용 하는 동안 사용할 수 있습니다 <xref:System.Printing.PrintQueue.IsTonerLow%2A>토너 부족이 나타내기 위해.</xref:System.Printing.PrintQueue.IsTonerLow%2A>       프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasToner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 프린터 토너;에 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.HasToner*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HostingPrintServer
  id: HostingPrintServer
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "보호 된 인쇄 큐를 제어 하는 인쇄 서버를 설정 하거나 가져옵니다."
  remarks: "이 속성에서 파생 된 클래스에 의해서만 <xref:System.Printing.PrintQueue>속성의 setter 이므로 `protected`.</xref:System.Printing.PrintQueue>"
  syntax:
    content: public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }
    return:
      type: System.Printing.PrintServer
      description: "이름 및 기타 속성을는 <xref href=&quot;System.Printing.PrintServer&quot;> </xref> 인쇄 큐를 호스팅하는 합니다."
  overload: System.Printing.PrintQueue.HostingPrintServer*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InPartialTrust
  id: InPartialTrust
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐가 더 높은 수준의 신뢰를 부분적으로 신뢰할 수 있는 모드로 작동 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "InPartialTrust 속성이 `true`, 프로그램을 만들 수 없습니다는 <xref:System.Printing.PrintQueue>는 사용자가 프린터에 대 한 전체 인쇄 권한이 없는 경우이 프린터를 나타내는 개체입니다.</xref:System.Printing.PrintQueue>"
  syntax:
    content: public bool InPartialTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>큐가 부분적으로 신뢰할 수 있는 모드로 작동 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.InPartialTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  id: InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  syntax:
    content: protected override sealed void InternalDispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Printing.PrintQueue.InternalDispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBidiEnabled
  id: IsBidiEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터와의 양방향 통신의 사용 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsBidiEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터와의 양방향 통신을 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsBidiEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBusy
  id: IsBusy
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 장치 사용 중인지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용 중인 반드시 인쇄 작업을 처리 하는 것입니다. 장치가 조합 프린터/팩스/복사기 이면 다음 인스턴스가 될 수 있습니다 수 팩스 있거나 복사 합니다. 비교는 <xref:System.Printing.PrintQueue.IsProcessing%2A>속성.</xref:System.Printing.PrintQueue.IsProcessing%2A>       장치는이 의미의 신호를 지원 하지 않습니다 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsBusy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>장치가 있는 경우 사용 중입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsBusy*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  id: IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "문서와 프린터 구성이 일치 하지 않을 때 큐 문서를 포함 하는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsDevQueryEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>큐 일치 하지 않는 구성이; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsDevQueryEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDirect
  id: IsDirect
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 또는 스풀 문서에 직접 큐 인쇄할지 여부를 나타내는 값을 첫 번째 가져오고 후 인쇄 합니다."
  remarks: "Windows 공통 인쇄 대화 상자를 사용할 때만이 속성을 설정할 수 있습니다."
  syntax:
    content: public bool IsDirect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>큐에서 프린터로 직접 인쇄 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsDirect*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDoorOpened
  id: IsDoorOpened
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "문을 프린터에서 열려 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsDoorOpened { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>문을 열릴 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsDoorOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsHidden
  id: IsHidden
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐 응용 프로그램의 사용자 인터페이스에서 숨겨지는지 여부를 나타내는 값을 가져옵니다."
  remarks: "하지 자동으로 숨길 수 인쇄 대기열이이 속성을 설정 하면 `true`합니다. 프로그램은 프로그램 인터페이스에서 큐의 모든 목록에 나타나지 않도록 작업을 수행 해야 합니다.       Windows 사용자 인터페이스 예: 프린터 및 팩스 목록에서에서 인쇄 큐를 숨길 수 없습니다."
  syntax:
    content: public bool IsHidden { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인쇄 큐는 Windows 사용자 인터페이스에서 숨겨지면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsHidden*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInError
  id: IsInError
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 또는 장치에 오류 조건이 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsInError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>장치가 있는 경우에 오류 조건이; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInitializing
  id: IsInitializing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 자체 초기화 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsInitializing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터가; 초기화 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsInitializing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsIOActive
  id: IsIOActive
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 데이터 또는 신호를 보내는 수신 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsIOActive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터를 보내거나 받는지; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsIOActive*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  id: IsManualFeedRequired
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 현재 인쇄 작업에 대 한 용지 공급 수동으로 해야 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsManualFeedRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수동으로 수 있도록 프린터 있어야 용지를 공급 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsManualFeedRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsNotAvailable
  id: IsNotAvailable
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsNotAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터가 사용할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsNotAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOffline
  id: IsOffline
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 오프 라인 상태 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOffline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 오프 라인 상태인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsOffline*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfMemory
  id: IsOutOfMemory
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "메모리 부족 프린터가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfMemory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메모리 부족 한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsOutOfMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfPaper
  id: IsOutOfPaper
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 현재 작업에 필요한 크기의 문서에 다시 로드 해야 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfPaper { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 다시 로드 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsOutOfPaper*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutputBinFull
  id: IsOutputBinFull
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터의 출력 영역 오버플로가 발생할 위험이 인지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutputBinFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터의 출력 영역 꽉 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsOutputBinFull*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaperJammed
  id: IsPaperJammed
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "현재 용지의 프린터 눌려져 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaperJammed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 백서; 걸려 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPaperJammed*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaused
  id: IsPaused
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐 일시 중지 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인쇄 큐 일시 중지 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPendingDeletion
  id: IsPendingDeletion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터에서 인쇄 작업 삭제 중인지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsPendingDeletion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 작업을 삭제 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPendingDeletion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  id: IsPowerSaveOn
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 절전 모드에에서 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsPowerSaveOn { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터가 절전 모드; 저장 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPowerSaveOn*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPrinting
  id: IsPrinting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "작업을 인쇄 하 고 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsPrinting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 인쇄 하 고 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPrinting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsProcessing
  id: IsProcessing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 인쇄 작업을 처리 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "일부 프린터 제조업체 덜 구체적인 <xref:System.Printing.PrintQueue.IsBusy%2A>.</xref:System.Printing.PrintQueue.IsBusy%2A> 대신이 신호를 지원합니다.       프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsProcessing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 인쇄 작업을 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPublished
  id: IsPublished
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 다른 네트워크 사용자에 게 표시 되는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsPublished { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터가; 다른 네트워크 사용자에 게 표시 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsPublished*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsQueued
  id: IsQueued
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 지원 하는지 인쇄 작업을 여러 개 포함 된 대기열에 한 번에 표시 하는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsQueued { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터 큐에서 여러 인쇄 작업을 지원할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsQueued*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  id: IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐 인쇄 스풀러 Windows 응용 프로그램에서 더 빠른 데이터 흐름 EMF (확장 메타 파일)를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsRawOnlyEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터 EMF 인쇄; 사용할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsRawOnlyEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsServerUnknown
  id: IsServerUnknown
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터가 오류 상태에 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsServerUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터에는 오류 상태 인지; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsServerUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsShared
  id: IsShared
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터가 네트워크에서 다른 컴퓨터에서 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성은 Windows 일반 인쇄 대화 상자와만 설정할 수 있습니다."
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 공유 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsTonerLow
  id: IsTonerLow
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "토너 부족 프린터가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다.       <xref:System.Printing.PrintQueue>개체에는 <xref:System.Printing.PrintQueue.HasToner%2A>속성.</xref:System.Printing.PrintQueue.HasToner%2A> </xref:System.Printing.PrintQueue>"
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsTonerLow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 토너 부족 한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsTonerLow*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWaiting
  id: IsWaiting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "추가할 작업에 대 한 큐 대기 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsWaiting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업에 대 한 큐 대기 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsWaiting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWarmingUp
  id: IsWarmingUp
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터를 준비 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsWarmingUp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터;를 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsWarmingUp*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsXpsDevice
  id: IsXpsDevice
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터의 드라이버는 기반 하는지 여부를 나타내는 값을 가져옵니다는 [인쇄 개요](~/add/includes/ajax-current-ext-md.md) 하므로 사용 [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] 해당 페이지 설명 언어입니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool IsXpsDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터를 사용 하는 경우는 [인쇄 개요](../Topic/Printing%20Overview.md), 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.IsXpsDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  id: KeepPrintedJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐가 인쇄 한 후 삭제 하는 대신 프린터 언어 파일을 저장 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool KeepPrintedJobs { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>큐에서 프린터 언어 파일에 저장 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.KeepPrintedJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Location
  id: Location
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터의 실제 위치를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public virtual string Location { get; set; }
    return:
      type: System.String
      description: "프린터의 실제 위치입니다."
  overload: System.Printing.PrintQueue.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  id: MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "가장 최근 버전 번호를 가져옵니다는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 큐를 사용할 수 있는 합니다."
  remarks: "버전의는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) Windows Vista와 함께 릴리스된는 1입니다."
  syntax:
    content: public static int MaxPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "가장 최근 버전 번호는 [Schema](http://go.microsoft.com/fwlink/?LinkId=186397) 큐를 사용할 수 있는 합니다."
  overload: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "두 개의 병합 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s 결과 보장 및 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 유효 하 고 프린터를 지원 하지 않는 인쇄 기능에 대 한 메시지 표시 하지 않습니다."
  remarks: "메서드를 통해를 생성합니다. 즉, 한 티켓을 인쇄 기능을 요청 하지 않는 프린터 지원 하지 않습니다. 두 입력된에 대 한 인쇄 티켓 않은지 먼저 확인 하는 메서드는 [인쇄 스키마](http://go.microsoft.com/fwlink/?LinkId=186397)합니다. 하거나 유효 하지 않으면 예외가 throw 됩니다.       두 티켓 다음 병합 됩니다. 특정 속성에 대 한 다른 값이 있는 경우 다음 병합 된 결과 티켓 처음 사용 하 여 델타 티켓의 값입니다.       병합 된 티켓은 프린터의 실제 기능에 대해 확인 합니다. 있으면 티켓에 대 한 설정을 프린터의 기능을와 호환 되지 않습니다. 다음 프린터 드라이버 논리를 사용 하 여 해당 설정을 변경 하려고 합니다. 일반적으로 설정에 대 한 사용자 또는 프린터의 기본 값을 대체합니다. 대체 값의 드라이버의 소스 없는과 동일한 티켓이 `basePrintTicket`, 다음 병합 된 티켓 입력 티켓 두 모두와 다른 설정이 포함 될 수 있습니다. 프린터 드라이버 설정을 변경 해야 하는 경우 다음이 팩트에에서 보고 됩니다 <xref:System.Printing.ValidationResult.ConflictStatus%2A> <xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult> 속성</xref:System.Printing.ValidationResult.ConflictStatus%2A>       병합 및 확인 하기 위해 인쇄 큐의 기본 설정에 따라 설정 해야 합니다. `basePrintTicket` <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>나 <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       `deltaPrintTicket` 매개 변수 수 `null`있으며이 경우는 `basePrintTicket` 유효성 검사, 가능성을 확인 및 수 있는 변경 내용으로 반환 합니다.       MergeAndValidatePrintTicket의이 오버 로드를 가진 모두는 `deltaPrintTicket` 및 <xref:System.Printing.PrintTicket>에 <xref:System.Printing.ValidationResult>작업 차원 범위의 반환 되는.</xref:System.Printing.ValidationResult> </xref:System.Printing.PrintTicket> 다른 범위를 지정 하려면이 방법의 다른 오버 로드를 사용 합니다."
  example:
  - "The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "첫 번째 인쇄 티켓입니다."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "두 번째 인쇄 티켓입니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> 포함 하는 병합 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 및 표시 여부 설정 되어 있으면 실행 가능성을 보장 하기 위해 변경 해야 합니다."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "입력된 인쇄 티켓 중 하나 이상이 올바르지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "유효성 검사, 합병, 및 실행 가능성 확인 작업이 실패 했습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "두 개의 병합 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s 결과 보장 및 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 올바른지, 라는 인쇄 기능에 대 한 프린터를 지원 하지 않으면와 지정 된 범위로 제한 됩니다."
  remarks: "메서드를 통해를 생성합니다. 즉, 한 티켓을 인쇄 기능을 요청 하지 않는 프린터 지원 하지 않습니다. 두 입력된에 대 한 인쇄 티켓 않은지 먼저 확인 하는 메서드는 [인쇄 스키마](http://go.microsoft.com/fwlink/?LinkId=186397)합니다. 하거나 유효 하지 않으면 예외가 throw 됩니다.       두 티켓 다음 병합 됩니다. 특정 속성에 대 한 다른 값이 있는 경우 다음 병합 된 결과 티켓 처음 사용 하 여 델타 티켓의 값입니다.       병합 된 티켓은 프린터의 실제 기능에 대해 확인 합니다. 있으면 티켓에 대 한 설정을 프린터의 기능을와 호환 되지 않습니다. 다음 프린터 드라이버 논리를 사용 하 여 해당 설정을 변경 하려고 합니다. 일반적으로 설정에 대 한 사용자 또는 프린터의 기본 값을 대체합니다. 대체 값의 드라이버의 소스 없는과 동일한 티켓이 `basePrintTicket`, 다음 병합 된 티켓 입력 티켓 두 모두와 다른 설정이 포함 될 수 있습니다. 프린터 드라이버 설정을 변경 해야 하는 경우 다음이 팩트에에서 보고 됩니다 <xref:System.Printing.ValidationResult.ConflictStatus%2A> <xref:System.Printing.ValidationResult>.</xref:System.Printing.ValidationResult> 속성</xref:System.Printing.ValidationResult.ConflictStatus%2A>       병합 및 확인 하기 위해 인쇄 큐의 기본 설정에 따라 설정 해야 합니다. `basePrintTicket` <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>나 <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</xref:System.Printing.PrintQueue.UserPrintTicket%2A> </xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>       `deltaPrintTicket` 매개 변수 수 `null`있으며이 경우는 `basePrintTicket` 유효성 검사, 가능성을 확인 및 수 있는 변경 내용으로 반환 합니다.       경우는 `scope` 인쇄 티켓에 반환 된 작업을가 <xref:System.Printing.ValidationResult>포함 될 수 있습니다 [인쇄 스키마](http://go.microsoft.com/fwlink/?LinkId=186397) 작업, 문서 및 페이지 접두사와 함께 매개 변수.</xref:System.Printing.ValidationResult> 경우는 `scope` 이 문서에서 작업당 설정 `deltaPrintTicket` 무시 됩니다 하 고 반환 된 티켓 문서와 매개 변수를 포함할 수 있으며 페이지 앞에 추가 합니다. 경우는 `scope` 페이지에서 다음 작업당 설정 및 문서별 설정에는 `deltaPrintTicket` 무시 되 고 반환 된 티켓 페이지 접두사만 매개 변수를 포함할 수 있습니다."
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "첫 번째 인쇄 티켓입니다."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "두 번째 인쇄 티켓입니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: scope
      type: System.Printing.PrintTicketScope
      description: "나타내는 값 여부의 범위 `deltaPrintTicket`, 및에서 반환 된 인쇄 티켓의 범위는 <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>, 페이지, 문서 또는 전체 작업 합니다."
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> 포함 하는 병합 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 및 표시 여부 설정 되어 있으면 실행 가능성을 보장 하기 위해 변경 해야 합니다."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "입력된 인쇄 티켓 중 하나 이상이 올바르지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> scope </code> 매개 변수에 유효한 없는 <xref href=&quot;System.Printing.PrintTicketScope&quot;> </xref> 값입니다."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "유효성 검사, 합병, 및 실행 가능성 확인 작업이 실패 했습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Name
  id: Name
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐의 이름을 가져오거나 설정 합니다."
  remarks: "<xref:System.Printing.PrintQueue>개체에는 읽기 전용 <xref:System.Printing.PrintQueue.FullName%2A>속성과 쓰기 가능한 <xref:System.Printing.PrintQueue.ShareName%2A>속성.</xref:System.Printing.PrintQueue.ShareName%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue>       로컬 인쇄 서버에 있는 큐에 대 한 이름을 지정 하 고 <xref:System.Printing.PrintQueue.FullName%2A>동일 합니다.</xref:System.Printing.PrintQueue.FullName%2A>"
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public override sealed string Name { get; set; }
    return:
      type: System.String
      description: "인쇄 큐의 이름입니다."
  overload: System.Printing.PrintQueue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NeedUserIntervention
  id: NeedUserIntervention
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 담당자의 조치가 필요한 지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool NeedUserIntervention { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터에는 사용자 개입이 필요 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.NeedUserIntervention*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NumberOfJobs
  id: NumberOfJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐에 작업의 총 수를 가져옵니다."
  syntax:
    content: public virtual int NumberOfJobs { get; }
    return:
      type: System.Int32
      description: "큐에 있는 작업 수입니다."
  overload: System.Printing.PrintQueue.NumberOfJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.PagePunt
  id: PagePunt
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터 현재 페이지를 인쇄할 수 없는지 여부를 나타내는 값을 가져옵니다."
  remarks: "프린터가이 의미의 신호를 지원 하지 않는 경우 속성은 항상 `false`합니다."
  syntax:
    content: public bool PagePunt { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프린터; 현재 페이지를 인쇄할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.PagePunt*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Pause
  id: Pause
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐를 일시 중지 됩니다. 될 때까지 일시 중지 된 동안 <xref:System.Printing.PrintQueue.Resume*>실행 됩니다.</xref:System.Printing.PrintQueue.Resume*>"
  syntax:
    content: public virtual void Pause ();
    parameters: []
  overload: System.Printing.PrintQueue.Pause*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "프린터를 일시 중지할 수 없습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  id: PrintingIsCancelled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "현재 인쇄 작업을 취소 되 고 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool PrintingIsCancelled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인쇄 작업은 취소 하 고 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.PrintingIsCancelled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Priority
  id: Priority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "같은 인쇄 서버에서 호스팅되는 같은 실제 프린터를 사용 하는 다른 인쇄 대기열 기준으로 인쇄 대기열의 우선 순위를 가져오거나 설정 합니다."
  remarks: "이 속성을 비교는 <xref:System.Printing.PrintQueue.DefaultPriority%2A>큐에서 인쇄 작업의 상대적 우선 순위에 대 한 속성.</xref:System.Printing.PrintQueue.DefaultPriority%2A>"
  syntax:
    content: public virtual int Priority { get; set; }
    return:
      type: System.Int32
      description: "인쇄 큐에 대 한 우선 순위입니다. 가능한 값은 1에서 99 까지의 합니다. 기본값은 1입니다."
  overload: System.Printing.PrintQueue.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Purge
  id: Purge
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐에 있는 모든 작업을 제거 합니다."
  syntax:
    content: public virtual void Purge ();
    parameters: []
  overload: System.Printing.PrintQueue.Purge*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "일부 작업은 인쇄 큐에서 제거 하지 못했습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueAttributes
  id: QueueAttributes
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "인쇄 큐의 속성을 가져옵니다."
  syntax:
    content: public System.Printing.PrintQueueAttributes QueueAttributes { get; }
    return:
      type: System.Printing.PrintQueueAttributes
      description: "비트 조합 된 <xref href=&quot;System.Printing.PrintQueueAttributes&quot;> </xref> 열거형 값입니다."
  overload: System.Printing.PrintQueue.QueueAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueDriver
  id: QueueDriver
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐에 대 한 프린터 드라이버를 가져오거나 설정 합니다."
  syntax:
    content: public virtual System.Printing.PrintDriver QueueDriver { get; set; }
    return:
      type: System.Printing.PrintDriver
      description: "<xref href=&quot;System.Printing.PrintDriver&quot;> </xref> 큐를 사용 하 합니다."
  overload: System.Printing.PrintQueue.QueueDriver*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePort
  id: QueuePort
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐에 사용 되는 포트를 가져오거나 설정 합니다."
  syntax:
    content: public virtual System.Printing.PrintPort QueuePort { get; set; }
    return:
      type: System.Printing.PrintPort
      description: "<xref href=&quot;System.Printing.PrintPort&quot;> </xref> 인쇄 큐에 할당 된 합니다."
  overload: System.Printing.PrintQueue.QueuePort*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  id: QueuePrintProcessor
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "큐에서 사용 되는 인쇄 처리기를 가져오거나 설정 합니다."
  syntax:
    content: public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }
    return:
      type: System.Printing.PrintProcessor
      description: "<xref href=&quot;System.Printing.PrintProcessor&quot;> </xref> WinPrint 또는 ModiPrint 같은 큐를 사용 하 합니다."
  overload: System.Printing.PrintQueue.QueuePrintProcessor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueStatus
  id: QueueStatus
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "프린터의 상태를 나타내는 값을 가져옵니다. 여기에 &quot;준비 중&quot; &quot;초기화,&quot; &quot;인쇄&quot; 등입니다."
  remarks: ''
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueattributes)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueattributes)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueattributes)]"
  syntax:
    content: public System.Printing.PrintQueueStatus QueueStatus { get; }
    return:
      type: System.Printing.PrintQueueStatus
      description: "현재 <xref href=&quot;System.Printing.PrintQueueStatus&quot;> </xref> 값입니다."
  overload: System.Printing.PrintQueue.QueueStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Refresh
  id: Refresh
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "속성을 업데이트는 <xref href=&quot;System.Printing.PrintQueue&quot;> </xref> 프린터와 컴퓨터에서 실행 되는 인쇄 큐 유틸리티의 값을 가진 개체입니다."
  remarks: "<xref:System.Printing.PrintQueue>개체의 속성 프린터에 기록한 하지 않는 한 새로 고침을 실행할 때 손실 됩니다 및 인쇄 큐 <xref:System.Printing.PrintQueue.Commit%2A>.</xref:System.Printing.PrintQueue.Commit%2A> </xref:System.Printing.PrintQueue> 변경 프로그램에서는"
  example:
  - "The following example shows how to use this method as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#surveyqueues)]\n [!code-vb[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#surveyqueues)]\n [!code-cs[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#surveyqueues)]"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Printing.PrintQueue.Refresh*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "일부 속성 수 새로 고칠 수 있습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Resume
  id: Resume
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "일시 중지 된 인쇄 큐를 다시 시작 합니다."
  remarks: ''
  example:
  - "The following example shows how to use this method to resume a paused print queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#handlepausedjob)]\n [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#handlepausedjob)]\n [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#handlepausedjob)]"
  syntax:
    content: public virtual void Resume ();
    parameters: []
  overload: System.Printing.PrintQueue.Resume*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "프린터를 다시 시작할 수 없습니다."
  platform:
  - net462
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  id: ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "첫 번째 완전히 완료 되지 후자 큐에 도달 하는 경우에 작업을 먼저 스풀링 프로세스를 완료 한 작업 인쇄할 수 있는지 여부를 나타내는 값을 가져옵니다 또는 우선 순위가 높습니다."
  syntax:
    content: public bool ScheduleCompletedJobsFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인쇄 작업을 완전히 완료 되지 않으면 작업 보다 먼저 스풀링 프로세스를 완료 한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.SeparatorFile
  id: SeparatorFile
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "각 인쇄 작업의 시작 부분에 삽입 되는 파일의 경로 파일 이름을 가져오거나 설정 합니다."
  remarks: "이 일반적으로 단일 페이지 파일을 쉽게 다른 인쇄 작업의 출력을 구분 하는 데 사용 합니다."
  syntax:
    content: public virtual string SeparatorFile { get; set; }
    return:
      type: System.String
      description: "구분 파일의 경로 파일 이름입니다."
  overload: System.Printing.PrintQueue.SeparatorFile*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ShareName
  id: ShareName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "공유 하는 경우 네트워크에서 사용자에 게 표시 되는 프린터에 대 한 이름을 가져오거나 설정 합니다."
  remarks: "<xref:System.Printing.PrintQueue>개체에는 읽기 전용 <xref:System.Printing.PrintQueue.FullName%2A>속성과 쓰기 가능한 <xref:System.Printing.PrintQueue.Name%2A>속성.</xref:System.Printing.PrintQueue.Name%2A> </xref:System.Printing.PrintQueue.FullName%2A> </xref:System.Printing.PrintQueue> 인쇄 서버의 로컬 큐의 경우 이러한 속성이 동일한 값을 갖습니다."
  syntax:
    content: public virtual string ShareName { get; set; }
    return:
      type: System.String
      description: "공유 프린터의 공개 이름입니다."
  overload: System.Printing.PrintQueue.ShareName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.StartTimeOfDay
  id: StartTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Coordinated Universal Time (UTC) (또한 호출된 그리니치 표준시 [GMT]), 프린터에서 작업을 인쇄 자정 이후의 시간 (분)으로 표현 된, 하루 중 가장 빠른 시간을 가져오거나 설정 합니다."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set StartTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int StartTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "프린터를 먼저를 사용할 수 있게 하는 시간으로 자정 (UTC) 이후의 시간을 분 단위로 표현 됩니다. 최대값은 1439 합니다. 프린터를 처음으로 설치를 사용 하 여는 [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] 프린터 추가 마법사를 프린터 기본적으로 사용할 수 있는 상태로 항상 고이 속성이 모든 표준 시간대에 0을 반환 합니다."
  overload: System.Printing.PrintQueue.StartTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  id: UntilTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Coordinated Universal Time (UTC) (또한 호출된 그리니치 표준시 [GMT]), 프린터에서 작업을 인쇄 자정 이후의 시간 (분)으로 표현 된 가장 늦은 시간을 가져오거나 설정 합니다."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set UntilTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after the 24th hour (the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int UntilTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "프린터 더 이상 사용할 수 있는 시간으로 자정 (UTC) 이후의 시간을 분 단위로 표현 됩니다. 최대값은 1439 합니다. 프린터를 처음으로 설치를 사용 하 여는 [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] 프린터 추가 마법사를 프린터 기본적으로 사용할 수 있는 상태로 항상 고이 속성이 모든 표준 시간대에 0을 반환 합니다."
  overload: System.Printing.PrintQueue.UntilTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UserPrintTicket
  id: UserPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "현재 사용자의 기본을 가져오거나 설정 합니다. <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 인쇄 작업에 대 한 자세한 정보가 포함 된 개체입니다."
  remarks: "각 사용자는 자신의 기본 <xref:System.Printing.PrintTicket>.</xref:System.Printing.PrintTicket> 가질 수 있습니다.       이 속성 수 `null`합니다."
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "<xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 현재 사용자에 대해 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 사용자 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 지정 되지 않았습니다."
  overload: System.Printing.PrintQueue.UserPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Printing.PrintSystemObject
  isExternal: false
  name: System.Printing.PrintSystemObject
- uid: System.Printing.PrintQueueException
  parent: System.Printing
  isExternal: false
  name: PrintQueueException
  nameWithType: PrintQueueException
  fullName: System.Printing.PrintQueueException
- uid: System.Printing.PrintSystemException
  parent: System.Printing
  isExternal: false
  name: PrintSystemException
  nameWithType: PrintSystemException
  fullName: System.Printing.PrintSystemException
- uid: System.Printing.PrintCommitAttributesException
  parent: System.Printing
  isExternal: false
  name: PrintCommitAttributesException
  nameWithType: PrintCommitAttributesException
  fullName: System.Printing.PrintCommitAttributesException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
- uid: System.Printing.PrintServer
  parent: System.Printing
  isExternal: false
  name: PrintServer
  nameWithType: PrintServer
  fullName: System.Printing.PrintServer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
- uid: System.Printing.PrintQueueIndexedProperty[]
  parent: System.Printing
  isExternal: false
  name: PrintQueueIndexedProperty
  nameWithType: PrintQueueIndexedProperty
  fullName: System.Printing.PrintQueueIndexedProperty[]
  spec.csharp:
  - uid: System.Printing.PrintQueueIndexedProperty
    name: PrintQueueIndexedProperty
    nameWithType: PrintQueueIndexedProperty
    fullName: PrintQueueIndexedProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
- uid: System.Printing.PrintSystemDesiredAccess
  parent: System.Printing
  isExternal: false
  name: PrintSystemDesiredAccess
  nameWithType: PrintSystemDesiredAccess
  fullName: System.Printing.PrintSystemDesiredAccess
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.AddJob
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
- uid: System.Printing.PrintSystemJobInfo
  parent: System.Printing
  isExternal: false
  name: PrintSystemJobInfo
  nameWithType: PrintSystemJobInfo
  fullName: System.Printing.PrintSystemJobInfo
- uid: System.Printing.PrintQueue.AddJob(System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
- uid: System.Windows.Xps.XpsDocumentWriter
  parent: System.Windows.Xps
  isExternal: false
  name: XpsDocumentWriter
  nameWithType: XpsDocumentWriter
  fullName: System.Windows.Xps.XpsDocumentWriter
- uid: System.Printing.PrintDocumentImageableArea
  parent: System.Printing
  isExternal: false
  name: PrintDocumentImageableArea
  nameWithType: PrintDocumentImageableArea
  fullName: System.Printing.PrintDocumentImageableArea
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Windows.Controls.PageRangeSelection
  parent: System.Windows.Controls
  isExternal: false
  name: PageRangeSelection
  nameWithType: PageRangeSelection
  fullName: System.Windows.Controls.PageRangeSelection
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Printing.PrintQueue.CurrentJobSettings
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintJobSettings
  parent: System.Printing
  isExternal: false
  name: PrintJobSettings
  nameWithType: PrintJobSettings
  fullName: System.Printing.PrintJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
- uid: System.Printing.PrintCapabilities
  parent: System.Printing
  isExternal: false
  name: PrintCapabilities
  nameWithType: PrintCapabilities
  fullName: System.Printing.PrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
- uid: System.Printing.PrintJobInfoCollection
  parent: System.Printing
  isExternal: false
  name: PrintJobInfoCollection
  nameWithType: PrintJobInfoCollection
  fullName: System.Printing.PrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
- uid: System.Printing.PrintQueue.IsBidiEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
- uid: System.Printing.PrintTicketScope
  parent: System.Printing
  isExternal: false
  name: PrintTicketScope
  nameWithType: PrintTicketScope
  fullName: System.Printing.PrintTicketScope
- uid: System.Printing.PrintQueue.Name
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
- uid: System.Printing.PrintQueue.QueueAttributes
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueueAttributes
  parent: System.Printing
  isExternal: false
  name: PrintQueueAttributes
  nameWithType: PrintQueueAttributes
  fullName: System.Printing.PrintQueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
- uid: System.Printing.PrintDriver
  parent: System.Printing
  isExternal: false
  name: PrintDriver
  nameWithType: PrintDriver
  fullName: System.Printing.PrintDriver
- uid: System.Printing.PrintQueue.QueuePort
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
- uid: System.Printing.PrintPort
  parent: System.Printing
  isExternal: false
  name: PrintPort
  nameWithType: PrintPort
  fullName: System.Printing.PrintPort
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintProcessor
  parent: System.Printing
  isExternal: false
  name: PrintProcessor
  nameWithType: PrintProcessor
  fullName: System.Printing.PrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
- uid: System.Printing.PrintQueueStatus
  parent: System.Printing
  isExternal: false
  name: PrintQueueStatus
  nameWithType: PrintQueueStatus
  fullName: System.Printing.PrintQueueStatus
- uid: System.Printing.PrintQueue.Refresh
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
- uid: System.Printing.PrintQueue.Resume
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
- uid: System.Printing.PrintQueue.#ctor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue.PrintQueue
- uid: System.Printing.PrintQueue.AddJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob
  nameWithType: PrintQueue.AddJob
- uid: System.Printing.PrintQueue.AveragePagesPerMinute*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit
  nameWithType: PrintQueue.Commit
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter
  nameWithType: PrintQueue.CreateXpsDocumentWriter
- uid: System.Printing.PrintQueue.CurrentJobSettings*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob
  nameWithType: PrintQueue.GetJob
- uid: System.Printing.PrintQueue.GetPrintCapabilities*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities
  nameWithType: PrintQueue.GetPrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection
  nameWithType: PrintQueue.GetPrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose
  nameWithType: PrintQueue.InternalDispose
- uid: System.Printing.PrintQueue.IsBidiEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket
  nameWithType: PrintQueue.MergeAndValidatePrintTicket
- uid: System.Printing.PrintQueue.Name*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause
  nameWithType: PrintQueue.Pause
- uid: System.Printing.PrintQueue.PrintingIsCancelled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge
  nameWithType: PrintQueue.Purge
- uid: System.Printing.PrintQueue.QueueAttributes*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
- uid: System.Printing.PrintQueue.QueuePort*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
- uid: System.Printing.PrintQueue.QueuePrintProcessor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
- uid: System.Printing.PrintQueue.Refresh*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh
  nameWithType: PrintQueue.Refresh
- uid: System.Printing.PrintQueue.Resume*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume
  nameWithType: PrintQueue.Resume
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
