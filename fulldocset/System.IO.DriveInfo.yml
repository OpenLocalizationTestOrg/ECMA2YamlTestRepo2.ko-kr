### YamlMime:ManagedReference
items:
- uid: System.IO.DriveInfo
  id: DriveInfo
  children:
  - System.IO.DriveInfo.#ctor(System.String)
  - System.IO.DriveInfo.AvailableFreeSpace
  - System.IO.DriveInfo.DriveFormat
  - System.IO.DriveInfo.DriveType
  - System.IO.DriveInfo.GetDrives
  - System.IO.DriveInfo.IsReady
  - System.IO.DriveInfo.Name
  - System.IO.DriveInfo.RootDirectory
  - System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.DriveInfo.ToString
  - System.IO.DriveInfo.TotalFreeSpace
  - System.IO.DriveInfo.TotalSize
  - System.IO.DriveInfo.VolumeLabel
  langs:
  - csharp
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
  type: Class
  summary: "드라이브 정보에 대 한 액세스를 제공합니다."
  remarks: "이 클래스는 드라이브를 모델링 하 고 메서드 및 속성을 쿼리할 드라이브 정보를 제공 합니다. DriveInfo를 사용 하 여 가능한, 및 자격 증명이 드라이브의 유형을 결정 합니다. 용량과 사용 가능한 공간 드라이브에 쿼리할 수 있습니다."
  example:
  - "The following code example demonstrates the use of the DriveInfo class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/t-system.io.driveinfo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/t-system.io.driveinfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DriveInfo : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.DriveInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 드라이브 정보에 대 한 액세스를 제공합니다."
  remarks: "드라이브에 대 한 정보를 얻으려면이 클래스를 사용 합니다. 드라이브 이름 &quot;a&quot;에서 &quot;z&quot; 대 / 소문자 구분 문자를 여야 합니다. 이 메서드는 드라이브 이름에 대 한 정보를 가져오는 사용할 수 없습니다 `null` 하거나 UNC를 사용 하 여 (\\\\\\server\\share) 경로입니다."
  syntax:
    content: public DriveInfo (string driveName);
    parameters:
    - id: driveName
      type: System.String
      description: "올바른 드라이브 경로 또는 드라이브 문자입니다. 대문자 또는 소문자 &quot;a&quot;에서 &quot;z&quot; 수 됩니다. Null 값이 올바르지 않습니다."
  overload: System.IO.DriveInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "드라이브 문자가 일 수 없는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "첫 글자 <code> driveName </code> 않은 대 / 소문자 구분 문자 &quot;a&quot;에서 &quot;z&quot;.       -또는- <code> driveName </code> 올바른 드라이브를 참조 하지 않습니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "바이트 단위로 드라이브의 사용 가능한 공간 크기를 나타냅니다."
  remarks: "이 속성에서 드라이브에서 사용 가능한 공간의 크기를 나타냅니다. 이 숫자를 다를 수 있습니다는 <xref:System.IO.DriveInfo.TotalFreeSpace%2A>계정 디스크 할당량에이 속성은 사용 하기 때문에 번호 매기기.</xref:System.IO.DriveInfo.TotalFreeSpace%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.av_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.av_1.vb)]"
  syntax:
    content: public long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: "바이트 단위로 드라이브에서 사용 가능한 공간의 양입니다."
  overload: System.IO.DriveInfo.AvailableFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "드라이브 정보에 대 한 액세스가 거부 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveFormat
  id: DriveFormat
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "예: FAT32 또는 NTFS 파일 시스템의 이름을 가져옵니다."
  remarks: "DriveFormat를 사용 하 여 사용 하 여 드라이브 형식을 결정 합니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_0_1.vb)]"
  syntax:
    content: public string DriveFormat { get; }
    return:
      type: System.String
      description: "지정 된 드라이브에 파일 시스템의 이름입니다."
  overload: System.IO.DriveInfo.DriveFormat*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "드라이브 정보에 대 한 액세스가 거부 되었습니다."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "드라이브가 존재 하지 않거나 매핑되지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveType
  id: DriveType
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "고정 또는 CD-ROM, 이동식, 네트워크 등 드라이브 형식을 가져옵니다."
  remarks: 'DriveType 속성 드라이브에서 다음 중 하나 인지를 나타내는: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, 또는 `Unknown`합니다. 이러한 값은에 설명 된 <xref:System.IO.DriveType>열거형.</xref:System.IO.DriveType>'
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_1_1.vb)]"
  syntax:
    content: public System.IO.DriveType DriveType { get; }
    return:
      type: System.IO.DriveType
      description: "드라이브 형식을 지정 하는 열거형 값 중 하나입니다."
  overload: System.IO.DriveInfo.DriveType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.GetDrives
  id: GetDrives
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "컴퓨터에서 모든 논리 드라이브의 드라이브 이름을 검색합니다."
  remarks: "이 메서드는 컴퓨터에서 모든 논리 드라이브 이름을 검색합니다. 이 정보를 사용 하 여 배열에서 반복 하 고 다른 드라이브에서 정보를 얻을를 <xref:System.IO.DriveInfo>메서드 및 속성.</xref:System.IO.DriveInfo> <xref:System.IO.DriveInfo.IsReady%2A>드라이브가 준비 되지 않은 드라이브에이 메서드를 사용 하 고 있으므로 준비 되었는지 여부를 테스트 하는 속성에 <xref:System.IO.IOException>.</xref:System.IO.IOException> 을 throw 합니다</xref:System.IO.DriveInfo.IsReady%2A> 를 사용 하 여"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/m-system.io.driveinfo.ge_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/m-system.io.driveinfo.ge_1.vb)]"
  syntax:
    content: public static System.IO.DriveInfo[] GetDrives ();
    parameters: []
    return:
      type: System.IO.DriveInfo[]
      description: "형식의 배열 <xref href=&quot;System.IO.DriveInfo&quot;> </xref> 컴퓨터에 있는 논리 드라이브를 나타내는입니다."
  overload: System.IO.DriveInfo.GetDrives*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.IsReady
  id: IsReady
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브가 준비 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsReady는 드라이브가 준비 되었는지 여부를 나타냅니다. 예를 들어 CD를 CD 드라이브 또는 이동식 저장 장치에서 읽기/쓰기 작업에 대 한 준비 여부 인지 여부를 나타냅니다. 드라이브가 준비 및 준비 되지 않았습니다 있는지 여부를 테스트 하지 마십시오 하는 경우 쿼리 <xref:System.IO.DriveInfo> <xref:System.IO.IOException>.</xref:System.IO.IOException> 에서 발생</xref:System.IO.DriveInfo> 하는 사용 하는 드라이브       와 같은 다른 멤버에서 예외를 catch 하지 않으려면 IsReady에 의존 하지 마십시오 <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, 및 <xref:System.IO.DriveInfo.DriveFormat%2A>.</xref:System.IO.DriveInfo.DriveFormat%2A> </xref:System.IO.DriveInfo.TotalFreeSpace%2A> </xref:System.IO.DriveInfo.TotalSize%2A> 코드 IsReady를 확인 하 고 하나 (액세스 검사 직후에 발생 하는 경우에) 다른 속성에 액세스 하는 시간 사이의 드라이브 연결 또는 디스크를 제거 되었을 수 있습니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.is_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.is_1.vb)]"
  syntax:
    content: public bool IsReady { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>드라이브가 준비 되었으면 인 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 드라이브가 준비 되지 않은 경우."
  overload: System.IO.DriveInfo.IsReady*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.Name
  id: Name
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "예: c: 드라이브의 이름을 가져옵니다\\\\합니다."
  remarks: "이 속성은 이름 예: C:\\ 또는 e: 드라이브에 할당 된\\\\합니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.name_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.name_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "드라이브의 이름입니다."
  overload: System.IO.DriveInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.RootDirectory
  id: RootDirectory
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브의 루트 디렉터리를 가져옵니다."
  syntax:
    content: public System.IO.DirectoryInfo RootDirectory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "드라이브의 루트 디렉터리를 포함 하는 개체입니다."
  overload: System.IO.DriveInfo.RootDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 개체를 직렬화 하는 데 필요한 데이터가 들어 있는 개체입니다."
  remarks: "에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo>개체가 자동으로 추적 되 고 직렬화 포맷터에 의해.</xref:System.Runtime.Serialization.SerializationInfo>       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.IO.DriveInfo>인스턴스로 캐스팅 되는 <xref:System.Runtime.Serialization.ISerializable>인터페이스.</xref:System.Runtime.Serialization.ISerializable> </xref:System.IO.DriveInfo>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "데이터로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "대상 (참조 <xref:System.Runtime.Serialization.StreamingContext>)이이 serialization에 대 한.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.ToString
  id: ToString
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브 이름을 문자열로 반환합니다."
  remarks: "이 메서드는 반환 된 <xref:System.IO.DriveInfo.Name%2A>속성.</xref:System.IO.DriveInfo.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "드라이브의 이름입니다."
  overload: System.IO.DriveInfo.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalFreeSpace
  id: TotalFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브에 사용할 수 있는 여유 공간의 전체 크기를 바이트 단위로 가져옵니다."
  remarks: "이 속성 드라이브에서 현재 사용자에 게 제공할 수 있는 것 뿐만 아니라 사용 가능한 공간의 전체 크기를 나타냅니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_0_1.vb)]"
  syntax:
    content: public long TotalFreeSpace { get; }
    return:
      type: System.Int64
      description: "총 사용 가능한 공간 (바이트)에서 드라이브에 있습니다."
  overload: System.IO.DriveInfo.TotalFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "드라이브 정보에 대 한 액세스가 거부 되었습니다."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "드라이브가 매핑되지 않은 있거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalSize
  id: TotalSize
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브에 저장소 공간의 전체 크기를 바이트 단위로 가져옵니다."
  remarks: "이 속성의 현재 사용자에 게 제공할 수 있는 것 뿐만 아니라를 바이트 단위로 드라이브 전체 크기를 나타냅니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_1_1.vb)]"
  syntax:
    content: public long TotalSize { get; }
    return:
      type: System.Int64
      description: "드라이브 바이트의 총 크기입니다."
  overload: System.IO.DriveInfo.TotalSize*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "드라이브 정보에 대 한 액세스가 거부 되었습니다."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "드라이브가 매핑되지 않은 있거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  platform:
  - net462
- uid: System.IO.DriveInfo.VolumeLabel
  id: VolumeLabel
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "드라이브의 볼륨 레이블을 가져오거나 설정 합니다."
  remarks: "레이블 길이 운영 체제에 의해 결정 됩니다. 예를 들어 NTFS 볼륨 레이블을 최대 32 자 수 있습니다. `null` 유효한 VolumeLabel 됩니다."
  example:
  - "The following example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.vo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.vo_1.vb)]"
  syntax:
    content: public string VolumeLabel { get; set; }
    return:
      type: System.String
      description: "볼륨 레이블입니다."
  overload: System.IO.DriveInfo.VolumeLabel*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O 오류가 (예: 디스크 오류 또는 드라이브를 준비 되지 않았습니다)에 발생 합니다."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "드라이브가 매핑되지 않은 있거나 존재 하지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "네트워크 또는 CD-ROM 드라이브의 볼륨 레이블 설정 됩니다.       -또는-드라이브 정보에 대 한 액세스가 거부 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DriveInfo.#ctor(System.String)
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.DriveInfo.AvailableFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.DriveInfo.DriveFormat
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
- uid: System.IO.DriveType
  parent: System.IO
  isExternal: false
  name: DriveType
  nameWithType: DriveType
  fullName: System.IO.DriveType
- uid: System.IO.DriveInfo.GetDrives
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
- uid: System.IO.DriveInfo[]
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo[]
  spec.csharp:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.DriveInfo.IsReady
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.DriveInfo.Name
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.DriveInfo.ToString
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
- uid: System.IO.DriveInfo.TotalFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
- uid: System.IO.DriveInfo.#ctor*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo.DriveInfo
- uid: System.IO.DriveInfo.AvailableFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
- uid: System.IO.DriveInfo.DriveFormat*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
- uid: System.IO.DriveInfo.GetDrives*
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives
  nameWithType: DriveInfo.GetDrives
- uid: System.IO.DriveInfo.IsReady*
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
- uid: System.IO.DriveInfo.Name*
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory*
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.IO.DriveInfo.ToString*
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString
  nameWithType: DriveInfo.ToString
- uid: System.IO.DriveInfo.TotalFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel*
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
