### YamlMime:ManagedReference
items:
- uid: System.IO.Ports.SerialPort
  id: SerialPort
  children:
  - System.IO.Ports.SerialPort.#ctor
  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  - System.IO.Ports.SerialPort.#ctor(System.String)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - System.IO.Ports.SerialPort.BaseStream
  - System.IO.Ports.SerialPort.BaudRate
  - System.IO.Ports.SerialPort.BreakState
  - System.IO.Ports.SerialPort.BytesToRead
  - System.IO.Ports.SerialPort.BytesToWrite
  - System.IO.Ports.SerialPort.CDHolding
  - System.IO.Ports.SerialPort.Close
  - System.IO.Ports.SerialPort.CtsHolding
  - System.IO.Ports.SerialPort.DataBits
  - System.IO.Ports.SerialPort.DataReceived
  - System.IO.Ports.SerialPort.DiscardInBuffer
  - System.IO.Ports.SerialPort.DiscardNull
  - System.IO.Ports.SerialPort.DiscardOutBuffer
  - System.IO.Ports.SerialPort.Dispose(System.Boolean)
  - System.IO.Ports.SerialPort.DsrHolding
  - System.IO.Ports.SerialPort.DtrEnable
  - System.IO.Ports.SerialPort.Encoding
  - System.IO.Ports.SerialPort.ErrorReceived
  - System.IO.Ports.SerialPort.GetPortNames
  - System.IO.Ports.SerialPort.Handshake
  - System.IO.Ports.SerialPort.InfiniteTimeout
  - System.IO.Ports.SerialPort.IsOpen
  - System.IO.Ports.SerialPort.NewLine
  - System.IO.Ports.SerialPort.Open
  - System.IO.Ports.SerialPort.Parity
  - System.IO.Ports.SerialPort.ParityReplace
  - System.IO.Ports.SerialPort.PinChanged
  - System.IO.Ports.SerialPort.PortName
  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.ReadBufferSize
  - System.IO.Ports.SerialPort.ReadByte
  - System.IO.Ports.SerialPort.ReadChar
  - System.IO.Ports.SerialPort.ReadExisting
  - System.IO.Ports.SerialPort.ReadLine
  - System.IO.Ports.SerialPort.ReadTimeout
  - System.IO.Ports.SerialPort.ReadTo(System.String)
  - System.IO.Ports.SerialPort.ReceivedBytesThreshold
  - System.IO.Ports.SerialPort.RtsEnable
  - System.IO.Ports.SerialPort.StopBits
  - System.IO.Ports.SerialPort.Write(System.String)
  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.WriteBufferSize
  - System.IO.Ports.SerialPort.WriteLine(System.String)
  - System.IO.Ports.SerialPort.WriteTimeout
  langs:
  - csharp
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
  type: Class
  summary: "직렬 포트 리소스를 나타냅니다.       이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 [참조 소스](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)합니다."
  remarks: "> [!NOTE]>이 형식에 대 한.NET Framework 소스 코드를 보려면를 참조 하십시오.는 [참조 소스](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)합니다. 소스 코드를 온라인, 오프 라인에서 살펴보고에 대 한 참조를 다운로드 및; 디버그 시 소스 (패치 및 업데이트 포함)를 단계별로 실행 참조 [지침](http://referencesource.microsoft.com/)합니다.       이 클래스를 사용 하 여 직렬 포트 파일 리소스를 제어 합니다. 이 클래스는 동기 및 이벤트 기반 I/O, pin 및 중단 상태에 대 한 액세스 및 직렬 드라이버 속성에 대 한 액세스를 제공합니다. 또한이 클래스의 기능 줄 바꿈 가능 내부 <xref:System.IO.Stream>개체를 통해 액세스할 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성을 래핑하거나 스트림을 사용 하는 클래스에 전달 합니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream>       SerialPort 클래스에는 다음 인코딩을 지원: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, 및 코드 페이지는 50000 보다 작은 코드 페이지는 54936 위치나 mscorlib.dll에 정의 된 인코딩.</xref:System.Text.UTF32Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>  대체 인코딩을 사용할 수 있지만 사용 해야 합니다는 <xref:System.IO.Ports.SerialPort.ReadByte%2A>또는 <xref:System.IO.Ports.SerialPort.Write%2A>메서드 직접 인코딩을 수행 하 고.</xref:System.IO.Ports.SerialPort.Write%2A> </xref:System.IO.Ports.SerialPort.ReadByte%2A>       사용 된 <xref:System.IO.Ports.SerialPort.GetPortNames%2A>현재 컴퓨터에 대 한 유효한 포트를 검색 하는 메서드입니다.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>       SerialPort 개체 읽기 작업 동안 차단 되 면 스레드를 중단 하지 않습니다. 대신 기본 하거나 닫을 스트림 또는 SerialPort 개체를 삭제 합니다."
  example:
  - "The following code example demonstrates the use of the SerialPort class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#10](~/add/codesnippet/cpp/t-system.io.ports.serial_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#10](~/add/codesnippet/csharp/t-system.io.ports.serial_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#10](~/add/codesnippet/visualbasic/t-system.io.ports.serial_1.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.MonitoringDescription("SerialPortDesc")]

      public class SerialPort : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor
  id: '#ctor'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 지정 되지 않으면 기본 속성 값을 사용 합니다. 예를 들어는 <xref:System.IO.Ports.SerialPort.DataBits%2A>속성의 기본값 8는 <xref:System.IO.Ports.SerialPort.Parity%2A>속성의 기본값은 `None` 열거형 값의 <xref:System.IO.Ports.SerialPort.StopBits%2A>1, 및 c o m 1의 기본 포트 이름 속성의 기본값.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public SerialPort ();
    parameters: []
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> 개체입니다."
  remarks: "이 생성자는 지정 되지 않으면 기본 속성 값을 사용 합니다. 예를 들어는 <xref:System.IO.Ports.SerialPort.DataBits%2A>속성의 기본값 8는 <xref:System.IO.Ports.SerialPort.Parity%2A>속성의 기본값은 `None` 열거형 값의 <xref:System.IO.Ports.SerialPort.StopBits%2A>1, 및 c o m 1의 기본 포트 이름 속성의 기본값.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  syntax:
    content: public SerialPort (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "컨테이너에 대 한 인터페이스입니다."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 클래스 지정된 된 포트 이름을 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort>포트 이름을 지정 하려는 경우 클래스.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "포트 (예: COM1)입니다."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 클래스 지정 된 포트 이름 및 전송 속도 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort>포트 이름 및 전송 속도 지정 하려면 클래스.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "포트 (예: COM1)입니다."
    - id: baudRate
      type: System.Int32
      description: "전송 속도입니다."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 클래스 지정 된 포트 이름, 전송 속도 및 패리티 비트를 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort>포트 이름, 전송 속도 및 패리티 비트를 지정 하려면 클래스.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "포트 (예: COM1)입니다."
    - id: baudRate
      type: System.Int32
      description: "전송 속도입니다."
    - id: parity
      type: System.IO.Ports.Parity
      description: "중 하나는 <xref:System.IO.Ports.SerialPort.Parity*>값.</xref:System.IO.Ports.SerialPort.Parity*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 클래스 지정 된 포트 이름, 전송 속도, 패리티 비트 및 데이터 비트를 사용 합니다."
  remarks: "이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort>포트 이름, 전송 속도, 패리티 비트 및 데이터 비트를 지정 하려면 클래스.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "포트 (예: COM1)입니다."
    - id: baudRate
      type: System.Int32
      description: "전송 속도입니다."
    - id: parity
      type: System.IO.Ports.Parity
      description: "중 하나는 <xref:System.IO.Ports.SerialPort.Parity*>값.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "데이터 비트 값입니다."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 지정 된 포트 이름, 전송 속도, 패리티 비트, 데이터 비트를 사용 하 여 클래스 및 정지 비트입니다."
  remarks: "이 생성자의 새 인스턴스를 사용 하 여 <xref:System.IO.Ports.SerialPort>포트 이름, 전송 속도, 패리티 비트, 데이터 비트를 지정 하 고 비트를 중지 하려는 경우 클래스.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "포트 (예: COM1)입니다."
    - id: baudRate
      type: System.Int32
      description: "전송 속도입니다."
    - id: parity
      type: System.IO.Ports.Parity
      description: "중 하나는 <xref:System.IO.Ports.SerialPort.Parity*>값.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "데이터 비트 값입니다."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "중 하나는 <xref:System.IO.Ports.SerialPort.StopBits*>값.</xref:System.IO.Ports.SerialPort.StopBits*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 포트를 찾거나 열 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaseStream
  id: BaseStream
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "내부 가져옵니다 <xref:System.IO.Stream>개체에 대 한는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다.</xref:System.IO.Stream>"
  remarks: "<xref:System.IO.Ports.SerialPort>개체 <xref:System.IO.Stream> <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> 같은 래퍼 클래스</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort> 를 전달 하거나 명시적 비동기 I/O 작업에 대 한이 속성을 사용 합니다.       추상에서 파생 되는 개체 직렬 포트의 BaseStream 속성에서 반환 열려 있는 모든 <xref:System.IO.Stream>클래스 및 구현 읽기 및 쓰기에서 상속 되며, 프로토타입 사용 하는 메서드는 <xref:System.IO.Stream>클래스: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, 및 <xref:System.IO.Stream.WriteByte%2A>.</xref:System.IO.Stream.WriteByte%2A> </xref:System.IO.Stream.Write%2A> </xref:System.IO.Stream.ReadByte%2A> </xref:System.IO.Stream.Read%2A> </xref:System.IO.Stream.BeginWrite%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> 이러한 메서드는 <xref:System.IO.Stream>래퍼 클래스</xref:System.IO.Stream> 에 래핑된 직렬 리소스를 전달 하는 경우 유용할 수 있습니다.       래핑된 파일 핸들에 액세스할 수 없으므로 <xref:System.IO.Stream.Length%2A>및 <xref:System.IO.Stream.Position%2A>속성이 지원 되지 않습니다 및 <xref:System.IO.Stream.Seek%2A>및 <xref:System.IO.Stream.SetLength%2A>메서드가 지원 되지 않습니다.</xref:System.IO.Stream.SetLength%2A> </xref:System.IO.Stream.Seek%2A> </xref:System.IO.Stream.Position%2A> </xref:System.IO.Stream.Length%2A>"
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>개체입니다.</xref:System.IO.Stream>"
  overload: System.IO.Ports.SerialPort.BaseStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: ".NET Compact Framework 응용 프로그램에서 스트림이 하 고 다음 방법 중 하나를 호출한: <> </> *> <> </> *> <> </> *> <> </> *>.NET Compact Framework 기본 스트림이 포함 된 비동기 모델을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaudRate
  id: BaudRate
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 전송 속도 가져오거나 설정 합니다."
  remarks: "전송 속도 사용자의 직렬 드라이버에서 지원 되어야 합니다. 기본값은 9600 비트 / 초 (초)입니다."
  example:
  - "The following example shows how to set the BaudRate property to `9600`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_3_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_3_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_3_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_3_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_2.vb)]"
  syntax:
    content: public int BaudRate { get; set; }
    return:
      type: System.Int32
      description: "전송 속도입니다."
  overload: System.IO.Ports.SerialPort.BaudRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 전송 속도&0; 보다 작은 또는 장치에 대 한 허용 가능한 최대 전송 속도 보다 큽니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BreakState
  id: BreakState
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "중단 신호 상태를 가져오거나 설정 합니다."
  remarks: "중단 신호 상태는 전송을 일시 중단 하 고 줄은 중단 상태 (모든 낮음, 정지 비트 없음)에 배치 하는 경우 발생 해제 될 때까지 합니다. 중단 상태를 입력 하려면이 속성을 설정 `true`합니다. 포트가 중단 상태에 이미 있으면이 속성을 다시 한 번 설정 `true` 예외 되지는지 않습니다. 에 쓸 수 없으면는 <xref:System.IO.Ports.SerialPort>BreakState 동안 개체 `true`.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public bool BreakState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>포트가 중단 상태;에 있을 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.BreakState*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToRead
  id: BytesToRead
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "수신 버퍼에 데이터의 바이트 수를 가져옵니다."
  remarks: "직렬 드라이버의 수신 버퍼 뿐만 아니라의 내부 버퍼가 수신 버퍼에 포함 되어는 <xref:System.IO.Ports.SerialPort>개체 자체입니다.</xref:System.IO.Ports.SerialPort>       둘 다 BytesToRead 속성 나타내기 때문에 <xref:System.IO.Ports.SerialPort>보다 큰 값을 반환할 수 버퍼와 Windows에서 만든 버퍼는 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>만 Windows 만든 버퍼를 나타내는 속성입니다.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToRead { get; }
    return:
      type: System.Int32
      description: "수신 버퍼에 데이터의 바이트 수입니다."
  overload: System.IO.Ports.SerialPort.BytesToRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "포트가 열려 있지 않습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "송신 버퍼에 있는 데이터의 바이트 수를 가져옵니다."
  remarks: "직렬 드라이버의 전송 버퍼 뿐만 아니라의 내부 버퍼가 송신 버퍼에 포함 되어는 <xref:System.IO.Ports.SerialPort>개체 자체입니다.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToWrite { get; }
    return:
      type: System.Int32
      description: "송신 버퍼에 있는 데이터의 바이트 수입니다."
  overload: System.IO.Ports.SerialPort.BytesToWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "포트가 잘못 된 상태입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CDHolding
  id: CDHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "포트 반송파 감지 줄의 상태를 가져옵니다."
  remarks: "포트에 대해 반송파 감지 줄의 상태를 모니터링 하려면이 속성을 사용할 수 있습니다. 응답 없음 일반적으로 나타내며의 수신기 연결이 끊 캐리어가 삭제 되었습니다."
  syntax:
    content: public bool CDHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐리어가 감지 되; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.CDHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Close
  id: Close
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "설정, 포트 연결을 닫습니다는 <xref:System.IO.Ports.SerialPort.IsOpen*>속성을 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 내부 삭제할 <xref:System.IO.Stream>개체입니다.</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort.IsOpen*>"
  remarks: "이 메서드를 호출 닫습니다는 <xref:System.IO.Ports.SerialPort>개체 및 지웁니다에서 수신 및 송신 버퍼.</xref:System.IO.Ports.SerialPort> 이 메서드를 호출는 <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>메서드를 호출 하 여 보호 된 <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName>메서드는 `disposing` 매개 변수 설정 `true`.</xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> </xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>       Close 메서드를 호출한 다음 호출 하기 전에 잠시 대기 하는 모든 응용 프로그램에 대 한 모범 사례는 <xref:System.IO.Ports.SerialPort.Open%2A>메서드를 포트로 수 닫히지 즉시.</xref:System.IO.Ports.SerialPort.Open%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CtsHolding
  id: CtsHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Clear to Send 선의 상태를 가져옵니다."
  remarks: "Clear to Send CTS () 줄 (RTS/CTS) 하드웨어 핸드셰이킹 보낼 송신/지우기로 요청에 사용 됩니다. CTS 줄은 데이터를 보내기 전에 포트를 통해 쿼리 됩니다."
  syntax:
    content: public bool CtsHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Clear to Send 선이 감지 되 면; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.CtsHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataBits
  id: DataBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "바이트 당 데이터 비트의 표준 길이 가져오거나 설정 합니다."
  remarks: "이 속성에 대 한 값 범위는 5부터 8입니다. 기본값은 8입니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_7_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_7_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_7_1.vb)]"
  syntax:
    content: public int DataBits { get; set; }
    return:
      type: System.Int32
      description: "데이터 비트 길이입니다."
  overload: System.IO.Ports.SerialPort.DataBits*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "데이터 비트 값이 5 보다 작은 또는 8 개 보다 많이."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataReceived
  id: DataReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "가 나타내는 포트를 통해 데이터를 수신 했음을 나타냅니다는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  remarks: "데이터 이벤트의 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialData>열거형.</xref:System.IO.Ports.SerialData> 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다.       DataReceived 이벤트는 내부 입력된 버퍼의 바이트 수 및의 값에 관계 없이 Eof 문자 수신 되는 <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>속성.</xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>       <xref:System.IO.Ports.SerialPort.PinChanged>DataReceived, 및 <xref:System.IO.Ports.SerialPort.ErrorReceived>이벤트는 순서 대로 호출 될 수 있고 내부 스트림에 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 사이 약간의 지연이 있을 수 있습니다.</xref:System.IO.Ports.SerialPort.ErrorReceived></xref:System.IO.Ports.SerialPort.PinChanged> 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.       DataReceived 이벤트를 수신 하는 모든 바이트에 대해 발생 보장 되지 않습니다. 사용 하 여는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A>버퍼에서 읽을 남아 데이터의 양을 결정 하는 속성.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       데이터를 받으면 DataReceived 이벤트 보조 스레드에서 일어나는 <xref:System.IO.Ports.SerialPort>개체입니다.</xref:System.IO.Ports.SerialPort> 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form>또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \n  \n [!code-cs[System.IO.Ports.SerialPort#06](~/add/codesnippet/csharp/e-system.io.ports.serial_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#06](~/add/codesnippet/cpp/e-system.io.ports.serial_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#06](~/add/codesnippet/visualbasic/e-system.io.ports.serial_1.vb)]"
  syntax:
    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;
    return:
      type: System.IO.Ports.SerialDataReceivedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "수신 버퍼를 직렬 드라이버의에서 데이터를 삭제 합니다."
  remarks: '이 메서드는 다음 Visual Basic 코드에 해당: `MSComm1.InBufferCount = 0`합니다. 수신 버퍼 지워지지만 전송 버퍼에는 영향을 주지 않습니다.'
  syntax:
    content: public void DiscardInBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardInBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardNull
  id: DiscardNull
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "포트와 수신 버퍼 간의 전송 시 null 바이트를 무시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 값은 일반적으로로 설정 `false`, 이진 전송에 적합 합니다.  이 속성을 설정 `true` UTF32 및 u t f&16;으로 인코딩된 바이트에 대 한 예기치 않은 결과가 발생할 수 있습니다."
  syntax:
    content: public bool DiscardNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>null 바이트를 무시 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.DiscardNull*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 드라이버의에서 데이터를 삭제 버퍼를 전송합니다."
  remarks: '이 메서드는 다음 Visual Basic 코드에 해당: `MSComm1.OutBufferCount = 0`합니다. 전송 버퍼 지워지지만 수신 버퍼에는 영향을 주지 않습니다.'
  syntax:
    content: public void DiscardOutBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public <xref:System.ComponentModel.Component.Dispose%2A>메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>보호 된 Dispose 메서드를 호출 하는 `disposing` 매개 변수 설정 `true`합니다.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>Dispose를 호출 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.IO.Ports.SerialPort>참조.</xref:System.IO.Ports.SerialPort> 이 메서드 호출의 <xref:System.ComponentModel.Component.Dispose%2A>각 참조 된 개체의.</xref:System.ComponentModel.Component.Dispose%2A>       이 메서드를 플러시하고 스트림 개체 닫습니다는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성.</xref:System.IO.Ports.SerialPort.BaseStream%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.IO.Ports.SerialPort.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DsrHolding
  id: DsrHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "데이터 집합 DSR (Ready) 신호의 상태를 가져옵니다."
  remarks: "이 속성은 데이터 집합 준비/데이터 터미널 준비 DSR/DTR () 핸드셰이킹에 사용 됩니다. 데이터 집합 DSR (Ready) 신호가 일반적으로 전송 하 모뎀이 포트에 데이터 전송 또는 수신 데이터에 대 한 준비가 되었음을 나타냅니다."
  syntax:
    content: public bool DsrHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Data Set Ready 신호; 포트에 보내진 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.DsrHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 닫혀 있습니다. 이 때문에 발생할 수 있습니다는 <> </> *> 메서드가 호출 되지 않은 또는 <> </> *> 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DtrEnable
  id: DtrEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 통신 동안 DTR Data Terminal Ready () 신호를 사용할 수 있는 값을 가져오거나 설정 합니다."
  remarks: "DTR data Terminal Ready ()는 일반적으로 XON/XOFF 소프트웨어 핸드셰이킹 및 (RTS/CTS) 하드웨어 핸드셰이킹 및 모뎀 정보를 보내는 송신/지우기로 요청 하는 동안 사용할 수 있습니다."
  syntax:
    content: public bool DtrEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>DTR Data Terminal Ready ();를 사용 하도록 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.DtrEnable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Encoding
  id: Encoding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "텍스트의 전송 전 및 전송 후 변환을 위한 바이트 인코딩을 가져오거나 설정 합니다."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>개체입니다.</xref:System.Text.Encoding> 기본값은 <xref:System.Text.ASCIIEncoding>.</xref:System.Text.ASCIIEncoding>"
  overload: System.IO.Ports.SerialPort.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Encoding 속성으로 설정 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Encoding 속성이 없는 인코딩을로 설정 된 <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, <xref:System.Text.UnicodeEncoding>이며 다음 중 하나 Windows 싱글바이트 인코딩 또는 Windows 더블 바이트 인코딩 중 하나입니다.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>"
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "가 나타내는 포트와 오류가 발생 했음을 나타냅니다는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  remarks: "오류 이벤트에 있는 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialError>열거형.</xref:System.IO.Ports.SerialError> 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다.       <xref:System.IO.Ports.SerialPort.PinChanged><xref:System.IO.Ports.SerialPort.DataReceived>, ErrorReceived 이벤트 순서 대로 호출 될 수 하 고 기본 스트림에서 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 코드 있습니다 하는 경우 사이 약간의 지연이 있을 수 있습니다.</xref:System.IO.Ports.SerialPort.DataReceived></xref:System.IO.Ports.SerialPort.PinChanged> 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.       스트림의 후행 바이트에서 패리티 오류가 발생 하는 경우 추가 바이트가 126의 값을 사용 하 여 입력된 버퍼에 추가 됩니다.       오류를 받으면 ErrorReceived 이벤트 보조 스레드에서 일어나는 <xref:System.IO.Ports.SerialPort>개체입니다.</xref:System.IO.Ports.SerialPort> 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form>또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;
    return:
      type: System.IO.Ports.SerialErrorReceivedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.GetPortNames
  id: GetPortNames
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "현재 컴퓨터에 대 한 직렬 포트 이름의 배열을 가져옵니다."
  remarks: "The order of port names returned from GetPortNames is not specified.  \n  \n Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data."
  example:
  - "The following code example uses the GetPortNames method to display serial port names to the console.  \n  \n [!code-cs[IO.Ports.GetPortNames#1](~/add/codesnippet/csharp/m-system.io.ports.serial_3_1.cs)]\n [!code-cpp[IO.Ports.GetPortNames#1](~/add/codesnippet/cpp/m-system.io.ports.serial_3_1.cpp)]\n [!code-vb[IO.Ports.GetPortNames#1](~/add/codesnippet/visualbasic/m-system.io.ports.serial_3_1.vb)]"
  syntax:
    content: public static string[] GetPortNames ();
    parameters: []
    return:
      type: System.String[]
      description: "현재 컴퓨터에 대 한 직렬 포트 이름의 배열입니다."
  overload: System.IO.Ports.SerialPort.GetPortNames*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "직렬 포트 이름이 쿼리할 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Handshake
  id: Handshake
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "값을 사용 하 여 데이터의 직렬 포트 전송 위한 핸드셰이킹 프로토콜을 가져오거나 설정 합니다. <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref>합니다."
  remarks: "핸드셰이킹 사용 되는 경우 장치에 연결 하는 <xref:System.IO.Ports.SerialPort>개체 이상 없을 때 데이터 전송을 중지 하도록 지시 (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) 버퍼의 바이트.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort> 장치는 버퍼에 1024 바이트 있을 때 데이터를 다시 보내기 시작 하도록 지시 합니다. 장치 1024 바이트를 초과 하는 블록에 데이터를 보내고 버퍼 오버플로가 발생할 수 있습니다.       핸드셰이크 속성이로 설정 된 경우 <xref:System.IO.Ports.Handshake>및 <xref:System.IO.Ports.SerialPort.CtsHolding%2A>로 설정 된 `false`, XOff 문자 전송 되지 것입니다.</xref:System.IO.Ports.SerialPort.CtsHolding%2A> </xref:System.IO.Ports.Handshake> 경우 <xref:System.IO.Ports.SerialPort.CtsHolding%2A>으로 설정 됩니다 `true`, XOff 문자 받게 될 전에 더 많은 데이터를 전송 해야 합니다.</xref:System.IO.Ports.SerialPort.CtsHolding%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public System.IO.Ports.Handshake Handshake { get; set; }
    return:
      type: System.IO.Ports.Handshake
      description: "중 하나는 <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.Handshake*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "전달 된 값이 유효한 값에는 <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> 열거 합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
  type: Field
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "제한 시간 없음을 발생 해야 함을 나타냅니다."
  remarks: "이 값은 함께 사용 되는 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>및 <xref:System.IO.Ports.SerialPort.WriteTimeout%2A>속성.</xref:System.IO.Ports.SerialPort.WriteTimeout%2A> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>"
  syntax:
    content: public const int InfiniteTimeout = -1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.IsOpen
  id: IsOpen
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "열림 또는 닫힘 상태를 나타내는 값을 가져옵니다는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  remarks: "IsOpen 속성이 포트는 호출자가 사용 하기 위해 열려 있는지 여부를 하지 여부를 포트가 열려 컴퓨터에서 모든 응용 프로그램에서 추적 합니다."
  syntax:
    content: public bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>직렬 포트가 열려 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.IsOpen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "전달 된 IsOpen 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "전달 된 IsOpen 값은 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.NewLine
  id: NewLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "에 대 한 호출의 끝을 해석 하는 데 사용 하는 값을 가져오거나 설정 합니다.는 <> </> *> 및 <> </> *> 메서드."
  remarks: "이 속성에 대 한 줄의 끝을 정의 하는 어떤 값 (바이트)를 결정은 <xref:System.IO.Ports.SerialPort.ReadLine%2A>및 <xref:System.IO.Ports.SerialPort.WriteLine%2A>메서드.</xref:System.IO.Ports.SerialPort.WriteLine%2A> </xref:System.IO.Ports.SerialPort.ReadLine%2A> 기본적으로 줄의 끝 값은 <xref:System.Environment.NewLine%2A>.</xref:System.Environment.NewLine%2A> 변경 하면이 다른 값으로 작업할 때 특정 직렬 장치 같은 목적을 위해 다른 값을 사용 하는 경우."
  syntax:
    content: public string NewLine { get; set; }
    return:
      type: System.String
      description: "줄의 끝을 나타내는 값입니다. 기본값은 줄 바꿈 <xref:System.Environment.NewLine*>.</xref:System.Environment.NewLine*>"
  overload: System.IO.Ports.SerialPort.NewLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "속성 값이 비어 있습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "속성 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Open
  id: Open
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "새 직렬 포트 연결을 엽니다."
  remarks: "열린 연결을 하나만 하나만 있을 수 <xref:System.IO.Ports.SerialPort>개체입니다.</xref:System.IO.Ports.SerialPort>       일부 시간 동안 호출한 후 대기 하는 모든 응용 프로그램에 대 한 모범 사례는 <xref:System.IO.Ports.SerialPort.Close%2A>포트 즉시 닫혀 있지 있으므로 Open 메서드를 호출 하려고 하기 전에 메서드.</xref:System.IO.Ports.SerialPort.Close%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_2_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_2_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_2_1.vb)]"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Open*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "이 인스턴스에 대 한 속성 중 하나 이상이 올바르지 않습니다. 예를 들어는 <> </> *>, <> </> *>, 또는 <> </> *> 속성이 잘못 된 값, <> </> *> 보다 작거나 같으면&0;는 <> </> *> 또는 <> </> *> 속성은 보다 작은&0; 이며 않습니다 <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "현재 인스턴스에서 지정된 된 포트는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 가 이미 열려 있습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Parity
  id: Parity
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "패리티 검사 프로토콜을 가져오거나 설정 합니다."
  remarks: "패리티를 1의 개수가 항상 동일 해야 하는 오류 검사 프로시저는-짝수 또는 홀수 인지-비트 오류 없이 전송 되는 각 그룹에 대 한 합니다. 모뎀 간 통신에서는 패리티가에 동의 해야 파티를 전송 하 고 수신 파티 수 있습니다를 배치 하는 매개 변수 중 하나.       스트림의 후행 바이트에서 패리티 오류가 발생 하는 경우 추가 바이트가 126의 값을 사용 하 여 입력된 버퍼에 추가 됩니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_6_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_6_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_6_1.vb)]"
  syntax:
    content: public System.IO.Ports.Parity Parity { get; set; }
    return:
      type: System.IO.Ports.Parity
      description: "패리티 검사 프로토콜을 나타내는 열거형 값 중 하나입니다. 기본값은 <xref href=&quot;System.IO.Ports.Parity&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.Parity*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "전달 된 패리티 값이 유효한 값에는 <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> 열거 합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ParityReplace
  id: ParityReplace
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "패리티 오류가 발생할 때 데이터 스트림의 잘못 된 바이트를 바꾸는 바이트를 가져오거나 설정 합니다."
  remarks: "값을 null 문자로 설정 패리티를 바꿀 사용할 수 없습니다."
  syntax:
    content: public byte ParityReplace { get; set; }
    return:
      type: System.Byte
      description: "잘못 된 바이트를 바꾸는 바이트입니다."
  overload: System.IO.Ports.SerialPort.ParityReplace*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PinChanged
  id: PinChanged
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "가 나타내는 포트에서 데이터가 아닌 신호 이벤트가 발생 했음을 나타냅니다는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  remarks: "직렬 pin 변경 이벤트의 항목 중 하나로 인해 발생할 수 있습니다는 <xref:System.IO.Ports.SerialPinChange>열거형.</xref:System.IO.Ports.SerialPinChange> 운영 체제를 여부이 이벤트를 발생시킬지 여부를 확인 하는 경우 때문에 일부 패리티 오류가 보고 될 수 있습니다. 이벤트의 일환으로, pin의 새 값이 설정 됩니다.       PinChanged 이벤트가 발생할 때는 <xref:System.IO.Ports.SerialPort>개체가 <xref:System.IO.Ports.SerialPort.BreakState%2A>, 하지 포트 <xref:System.IO.Ports.SerialPort.BreakState%2A>.</xref:System.IO.Ports.SerialPort.BreakState%2A> 종료</xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort> 이 동작의 다른 값에 적용 되지 않습니다는 <xref:System.IO.Ports.SerialPinChange>열거형.</xref:System.IO.Ports.SerialPinChange>       PinChanged, <xref:System.IO.Ports.SerialPort.DataReceived>, 및 <xref:System.IO.Ports.SerialPort.ErrorReceived>이벤트는 순서 대로 호출 될 수 있고 내부 스트림에 오류를 보고 하는 때와 이벤트 처리기가 실행 하는 경우 사이 약간의 지연이 있을 수 있습니다.</xref:System.IO.Ports.SerialPort.ErrorReceived> </xref:System.IO.Ports.SerialPort.DataReceived> 한 번에 하나의 이벤트 처리기를 실행할 수 있습니다.       PinChanged 이벤트는 보조 스레드에서 발생 합니다. 이 이벤트는 보조 스레드에서 발생 되므로 하지 주 스레드를 주 스레드에서 UI 요소와 같은 일부 요소를 수정 하는 스레딩 예외를 발생 시킬 수 있습니다. 기본에서 요소를 수정 하는 데 필요한 경우 <xref:System.Windows.Forms.Form>또는 <xref:System.Windows.Forms.Control>, 변경 요청을 사용 하 여 포스트백 <xref:System.Windows.Forms.Control.Invoke%2A>는 적절 한 스레드에에서 작업을 수행 합니다.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;
    return:
      type: System.IO.Ports.SerialPinChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PortName
  id: PortName
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "사용 가능한 모든 COM 포트에 제한 되지 않음 비롯 한 통신 포트를 가져오거나 설정 합니다."
  remarks: "사용 하 여 올바른 포트 이름의 목록을 가져올 수 있습니다는 <xref:System.IO.Ports.SerialPort.GetPortNames%2A>메서드.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public string PortName { get; set; }
    return:
      type: System.String
      description: "통신 포트입니다. 기본값은 c o m&1;입니다."
  overload: System.IO.Ports.SerialPort.PortName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The PortName property was set to a value with a length of zero.  \n  \n -or-  \n  \n The PortName property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "PortName 속성으로 설정 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 포트가 열려 있습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "바이트 수를 읽습니다는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 입력된 버퍼를 바이트 배열의 지정된 된 오프셋에 해당 바이트를 씁니다."
  remarks: "텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.       때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Read 메서드 바이트 수가 equals를 읽을 때 다른 작업을 차단 하지 않습니다 `count` 있지만 직렬 포트에서 아직 읽지 않은 바이트는 합니다."
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "에 대 한 입력을 작성 하는 바이트 배열입니다."
    - id: offset
      type: System.Int32
      description: "오프셋 `buffer` 바이트를 쓸입니다."
    - id: count
      type: System.Int32
      description: "읽을 바이트 수의 최대 수입니다. 이하의 바이트가 읽습니다 `count` 입력된 버퍼의 바이트 수보다 많습니다."
    return:
      type: System.Int32
      description: "읽은 바이트 수입니다."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "전달 된 버퍼가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> 또는 <code> count </code> 의 올바른 영역 외부에 있는 매개 변수는 <code> buffer </code> 전달 되 고 있습니다. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> 의 길이 보다 크면는 <code>buffer</code>합니다."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "바이트를 읽을 수 있는 합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "된 수의 문자를 읽어는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 입력된 버퍼에 지정된 된 오프셋에는 문자 배열을 씁니다."
  remarks: "직렬 포트에서 문자 읽기에 대 한이 방법을 사용 합니다.       텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.       때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는, 읽을 수 있는 문자 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>읽을 문자가 있지만 이러한 문자에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Read 메서드 바이트 수가 equals를 읽을 때 다른 작업을 차단 하지 않습니다 `count` 있지만 직렬 포트에서 아직 읽지 않은 바이트는 합니다."
  syntax:
    content: public int Read (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "에 대 한 입력을 쓸 문자 배열입니다."
    - id: offset
      type: System.Int32
      description: "오프셋 `buffer` 문자를 쓸입니다."
    - id: count
      type: System.Int32
      description: "읽을 문자 최대 수입니다. 더 적은 문자 읽습니다 `count` 입력된 버퍼의 문자 수보다 큽니다."
    return:
      type: System.Int32
      description: "읽은 문자 수입니다."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> 또는 <code> count </code> 의 올바른 영역 외부에 있는 매개 변수는 <code> buffer </code> 전달 되 고 있습니다. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "문자를 읽을 수 있는 합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  id: ReadBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "크기를 가져오거나 설정 합니다.는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 입력된 버퍼."
  remarks: "ReadBufferSize 속성 4096 보다 작은 모든 값을 무시합니다.       ReadBufferSize 속성 Windows에서 만든 버퍼만 나타내므로 보다 작은 값을 반환할 수 있습니다는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A>모두 나타내는 속성의 <xref:System.IO.Ports.SerialPort>버퍼와 Windows 만든 버퍼.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadBufferSize { get; set; }
    return:
      type: System.Int32
      description: "버퍼 크기 (바이트)에서입니다. 기본값은 4096입니다. 최대값은 양의 정수 또는 2147483647입니다."
  overload: System.IO.Ports.SerialPort.ReadBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ReadBufferSize 설정 값이&0; 보다 작은 경우"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 열려 있는 동안 ReadBufferSize 속성이 설정 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ReadBufferSize 속성 홀수 정수 값으로 설정 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadByte
  id: ReadByte
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "1 바이트를 동기적으로 읽습니다.는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 입력된 버퍼."
  remarks: "이 메서드는&1; 바이트를 읽습니다.       ReadByte를 사용 하는 경우 주의 해야 하 고 <xref:System.IO.Ports.SerialPort.ReadChar%2A>함께.</xref:System.IO.Ports.SerialPort.ReadChar%2A> 바이트를 읽고 문자 읽기 간 전환 추가 데이터를 읽을 수 및/또는 기타 의도 하지 않은 동작이 발생할 수 있습니다. 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.      > [!NOTE] > 때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "로 캐스팅 된 바이트는 <xref:System.Int32>, 스트림의 끝을 읽은 경우-1.</xref:System.Int32>"
  overload: System.IO.Ports.SerialPort.ReadByte*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadChar
  id: ReadChar
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "하나의 문자를 동기적으로 읽습니다.는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 입력된 버퍼."
  remarks: "이 메서드는 인코딩에 따라 하나의 전체 문자를 읽습니다.       사용 하 여 주의 기울여야 <xref:System.IO.Ports.SerialPort.ReadByte%2A>와 함께 ReadChar.</xref:System.IO.Ports.SerialPort.ReadByte%2A> 바이트를 읽고 문자 읽기 간 전환 추가 데이터를 읽을 수 및/또는 기타 의도 하지 않은 동작이 발생할 수 있습니다. 텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.      > [!NOTE] > 때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadChar ();
    parameters: []
    return:
      type: System.Int32
      description: "읽은 문자입니다."
  overload: System.IO.Ports.SerialPort.ReadChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadExisting
  id: ReadExisting
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "인코딩을 기준, 스트림 및 입력된 버퍼 모두에서 즉시 사용할 수 있는 모든 바이트를 읽고는 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  remarks: "이 메서드가 반환 된 스트림과의 내부 버퍼의 내용을 <xref:System.IO.Ports.SerialPort>개체를 문자열로.</xref:System.IO.Ports.SerialPort> 이 메서드는 제한 시간을 사용 하지 않습니다. 이 메서드가 후행 바이트 낮추는 내부 버퍼에 유지할 수 참고는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A>0 보다 큰 값입니다.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.      > [!NOTE] >는 <xref:System.IO.Ports.SerialPort>스트림 개체에 포함 된 하지만 데이터를 버퍼링 하는 클래스는 <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName>속성은 그렇지 않습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> </xref:System.IO.Ports.SerialPort> 따라서는 <xref:System.IO.Ports.SerialPort>개체 및 스트림 개체에서 읽을 수 있는 바이트 수가 달라질 수 있습니다.</xref:System.IO.Ports.SerialPort> 바이트에 버퍼링 된 경우는 <xref:System.IO.Ports.SerialPort>개체는 <xref:System.IO.Ports.SerialPort.BytesToRead%2A>해당 값의 이러한 바이트를 포함 하는 속성, 이러한 바이트를에 포함 된 스트림에 액세스할 수 없는 반면는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public string ReadExisting ();
    parameters: []
    return:
      type: System.String
      description: "스트림 및 입력된 버퍼의 내용을 <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> 개체입니다."
  overload: System.IO.Ports.SerialPort.ReadExisting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadLine
  id: ReadLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "까지 읽습니다는 <xref:System.IO.Ports.SerialPort.NewLine*>입력된 버퍼의 값입니다.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "이 메서드가 반환 하지 않는 없지만 <xref:System.IO.Ports.SerialPort.NewLine%2A>값은 <xref:System.IO.Ports.SerialPort.NewLine%2A>입력된 버퍼에서 값을 제거 합니다.</xref:System.IO.Ports.SerialPort.NewLine%2A> </xref:System.IO.Ports.SerialPort.NewLine%2A>       기본적으로 ReadLine 메서드는 줄을 받을 때까지 차단 됩니다. 이 동작이 필요 없는 경우 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>속성을 강제로 ReadLine 메서드가 throw 하는 한 <xref:System.TimeoutException>줄이 포트에서 사용할 수 없는 경우</xref:System.TimeoutException>&0;이 아닌 값을</xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 설정 합니다.       텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.      > [!NOTE] > 때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "첫 번째 까지의 입력된 버퍼의 내용을 <xref:System.IO.Ports.SerialPort.NewLine*>값.</xref:System.IO.Ports.SerialPort.NewLine*>"
  overload: System.IO.Ports.SerialPort.ReadLine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "읽기 작업이 완료 되지 않으면 하는 시간 제한 시간 (밀리초) 가져오거나 설정 합니다."
  remarks: "읽기 제한 시간 값이 원래 Win32 통신 API에서 500 밀리초로 설정 됩니다. 이 속성을 사용 하면이 값을 설정할 수 있습니다. 제한 시간을&0; 보다 큰 값으로 설정 또는 설정할 수 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>,이 경우 제한 시간 없음을 발생 합니다.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>기본값이입니다.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] >의 관리 되지 않는 사용자 `COMMTIMEOUTS` 구조 제한 시간을 표시 하지 않으려면&0;으로 제한 시간 값을 설정 하려는 경우가 있습니다. ReadTimeout 속성 인 제한 시간을 표시 하지 않는 반면 지정 해야 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       이 속성에 영향을 주지 않는 <xref:System.IO.Stream.BeginRead%2A>에서 반환 된 스트림의 메서드는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "제한 시간 (밀리초)에는 읽기 작업을 완료할 때 발생 합니다."
  overload: System.IO.Ports.SerialPort.ReadTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "읽기 제한 시간 값이&0; 보다 작거나 같지 않은 <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  id: ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "지정 된 문자열을 읽어 <code> value </code> 입력된 버퍼에 있습니다."
  remarks: "이 메서드를 지정 된 문자열을 읽어 `value`합니다. 반환 된 문자열을 포함 하지 않는 동안는 `value`, `value` 입력된 버퍼에서 제거 됩니다.       텍스트를 읽고 스트림에서 이진 데이터를 읽는 사이 전환 해야 하는 경우 수동으로 바이트를 읽은 데이터를 디코딩하는 같은 이진 데이터와 텍스트 사이의 경계를 신중 하 게 정의 하는 프로토콜을 선택 합니다.      > [!NOTE] > 때문에 <xref:System.IO.Ports.SerialPort>데이터를 버퍼링 하는 클래스 및에 포함 된 스트림에 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성이 없는는 읽을 수 있는 바이트 수에 대 한 충돌할 수 있습니다.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>바이트를 읽을 수 있지만 이러한 접두사 바이트에 포함 된 스트림에 액세스할 수 없는 속성이 나타낼 수는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성 <xref:System.IO.Ports.SerialPort>클래스</xref:System.IO.Ports.SerialPort> 버퍼링 되었기 때문에</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public string ReadTo (string value);
    parameters:
    - id: value
      type: System.String
      description: "읽기 작업을 중지할 지정 하는 값입니다."
    return:
      type: System.String
      description: "지정 된 까지의 입력된 버퍼의 내용을 <code> value </code>합니다."
  overload: System.IO.Ports.SerialPort.ReadTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "길이 <code> value </code> 매개 변수는 0입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "시간 제한 기간 종료 전에 작업이 완료 되지 않았습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  id: ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "하기 전 내부 입력된 버퍼의 바이트 수를 가져오거나는 <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> 이벤트가 발생 합니다."
  remarks: "<xref:System.IO.Ports.SerialPort.DataReceived>하는 경우에 이벤트는 발생 한 <xref:System.IO.Ports.SerialData>내부 입력된 버퍼의 바이트 수와 ReceivedBytesThreshold 속성의 값에 관계 없이 문자를 수신 합니다.</xref:System.IO.Ports.SerialData> </xref:System.IO.Ports.SerialPort.DataReceived>"
  syntax:
    content: public int ReceivedBytesThreshold { get; set; }
    return:
      type: System.Int32
      description: "하기 전 내부 입력된 버퍼의 바이트 수는 <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> 이벤트가 발생 합니다. 기본값은 1입니다."
  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ReceivedBytesThreshold 값 보다 작거나&0;입니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.RtsEnable
  id: RtsEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 통신 동안 요청을 보낼 (RTS) 신호를 설정할지 나타내는 값을 가져오거나 설정 합니다."
  remarks: "전송 (RTS) 신호를 요청은 일반적으로 (RTS/CTS) 하드웨어 핸드셰이킹 보낼 송신/지우기 요청에 사용 됩니다."
  syntax:
    content: public bool RtsEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>RTS Request to Transmit ();를 사용 하도록 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.RtsEnable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "핸드셰이크가 속성 값을 설정 하거나 검색 하는 동안는 <xref:System.IO.Ports.SerialPort.Handshake*>속성이로 설정 되는 <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> 값 또는 <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> 값.</xref:System.IO.Ports.SerialPort.Handshake*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.StopBits
  id: StopBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "바이트 당 정지 비트의 표준 개수를 가져오거나 설정 합니다."
  remarks: "정지 비트에 대 한 기본값은 <xref:System.IO.Ports.StopBits>.</xref:System.IO.Ports.StopBits>       <xref:System.IO.Ports.StopBits?displayProperty=fullName>값 지원 되지 않습니다.</xref:System.IO.Ports.StopBits?displayProperty=fullName>"
  example:
  - "The following example shows how to set the StopBits property to `One`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_2_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_2_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_2_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_2_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_2.vb)]"
  syntax:
    content: public System.IO.Ports.StopBits StopBits { get; set; }
    return:
      type: System.IO.Ports.StopBits
      description: "중 하나는 <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> 값입니다."
  overload: System.IO.Ports.SerialPort.StopBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "정지 비트 값이 <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref>합니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.String)
  id: Write(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 포트에 지정된 된 문자열을 씁니다."
  remarks: "직렬 포트 출력으로 문자열을 작성 하려는 경우이 메서드를 사용 합니다.       출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A>로 설정 되어 <xref:System.IO.Ports.Handshake>하면 <xref:System.IO.Ports.SerialPort>개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException>장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       기본적으로 <xref:System.IO.Ports.SerialPort>사용 하 여 <xref:System.Text.ASCIIEncoding>에 문자를 인코딩합니다.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 &quot;?&quot;입니다.</xref:System.Text.ASCIIEncoding> 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A>를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (string text);
    parameters:
    - id: text
      type: System.String
      description: "출력에 대 한 문자열입니다."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>str</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "시간 제한 기간 종료 전에 작업이 완료 되지 않았습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "버퍼의 데이터를에서 사용 하 여 직렬 포트에 지정된 된 수의 바이트를 씁니다."
  remarks: "직렬 포트에 대 한 출력을 만들려면 바이트 버퍼에 작성 하려는 경우이 메서드를 사용 합니다.       출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A>로 설정 되어 <xref:System.IO.Ports.Handshake>하면 <xref:System.IO.Ports.SerialPort>개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException>장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       기본적으로 <xref:System.IO.Ports.SerialPort>사용 하 여 <xref:System.Text.ASCIIEncoding>에 문자를 인코딩합니다.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 &quot;?&quot;입니다.</xref:System.Text.ASCIIEncoding> 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A>를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "포트에 쓸 데이터를 포함 하는 바이트 배열입니다."
    - id: offset
      type: System.Int32
      description: "0부터 시작 하는 바이트 오프셋의 `buffer` 포트로 바이트 복사를 시작 하는 매개 변수입니다."
    - id: count
      type: System.Int32
      description: "쓸 바이트 수입니다."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> 또는 <code> count </code> 의 올바른 영역 외부에 있는 매개 변수는 <code> buffer </code> 전달 되 고 있습니다. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> 의 길이 보다 크면는 <code>buffer</code>합니다."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "시간 제한 기간 종료 전에 작업이 완료 되지 않았습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "버퍼의 데이터를에서 사용 하 여 직렬 포트에 지정된 된 수의 문자를 씁니다."
  remarks: "직렬 포트에 대 한 출력을 만들려면 문자 버퍼에 작성 하려는 경우이 메서드를 사용 합니다.       출력 버퍼에 너무 많은 바이트가 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A>로 설정 되어 <xref:System.IO.Ports.Handshake>하면 <xref:System.IO.Ports.SerialPort>개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException>장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       기본적으로 <xref:System.IO.Ports.SerialPort>사용 하 여 <xref:System.Text.ASCIIEncoding>에 문자를 인코딩합니다.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>모든 문자가 127 보다 큰 인코딩하는 방법 (char) 63으로 또는 &quot;?&quot;입니다.</xref:System.Text.ASCIIEncoding> 범위 내에서 추가 문자를 지원 하려면 설정 <xref:System.IO.Ports.SerialPort.Encoding%2A>를 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, 또는 <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "포트에 쓸 데이터를 포함 하는 문자 배열입니다."
    - id: offset
      type: System.Int32
      description: "0부터 시작 하는 바이트 오프셋의 `buffer` 포트로 바이트 복사를 시작 하는 매개 변수입니다."
    - id: count
      type: System.Int32
      description: "쓸 문자 수입니다."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> 또는 <code> count </code> 의 올바른 영역 외부에 있는 매개 변수는 <code> buffer </code> 전달 되 고 있습니다. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> 의 길이 보다 크면는 <code>buffer</code>합니다."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "시간 제한 기간 종료 전에 작업이 완료 되지 않았습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  id: WriteBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "직렬 포트 출력 버퍼의 크기를 가져오거나 설정 합니다."
  remarks: "WriteBufferSize 속성은 2048 보다 작은 모든 값을 무시 합니다."
  syntax:
    content: public int WriteBufferSize { get; set; }
    return:
      type: System.Int32
      description: "출력 버퍼의 크기입니다. 기본값은 2048입니다."
  overload: System.IO.Ports.SerialPort.WriteBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "WriteBufferSize 값 보다 작거나&0;입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스트림이 열려 있는 동안 WriteBufferSize 속성이 설정 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "WriteBufferSize 속성 홀수 정수 값으로 설정 되었습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "지정된 된 문자열을 작성 및 <xref:System.IO.Ports.SerialPort.NewLine*>값을 출력 버퍼.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "입력된 버퍼에서 너무 많은 바이트가 하는 경우 및 <xref:System.IO.Ports.SerialPort.Handshake%2A>로 설정 되어 <xref:System.IO.Ports.Handshake>하면 <xref:System.IO.Ports.SerialPort>개체를 발생 시킬 수는 <xref:System.ServiceProcess.TimeoutException>장치를 추가 데이터를 받아들일 준비가 될 때까지 대기 하는 동안.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       서 면된 출력은 포함 된 <xref:System.IO.Ports.SerialPort.NewLine%2A>문자열.</xref:System.IO.Ports.SerialPort.NewLine%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public void WriteLine (string text);
    parameters:
    - id: text
      type: System.String
      description: "출력 버퍼에 쓸 문자열입니다."
  overload: System.IO.Ports.SerialPort.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정한 포트가 열려 있지 않습니다."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "WriteLine 메서드 스트림에 쓸 수 없습니다."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "쓰기 작업이 완료 되지 않으면 하는 시간 제한 시간 (밀리초) 가져오거나 설정 합니다."
  remarks: "쓰기 제한 시간 값이 원래 Win32 통신 API에서 500 밀리초로 설정 됩니다. 이 속성을 사용 하면이 값을 설정할 수 있습니다. 제한 시간을&0; 보다 큰 값으로 설정 또는 설정할 수 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>,이 경우 제한 시간 없음을 발생 합니다.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>기본값이입니다.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] >의 관리 되지 않는 사용자 `COMMTIMEOUTS` 구조 제한 시간을 표시 하지 않으려면&0;으로 제한 시간 값을 설정 하려는 경우가 있습니다. WriteTimeout 속성 인 제한 시간을 표시 하지 않는 반면 지정 해야 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       이 속성에 영향을 주지 않는 <xref:System.IO.Stream.BeginWrite%2A>에서 반환 된 스트림의 메서드는 <xref:System.IO.Ports.SerialPort.BaseStream%2A>속성.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "제한 시간 (밀리초)의 수입니다. 기본값은 <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>합니다."
  overload: System.IO.Ports.SerialPort.WriteTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "WriteTimeout 값이&0; 보다 작거나 같지 않은 <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.Ports.SerialPort.#ctor
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: System.IO.Ports.SerialPort.BaseStream
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Ports.SerialPort.BaudRate
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Ports.SerialPort.BytesToRead
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
- uid: System.IO.Ports.SerialPort.CtsHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DataReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
- uid: System.IO.Ports.SerialDataReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialDataReceivedEventHandler
  nameWithType: SerialDataReceivedEventHandler
  fullName: System.IO.Ports.SerialDataReceivedEventHandler
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
- uid: System.IO.Ports.SerialPort.DiscardNull
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
- uid: System.IO.Ports.SerialPort.DsrHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Ports.SerialPort.ErrorReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
- uid: System.IO.Ports.SerialErrorReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialErrorReceivedEventHandler
  nameWithType: SerialErrorReceivedEventHandler
  fullName: System.IO.Ports.SerialErrorReceivedEventHandler
- uid: System.IO.Ports.SerialPort.GetPortNames
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Handshake
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
- uid: System.IO.Ports.Handshake
  parent: System.IO.Ports
  isExternal: false
  name: Handshake
  nameWithType: Handshake
  fullName: System.IO.Ports.Handshake
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
- uid: System.IO.Ports.SerialPort.IsOpen
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
- uid: System.IO.Ports.SerialPort.Parity
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Ports.SerialPort.PinChanged
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
- uid: System.IO.Ports.SerialPinChangedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialPinChangedEventHandler
  nameWithType: SerialPinChangedEventHandler
  fullName: System.IO.Ports.SerialPinChangedEventHandler
- uid: System.IO.Ports.SerialPort.PortName
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
- uid: System.IO.Ports.SerialPort.ReadChar
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
- uid: System.IO.Ports.SerialPort.ReadExisting
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
- uid: System.IO.Ports.SerialPort.ReadLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
- uid: System.IO.Ports.SerialPort.ReadTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
- uid: System.IO.Ports.SerialPort.WriteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
- uid: System.IO.Ports.SerialPort.#ctor*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort.SerialPort
- uid: System.IO.Ports.SerialPort.BaseStream*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
- uid: System.IO.Ports.SerialPort.BaudRate*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
- uid: System.IO.Ports.SerialPort.BytesToRead*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close
  nameWithType: SerialPort.Close
- uid: System.IO.Ports.SerialPort.CtsHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DiscardInBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
- uid: System.IO.Ports.SerialPort.DiscardNull*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
- uid: System.IO.Ports.SerialPort.Dispose*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose
  nameWithType: SerialPort.Dispose
- uid: System.IO.Ports.SerialPort.DsrHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
- uid: System.IO.Ports.SerialPort.GetPortNames*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames
  nameWithType: SerialPort.GetPortNames
- uid: System.IO.Ports.SerialPort.Handshake*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
- uid: System.IO.Ports.SerialPort.IsOpen*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open
  nameWithType: SerialPort.Open
- uid: System.IO.Ports.SerialPort.Parity*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
- uid: System.IO.Ports.SerialPort.PortName*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read
  nameWithType: SerialPort.Read
- uid: System.IO.Ports.SerialPort.ReadBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte
  nameWithType: SerialPort.ReadByte
- uid: System.IO.Ports.SerialPort.ReadChar*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar
  nameWithType: SerialPort.ReadChar
- uid: System.IO.Ports.SerialPort.ReadExisting*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting
  nameWithType: SerialPort.ReadExisting
- uid: System.IO.Ports.SerialPort.ReadLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine
  nameWithType: SerialPort.ReadLine
- uid: System.IO.Ports.SerialPort.ReadTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo
  nameWithType: SerialPort.ReadTo
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write
  nameWithType: SerialPort.Write
- uid: System.IO.Ports.SerialPort.WriteBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine
  nameWithType: SerialPort.WriteLine
- uid: System.IO.Ports.SerialPort.WriteTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
