### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  id: SecurityTokenManager
  children:
  - System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  langs:
  - csharp
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
  type: Class
  summary: "보안 토큰은 제공, 인증 및 직렬화 하는 방법을 지정 하는 보안 토큰 관리자를 나타냅니다."
  remarks: "사용자 지정 보안 토큰, 보안 토큰 인증자 또는 보안 토큰 공급자가 필요한 SecurityTokenManager 클래스를 사용 합니다. 처리 하는 사용자 지정 보안 토큰을 사용 하 여 자격 증명을 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 지원 하지 않습니다. 사용자 지정 보안 토큰 인증자를 사용 하 여는 경우 인증 방법 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 제공 충분 하지 않습니다. 보안 토큰 인증자를 반환 하는 SecurityTokenManager 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29> 보안 토큰 공급자는 나가는 SOAP 메시지에 대 한 보안 토큰을 제공합니다. 보안 토큰 공급자를 반환 하는 SecurityTokenManager 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]사용자 지정 보안 토큰 인증자 및 보안 토큰 공급자를 사용 하 여 참조 [사용자 지정 자격 증명 및 자격 증명 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]사용자 지정 보안 토큰을 만드는 참조 [하는 방법: 사용자 지정 토큰 만들기](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public abstract class SecurityTokenManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SecurityTokenManager ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰 요구 사항을 충족 하는 보안 토큰 인증자를 가져옵니다."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>클래스는 나가는 SOAP 메시지에 대 한 보안 토큰을 제공 하 고 들어오는 SOAP 메시지의 보안 토큰을 인증할 수 있는 형식을 제공 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenManager> 에 지정 된 조건과 일치 하는 보안 토큰을 인증할 수 있는 클래스를 반환 하는 CreateSecurityTokenAuthenticator 메서드는 `tokenRequirement` 매개 변수입니다."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> 보안 토큰 요구 사항을 지정 하는 합니다."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> 결정 하는 지정 된 보안 토큰 요구 사항과 일치 하는 보안 토큰입니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> 지정 된 요구 사항을 충족 하는 들어오는 SOAP 메시지의 보안 토큰을 인증 하는 합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰 요구 사항과 일치 하는 보안 토큰 공급자를 가져옵니다."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>클래스는 나가는 SOAP 메시지에 대 한 보안 토큰을 제공 하 고 들어오는 SOAP 메시지의 보안 토큰을 인증할 수 있는 형식을 제공 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenManager> 에 지정 된 조건과 일치 하는 보안 토큰을 제공할 수 있는 보안 토큰을 인증할 수 있는 클래스를 반환 하는 CreateSecurityTokenProvider 메서드는 `tokenRequirement` 매개 변수입니다."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> 보안 토큰 요구 사항을 지정 하는 합니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> 보내는 SOAP 메시지에 대 한 지정된 된 요구 사항과 일치 하는 보안 토큰을 제공 하는 합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정된 된 버전의 WS-의 보안 토큰을 serialize 할 수 있는 XML serializer를 가져옵니다 * 사양입니다."
  remarks: "에 사용자 지정 토큰에 대 한 직렬화 지원을 추가 하려면에서 클래스를 파생 <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>CreateSecurityTokenSerializer 메서드에 대 한 해당 클래스의 인스턴스를 반환 합니다.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer> <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>클래스에서 파생 되는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>클래스, 직렬화 및 역직렬화와 함께 제공 되는 보안 토큰의 수 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> </xref:System.ServiceModel.Security.WSSecurityTokenSerializer> 따라서 사용자 지정 토큰에 대 한 지원을 serializer에 추가할에서 가상 메서드를 재정의 <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>클래스 있는지 검사 원하는 보안 토큰이 사용자 지정 토큰 인지 하 고, 그렇지 않은 경우 기본 클래스 메서드를 호출 하는 코드를 추가 합니다.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref> 지정 하는 WS-* 보안 토큰을 준수 하는 사양 버전입니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> 를 보안 토큰을 serialize 합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager.SecurityTokenManager
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer
