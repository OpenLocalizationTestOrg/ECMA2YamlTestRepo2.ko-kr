### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewMode
  id: DetailsViewMode
  children:
  - System.Web.UI.WebControls.DetailsViewMode.Edit
  - System.Web.UI.WebControls.DetailsViewMode.Insert
  - System.Web.UI.WebControls.DetailsViewMode.ReadOnly
  langs:
  - csharp
  name: DetailsViewMode
  nameWithType: DetailsViewMode
  fullName: System.Web.UI.WebControls.DetailsViewMode
  type: Enum
  summary: "다른 데이터 입력 모드를 나타냅니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "DetailsViewMode 열거형의 데이터 입력 모드를 나타내는 데 사용 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 현재 모드를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 삽입 또는 업데이트 작업 후의 <xref:System.Web.UI.WebControls.DetailsView>제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 기본적으로 컨트롤이 읽기 전용 모드로 돌아갑니다. 다른 모드를 설정 하 여 반환를 지정할 수는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 사용 하 여 모드를 프로그래밍 방식으로 변경 하는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>메서드.</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경, 다음 표에 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView>      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>| 발생 경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 사이 변경 편집, 삽입 및 읽기-쓰기 모드로 모드는 실제로 변경 되기 전에 하 려 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 이 이벤트는 자주 모드 변경을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>| 다음에 발생 한 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 편집, 삽입 또는 읽기 전용 모드에서 다른 모드로 변경 되었습니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이 이벤트는 작업을 수행 하는 대개 때는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경 됩니다. |</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode after an update operation by setting the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property to `DetailsViewMode.Edit`.  \n  \n [!code-cs[DetailsViewDefaultMode#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_329_1.aspx)]\n [!code-vb[DetailsViewDefaultMode#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_329_1.aspx)]"
  syntax:
    content: public enum DetailsViewMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewMode.Edit
  id: Edit
  parent: System.Web.UI.WebControls.DetailsViewMode
  langs:
  - csharp
  name: Edit
  nameWithType: DetailsViewMode.Edit
  fullName: System.Web.UI.WebControls.DetailsViewMode.Edit
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "기존 레코드의 값을 업데이트할 수 있는 편집 모드입니다."
  syntax:
    content: Edit
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewMode.Insert
  id: Insert
  parent: System.Web.UI.WebControls.DetailsViewMode
  langs:
  - csharp
  name: Insert
  nameWithType: DetailsViewMode.Insert
  fullName: System.Web.UI.WebControls.DetailsViewMode.Insert
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 레코드에 대 한 값을 입력 하려면 사용자 수 있도록 하는 삽입 모드입니다."
  syntax:
    content: Insert
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewMode.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.DetailsViewMode
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DetailsViewMode.ReadOnly
  fullName: System.Web.UI.WebControls.DetailsViewMode.ReadOnly
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자 레코드의 값을 수정 하지 못하게 하는 표시 모드입니다."
  syntax:
    content: ReadOnly
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Web.UI.WebControls.DetailsViewMode.Edit
  parent: System.Web.UI.WebControls.DetailsViewMode
  isExternal: false
  name: Edit
  nameWithType: DetailsViewMode.Edit
  fullName: System.Web.UI.WebControls.DetailsViewMode.Edit
- uid: System.Web.UI.WebControls.DetailsViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewMode
  nameWithType: DetailsViewMode
  fullName: System.Web.UI.WebControls.DetailsViewMode
- uid: System.Web.UI.WebControls.DetailsViewMode.Insert
  parent: System.Web.UI.WebControls.DetailsViewMode
  isExternal: false
  name: Insert
  nameWithType: DetailsViewMode.Insert
  fullName: System.Web.UI.WebControls.DetailsViewMode.Insert
- uid: System.Web.UI.WebControls.DetailsViewMode.ReadOnly
  parent: System.Web.UI.WebControls.DetailsViewMode
  isExternal: false
  name: ReadOnly
  nameWithType: DetailsViewMode.ReadOnly
  fullName: System.Web.UI.WebControls.DetailsViewMode.ReadOnly
