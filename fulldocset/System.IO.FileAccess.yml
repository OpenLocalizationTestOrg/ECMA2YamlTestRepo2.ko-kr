### YamlMime:ManagedReference
items:
- uid: System.IO.FileAccess
  id: FileAccess
  children:
  - System.IO.FileAccess.Read
  - System.IO.FileAccess.ReadWrite
  - System.IO.FileAccess.Write
  langs:
  - csharp
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
  type: Enum
  summary: "읽기, 쓰기 또는 파일에 대 한 읽기/쓰기 액세스에 대 한 상수를 정의 합니다."
  remarks: "파일을 파일에 텍스트 쓰기의 예제를 보려면 [하는 방법: 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)합니다. 파일에서 읽는 텍스트의 예를 들어 참조 [하는 방법: 파일에서 텍스트 읽기](~/add/includes/ajax-current-ext-md.md)합니다. 읽기 및 쓰기 이진 파일의 예제를 보려면 [하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기](~/add/includes/ajax-current-ext-md.md)합니다.       A `FileAccess` 대부분에 대 한 생성자의 매개 변수를 지정 하는 <xref:System.IO.File>, <xref:System.IO.FileInfo>, <xref:System.IO.FileStream>, 및 사용자의 액세스 권한 종류를 제어 하는 다른 생성자에 대 한 파일.</xref:System.IO.FileStream> </xref:System.IO.FileInfo> </xref:System.IO.File>"
  example:
  - "The following `FileStream` constructor grants read-only access to an existing file (`FileAccess.Read`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.fileaccess_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.fileaccess_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.fileaccess_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileAccess.Read
  id: Read
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일에 대 한 읽기 액세스 합니다. 데이터 파일에서 읽을 수 있습니다. 사용 권한과 결합할 <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref> 읽기/쓰기 액세스입니다."
  syntax:
    content: Read
    return:
      type: System.IO.FileAccess
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.ReadWrite
  id: ReadWrite
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "읽기 및 쓰기 파일에 액세스 합니다. 데이터에 기록 하 고 파일에서 읽을 수 있습니다."
  syntax:
    content: ReadWrite
    return:
      type: System.IO.FileAccess
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.Write
  id: Write
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일에 쓰기 액세스입니다. 데이터 파일에 쓸 수 있습니다. 사용 권한과 결합할 <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref> 읽기/쓰기 액세스입니다."
  syntax:
    content: Write
    return:
      type: System.IO.FileAccess
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileAccess.Read
  parent: System.IO.FileAccess
  isExternal: false
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileAccess.ReadWrite
  parent: System.IO.FileAccess
  isExternal: false
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
- uid: System.IO.FileAccess.Write
  parent: System.IO.FileAccess
  isExternal: false
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
