### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEvent
  id: RoutedEvent
  children:
  - System.Windows.RoutedEvent.AddOwner(System.Type)
  - System.Windows.RoutedEvent.HandlerType
  - System.Windows.RoutedEvent.Name
  - System.Windows.RoutedEvent.OwnerType
  - System.Windows.RoutedEvent.RoutingStrategy
  - System.Windows.RoutedEvent.ToString
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
  type: Class
  summary: "나타냅니다 및 라우트된 이벤트를 식별 하 고 해당 특성을 선언 합니다."
  remarks: "이 클래스에 포함 된 <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, 및 <xref:System.Windows.RoutedEvent.OwnerType%2A>속성.</xref:System.Windows.RoutedEvent.OwnerType%2A> </xref:System.Windows.RoutedEvent.HandlerType%2A> </xref:System.Windows.RoutedEvent.RoutingStrategy%2A> </xref:System.Windows.RoutedEvent.Name%2A> 이러한 멤버 중 null 값을 가질 수 있습니다.       이 클래스는 단독으로 값을 제공 하는 데 사용 되는 XAML 사용에는 <xref:System.Windows.EventTrigger.RoutedEvent%2A>속성은 <xref:System.Windows.EventTrigger>(또는 파생 클래스) 또는 <xref:System.Windows.EventSetter.Event%2A>속성의는 <xref:System.Windows.EventSetter>(또는 파생 클래스).</xref:System.Windows.EventSetter> </xref:System.Windows.EventSetter.Event%2A> </xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger.RoutedEvent%2A> 에 대 한 자세한 내용은 <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, XAML에서 사용 된 클래스에 대 한 참조 및 [라우트된 이벤트 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.EventSetter> </xref:System.Windows.EventTrigger>      <a name=&quot;xamlAttributeUsage_RoutedEvent&quot;></a># # XAML 특성 사용 ```   <object property=&quot;eventName&quot;/>   - or -   <object property=&quot;type.eventName&quot;/>      ``` <a name=&quot;xamlValues_RoutedEvent&quot;> </a> # # XAML 값 *eventName* 정규화 되지 않은 이벤트 이름, 해당 하는 <xref:System.Windows.RoutedEvent.Name%2A>RoutedEvent 필드의 속성, RoutedEvent 식별자 필드 형식 내에서 실제 멤버 이름이 아닙니다.</xref:System.Windows.RoutedEvent.Name%2A>       한정자 없이 *eventName* <xref:System.Windows.Style.TargetType%2A>현재 스타일의 포함 된 <xref:System.Windows.EventSetter>나 <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> </xref:System.Windows.EventSetter> </xref:System.Windows.Style.TargetType%2A> 되는 형식에서 볼 수 있는 이벤트의 이름 이어야 합니다       *형식* 형식을 이벤트 이름을 한 정하는 데 사용 해야 합니다. 접두사 없이 제공 된 경우 *형식* 기본 XAML 네임 스페이스 안에 있는 형식 이어야 하는데 기존 CLR 형식에 매핑할 수 있는 합니다. 사용자 지정 이벤트 또는 외부의 기본 XAML 네임 스페이스에 대 한 문자열에서 형식을에 있는 이벤트의 *형식* 매핑된 XAML 네임 스페이스에 대 한 접두사를 포함할 수 있습니다. 해당 XAML 네임 스페이스 지원 CLR 형식으로 매핑할 수 있는 XAML 형식을 포함 해야 하 고 해당 CLR 형식에서 원하는 라우트된 이벤트 식별자를 정의 해야 합니다. XAML 네임 스페이스 매핑에 대 한 자세한 내용은 참조 하십시오. [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑을 Namespace](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public sealed class RoutedEvent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  id: AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "다른 소유자 형식을 나타내는 라우트된 이벤트와 연결 된 <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> 인스턴스를 선택한 이벤트 및 처리의 라우팅을 사용할 수 있게 합니다."
  remarks: "소유자 형식은 내부적으로 사용 이벤트를 확인할 때 이름으로."
  example:
  - "The following example adds the current class as another owner of an event defined in a different class. Here, `AnotherEditContainer` is the current class, and the `EditStateChangedEvent`<xref:System.Windows.RoutedEvent> field is defined as a member of that class. The `MyEditContainer` class originally defined the event, registering it with the identically named `EditStateChangedEvent`identifier.  \n  \n [!code-vb[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#routedeventaddowner)]\n [!code-cs[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#routedeventaddowner)]"
  syntax:
    content: public System.Windows.RoutedEvent AddOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "라우트된 이벤트 추가 되는 형식."
    return:
      type: System.Windows.RoutedEvent
      description: "이벤트에 대 한 식별자 필드입니다. 반환 값이 설정는 공용 정적 읽기 전용 필드는 소유 하는 형식에서 라우트된 이벤트의 표현에 대 한 식별자를 저장 하는 것 같습니다. 이 필드는 일반적으로 공용 액세스 정의 사용자 코드를 사용 하 여 때 라우트된 이벤트에 대 한 인스턴스 처리기를 연결 하기 위해 필드를 참조 해야 하기 때문에 <xref:System.Windows.UIElement.AddHandler*>유틸리티 메서드가.</xref:System.Windows.UIElement.AddHandler*>"
  overload: System.Windows.RoutedEvent.AddOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.HandlerType
  id: HandlerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "라우트된 이벤트의 처리기 유형을 가져옵니다."
  remarks: "처리기 형식이이 <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> 나타내는 이벤트를 수신 하는 처리기를 구현할 때 사용 해야 하는 이벤트 처리기 대리자"
  syntax:
    content: public Type HandlerType { get; }
    return:
      type: System.Type
      description: "라우트된 이벤트의 처리기 형식입니다."
  overload: System.Windows.RoutedEvent.HandlerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.Name
  id: Name
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "라우트된 이벤트의 식별 이름을 가져옵니다."
  remarks: "라우트된 이벤트의 이름이 각 소유자 형식 내에서 고유 해야 하지만 전역적으로 고유 해야 하는 데 필요 하지 않습니다.       이 속성의 값 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> 를 정의 하는 방법</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에서 시작 특히 이름의 값은 고 `name` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에 전달 된 매개 변수 값"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "라우트된 이벤트의 이름입니다."
  overload: System.Windows.RoutedEvent.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.OwnerType
  id: OwnerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "라우트된 이벤트의 등록 된 소유자 형식을 가져옵니다."
  remarks: "이 유형은 반드시 <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> 으로 제한 된 모든 개체 유형일 수 있습니다. 소유자가 추가 된 라우트된 이벤트의 경우,이 속성은 첫 번째 선언 된 소유자를 반환 합니다.       이 속성의 값 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> 를 정의 하는 방법</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에서 시작 OwnerType의 값은 특히는 `ownerType` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에 전달 된 매개 변수 값"
  syntax:
    content: public Type OwnerType { get; }
    return:
      type: System.Type
      description: "라우트된 이벤트의 소유자 형식입니다."
  overload: System.Windows.RoutedEvent.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.RoutingStrategy
  id: RoutingStrategy
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "라우트된 이벤트의 라우팅 전략을 가져옵니다."
  remarks: "규칙에 따라 터널링 라우트된 이벤트의 이름 접두사 &quot;미리 보기&quot; 및 버블링 이벤트가 정의 사용할 합니다. 드물지만 있을 것 터널링 버전과 일치 하는 된 버블링 버전 이어야 합니다. 자세한 내용은 참조 [하는 방법: 사용자 지정 라우트된 이벤트를 만들](~/add/includes/ajax-current-ext-md.md)합니다.       이 속성의 값 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> 를 정의 하는 방법</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에서 시작 특히 RoutingStrategy의 값은 고 `routingStrategy` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 에 전달 된 매개 변수 값"
  syntax:
    content: public System.Windows.RoutingStrategy RoutingStrategy { get; }
    return:
      type: System.Windows.RoutingStrategy
      description: "열거형 값 중 하나입니다. 기본값은 열거형 기본 <xref href=&quot;System.Windows.RoutingStrategy&quot;> </xref>합니다."
  overload: System.Windows.RoutedEvent.RoutingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.ToString
  id: ToString
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "이 문자열 표현을 반환 <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "동일한 <xref:System.Windows.RoutedEvent.Name*>.</xref:System.Windows.RoutedEvent.Name*> 반환 된 값이 개체에 대 한 문자열 표현"
  overload: System.Windows.RoutedEvent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.RoutedEvent.HandlerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutedEvent.OwnerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
- uid: System.Windows.RoutedEvent.AddOwner*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner
  nameWithType: RoutedEvent.AddOwner
- uid: System.Windows.RoutedEvent.HandlerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
- uid: System.Windows.RoutedEvent.OwnerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString
  nameWithType: RoutedEvent.ToString
