### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsView
  id: DetailsView
  children:
  - System.Web.UI.WebControls.DetailsView.#ctor
  - System.Web.UI.WebControls.DetailsView.AllowPaging
  - System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  - System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  - System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  - System.Web.UI.WebControls.DetailsView.BackImageUrl
  - System.Web.UI.WebControls.DetailsView.BottomPagerRow
  - System.Web.UI.WebControls.DetailsView.Caption
  - System.Web.UI.WebControls.DetailsView.CaptionAlign
  - System.Web.UI.WebControls.DetailsView.CellPadding
  - System.Web.UI.WebControls.DetailsView.CellSpacing
  - System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  - System.Web.UI.WebControls.DetailsView.CommandRowStyle
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  - System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  - System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateControlStyle
  - System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.DetailsView.CreateTable
  - System.Web.UI.WebControls.DetailsView.CurrentMode
  - System.Web.UI.WebControls.DetailsView.DataBind
  - System.Web.UI.WebControls.DetailsView.DataItem
  - System.Web.UI.WebControls.DetailsView.DataItemCount
  - System.Web.UI.WebControls.DetailsView.DataItemIndex
  - System.Web.UI.WebControls.DetailsView.DataKey
  - System.Web.UI.WebControls.DetailsView.DataKeyNames
  - System.Web.UI.WebControls.DetailsView.DefaultMode
  - System.Web.UI.WebControls.DetailsView.DeleteItem
  - System.Web.UI.WebControls.DetailsView.DeleteMethod
  - System.Web.UI.WebControls.DetailsView.EditRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  - System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  - System.Web.UI.WebControls.DetailsView.EmptyDataText
  - System.Web.UI.WebControls.DetailsView.EnableModelValidation
  - System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  - System.Web.UI.WebControls.DetailsView.EnsureDataBound
  - System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  - System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  - System.Web.UI.WebControls.DetailsView.Fields
  - System.Web.UI.WebControls.DetailsView.FooterRow
  - System.Web.UI.WebControls.DetailsView.FooterStyle
  - System.Web.UI.WebControls.DetailsView.FooterTemplate
  - System.Web.UI.WebControls.DetailsView.FooterText
  - System.Web.UI.WebControls.DetailsView.GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.GridLines
  - System.Web.UI.WebControls.DetailsView.HeaderRow
  - System.Web.UI.WebControls.DetailsView.HeaderStyle
  - System.Web.UI.WebControls.DetailsView.HeaderTemplate
  - System.Web.UI.WebControls.DetailsView.HeaderText
  - System.Web.UI.WebControls.DetailsView.HorizontalAlign
  - System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.InsertMethod
  - System.Web.UI.WebControls.DetailsView.InsertRowStyle
  - System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.DetailsView.ItemCommand
  - System.Web.UI.WebControls.DetailsView.ItemCreated
  - System.Web.UI.WebControls.DetailsView.ItemDeleted
  - System.Web.UI.WebControls.DetailsView.ItemDeleting
  - System.Web.UI.WebControls.DetailsView.ItemInserted
  - System.Web.UI.WebControls.DetailsView.ItemInserting
  - System.Web.UI.WebControls.DetailsView.ItemUpdated
  - System.Web.UI.WebControls.DetailsView.ItemUpdating
  - System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DetailsView.ModeChanged
  - System.Web.UI.WebControls.DetailsView.ModeChanging
  - System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.DetailsView.PageCount
  - System.Web.UI.WebControls.DetailsView.PageIndex
  - System.Web.UI.WebControls.DetailsView.PageIndexChanged
  - System.Web.UI.WebControls.DetailsView.PageIndexChanging
  - System.Web.UI.WebControls.DetailsView.PagerSettings
  - System.Web.UI.WebControls.DetailsView.PagerStyle
  - System.Web.UI.WebControls.DetailsView.PagerTemplate
  - System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  - System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DetailsView.Rows
  - System.Web.UI.WebControls.DetailsView.RowsGenerator
  - System.Web.UI.WebControls.DetailsView.RowStyle
  - System.Web.UI.WebControls.DetailsView.SaveControlState
  - System.Web.UI.WebControls.DetailsView.SaveViewState
  - System.Web.UI.WebControls.DetailsView.SelectedValue
  - System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  - System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.DetailsView.TagKey
  - System.Web.UI.WebControls.DetailsView.TopPagerRow
  - System.Web.UI.WebControls.DetailsView.TrackViewState
  - System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.DetailsView.UpdateMethod
  langs:
  - csharp
  name: DetailsView
  nameWithType: DetailsView
  fullName: System.Web.UI.WebControls.DetailsView
  type: Class
  summary: "각 데이터 행이 레코드의 필드를 나타내는 테이블의 데이터 원본에서 단일 레코드의 값을 표시 합니다. DetailsView 컨트롤 편집, 삭제 및 레코드를 삽입할 수 있습니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [행 필드](#row_fields)      -   [데이터 바인딩](#binding_to_data)      -   [보안](#security)      -   [데이터 작업](#data_operations)      -   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)      -   [이벤트](#events)      -   [내게 필요한 옵션](#Accessibility)      -   [선언적 구문](#DeclarativeSyntax) <a name=&quot;introduction&quot;> </a> # # 레코드의 각 필드는 테이블의 행에 표시 되는 위치는 테이블의 데이터 원본에서 단일 레코드를 표시 하려면 소개 The DetailsView 컨트롤을 사용 합니다.       와 함께에서 사용할 수는 <xref:System.Web.UI.WebControls.GridView>마스터-세부 시나리오에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.GridView> DetailsView 컨트롤에는 다음 기능을 지원 합니다.- <xref:System.Web.UI.WebControls.SqlDataSource>.</xref:System.Web.UI.WebControls.SqlDataSource> 같은 데이터 소스 컨트롤에 바인딩      -기본 제공 삽입 기능입니다.      -업데이트 및 삭제 기능 기본 제공 합니다.      -기본 제공 페이징 기능입니다.      동적으로 속성을 설정 하려면 DetailsView 개체 모델에 대 한 프로그래밍 액세스 이벤트를 처리 등에입니다.      테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.      <a name=&quot;row_fields&quot;></a># # 행 필드 DetailsView 컨트롤의 각 데이터 행 필드 컨트롤을 선언 하 여 생성 됩니다. 여러 행 필드 형식을 컨트롤의 행의 동작을 결정 합니다. 필드 컨트롤 <xref:System.Web.UI.WebControls.DataControlField>.</xref:System.Web.UI.WebControls.DataControlField> 에서 파생 다음 표에서 사용할 수 있는 여러 행 필드 형식을 나열 합니다.      | 열 필드 형식 | 설명 |   |-----------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundField>| 텍스트로 데이터 원본에는 필드의 값을 표시 합니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| DetailsView 컨트롤에 명령 단추를 표시 합니다.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.BoundField> 프로그램 추가 / 제거 단추와 같은 사용자 지정 단추 컨트롤을 사용 하 여 행을 표시할 수 있습니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| DetailsView 컨트롤에서 확인란을 표시 합니다.</xref:System.Web.UI.WebControls.CheckBoxField> 이 행 필드 형식은 부울 값을 사용 하는 필드를 표시 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 기본 제공 명령 표시 편집을 수행 하는 단추 삽입 또는 DetailsView 컨트롤에서 작업을 삭제 합니다. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| 하이퍼링크는 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.CommandField> 이 행 필드 형식 하이퍼링크의 URL로 두 번째 필드를 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.ImageField>| DetailsView 컨트롤에 이미지를 표시 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 지정된 된 템플릿에 따라 DetailsView 컨트롤에 행에 대 한 사용자 지정 콘텐츠를 표시 합니다.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.ImageField> 이 행 필드 형식에서는 사용자 지정 행 필드를 만들 수 있습니다. |       기본적으로는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>속성이 `true`, 데이터 원본에 바인딩할 수 있는 형식의 각 필드에 대 한 바인딩된 행 필드 개체를 자동으로 생성 합니다.</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 올바른 바인딩 가능한 유형은 <xref:System.String>, <xref:System.DateTime>, <xref:System.Decimal>, <xref:System.Guid>, 기본 형식 집합을 설정 합니다.</xref:System.Guid> </xref:System.Decimal> </xref:System.DateTime> </xref:System.String> 각 필드가 다음 행에 각 필드가 데이터 원본에 표시 되는 순서에 텍스트로 표시 됩니다.       자동으로 생성 되는 행 레코드의 모든 필드를 표시 하는 빠르고 쉬운 방법을 제공 합니다. 그러나 DetailsView의 사용할 수 있도록 컨트롤의 고급 기능 DetailsView 컨트롤에 포함할 행 필드를 명시적으로 선언 해야 합니다. 먼저 설정, 행 필드를 선언 하는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 다음에 열기 및 닫기는 추가 `<Fields>` 여는 태그와 닫는 태그 DetailsView 컨트롤 사이입니다. 마지막으로, 여는 태그와 닫는 간의 포함 시킬 행 필드를 나열 `<Fields>` 태그입니다. 지정 된 행 필드에 추가 되는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>순서 대로 나열 합니다.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A> <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>컬렉션 DetailsView 컨트롤에 있는 행 필드를 프로그래밍 방식으로 관리할 수 있습니다.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>      > [!NOTE] > 자동으로 생성 된 행 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>컬렉션.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>      > [!NOTE] > 행 필드를 자동으로 생성 된 행 필드와 함께에서 표시할 수 있습니다를 명시적으로 선언 합니다. 모두 사용 하는 행을 명시적으로 선언 된 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다.      <a name=&quot;binding_to_data&quot;></a># # 데이터 The DetailsView 컨트롤에 바인딩하는 데이터 소스 제어에 바인딩될 수 (같은 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤 또는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스와 같은 <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, 또는 기타 컬렉션 형식.</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 다음 방법 중 하나를 사용 하 여 적절 한 데이터 원본 유형에 DetailsView 컨트롤을 바인딩할:-데이터 소스 컨트롤을 설정 하려면는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>DetailsView 컨트롤의 속성은 <xref:System.Web.UI.Control.ID%2A>데이터 소스 제어의 값입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> DetailsView 컨트롤의 지정 된 데이터 소스 제어에 자동 바인딩됩니다. 이것은 데이터에 바인딩하는 기본 방법입니다.      -을 구현 하는 데이터 소스를 바인딩할는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스를 프로그래밍 방식으로 설정 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>DetailsView의 속성이 데이터 소스에 컨트롤을 호출는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>메서드.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName>       데이터 바인딩에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다.      <a name=&quot;security&quot;></a># # 보안 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [스크립트에 의해 악용 개요](~/add/includes/ajax-current-ext-md.md)합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 서버 컨트롤 구문](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.      <a name=&quot;data_operations&quot;></a># # 데이터 작업 DetailsView 컨트롤 업데이트, 삭제, 삽입 및 컨트롤의 항목을 페이징 하는 데 사용할 수 있는 기본 제공 기능을 제공 합니다. DetailsView 컨트롤 데이터 소스 제어에 바인딩되어 DetailsView 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트, 삭제, 삽입 및 페이징 기능을 제공 합니다.      > [!NOTE] > The DetailsView 컨트롤 update, delete, insert 및 다른 유형의 데이터 원본과 상호 페이징 작업에 대 한 지원을 제공할 수 있습니다; 그러나 적절 한 이벤트 처리기에서 이러한 작업에 대 한 구현을 제공 해야 합니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>, 및 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>       DetailsView 컨트롤에 자동으로 추가할 수는 <xref:System.Web.UI.WebControls.CommandField>행 필드를 설정 하 여 편집, 삭제 또는 새로 만들기 단추가 있는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A>, 또는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A>속성을 `true`각각.</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> </xref:System.Web.UI.WebControls.CommandField> 삭제와 달리 단추 (는 선택한 레코드를 즉시 삭제)를 편집 하거나 새로 만들기 단추를 클릭 하면 편집 컨트롤이 전환 DetailsView에 넣거나 모드에서는 각각. 편집 모드에서 편집 단추 업데이트 및 &quot;취소&quot; 단추가 바뀝니다. 입력 필드의 데이터 형식에 대 한 적절 한 컨트롤 (예:는 <xref:System.Web.UI.WebControls.TextBox>또는 <xref:System.Web.UI.WebControls.CheckBox>컨트롤) 수정 하려면 사용자에 대 한 필드의 값과 함께 표시 됩니다.</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> 업데이트 단추를 클릭 하면 모든 변경 사항이 취소 단추를 클릭 데이터 원본의 레코드를 업데이트 합니다. 마찬가지로, 삽입 모드에서 새 단추는 삽입 및 취소 단추 대체 되 고 새 레코드에 대 한 값을 입력 하려면 사용자에 대 한 빈 입력된 컨트롤이 표시 됩니다.      > [!NOTE] > 업데이트, 삭제 및 삽입 명령 단추를 수동으로 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, 또는 <xref:System.Web.UI.WebControls.TemplateField>행 필드.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.ButtonField> 하지만 DetailsView 컨트롤을 사용 하는 단추 인식는 <xref:System.Web.UI.WebControls.Button.CommandName%2A>여전히 기능을 제공 해야는 직접; 속성이 &quot;Edit&quot;, &quot;업데이트&quot;, &quot;Delete&quot;, &quot;새로 만들기&quot;, &quot;삽입&quot; 또는 &quot;취소&quot;로 설정 합니다.</xref:System.Web.UI.WebControls.Button.CommandName%2A> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>, 및 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>       DetailsView 컨트롤에 사용자를 다른 데이터 원본의 레코드를 탐색할 수 있는 페이징 기능을 제공 합니다. 사용 하도록 설정 하면 페이지 탐색 컨트롤 호출기 행에 표시 됩니다. 페이징을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 사용 하 여 호출기 행을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>및 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> </xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # 사용자 지정 사용자 인터페이스 사용자는 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 DetailsView 컨트롤의 모양을 사용자 지정할 수 있습니다. 다음 표에서 스타일 속성을 설정할 수 있습니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>| DetailsView 컨트롤에 교대로 반복 되는 데이터 행 스타일 설정.</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 이 속성은 데이터 행을 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>설정을 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>밴드에 표시 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>| 기본 제공 명령 단추가 포함 된 행의 스타일 설정을. |   | <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>| DetailsView 컨트롤 중인 경우에 데이터 행에 대 한 스타일 설정을 편집 모드입니다. |   | <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>| DetailsView에 표시 되는 빈 데이터 행에 대 한 스타일 설정을 제어 데이터 원본의 모든 레코드를 포함 하지 않습니다. |   | <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>| 바닥글 행 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>| 머리글 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>| DetailsView 컨트롤 중인 경우에 데이터 행에 대 한 스타일 설정을 삽입 모드. |   | <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>| 호출기 행 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>| DetailsView 컨트롤에 데이터 행 스타일 설정.</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>  </xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>설정과 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>설정 간의 교대로 반복 되는 데이터 행을 표시할 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>속성을 설정도 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>| header 열에 대 한 스타일 설정 합니다. |      <a name=&quot;events&quot;> </a> # # 이벤트는 DetailsView 컨트롤 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>   </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A></xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 그러면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서 DetailsView 컨트롤에서 지 원하는 이벤트를 나열 합니다. DetailsView 컨트롤의 기본 클래스에서 이러한 이벤트를 상속: <xref:System.Web.UI.Control.DataBinding>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>, <xref:System.Web.UI.Control.Disposed>, <xref:System.Web.UI.Control.Init>, <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Control.PreRender>, 및 <xref:System.Web.UI.Control.Render%2A>.</xref:System.Web.UI.Control.Render%2A> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Control.Load> </xref:System.Web.UI.Control.Init> </xref:System.Web.UI.Control.Disposed> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> </xref:System.Web.UI.Control.DataBinding>      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>| DetailsView 컨트롤에 단추를 클릭할 때 발생 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>| 결국 발생 <xref:System.Web.UI.WebControls.DetailsViewRow>DetailsView 컨트롤에 개체가 만들어집니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 이 이벤트는 자주 표시 되기 전에 레코드의 값을 수정 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>| 삭제 단추를 클릭 하 고, DetailsView 컨트롤이 데이터 원본에서 레코드를 삭제 한 후 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 이 이벤트는 종종 삭제 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>| 삭제 단추를 클릭 하 고, 하지만 DetailsView 하기 전에 컨트롤이 데이터 원본에서 레코드를 삭제 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemInserted>| DetailsView 컨트롤 레코드를 삽입 한 후 하지만 삽입 단추를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 이 이벤트는 자주 삽입 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>| 삽입 단추를 클릭할 때 컨트롤이 DetailsView 하기 전에 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 이 이벤트는 자주 삽입 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>| 업데이트 단추를 클릭 하면 DetailsView 컨트롤의 행을 업데이트 하 고 나면 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 이 이벤트는 자주 업데이트 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>| 업데이트 단추를 클릭 하면 되지만 DetailsView 하기 전에 레코드를 업데이트 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>| DetailsView 컨트롤의 (편집, 삽입 또는 읽기 전용 모드) 모드가 변경 후에 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이 이벤트는 자주 DetailsView 컨트롤의 모드가 변경 하면 작업을 수행 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>| DetailsView 컨트롤 (편집, 삽입 또는 읽기 전용 모드) 모드를 변경 하기 전에 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 이 이벤트는 자주 모드 변경을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>| DetailsView 컨트롤 페이징 작업을 처리 한 후으 나 페이저 단추 중 하나를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 레코드로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>| DetailsView 하기 전에 컨트롤 페이징 작업을 처리 하지만 페이저 단추 중 하나를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |      <a name=&quot;Accessibility&quot;> </a> # #에 대 한 내게 필요한 옵션에 대 한 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법 내용은 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 컨트롤 및 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;DeclarativeSyntax&quot;></a># # 선언적 구문```   <asp:DetailsView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       AutoGenerateDeleteButton=&quot;True|False&quot;       AutoGenerateEditButton=&quot;True|False&quot;       AutoGenerateInsertButton=&quot;True|False&quot;       AutoGenerateRows=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnablePagingCallbacks=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingRowStyle />           <CommandRowStyle />           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FieldHeaderStyle />           <Fields>                   <asp:BoundField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundField>                   <asp:ButtonField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonField>                   <asp:CheckBoxField                       AccessibleHeaderText=&quot;string&quot;                       DataField=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CheckBoxField>                   <asp:CommandField                       AccessibleHeaderText=&quot;string&quot;                       ButtonType=&quot;Button|Image|Link&quot;                       CancelImageUrl=&quot;uri&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       DeleteImageUrl=&quot;uri&quot;                       DeleteText=&quot;string&quot;                       EditImageUrl=&quot;uri&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertImageUrl=&quot;uri&quot;                       InsertText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NewImageUrl=&quot;uri&quot;                       NewText=&quot;string&quot;                       SelectImageUrl=&quot;uri&quot;                       SelectText=&quot;string&quot;                       ShowCancelButton=&quot;True|False&quot;                       ShowDeleteButton=&quot;True|False&quot;                       ShowEditButton=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       ShowInsertButton=&quot;True|False&quot;                       ShowSelectButton=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       UpdateImageUrl=&quot;uri&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:CommandField>                   <asp:DynamicField                       AccessibleHeaderText=&quot;string&quot;                       ApplyFormatInEditMode=&quot;True|False&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       HtmlEncode=&quot;True|False&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       ShowHeader=&quot;True|False&quot;                       UIHint=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:DynamicField>                   <asp:HyperLinkField                       AccessibleHeaderText=&quot;string&quot;                       DataNavigateUrlFields=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NavigateUrl=&quot;uri&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkField>                   <asp:ImageField                       AccessibleHeaderText=&quot;string&quot;                       AlternateText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DataAlternateTextField=&quot;string&quot;                       DataAlternateTextFormatString=&quot;string&quot;                       DataImageUrlField=&quot;string&quot;                       DataImageUrlFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       NullDisplayText=&quot;string&quot;                       NullImageUrl=&quot;uri&quot;                       ReadOnly=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <ControlStyle />                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ImageField>                   <asp:TemplateField                       AccessibleHeaderText=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       InsertVisible=&quot;True|False&quot;                       ShowHeader=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <ControlStyle />                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <AlternatingItemTemplate>                               <!-- child controls -->                           </AlternatingItemTemplate>                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <InsertItemTemplate>                               <!-- child controls -->                           </InsertItemTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateField>           </Fields>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertRowStyle />           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle        />   </asp:DetailsView>   ```"
  example:
  - "The following code example demonstrates how to use to use a DetailsView control in combination with a <xref:System.Web.UI.WebControls.GridView> control for a simple master-detail scenario. It displays the details of an item selected in the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[DetailsViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_1.aspx)]\n [!code-cs[DetailsViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example demonstrates how to use the DetailsView control to add, delete, and edit records.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_2.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_2.aspx)]  \n  \n The following code example demonstrates how to declaratively add row fields to the DetailsView control.  \n  \n [!code-vb[DetailsViewRowField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_387_3.aspx)]\n [!code-cs[DetailsViewRowField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_387_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:DetailsView runat="server" Width="125px" Height="50px"></{0}:DetailsView>")]

      public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.ICallbackContainer
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IFieldControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다. 동적으로 추가 <xref:System.Web.UI.WebControls.DetailsView>페이지에 컨트롤을 만드는 새 <xref:System.Web.UI.WebControls.DetailsView>개체 속성을 설정 하 고 다음 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> 같은 컨테이너 컨트롤의 컬렉션</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 에 추가</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 하려면"
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.DetailsView> control to a page.  \n  \n [!code-vb[DetailsViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_161_1.aspx)]\n [!code-cs[DetailsViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_161_1.aspx)]"
  syntax:
    content: public DetailsView ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>컨트롤에 사용자가 데이터 원본에 다른 레코드로 이동 하도록 허용 하는 페이징 기능을 기본 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView>       <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 UI (사용자 인터페이스)와 데이터 소스 페이징을 수행할 수 있습니다.</xref:System.Web.UI.WebControls.DetailsView> UI 페이징 기능을 지 원하는 데이터 원본 개체에 사용할 수는 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> 각 페이징 작업은 <xref:System.Web.UI.WebControls.DetailsView>제어 전체 데이터 컬렉션에 대 한 데이터 소스를 쿼리 및 나머지 데이터는 기본적으로 무시를 표시 하려면 행을 선택 합니다.</xref:System.Web.UI.WebControls.DetailsView>       데이터 소스를 구현 하는 경우 <xref:System.Web.UI.DataSourceView>및 <xref:System.Web.UI.DataSourceView.CanPage%2A>속성에서 반환 `true`, <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 데이터 소스 페이징을 UI 페이징 하는 대신 사용 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.DataSourceView.CanPage%2A> </xref:System.Web.UI.DataSourceView> 이 경우에 <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 각 페이징 작업에 대해 필요한 행만 쿼리.</xref:System.Web.UI.WebControls.DetailsView> 따라서 데이터 소스 페이징을 UI 페이징보다 더 효율적입니다. 만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>개체가 수정 하지 않고 데이터 소스 페이징을 지원 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       페이징 기능을 사용 하도록 설정 하려면 AllowPaging 속성을 설정 `true`합니다. 사용 하 여 데이터 원본에 있는 항목의 총 수를 확인할 수는 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 현재 표시 된 항목의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       페이징이 활성화 된 경우 호출기 행 이라는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 호출기 행 페이지 탐색 컨트롤을 포함 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있습니다. 호출기 행에 두 개의 기본 제공 호출기 디스플레이 모드: 번호가 있는 페이지와 다음 및 이전 페이지 링크 (기본값). 번호가 매겨진된 페이지 모드는 사용자가 특정 페이지를 탐색할 수 있도록 하는 개별 페이지에 대 한 링크를 표시 합니다. 다음 및 이전 링크 모드는 사용자를 다음 또는 이전 페이지로 탐색할 수 있는 컨트롤을 표시 합니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DetailsView>데이터 원본에 레코드가 하나만 포함 되어 있으면 컨트롤의 호출기 행을 자동으로 숨깁니다.</xref:System.Web.UI.WebControls.DetailsView>       사용 하 여 호출기 행 (예: 페이저 디스플레이 모드, 페이저 컨트롤의 텍스트 레이블을 한 번에 표시할 페이지 링크의 수)의 설정을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 호출기 행 (배경 색, 글꼴 색, 위치 등)의 모양을 제어는 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> <xref:System.Web.UI.WebControls.DetailsView>제어 또한 호출기 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다.</xref:System.Web.UI.WebControls.DetailsView> 사용자 지정 호출기 행 템플릿을 만드는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 을 참조 하십시오.       <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 페이징이 발생 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>| 페이저 단추 중 하나를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.DetailsView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 레코드로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>| 페이저 단추 중 하나를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |       AllowPaging의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the AllowPaging property to enable the paging capabilities of the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[DetailsViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_117_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 기능을 사용 하도록 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  id: AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 교대로 반복 되는 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "AlternatingRowStyle 속성을 사용 하 여 데이터 행에 교대로 반복 되는 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 데이터 행을 교대로 표시할이 속성이 설정 된 경우는 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>설정과 AlternatingRowStyle 설정.</xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `AlternatingRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `AlternatingRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the AlternatingRowStyle property to specify the font and style settings for the alternating data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_779_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_779_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 대체에 데이터 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  id: AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 레코드를 삭제 하는 기본 제공 컨트롤에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 상속 되는 개체에 바인딩된 <xref:System.Web.UI.DataSourceView>및 <xref:System.Web.UI.DataSourceView.CanDelete%2A>속성에서 반환 `true`, <xref:System.Web.UI.WebControls.DetailsView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 삭제 기능을 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] >에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSourceView>데이터를 삭제 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName>속성은 기본 <xref:System.Web.UI.WebControls.SqlDataSource>삭제 쿼리 문을 사용 하 여 개체를 설정 해야 합니다.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSourceView>       AutoGenerateDeleteButton 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.CommandField>삭제 단추가 행 필드에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 영구적으로 삭제 단추를 클릭 하면 데이터 원본의 해당 레코드를 제거 합니다.      > [!NOTE] >으로 설정 해야는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성에 대 한 자동 삭제 기능을 사용 합니다.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>       <xref:System.Web.UI.WebControls.DetailsView>제어 레코드가 삭제 될 때 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>| 삭제 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.DetailsView>데이터 소스에서 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 이 이벤트는 종종 삭제 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>| 삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView>데이터 소스에서 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다. |       AutoGenerateDeleteButton 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the AutoGenerateDeleteButton property to display the built-in control to delete the current record.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_743_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_743_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 레코드를 삭제 하는 기본 제공 컨트롤을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  id: AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 레코드를 편집 하는 기본 제공 컨트롤에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "원하는 데이터 소스 컨트롤에 바인딩된 경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트 기능을 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 데이터를 업데이트 하는 데이터 소스 제어에 대 한 해당 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>업데이트 쿼리 문을 사용 하 여 속성을 설정 해야 합니다.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=fullName>       AutoGenerateEditButton 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.CommandField>편집 단추가 행 필드에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 편집 단추를 클릭 하면 하는 전환 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 편집 모드로.</xref:System.Web.UI.WebControls.DetailsView> 바인딩된 각 필드는 읽기 전용 컨트롤에 편집 모드에 있을 때 적절 한 입력된 컨트롤 같은 표시는 <xref:System.Web.UI.WebControls.TextBox>필드의 데이터 형식에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.TextBox> 이 사용자를 필드의 값을 수정할 수 있습니다.       를 클릭 하면 편집 단추 업데이트 단추와 취소 단추로 바뀝니다. 업데이트 단추를 클릭 하면 값 변경 사항에 데이터 소스에서 레코드를 업데이트 되 고 지정 된 모드는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 취소 단추를 클릭 값 변경 사항이 하 고 기본 모드에 컨트롤을 반환 합니다.      > [!NOTE] > 배치 하는 <xref:System.Web.UI.WebControls.DetailsView>편집 모드에 프로그래밍 방식으로 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>메서드.</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> </xref:System.Web.UI.WebControls.DetailsView>       경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>도 속성이 `true`, <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 자동으로 사용 하면 하나 이상의 필드에 지정 된는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성은 읽기 전용.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>      > [!NOTE] > 사용자 지정 업데이트 기능을 구현 하지 않는 한 설정 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>작동 하도록 자동 업데이트 기능에 대 한 속성.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>       데이터의 모양을 제어할 수 있습니다 경우 행은 <xref:System.Web.UI.WebControls.DetailsView>제어를 사용 하 여이 편집 모드에는 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView> 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.       <xref:System.Web.UI.WebControls.DetailsView>제어 레코드가 업데이트 될 때 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>| 업데이트 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.DetailsView>레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 이 이벤트는 자주 업데이트 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>| 업데이트 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView>레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>| <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경 후에 발생 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>| 앞에 오는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이 이벤트는 자주 모드 변경을 취소 하는 데 사용 됩니다. |       AutoGenerateEditButton 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the AutoGenerateEditButton property to display the built-in controls to edit the current record.  \n  \n [!code-cs[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_383_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateEditButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_383_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 레코드를 편집 하는 기본 제공 컨트롤을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  id: AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 레코드를 삽입 하는 기본 제공 컨트롤에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "삽입을 지 원하는 데이터 소스 제어에 바인딩되면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 삽입 기능을 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 데이터를 삽입 하는 데이터 소스 제어에 대 한 해당 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>insert 쿼리 문을 사용 하 여 속성을 설정 해야 합니다.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=fullName>       AutoGenerateInsertButton 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.CommandField>행 필드가 새로 만들기 단추에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 새로 만들기 단추를 클릭 하면 하는 전환 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 삽입 모드로.</xref:System.Web.UI.WebControls.DetailsView> 바인딩된 각 필드는 읽기 전용 컨트롤에 삽입 모드일 때 적절 한 입력된 컨트롤 같은 표시는 <xref:System.Web.UI.WebControls.TextBox>필드의 데이터 형식에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.TextBox> 이렇게 하면 사용자를 새 레코드에 대 한 필드의 값을 입력 합니다.       를 클릭 하면 새 단추 삽입 단추와 취소 단추로 바뀝니다. 삽입 단추를 클릭 하면 데이터 원본에 새 레코드가 삽입 되 고로 지정 된 모드는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 취소 단추를 클릭 하면 삽입 작업이 취소 되 고 기본 모드에 컨트롤을 반환 합니다.      > [!NOTE] > 말해서 행 삽입 모드에서 프로그래밍 방식으로 사용 된 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>메서드.</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>       사용 하 여 삽입 모드에 있는 레코드의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.       <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 새 레코드를 삽입 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ItemInserted>| 삽입 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.DetailsView>레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 이 이벤트는 자주 삽입 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>| 경우에 삽입 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.DetailsView>레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 이 이벤트는 자주 삽입 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>| <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경 후에 발생 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>| 앞에 오는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이 이벤트는 자주 모드 변경을 취소 하는 데 사용 됩니다. |       AutoGenerateInsertButton 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the AutoGenerateInsertButton property to display the built-in controls to insert a new record in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_891_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateInsertButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_891_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateInsertButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 레코드를 삽입 하는 기본 제공 컨트롤을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  id: AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에 있는 각 필드에 대 한 행 필드 자동으로 생성 및에 표시 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "각 데이터 행에는 <xref:System.Web.UI.WebControls.DetailsView>제어 행 필드로 표시 됩니다.</xref:System.Web.UI.WebControls.DetailsView> AutoGenerateRows 속성이로 설정 되 면 `true`, 데이터 원본에 있는 각 필드에 대 한는 자동으로 생성 된 바인딩된 행 필드가 만들어집니다. 각 필드가 다음 행에 각 필드가 데이터 원본에 표시 되는 순서에 텍스트로 표시 됩니다.      > [!NOTE] > 바인딩된 행을 자동으로 생성 된 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>컬렉션.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A>       자동으로 생성 되는 행 레코드의 모든 필드를 표시 하는 빠르고 쉬운 방법을 제공 합니다. 그러나 있도록의 사용은 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 고급 기능에 포함할 행 필드를 명시적으로 선언 해야는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 자세한 내용은 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 을 참조 하십시오.      > [!NOTE] > 행 필드를 자동으로 생성 된 행 필드와 함께에서 사용할 수 있습니다를 명시적으로 선언 합니다. 모두 사용 하는 행을 명시적으로 선언 된 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다.       AutoGenerateRows 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the AutoGenerateRows property to automatically create bound row fields for each field in the data source.  \n  \n [!code-cs[DetailsViewAutoGenerateRows#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_507_1.aspx)]\n [!code-vb[DetailsViewAutoGenerateRows#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_507_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 소스에 생성 된 각 필드에 대 한 바인딩된 행 필드를 자동으로 표시 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "URL의 배경에 표시할 이미지를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "BackImageUrl 속성을 사용 하 여의 배경에 표시할 이미지에 URL을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.DetailsView>백그라운드에서 채울 컨트롤, 이미지를 바둑판식으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다."
  example:
  - "The following code example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.DetailsView> control. You must provide your own image for this example to work.  \n  \n [!code-vb[DetailsViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1223_1.aspx)]\n [!code-cs[DetailsViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1223_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "배경에 표시할 이미지에 URL에서 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 아래쪽 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 호출기 행 사용자가 다른 레코드로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 BottomPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRow>의 아래쪽 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] > The BottomPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 아래쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView>       예를 들어 사용자 지정 콘텐츠를 추가할 때 맨 아래 호출기 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. BottomPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the BottomPagerRow property to access the bottom pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_133_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_133_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 아래쪽 호출기 행을 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "캡션 HTML 요소에 렌더링할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "Caption 속성을 사용 하 여 HTML 캡션 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 지정 하는 텍스트에는 보조 기술 장치가 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명을 제공 합니다.       에 대 한 추가적인 내게 필요한 옵션 지원은 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 제공 되는 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.DetailsView> 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>속성에 HTML 캡션 요소의 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A>       캡션의 값 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_921_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_921_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "캡션 HTML 요소에 렌더링할 텍스트를 나타내는 문자열을 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.DetailsView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 또는 세로 위치에 HTML 캡션 요소의 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "CaptionAlign 속성을 사용 하 여에 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다.       이 속성의 하나를 사용 하는 <xref:System.Web.UI.WebControls.TableCaptionAlign>열거형 값입니다.</xref:System.Web.UI.WebControls.TableCaptionAlign> 다음 표에서 가능한 값을 나열합니다.      | 값 | 설명 |   |-----------|-----------------|   | `TableCaptionAlign.Bottom`| Caption 요소는 테이블의 아래쪽에 맞게 정렬 됩니다. |   | `TableCaptionAlign.Left`| Caption 요소는 테이블의 왼쪽에 맞춥니다. |   | `TableCaptionAlign.NotSet`| Caption 요소 맞춤 설정 되지 않았습니다. |   | `TableCaptionAlign.Right`| Caption 요소는 테이블의 오른쪽에 맞춥니다. |   | `TableCaptionAlign.Top`| Caption 요소는 테이블의 위쪽에 맞춰집니다. |       에 대 한 추가적인 내게 필요한 옵션 지원은 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 제공 되는 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.Caption%2A> </xref:System.Web.UI.WebControls.DetailsView> 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A>속성 캡션 HTML 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.Caption%2A>       CaptionAlign 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.DetailsView> control should be rendered on the left side of the control.  \n  \n [!code-vb[DetailsViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_789_1.aspx)]\n [!code-cs[DetailsViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_789_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀의 내용을 셀 테두리 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellPadding 속성을 사용 하 여 셀의 내용과 셀 테두리 사이의 간격을 제어할 수 있습니다. 셀의 네 면에 지정 된 안쪽 여백이 추가 됩니다.       모든 셀의 같은 열에는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 너비를 같게 만들기가.</xref:System.Web.UI.WebControls.DetailsView> 안쪽 여백이 가장 넓은 셀에 적용 되 고 다른 열의 모든 셀에는 해당 셀 너비를 조정 됩니다. 마찬가지로, 동일한 행에 있는 모든 셀 높이 같게 만들기가 있어야 합니다. 여백은 행에서 가장 높은 셀에 적용 되 고 행의 다른 모든 셀은 해당 셀 높이. 개별 셀의 크기를 지정할 수 없습니다.       셀 사이의 간격을 조정 하려면는 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A>"
  example:
  - "The following code example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1251_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1251_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "셀의 내용을 셀 테두리 사이의 픽셀에서 공간의 양입니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellSpacing 속성을 사용 하 여에 인접 한 셀 사이의 간격을 제어할 수는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 세로 및 가로로이 간격이 적용 됩니다. 셀 간격은 일정의 전체 컨트롤에 대 한 합니다. 행 이나 열 사이의 개별 셀 간격을 지정할 수 없습니다.      > [!NOTE] > 0 보다 큰 값으로이 속성을 설정 하 고 다음을 설정 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A>속성 셀 테두리를 표시 하는 값으로 인접 한 셀 테두리 사이의 간격이 생깁니다.</xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 이 경우 CellSpacing 속성 간격의 크기를 제어합니다.       셀의 내용을 셀 테두리 사이의 간격을 조정 하려면는 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A>"
  example:
  - "The following code example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[DetailsViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_611_1.aspx)]\n [!code-vb[DetailsViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_611_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "셀 사이 픽셀 단위로 공간의 양입니다. 기본값은 0입니다"
  overload: System.Web.UI.WebControls.DetailsView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  id: ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "스위치는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 지정된 된 모드를 제어 합니다."
  remarks: "ChangeMode 메서드를 사용 하 여 프로그래밍 방식으로 전환 된 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 편집, 삽입 및 읽기 전용 모드 간에.</xref:System.Web.UI.WebControls.DetailsView> 이 메서드는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>지정된 된 모드를 사용 하 여 속성.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `DetailsViewMode.Edit`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `DetailsViewMode.Insert`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `DetailsView.ReadOnly`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.DetailsView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/28d4c60e-b5c3-4418-86ab-_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/28d4c60e-b5c3-4418-86ab-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.DetailsView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  id: CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 명령 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "CommandRowStyle 속성을 사용 하 여에 명령 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 명령 행 편집, 삭제 및 삽입 같은 작업을 수행 하기 위해 명령 단추를 포함 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `CommandRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `CommandRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the CommandRowStyle property to specify the font and style settings for the command row in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewCommandRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_313_1.aspx)]\n [!code-cs[DetailsViewCommandRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_313_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 명령 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  id: CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> 지정 된 필드 속성을 사용 하는 자동으로 생성 된 행 필드를 나타내는 개체입니다."
  remarks: "CreateAutoGeneratedRow 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>지정 된 필드 속성을 사용 하 여 자동으로 생성 된 행 필드를 만드는 컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);
    parameters:
    - id: fieldProperties
      type: System.Web.UI.WebControls.AutoGeneratedFieldProperties
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedFieldProperties&quot;> </xref> 에 대 한 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref>합니다."
    return:
      type: System.Web.UI.WebControls.AutoGeneratedField
      description: "<xref href=&quot;System.Web.UI.WebControls.AutoGeneratedField&quot;> </xref> 로 지정 된 필드 속성을 포함 하는 <code> fieldProperties </code> 매개 변수입니다."
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  id: CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 항목에 대 한 필드를 자동으로 생성 된 행 집합을 만듭니다."
  remarks: "때는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>속성이로 설정 되어 `true`, CreateAutoGeneratedRows 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>집합이 자동으로 만들 컨트롤을 현재 데이터 항목에 대 한 행 필드를 생성 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>"
  syntax:
    content: protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);
    parameters:
    - id: dataItem
      type: System.Object
      description: "자동으로 생성 된 행 필드를 만들 데이터 항목입니다."
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>지정된 된 데이터 항목에 대 한 자동으로 생성 된 행 필드를 포함 하는.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤에는 모든 속성 또는 필드를 생성 하는 특성이 없으면 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 하는 데 컨트롤 계층 구조를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "CreateChildControls 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 대 한 컨트롤 계층 구조를 만들 수 있습니다.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>에 대 한 데이터 원본을 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤.</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 바인딩; 중이 메서드가 호출 되 고 되도록 나타내려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "데이터 원본에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>dataSource</code> returns a null <xref href=\"System.Web.UI.DataSourceView\"></xref>.  \n  \n \\- or -  \n  \n d<code>ataSource</code> is not an <xref:System.Collections.ICollection> and cannot return a total row count.  \n  \n \\- or -  \n  \n <code>dataBinding</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface.  \n  \n \\- or -  \n  \n <code>dataSource</code> does not implement the <xref:System.Collections.ICollection> interface and <xref:System.Web.UI.WebControls.DetailsView.AllowPaging*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 기본 테이블 스타일 개체를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "CreateControlStyle 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>해당 기본 테이블 스타일 개체를 만들 수 있습니다.</xref:System.Web.UI.WebControls.DetailsView> 기본 스타일 설정 외에 <xref:System.Web.UI.WebControls.TableStyle>개체도이 메서드는 다음 표에 속성을 설정 합니다.</xref:System.Web.UI.WebControls.TableStyle>      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>| `GridLines.Both`|   | <xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|</xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A></xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 에 대 한 기본 테이블 스타일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> Select 명령에 전달 되는 개체입니다."
  remarks: "CreateDataSourceSelectArguments 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>만들 컨트롤을는 <xref:System.Web.UI.DataSourceSelectArguments>Select 명령에 전달 되는 개체입니다.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "<xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> Select 명령에 전달 되는"
  overload: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  id: CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 계층 구조를 생성 하는 데 사용 하는 행을 자동으로 생성 하 고 사용자 지정 필드의 전체 집합을 만듭니다."
  remarks: "CreateFieldSet 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 컨트롤에 대 한 행 필드의 전체 집합을 만듭니다.</xref:System.Web.UI.WebControls.DetailsView> 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>속성이 `true`를 자동으로 생성 된 행 필드에 포함 된 행 사용자 지정 필드에 추가 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>컬렉션.</xref:System.Web.UI.WebControls.DetailsView.Fields%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 에 전달 된 데이터 항목에 따라 자동으로 생성 된 행 필드를 만들려면 `true` 에 대 한는 `useDataSource` 매개 변수입니다; 그렇지 않은 경우 자동으로 생성 된 행 필드를 컨트롤의 기존 행 필드의 속성에 따라 만들어집니다."
  syntax:
    content: protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);
    parameters:
    - id: dataItem
      type: System.Object
      description: "데이터 항목의 행 필드를 만들 수 있습니다."
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동으로 생성 된 행 필드를 만들 때 데이터 항목을 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>자동으로 생성 되 고 지정된 된 데이터 항목에 대 한 사용자 정의 행 필드를 포함 합니다.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 지정 된 항목 인덱스, 행 형식 및 행 상태를 사용 하 여 개체입니다."
  remarks: "CreateRow 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>만들 컨트롤을 한 <xref:System.Web.UI.WebControls.DetailsViewRow>개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "표시할 데이터 항목의&0;부터 시작 하는 인덱스입니다."
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;> </xref> 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 된 지정 된 항목 인덱스, 행 형식 및 행 상태입니다."
  overload: System.Web.UI.WebControls.DetailsView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 포함 하는 테이블을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "CreateTable 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 컨트롤에 대 한 컨테이너 역할을 하는 테이블을 만듭니다.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 포함 하는 테이블에 대 한 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 데이터 입력 모드를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "CurrentMode 속성을 사용 하는지 여부를 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 편집, 삽입 또는 읽기 전용 모드입니다.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `DetailsViewMode.Edit`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `DetailsViewMode.Insert`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `DetailsViewMode.ReadOnly`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |       이 값은 일반적으로 자동으로 설정 된 <xref:System.Web.UI.WebControls.DetailsView>새로 만들기, 업데이트, 삽입, 삭제 또는 취소 명령 단추를 클릭할 때 컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 사용 하 여 모드를 프로그래밍 방식으로 변경할 수는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>메서드.</xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A>       경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드가 변경, 다음 표에 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView> 이 이벤트가 발생할 때 루틴을 수행 하는 사용자 지정 이벤트 처리기를 만들 수 있습니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>| <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 모드를 변경 하는 명령 단추를 클릭할 때 하지만 모드가 변경 된 후 발생 합니다. |   | <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>| 때의 모드를 변경 하는 명령 단추 발생는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭 하 고, 모드 변경 하기 전에. |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.ModeChanged>"
  example:
  - "The following code example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.DetailsView> control is in edit, insert, or read-only mode. If the user attempts to navigate to a different record while the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode, the paging operation is canceled.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_883_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_883_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.DetailsView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>기본 클래스의 메서드</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*> 를 호출합니다."
  remarks: "데이터 바인딩된 컨트롤 <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>DataBind 대신.</xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A>"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 항목에 바인딩된 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "사용 하 여 데이터 항목을 액세스 하는 DataItem 속성에 바인딩된는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 데이터 항목이 현재 레코드의 필드 값에 직접 액세스를 주로 사용 됩니다. 종류는 <xref:System.Object>이 속성에서 반환 속성 데이터 소스에 따라 달라 집니다.</xref:System.Object> 예를 들어, 한 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 <xref:System.Data.DataRowView>개체가 반환 됩니다.</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!NOTE] >이 속성은 데이터 바인딩을 발생 한 후에 사용할 수 있습니다. 발생 하기 전 까지의 데이터 바인딩,이 속성은 반환 `null`합니다. 이 속성은 또한 하지 적용 시기는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 삽입 모드에 있고 반환 `null`.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-cs[DetailsViewDataItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_505_1.aspx)]\n [!code-vb[DetailsViewDataItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_505_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>나타내는 데이터 항목에 바인딩되어 있음을 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "기본 데이터 원본에 항목의 수를 가져옵니다."
  remarks: "페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`), 데이터 원본에 있는 레코드의 총 수를 확인 하려면 DataItemCount 속성을 사용 합니다.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>      > [!NOTE] > 때문에 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 한 번에 하나의 레코드만 표시,이 값은 또한 데이터 원본의 모든 레코드를 표시 하는 데 필요한 페이지의 총 수에 해당 합니다.</xref:System.Web.UI.WebControls.DetailsView>       데이터 원본에서 현재 레코드의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A>"
  example:
  - "The following code example demonstrates how to use the DataItemCount property to determine the number of items in the data source. This value is used to display the page count in a <xref:System.Web.UI.WebControls.Label> control contained within a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_215_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_215_1.aspx)]"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.DetailsView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시 되는 항목의 인덱스를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 기본 데이터 원본에서 제어 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`), DataItemIndex 속성을 사용 하 여 현재 표시 된 레코드의 인덱스를 확인 합니다.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.      그러나 > [!NOTE] >; 표시 되는 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용할 때,이 속성은&0;부터 시작 하 고 고려해 야 합니다.       데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A>"
  example:
  - "The following code example demonstrates how to use the DataItemIndex property to determine the index of the current item in the data source. This value is used to display the current page number in a <xref:System.Web.UI.WebControls.Label> control contained in a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1295_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1295_1.aspx)]"
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "에 표시 되는 데이터 항목의&0;부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 기본 데이터 원본에서 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 표시 된 레코드의 기본 키를 나타내는 개체입니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성이 설정 되어는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>키 필드 또는 현재 레코드의 필드를 나타내는 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 데이터 키 속성을 사용 하 여이 <xref:System.Web.UI.WebControls.DataKey>개체입니다.</xref:System.Web.UI.WebControls.DataKey> 이 속성은 키와 해당 값에 지정 된 필드에 대 한를 가져오는 데 일반적으로 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>      > [!NOTE] >를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>속성에 나열 된 첫 번째 키 필드의 값을 확인 하 고 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A>"
  example:
  - "The following code example demonstrates how to use the DataKey property to determine the key field and corresponding value for the current record.  \n  \n [!code-cs[DetailsViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_369_1.aspx)]\n [!code-vb[DetailsViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_369_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 표시 된 레코드의 기본 키를 나타내는입니다."
  overload: System.Web.UI.WebControls.DetailsView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에 대 한 키 필드의 이름을 포함 하는 배열을 가져오거나 설정 합니다."
  remarks: "DataKeyNames 속성을 사용 하 여 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록을 지정 하려면. DataKeyNames 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>에 저장 키 필드 또는 현재 레코드에 대 한 필드를 나타내는 개체는 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.DetailsView> 경우는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>도 속성이 `true`, <xref:System.Web.UI.WebControls.DetailsView>제어 필드 또는 DataKeyNames 속성에 지정 된 필드는 읽기 전용으로 자동으로 명의.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>      > [!NOTE] > 자동 업데이트, 삭제 및 삽입의 기능에 대 한 DataKeyNames 속성을 설정 해야는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 실행 되도록 합니다.</xref:System.Web.UI.WebControls.DetailsView>       경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>행 필드의 속성이로 설정 되어 `false`, 행에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView>제어 흐름과 데이터 행에 대 한 해도 왕복 클라이언트에.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 대문자로 표시 되지 않는 행에 대 한 데이터를 원하는 경우 필드 이름을 DataKeyNames 속성을 추가 합니다."
  example:
  - "The following code example demonstrates how to use the DataKeyNames property to identify the key field for the data source bound to the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_209_1.aspx)]\n [!code-cs[DetailsViewAutoGenerateDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_209_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "데이터 원본의 키 필드의 이름이 포함 된 배열입니다."
  overload: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "기본 데이터 입력 모드를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "DefaultMode 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.DetailsView>편집 또는 삽입 작업이 수행 된 후 제어가 편집, 삽입 또는 읽기 전용 모드를 반환 합니다.</xref:System.Web.UI.WebControls.DetailsView> 기본적으로는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 읽기 전용 모드로 돌아갑니다; 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView>편집에서 제어 하거나 적절 한 값으로이 속성을 설정 하면 삽입 모드.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `DetailsViewMode.Edit`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `DetailsViewMode.Insert`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `DetailsViewMode.ReadOnly`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the DefaultMode property to specify that the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode after a record has been updated.  \n  \n [!code-cs[DetailsViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1138_1.aspx)]\n [!code-vb[DetailsViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1138_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.DetailsViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_DetailsViewMode.ReadOnly&quot; name=&quot;DetailsViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.DetailsViewMode&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스에서 현재 레코드를 삭제합니다."
  remarks: "경우에 삭제가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>이벤트는이 항목은 삭제 전에 즉시 발생 합니다.</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 설정 된 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true` 삭제를 취소 하려면.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 삭제 작업을 수행 될 때 호출 되는 페이지에서 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤이 삭제 작업을 수행 될 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체 데이터의 모양을 설정 하는 사용할 수 있는 경우 행는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤은 편집 모드에 있습니다."
  remarks: "EditRowStyle 속성 데이터의 모양을 제어 하는 경우 행을 사용 하 여 한 <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 편집 모드에 있습니다.</xref:System.Web.UI.WebControls.DetailsView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EditRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the EditRowStyle property to specify the font and style settings for the data rows when a <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-vb[DetailsViewEditRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_539_1.aspx)]\n [!code-cs[DetailsViewEditRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_539_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 를 나타내는 데이터의 스타일 경우 행는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤은 편집 모드에 있습니다."
  overload: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 소스에 바인딩된 경우 표시 되는 빈 데이터 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 레코드를 포함 하지 않습니다."
  remarks: "빈 데이터 행의 모양을 제어 EmptyDataRowStyle 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 빈 데이터 행에는 컨트롤에 바인딩되는 데이터 원본에 레코드가 없는 경우 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EmptyDataRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the EmptyDataRowStyle property to specify the font and style settings for the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_578_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_578_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 을 빈 데이터 행의 표시 되는 모양을 설정할 수 있습니다."
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 렌더링 되는 빈 데이터 행에 대 한 사용자 지정 콘텐츠를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.DetailsView> Emptydatatemplate이 속성을 사용 하 여 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. Null 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<EmptyDataTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>및 emptydatatemplate이 속성이 설정 되어, emptydatatemplate이 속성이 우선 합니다.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A>"
  example:
  - "The following code example demonstrates how to use the EmptyDataTemplate property to create a custom empty data row.  \n  \n [!code-vb[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_788_1.aspx)]\n [!code-cs[DetailsViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_788_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 빈 데이터 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때에 렌더링 되는 빈 데이터 행에 표시할 텍스트를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.DetailsView> EmptyDataText 속성을 사용 하 여 빈 데이터 행에 표시할 텍스트를 지정할 수 있습니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)을 설정 하 여 정의할 수 있습니다 또는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>      > [!NOTE] > 경우는 모두 EmptyDataText 및 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>속성을 설정의 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A>       EmptyDataText 값 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[DetailsViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_617_1.aspx)]\n [!code-vb[DetailsViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_617_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 모델 유효성 검사가 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 모델 유효성 검사를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  id: EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "클라이언트 콜백 함수에서 페이징 작업에 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "클라이언트 콜백 함수를 사용 하 여 페이징 작업을 수행할지 여부를 지정 하려면 EnablePagingCallbacks 속성을 사용 합니다. 사용 하도록 설정 하면 페이지를 서버에 다시 게시 하면 콜백 기능을 사용 하 여 페이징이 수행 됩니다.      > [!NOTE] > 이상에서 Microsoft Internet Explorer 5.5 이상 및 Netscape 6.0 지원만 클라이언트 쪽 페이징 기능을 합니다.       EnablePagingCallbacks 값 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the EnablePagingCallbacks property to enable the use of client-side callback functions for paging operations.  \n  \n [!code-vb[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_800_1.aspx)]\n [!code-cs[DetailsViewEnablePagingCallbacks#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_800_1.aspx)]"
  syntax:
    content: public virtual bool EnablePagingCallbacks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 작업에 대 한 클라이언트 쪽 콜백 함수를 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>데이터 목록 컨트롤에 데이터 바인딩이 필요한와 올바른 데이터 소스 컨트롤이 지정 되어 있는지 확인 한 후 메서드.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>"
  remarks: "데이터 바인딩이 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 된 각 필드의 값을 검색 하 고 지정 된 상태로 저장 <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 개체입니다."
  remarks: "ExtractRowValues 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>각 필드의 값을 검색 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.DetailsView> 값에 데이터 원본 작업에 사용할 수 있습니다. 추출 된 값 읽기 전용 필드 및 키 필드를 사용 하 여 포함 하는지 여부를 지정할 수는 `includeReadOnlyFields` 및 `includePrimaryKey` 매개 변수를 각각."
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 필드 값을 저장 하는 데 사용 합니다."
    - id: includeReadOnlyFields
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 필드를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>기본 키 필드 또는 필드를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  id: FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 는 header 열에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "FieldHeaderStyle 속성을 사용 하 여에 필드 머리글 열의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 데이터 값의 필드 이름이 포함 된 열입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `FieldHeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FieldHeaderStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the FieldHeaderStyle property to specify the font and style settings for the field header row.  \n  \n [!code-vb[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_602_1.aspx)]\n [!code-cs[DetailsViewFieldHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_602_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에서 머리글 열 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Fields
  id: Fields
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 에 명시적으로 선언 된 행 필드를 나타내는 개체를 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "에 대 한 행 필드를 명시적으로 선언 하는 <xref:System.Web.UI.WebControls.DetailsView>제어, 이러한 행 필드 Fields 속성 (컬렉션)에 저장 됩니다.</xref:System.Web.UI.WebControls.DetailsView> 또한 Fields 컬렉션을 사용 하면 프로그래밍 방식으로 명시적으로 선언 된 행의 컬렉션을 관리할 수 있습니다.      > [!NOTE] > 행 필드를 자동으로 생성 된 행 필드와 함께에서 사용할 수 있습니다를 명시적으로 선언 합니다. 모두 사용 하는 행을 명시적으로 선언 된 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다. 자동으로 생성 된 행 필드 Fields 컬렉션에 추가 되지 않습니다.       여러 행 필드 형식을 컨트롤의 행의 동작을 결정 합니다. 다음 표에서 Fields 컬렉션에 다른 행 사용할 수 있는 필드 형식을 보여 줍니다.      | 필드 형식이 행 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundField>| 텍스트로 데이터 원본에는 필드의 값을 표시 합니다. |   | <xref:System.Web.UI.WebControls.ButtonField>| 명령 단추에 표시 된 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.BoundField> 프로그램 추가 / 제거 단추와 같은 사용자 지정 단추 컨트롤을 사용 하 여 행을 표시할 수 있습니다. |   | <xref:System.Web.UI.WebControls.CheckBoxField>| 확인란에 표시 된 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CheckBoxField> 이 행 필드 형식은 부울 값을 사용 하는 필드를 표시 하는 데 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.CommandField>| 기본 제공 명령 표시 편집을 수행 하는 단추 삽입 또는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 작업을 삭제 합니다. |   | <xref:System.Web.UI.WebControls.HyperLinkField>| 하이퍼링크는 데이터 원본에서 필드의 값을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.CommandField> 이 행 필드 형식 하이퍼링크의 URL로 두 번째 필드를 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.ImageField>| <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 이미지를 표시 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField>| 행에 대 한 사용자 정의 콘텐츠가 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>지정한 템플릿에 따라 컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.ImageField> 이 행 필드 형식에서는 사용자 지정 행 필드를 만들 수 있습니다. |       에 대 한 행 필드를 명시적으로 선언 하는 <xref:System.Web.UI.WebControls.DetailsView>첫 번째 집합을 제어는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> </xref:System.Web.UI.WebControls.DetailsView> 다음에 열기 및 닫기는 추가 `<Fields>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 마지막으로, 여는 태그와 닫는 간의 포함 시킬 행 필드를 나열 `<Fields>` 태그입니다. 행 필드에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>Fields 컬렉션에 표시 된 순서 대로 제어 합니다.</xref:System.Web.UI.WebControls.DetailsView>       선언적으로 행 필드를 나열 쉽습니다 행 필드 Fields 컬렉션에 프로그래밍 방식으로 추가할 수 있지만 <xref:System.Web.UI.WebControls.DetailsView>제어 하 고 사용 하 여는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>의 각 행 필드를 표시 하거나 숨기는 속성.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.DetailsView>       경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>행 필드의 속성이로 설정 되어 `false`, 행에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView>제어 흐름과 데이터 행에 대 한 해도 왕복 클라이언트에.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 대문자로 표시 되지 않는 행에 대 한 데이터를 원하는 경우 추가 필드 이름을 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A>"
  example:
  - "The following code example demonstrates how to declaratively add row fields to the Fields collection of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[DetailsViewFields#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_545_1.aspx)]\n [!code-vb[DetailsViewFields#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_545_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }
    return:
      type: System.Web.UI.WebControls.DataControlFieldCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCollection&quot;> </xref> 의 모든 행을 명시적으로 선언 된 필드를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.Fields*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 바닥글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> 프로그래밍 방식으로 액세스할 FooterRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRow>바닥글 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A>속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.FooterRow%2A>       예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. FooterRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>       바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>"
  example:
  - "The following code example demonstrates how to use the FooterRow property to access the footer row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom footer row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_51_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 바닥글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 바닥글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> FooterStyle 속성을 사용 하 여의 바닥글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `FooterStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify the font and style settings for the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_989_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_989_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 바닥글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>먼저 속성이 설정 되었습니다.</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> </xref:System.Web.UI.WebControls.DetailsView> 먼저 속성을 사용 하 여 바닥글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. 바닥글 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<FooterTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<FooterTemplate>` 태그입니다. 바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 또는 단순히 텍스트 표시할 수 있습니다 바닥글 행에 설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>및 먼저 속성이 설정 되어, 먼저 속성이 우선 합니다.</xref:System.Web.UI.WebControls.DetailsView.FooterText%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom footer row.  \n  \n [!code-cs[DetailsViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1257_1.aspx)]\n [!code-vb[DetailsViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1257_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 바닥글 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 행에 표시할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 FooterText 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView> 바닥글 행에 표시할 텍스트를 지정 하려면 FooterText 속성을 사용 합니다. 바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 설정 하 여 바닥글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또한는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>      > [!NOTE] > 경우는 모두 FooterText 및 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>속성을 설정의 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A>       FooterText 값 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[DetailsViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1250_1.aspx)]\n [!code-vb[DetailsViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1250_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "바닥글 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤을 대상으로 하는 콜백 이벤트의 결과 반환 합니다."
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>구현 제어는 <xref:System.Web.UI.ICallbackEventHandler>사용 하 여 인터페이스는 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>데이터 및 컨트롤에 검색된 된 데이터를 반환 하려면 GetCallbackResult 메서드를 검색할.</xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "콜백 결과입니다."
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인수를 사용 하 여 만든 콜백 문자열을 반환 합니다."
  syntax:
    content: protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "콜백을 시작한 하는 컨트롤입니다."
    - id: argument
      type: System.String
      description: "콜백 코드입니다."
    return:
      type: System.String
      description: "클라이언트에 보낼 전체 콜백 문자열입니다."
  overload: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모눈선 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "눈금선 속성을 사용 하 여 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 사용 가능한 스타일을 보여 줍니다.      | 스타일 | 설명 |   |-----------|-----------------|   | `GridLines.None`| 눈금선이 없는 표시 됩니다. |   | `GridLines.Horizontal`| 가로 눈금선 표시 됩니다. |   | `GridLines.Vertical`| 세로 눈금선을 표시 합니다. |   | `GridLines.Both`| 가로 및 세로 눈금선을 표시 합니다. |"
  example:
  - "The following code example demonstrates how to use the GridLines property to hide all gridlines in a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewGridLines#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1023_1.aspx)]\n [!code-cs[DetailsViewGridLines#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1023_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_GridLines.Both&quot; name=&quot;GridLines.Both&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 에 머리글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행은 위쪽에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> 프로그래밍 방식으로 액세스할 HeaderRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRow>머리글 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.HeaderRow%2A>       예를 들어 사용자 지정 콘텐츠를 추가할 때 머리글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. HeaderRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the HeaderRow property to access the header row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. A <xref:System.Web.UI.WebControls.Label> control within the custom header row is then updated with the current page number.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_730_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_730_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 에 머리글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 머리글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행은 위쪽에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> HeaderStyle 속성을 사용 하 여에 머리글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `HeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify the font and style settings for the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 머리글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행의 위쪽에 표시 된 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>HeaderTemplate 속성이 설정 되었습니다.</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> </xref:System.Web.UI.WebControls.DetailsView> HeaderTemplate 속성을 사용 하 여 머리글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. 머리글 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<HeaderTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<HeaderTemplate>` 태그입니다. 머리글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 또는 단순히 텍스트 표시할 수 있습니다 머리글 행에 설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>및 HeaderTemplate 속성 설정, HeaderTemplate 속성이 우선 합니다.</xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom header row.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_748_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_748_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 머리글 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 행에 표시할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행의 맨 위에 있는 표시는 <xref:System.Web.UI.WebControls.DetailsView>시점을 제어할의 HeaderText 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView> HeaderText 속성을 사용 하 여 머리글 행에 표시할 텍스트를 지정할 수 있습니다. 머리글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 설정 하 여 머리글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또한는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>      > [!NOTE] > 경우 모두의 HeaderText 및 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>속성이 설정 되는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>속성이 우선.</xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A>       HeaderText 값 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[DetailsViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_786_1.aspx)]\n [!code-cs[DetailsViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_786_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "머리글 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 맞춤을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 페이지에서 제어 합니다."
  remarks: "HorizontalAlign 속성을 사용 하 여의 가로 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView>페이지 내에서 컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 다음 표에서 다양 한 가로 맞춤 스타일을 나열 합니다.      | HorizontalAlign 값 | 설명 |   |---------------------------|-----------------|   | `HorizontalAlign.NotSet`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 가로 맞춤 설정 되지 않았습니다. |   | `HorizontalAlign.Left`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 페이지에 왼쪽 맞춤. |   | `HorizontalAlign.Center`| 가운데 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 페이지에 표시 됩니다. |   | `HorizontalAlign.Right`| <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 페이지에서 오른쪽 정렬 합니다. |   | `HorizontalAlign.Justify`| <xref:System.Web.UI.WebControls.DetailsView>제어 페이지의 왼쪽 및 오른쪽 여백에 맞게 정렬 됩니다. |</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.DetailsView> control should be centered on the page.  \n  \n [!code-cs[DetailsViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_375_1.aspx)]\n [!code-vb[DetailsViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_375_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출기 행을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "InitializePager 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>호출기 행을 만들고 컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 생성 된 <xref:System.Web.UI.WebControls.TableCell>개체의 속성을 사용 하 여 탐색 컨트롤을 포함 하는 <xref:System.Web.UI.WebControls.PagedDataSource>에 포함 된 개체는 `pagedDataSource` 매개 변수.</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 셀에서 지정한 행에 추가 됩니다는 `row` 매개 변수입니다."
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 호출기 행을 포함 하는 합니다."
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 현재 페이지에 대 한 데이터를 포함 하 합니다."
  overload: System.Web.UI.WebControls.DetailsView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  id: InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 개체입니다."
  remarks: "InitializeRow 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 지정 된 초기화 <xref:System.Web.UI.WebControls.DetailsViewRow>개체입니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView> 행에 대 한 초기화 되는 <xref:System.Web.UI.WebControls.DataControlField>에 포함 된 개체는 `field` 매개 변수.</xref:System.Web.UI.WebControls.DataControlField>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 를 초기화 합니다."
    - id: field
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 행에 해당 하는 합니다."
  overload: System.Web.UI.WebControls.DetailsView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스의 현재 레코드를 삽입합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 삽입 모드 이면 InsertItem 메서드를 사용 하 여 프로그래밍 방식으로 데이터 소스에서 현재 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.DetailsView> 외부에서 현재 레코드를 삽입 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DetailsView>이 메서드는 그렇지 않으면 호출 하는 경우 컨트롤이 삽입 모드에 있어야는 <xref:System.Web.HttpException>예외가 throw 됩니다.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.DetailsView>       삽입 작업 전에 페이지의 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted>및 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView.ItemInserted>"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 호출 될 때 페이지 유효성 검사를 수행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in insert mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 삽입 작업을 수행할 때 호출 되는 페이지에 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤 삽입 작업을 수행할 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.DetailsView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 시점을 제어할는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 삽입 모드 인지 합니다."
  remarks: "에 행이 데이터는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤은이 스타일을 사용 하 여 표시 됩니다 때는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> InsertRowStyle 속성을 사용 하 여 삽입 모드에 있는 데이터 행의 모양을 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `InsertRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `InsertRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the InsertRowStyle property to specify the font and style settings for the data rows when the <xref:System.Web.UI.WebControls.DetailsView> control is in insert mode.  \n  \n [!code-cs[DetailsViewInsertRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_63_1.aspx)]\n [!code-vb[DetailsViewInsertRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_63_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 데이터 행의 스타일을 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 시점을 제어할는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 은 컨트롤이 삽입 모드에 있습니다."
  overload: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 형식의 필드에 바인딩할 수 있는지 여부를 결정 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "IsBindableType 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>지정된 된 데이터 형식 필드 컨트롤에 바인딩할 수 있는지 여부를 확인 하기 위해 컨트롤.</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>컨트롤은 다음 데이터 형식 지원:와 같은 모든 기본 데이터 형식을 <xref:System.Boolean>, <xref:System.Byte>, 및 <xref:System.Int32><xref:System.DateTime><xref:System.Decimal><xref:System.Guid><xref:System.String></xref:System.String>       </xref:System.Guid>       </xref:System.Decimal>       </xref:System.DateTime>       </xref:System.Int32> </xref:System.Byte> </xref:System.Boolean> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>확인할 데이터 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 데이터 형식의 필드에 바인딩할 수 하는 경우는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "경우에 내에서 단추는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "ItemCommand 이벤트가 발생 하면 내에서 단추는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>명령 이름과 클릭 된 단추의 명령 인수를 확인할 수 있는 이벤트 처리기에 전달 되는 개체입니다.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> 사용 하 여 현재 레코드의 인덱스를 확인 하려면는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.DetailsView> control. When the user clicks the Add Contact button, the item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_53_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_53_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DetailsViewCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 레코드를 만들 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "ItemCreated 이벤트의 레코드를 만들 때마다는는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 이 컨트롤을 처음으로 렌더링 하는 경우 또는 사용자가 다른 레코드로 이동할 때 발생할 수 있습니다. 이 이벤트는이 이벤트가 발생할 때마다 행, 사용자 지정 콘텐츠를 추가 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 사용할 수 있습니다.       머리글, 바닥글 및 호출기 행에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView>사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>, 또는 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A>속성을 각각.</xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> </xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> </xref:System.Web.UI.WebControls.DetailsView> 하나에 액세스 하려면 데이터 행을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A>컬렉션.</xref:System.Web.UI.WebControls.DetailsView.Rows%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemCreated event to update a custom pager row with current paging statistics.  \n  \n [!code-cs[DetailsViewHeaderTemplate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_31_1.aspx)]\n [!code-vb[DetailsViewHeaderTemplate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_31_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내에서 삭제 단추 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭할 삭제 작업 후 합니다."
  remarks: "내에서 삭제 단추 ItemDeleted 이벤트가 발생는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭 하 고, 삭제 작업 후.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs>개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs> 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemDeleted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs a delete operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_62_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내에서 삭제 단추 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭할 삭제 작업이 수행 되기 전에 합니다."
  remarks: "ItemDeleting는 이벤트가 내에서 삭제 단추는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭할 삭제 작업이 수행 되기 전에.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs>개체를 삭제 하 고 레코드의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타낼 수 있습니다 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs> 삭제 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 또한는 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A>컬렉션, 필요한 경우 데이터 소스에 값 전달 되기 전에.</xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemDeleting event to cancel the delete operation if the user attempts to delete the last item from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemDeleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[DetailsViewItemDeleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_56_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "경우에 삽입 단추에 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭할 삽입 작업 후 합니다."
  remarks: "때에 삽입 단추 ItemInserted 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭할 삽입 작업 후.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs>개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs> 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A> 컨트롤 삽입 모드에 삽입 작업 후을 유지 하려면 설정는 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemInserted event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an insert operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_55_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 삽입 단추 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭할 삽입 작업이 수행 되기 전에 합니다."
  remarks: "때에 삽입 단추 ItemInserting 이벤트가 발생 한 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭할 삽입 작업이 수행 되기 전에.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs>개체 삽입 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs> 삽입 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 또한는 <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>컬렉션, 필요한 경우 데이터 소스에 값 전달 되기 전에.</xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemInserting event to HTML-encode the values entered by the user before a new record is added to the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_70_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_70_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.DetailsViewInsertEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 단추를 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭 하 고, 업데이트 작업 후 합니다."
  remarks: "내에서 업데이트 단추 때 ItemUpdated 이벤트 발생는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭 하 고, 업데이트 작업 후.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs>개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 컨트롤 편집 모드에 업데이트 작업 후을 유지 하려면 설정는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemUpdated event to refresh a <xref:System.Web.UI.WebControls.GridView> control after a <xref:System.Web.UI.WebControls.DetailsView> control performs an update operation. This keeps the <xref:System.Web.UI.WebControls.GridView> control synchronized with the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_43_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_43_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 단추를 경우에 발생 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤을 클릭할 업데이트 작업이 수행 되기 전에 합니다."
  remarks: "내에서 업데이트 단추 때 ItemUpdating 이벤트가 발생 한 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 클릭할 업데이트 작업이 수행 되기 전에.</xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs>개체는이 통해 업데이트 되는 레코드의 인덱스를 확인 하 고 업데이트 작업을 취소 해야 함을 나타내기 위해 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs> 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A>, 및 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A>컬렉션, 필요한 경우 데이터 소스에 값 전달 되기 전에.</xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A> </xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A> 이러한 컬렉션을 사용 하는 일반적인 방법은 데이터 원본에 저장 되기 전에 사용자가 제공 하는 값을 HTML 인코딩하려면입니다. 이렇게 하면 스크립트 삽입 공격을 방지 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ItemUpdating event to HTML-encode the values entered by the user before a record is updated in the data source.  \n  \n [!code-vb[DetailsViewComplex#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[DetailsViewComplex#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 속성의 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState*>속성이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "에 대 한 속성의 상태를 로드 하 고 LoadControlState 메서드를 사용는 <xref:System.Web.UI.WebControls.DetailsView>경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A>속성이로 설정 되어 `false`.</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 확장할 때 주로 컨트롤 개발자가이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>의 상태를 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 뷰 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다.       LoadViewState 메서드는 이전에 저장 된 뷰 상태를 로드 하는 데 사용 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>의 상태를 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤 후 편집, 삽입 및 읽기 전용 모드 간에 변경 하 려는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>속성이 업데이트 됩니다.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>"
  remarks: "ModeChanged 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 후 편집, 삽입 및 읽기 전용 모드 간에 변경 하 려는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>속성이 업데이트 됩니다.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 이렇게 하면 동기화 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이이 이벤트가 발생할 때마다 다른 컨트롤과.</xref:System.Web.UI.WebControls.DetailsView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ModeChanged event to display the current mode in the header row.  \n  \n [!code-cs[DetailsViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_76_1.aspx)]\n [!code-vb[DetailsViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_76_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤 하기 전에 편집, 삽입 및 읽기 전용 모드 간에 변경 하 려는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>속성이 업데이트 됩니다.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode*>"
  remarks: "ModeChanging 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 하기 전에 편집, 삽입 및 읽기 전용 모드 간에 변경 하 려는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A>속성이 업데이트 됩니다.</xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> </xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 모드 변경을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs>개체 모드 변경 내용을 취소 하거나 편집 작업을 취소 하는 사용자의 결과 모드 변경 했는지 확인 하려면 새 모드를 확인할 수 있는 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs> 새 모드를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A> 모드 변경 편집 작업을 취소 하는 사용자의 범위가 변경 되었는지 여부를 확인 하려면는 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A> 설정 하 여 모드 변경을 취소할 수는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the ModeChanging event to disable the paging feature when the <xref:System.Web.UI.WebControls.DetailsView> control is in edit mode.  \n  \n [!code-cs[DetailsViewModeChanging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[DetailsViewModeChanging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewModeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "웹 서버 컨트롤의 이벤트가 페이지의 사용자 인터페이스 (UI) 서버 컨트롤 계층 구조로 전달 되는지 여부를 결정 합니다."
  remarks: "OnBubbleEvent 메서드를 구현 하는 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>페이지 계층에 자식 컨트롤에서 이벤트를 전달 하는 메서드.</xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트가 취소 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  id: OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnDataSourceViewChanged 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.DataSourceView.DataSourceViewChanged>이벤트.</xref:System.Web.UI.DataSourceView.DataSourceViewChanged> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnDataSourceViewChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnDataSourceViewChanged (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트입니다."
  remarks: "OnInit 메서드를 호출는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.Control.Init>이벤트.</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;> </xref> 이벤트입니다."
  remarks: "OnItemCommand 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCreated&quot;> </xref> 이벤트입니다."
  remarks: "OnItemCreated 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleted&quot;> </xref> 이벤트입니다."
  remarks: "OnItemDeleted 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemDeleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeletedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;> </xref> 이벤트입니다."
  remarks: "OnItemDeleting 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemDeleting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewDeleteEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemDeleting&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserted&quot;> </xref> 이벤트입니다."
  remarks: "OnItemInserted 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemInserted> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemInserted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;> </xref> 이벤트입니다."
  remarks: "OnItemInserting 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemInserting> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemInserting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewInsertEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemInserting&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdated&quot;> </xref> 이벤트입니다."
  remarks: "OnItemUpdated 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemUpdated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdatedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;> </xref> 이벤트입니다."
  remarks: "OnItemUpdating 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnItemUpdating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewUpdateEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemUpdating&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnModeChanged 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ModeChanged> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnModeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;> </xref> 이벤트입니다."
  remarks: "OnModeChanging 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ModeChanging> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnModeChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewModeEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "에 대 한 처리기가 없는 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ModeChanging&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnPageIndexChanged 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView.PageIndexChanging&quot;> </xref> 이벤트입니다."
  remarks: "OnPageIndexChanging 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>이벤트.</xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> </xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DetailsViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewPageEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은, 페이징 작업 취소 되지 않은 및 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  id: OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤을 로드 하기 전에 데이터 바인딩된 컨트롤의 초기화 상태를 설정 합니다."
  remarks: "OnPagePreLoad 메서드는 페이지의 수명 주기 내에서 발생 하면 데이터 바인딩 컨트롤에 사용 됩니다. 데이터 바인딩된 컨트롤의 내부 초기화 상태를 설정 하 여 수행 합니다. 컨트롤의 상태를 초기화 하기 때문에 동안 설정 되는 <xref:System.Web.UI.Page.PreLoad>페이지의 수명 주기 단계는 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A>이벤트 처리기가 컨트롤을 렌더링 하기 전에 해당 데이터에 다시 바인딩해야 신호를 보내 단계 후 컨트롤의 데이터 속성이 변경 될 때마다 호출.</xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> </xref:System.Web.UI.Page.PreLoad>       OnPagePreLoad 메서드의 여는 <xref:System.Web.UI.WebControls.DetailsView>설정 하는 클래스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A>속성을 `true` 에 HTTP 요청 포스트백 및 뷰 상태를 사용할 수 있지만 데이터 바인딩된 컨트롤에 아직 바인딩되지 않았습니다.</xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> </xref:System.Web.UI.WebControls.DetailsView> 이 시나리오는 같은 컨트롤과 일반적 <xref:System.Web.UI.WebControls.Wizard>및 <xref:System.Web.UI.WebControls.MultiView>런타임 시 컨트롤의 표시 유형을 변경 되는 위치,.</xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.Wizard>"
  syntax:
    content: protected override void OnPagePreLoad (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.Page&quot;> </xref> 이벤트를 발생 시킨 합니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 상태 보기 및 렌더링 콘텐츠를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 서버 컨트롤을 알립니다. <xref:System.Web.UI.WebControls.DetailsView>클래스</xref:System.Web.UI.WebControls.DetailsView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       OnPreRender 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DetailsView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 레코드의 수를 가져옵니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>속성은 `null`, `0` 반환 됩니다.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에 있는 레코드의 수입니다."
  overload: System.Web.UI.WebControls.DetailsView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 된 레코드의 인덱스를 가져오거나 설정 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (때는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성이 `true`), PageIndex 속성을 사용 하 여 현재 표시 된 레코드의 인덱스를 확인 합니다.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.      그러나 > [!NOTE] >; 표시 되는 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용할 때,이 속성은&0;부터 시작 하 고 고려해 야 합니다.       데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageCount%2A>"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "에 표시 되는 데이터 항목의&0;부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 기본 데이터 원본에서 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값이 보다 작은 <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우의 값은 <xref:System.Web.UI.WebControls.DetailsView.PageIndex*>페이징 작업 후 속성 변경.</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>제어 페이저 단추 PageIndexChanged 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;페이지&quot;로 설정) 컨트롤 내에서 클릭 하면 후의 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       페이저 단추는 일반적으로의 호출기 행에 위치는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 이 이벤트를 동기화 하는 대개는 <xref:System.Web.UI.WebControls.DetailsView>보호로 <xref:System.Web.UI.WebControls.GridView>컨트롤 또는 동작을 설정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 페이징 작업 후.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.DetailsView> to read-only mode when the user navigates to another record.  \n  \n [!code-cs[DetailsViewChangeMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_59_1.aspx)]\n [!code-vb[DetailsViewChangeMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_59_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우의 값은 <xref:System.Web.UI.WebControls.DetailsView.PageIndex*>페이징 작업 전에 속성 변경 내용을.</xref:System.Web.UI.WebControls.DetailsView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>제어 페이저 단추 PageIndexChanging 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;페이지&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.DetailsView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A>       페이저 단추는 일반적으로의 호출기 행에 위치는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>       A <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>개체를 사용 하면 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타내기 위해 이벤트 처리기에 전달 됩니다.</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> 사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A> 페이징 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n [!code-vb[DetailsViewCurrentMode#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_38_1.aspx)]\n [!code-cs[DetailsViewCurrentMode#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_38_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.DetailsViewPageEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "PagerSettings 속성을 사용 하 여의 호출기 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`) 컨트롤의 다른 레코드를 탐색 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings>개체를 반환 합니다.</xref:System.Web.UI.WebControls.PagerSettings> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.PagerSettings>개체 (예를 들어 `PagerSetting-Mode`).</xref:System.Web.UI.WebControls.PagerSettings> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerSetting.Mode`). 일반 설정에는 일반적으로 호출기 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 이미지 탐색 컨트롤에 대 한 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1242_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1242_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "PagerStyle 속성을 사용 하 여의 호출기 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`) 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `PagerStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the PagerStyle property to specify the font and style settings for the pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1045_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1045_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출기 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "호출기 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>페이징 기능을 활성화 하는 시기를 제어 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 true로).</xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> </xref:System.Web.UI.WebControls.DetailsView> 호출기 행 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 호출기 행 사용자 인터페이스 (UI)를 사용 하는 대신 PagerTemplate 속성을 사용 하 여 UI를 직접 정의할 수 있습니다. 호출기 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<PagerTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<PagerTemplate>` 태그입니다. 호출기 행의 모양을 제어는 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>"
  example:
  - "The following code example demonstrates how to use the PagerTemplate property to create a custom pager row.  \n  \n [!code-cs[DetailsViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_501_1.aspx)]\n [!code-vb[DetailsViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_501_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 호출기 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 소스에 바인딩하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "PerformDataBinding 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 컨트롤에 지정된 된 데이터 소스를 바인딩할.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>데이터 소스를 나타내는입니다.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "설정의 컨트롤 계층 구조는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "PrepareControlHierarchy 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 렌더링 되기 전에 제어.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "콜백 처리기에 대 한 인수를 만듭니다는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference*>"
  remarks: "RaiseCallbackEvent 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 콜백 처리기에 대 한 인수를 만드는 데는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>메서드.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 인수입니다."
  overload: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 적절 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "메서드는 다시 게시 이벤트 발생에 대 한 적절 한 이벤트를 발생 시킵니다. RaisePostBackEvent를 호출 하 여 페이지는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs>발생 하는 이벤트에 대 한 개체입니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 인수를 만들려는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 발생 하는 이벤트 또는 이벤트입니다."
  overload: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 사용 하 여 지정 된 클라이언트에 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체입니다."
  remarks: "Render 메서드는 사용 하 여 지정 된 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 데 <xref:System.Web.UI.HtmlTextWriter>개체입니다.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트에 렌더링할 출력 스트림이 들어 있는입니다."
  overload: System.Web.UI.WebControls.DetailsView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.Rows
  id: Rows
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 데이터 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "행 속성 (컬렉션)의 데이터 행을 저장을 사용 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView>컨트롤을 만들어서 행 컬렉션을 자동으로 채웁니다는 <xref:System.Web.UI.WebControls.DetailsViewRow>개체 데이터 소스에 있는 각 레코드에 대 한 한 다음 컬렉션에 개체를 추가 합니다.</xref:System.Web.UI.WebControls.DetailsViewRow> </xref:System.Web.UI.WebControls.DetailsView> 이 속성은 컨트롤의 특정 행에 액세스 하거나 행의 전체 컬렉션을 반복에 일반적으로 사용 됩니다.      > [!NOTE] > 행 컬렉션에 데이터 행만 저장 됩니다. <xref:System.Web.UI.WebControls.DetailsViewRow>머리글, 바닥글 및 호출기 행을 나타내는 개체 컬렉션에 포함 되지 않습니다.</xref:System.Web.UI.WebControls.DetailsViewRow>"
  example:
  - "The following code example demonstrates how to use the Rows property to access a data row in a <xref:System.Web.UI.WebControls.DetailsView> control. The data row is used to retrieve the value of a field from the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1064_1.aspx)]\n [!code-cs[DetailsViewItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1064_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRowCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRowCollection&quot;> </xref> 의 모든 데이터 행을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  id: RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "구현 하는 개체를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;> </xref> 뷰에서 행을 자동으로 채우려면 인터페이스입니다."
  syntax:
    content: public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "구현 하는 개체는 <xref href=&quot;System.Web.UI.IAutoFieldGenerator&quot;> </xref> 인터페이스입니다."
  overload: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "RowStyle 속성을 사용 하 여에 데이터 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> 경우는 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>RowStyle 설정 사이 교대로 반복 되는 데이터 행을 표시할을 속성 설정 및 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>설정.</xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> </xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `RowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following code example demonstrates how to use the RowStyle property to specify the font and style settings for the data rows in the <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-vb[DetailsViewRowStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_619_1.aspx)]\n [!code-cs[DetailsViewRowStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_619_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 데이터 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 속성의 상태를 저장는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 경우에 유지 해야 하는 컨트롤의 &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; 속성이로 설정 되어 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "에 속성의 상태를 저장 하려면이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView>경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>속성이 `false`.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "서버 컨트롤 현재 뷰 상태를 반환합니다. 컨트롤과 연결 된 뷰 상태가 없으면이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 뷰 상태를 저장 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "SaveViewState 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 상태를 저장 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>의 저장된 된 상태를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.DetailsView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 레코드의 데이터 키 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "SelectedValue 속성을 사용 하 여 현재 레코드에 대 한 데이터 키 값을 결정 합니다. 실제 검색 <xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>사용 하 여 레코드에 대 한 데이터 키를 나타내는 개체는 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A>속성.</xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey?displayProperty=fullName>       이 속성은 기본 속성으로 하는 <xref:System.Web.UI.WebControls.ControlParameter>개체는 런타임 시 바인딩됩니다.</xref:System.Web.UI.WebControls.ControlParameter> 자세한 내용은 참조 <xref:System.Web.UI.ControlValuePropertyAttribute>, <xref:System.Web.UI.WebControls.ControlParameter>, 및 [필터링에 대 한 데이터 소스 컨트롤과 매개 변수를 사용 하 여](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.ControlValuePropertyAttribute>"
  example:
  - "The following code example demonstrates how to use the SelectedValue property to determine the data key value for the current record.  \n  \n [!code-cs[DetailsViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_453_1.aspx)]\n [!code-vb[DetailsViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_453_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "데이터 키의 현재 레코드의 값을 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "설정에 현재 표시 된 페이지의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "설정할 인덱스 값입니다."
  overload: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*>.</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult*> 메서드를 참조 하십시오."
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>구현 제어는 <xref:System.Web.UI.ICallbackEventHandler>인터페이스 및 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A>데이터를 검색 하 고 <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A>컨트롤에 검색된 된 데이터를 반환 하는 메서드.</xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "콜백 결과입니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 인수를 사용 하 여 콜백 이벤트를 발생 시킵니다."
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 인수입니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>.</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataItemContainer>인터페이스.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "반환 된 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>값.</xref:System.Web.UI.WebControls.DetailsView.DataItemIndex*>"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Web.UI.IDataItemContainer.DisplayIndex*>.</xref:System.Web.UI.IDataItemContainer.DisplayIndex*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataItemContainer>인터페이스.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "Returns <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackEventHandler>인터페이스.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 처리기에 전달할 선택적 이벤트 인수를 나타내는 문자열입니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "콜백 스크립트를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DetailsView>콜백을 생성 하는 컨트롤 스크립트</xref:System.Web.UI.WebControls.DetailsView> 경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 클라이언트 스크립트를 렌더링 하지 않습니다 또는 경우에는 `argument` 매개 변수는 `null` 또는 빈 문자열 (&quot;&quot;),이 메서드가 반환 `null`.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "페이지는 서버에 게시 하는 단추 컨트롤입니다."
    - id: argument
      type: System.String
      description: "콜백 이벤트에 대 한 인수입니다."
    return:
      type: System.String
      description: "에 대 한 콜백 스크립트는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "데이터 바인딩된 컨트롤에 표시 되는 항목의 기본 키 필드의 이름이 포함 된 배열입니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataMember%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "데이터 목록 이름 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 바인딩된 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSource%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "데이터 소스를 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 해당 데이터를 검색 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceID%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "데이터의 목록을 포함 하는 데이터 소스 컨트롤의 ID를 항목에 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 검색을 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "데이터의 목록을 포함 하는 개체를 항목에 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 검색을 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.DataKey%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "행의 데이터 키 값을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IDataBoundItemControl.Mode%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.DetailsView>       The <xref:System.Web.UI.WebControls.DetailsView> can be set to `ReadOnly`, `Edit` or `Delete`.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "현재 모드는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  id: System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 속성에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IFieldControl.FieldsGenerator%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IFieldControl>인터페이스.</xref:System.Web.UI.WebControls.IFieldControl> </xref:System.Web.UI.WebControls.DetailsView>       이 속성에 대 한 열을 자동으로 생성을 사용 하는 <xref:System.Web.UI.WebControls.DetailsView>ASP.NET Dynamic Data 기능을 사용 하는 컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }
    return:
      type: System.Web.UI.IAutoFieldGenerator
      description: "컨트롤에 대 한 열을 자동으로 생성 하는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DetailsView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IPostBackEventHandler>인터페이스.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "클라이언트 쪽 포스트백 이벤트를 생성 하는 컨트롤입니다."
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> 에 필요한 정보로 <xref:System.Web.UI.Page.GetPostBackEventReference*>, 클라이언트에서 실행 하는 경우 클라이언트 포스트백 시작 하는 유효한 스크립트를 생성 합니다.</xref:System.Web.UI.Page.GetPostBackEventReference*>"
  overload: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buttonControl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>buttonControl</code>유효성 검사는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어와 같은 사용을 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 컨트롤이 다시 게시 대상으로 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "TagKey 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림의 사용 하면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "경우 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*>은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>,이 속성은 반환 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>.</xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*> 그렇지 않으면 반환 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 상위 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A>속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 호출기 행 사용자가 다른 레코드로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 TopPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewRow>의 상위 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsViewRow>      > [!NOTE] > The TopPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤의 아래쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemCreated> </xref:System.Web.UI.WebControls.DetailsView>       이 속성은 일반적으로 프로그래밍 방식으로 조작 위쪽 페이저 행 예를 들어 사용자 지정 내용을 추가 해야 할 때 사용 됩니다. TopPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에 모든 변경 사항을 덮어씁니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the TopPagerRow property to access the top pager row of the <xref:System.Web.UI.WebControls.DetailsView> control during the <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> event. Two <xref:System.Web.UI.WebControls.Label> controls within the custom pager row are then updated with the current page number and total number of pages.  \n  \n [!code-vb[DetailsViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_822_1.aspx)]\n [!code-cs[DetailsViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_822_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.DetailsViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.DetailsViewRow&quot;> </xref> 의 상위 호출기 행을 나타내는 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 뷰 상태의 변경을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 된 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 하도록 재정의 됩니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DetailsView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스에서 현재 레코드를 업데이트 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 편집 모드에 있으면 UpdateItem 메서드를 사용 하 여 프로그래밍 방식으로 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.DetailsView> 외부에서 현재 레코드를 업데이트 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.DetailsView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤이 고, 그렇지 않으면 호출에이 메서드를 편집 모드에 있어야는 <xref:System.Web.HttpException>예외가 throw 됩니다.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.DetailsView>       업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>및 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>이벤트.</xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> </xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 호출 될 때 페이지 유효성 검사를 수행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "This method is called when the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is not in edit mode.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.DataSourceView\"></xref> associated with the <xref href=\"System.Web.UI.WebControls.DetailsView\"></xref> control is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤이 업데이트 작업을 수행할 때 호출 되는 페이지 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤이 업데이트 작업을 수행할 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DetailsView.#ctor
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView()
  nameWithType: DetailsView.DetailsView()
  fullName: System.Web.UI.WebControls.DetailsView.DetailsView()
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
  fullName: System.Web.UI.WebControls.DetailsView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
  fullName: System.Web.UI.WebControls.DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
  fullName: System.Web.UI.WebControls.DetailsView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRow
  nameWithType: DetailsViewRow
  fullName: System.Web.UI.WebControls.DetailsViewRow
- uid: System.Web.UI.WebControls.DetailsView.Caption
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
  fullName: System.Web.UI.WebControls.DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
  fullName: System.Web.UI.WebControls.DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
  fullName: System.Web.UI.WebControls.DetailsView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
  fullName: System.Web.UI.WebControls.DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode(DetailsViewMode)
  nameWithType: DetailsView.ChangeMode(DetailsViewMode)
  fullName: System.Web.UI.WebControls.DetailsView.ChangeMode(DetailsViewMode)
- uid: System.Web.UI.WebControls.DetailsViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewMode
  nameWithType: DetailsViewMode
  fullName: System.Web.UI.WebControls.DetailsViewMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  nameWithType: DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(AutoGeneratedFieldProperties)
- uid: System.Web.UI.WebControls.AutoGeneratedField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedField
  nameWithType: AutoGeneratedField
  fullName: System.Web.UI.WebControls.AutoGeneratedField
- uid: System.Web.UI.WebControls.AutoGeneratedFieldProperties
  parent: System.Web.UI.WebControls
  isExternal: false
  name: AutoGeneratedFieldProperties
  nameWithType: AutoGeneratedFieldProperties
  fullName: System.Web.UI.WebControls.AutoGeneratedFieldProperties
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows(Object)
  nameWithType: DetailsView.CreateAutoGeneratedRows(Object)
  fullName: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(Object)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: DetailsView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DetailsView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DetailsView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: DetailsView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet(Object,Boolean)
  nameWithType: DetailsView.CreateFieldSet(Object,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.CreateFieldSet(Object,Boolean)
- uid: System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.DetailsView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.DetailsView.CreateTable
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable()
  nameWithType: DetailsView.CreateTable()
  fullName: System.Web.UI.WebControls.DetailsView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
  fullName: System.Web.UI.WebControls.DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind()
  nameWithType: DetailsView.DataBind()
  fullName: System.Web.UI.WebControls.DetailsView.DataBind()
- uid: System.Web.UI.WebControls.DetailsView.DataItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
  fullName: System.Web.UI.WebControls.DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
  fullName: System.Web.UI.WebControls.DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
  fullName: System.Web.UI.WebControls.DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem()
  nameWithType: DetailsView.DeleteItem()
  fullName: System.Web.UI.WebControls.DetailsView.DeleteItem()
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
  fullName: System.Web.UI.WebControls.DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
  fullName: System.Web.UI.WebControls.DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
  fullName: System.Web.UI.WebControls.DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
  fullName: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: DetailsView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.DetailsView.EnsureDataBound()
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  nameWithType: DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.ExtractRowValues(IOrderedDictionary,Boolean,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
  fullName: System.Web.UI.WebControls.DetailsView.Fields
- uid: System.Web.UI.WebControls.DataControlFieldCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCollection
  nameWithType: DataControlFieldCollection
  fullName: System.Web.UI.WebControls.DataControlFieldCollection
- uid: System.Web.UI.WebControls.DetailsView.FooterRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
  fullName: System.Web.UI.WebControls.DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
  fullName: System.Web.UI.WebControls.DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
  fullName: System.Web.UI.WebControls.DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
  fullName: System.Web.UI.WebControls.DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: DetailsView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.DetailsView.GridLines
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
  fullName: System.Web.UI.WebControls.DetailsView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
  fullName: System.Web.UI.WebControls.DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
  fullName: System.Web.UI.WebControls.DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
  fullName: System.Web.UI.WebControls.DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
  fullName: System.Web.UI.WebControls.DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
  fullName: System.Web.UI.WebControls.DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager(DetailsViewRow,PagedDataSource)
  nameWithType: DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.DetailsView.InitializePager(DetailsViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow(DetailsViewRow,DataControlField)
  nameWithType: DetailsView.InitializeRow(DetailsViewRow,DataControlField)
  fullName: System.Web.UI.WebControls.DetailsView.InitializeRow(DetailsViewRow,DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: DetailsView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
  fullName: System.Web.UI.WebControls.DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
  fullName: System.Web.UI.WebControls.DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DetailsView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.DetailsView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.DetailsView.ItemCommand
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCommand
  nameWithType: DetailsView.ItemCommand
  fullName: System.Web.UI.WebControls.DetailsView.ItemCommand
- uid: System.Web.UI.WebControls.DetailsViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventHandler
  nameWithType: DetailsViewCommandEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemCreated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemCreated
  nameWithType: DetailsView.ItemCreated
  fullName: System.Web.UI.WebControls.DetailsView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleted
  nameWithType: DetailsView.ItemDeleted
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleted
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventHandler
  nameWithType: DetailsViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemDeleting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemDeleting
  nameWithType: DetailsView.ItemDeleting
  fullName: System.Web.UI.WebControls.DetailsView.ItemDeleting
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventHandler
  nameWithType: DetailsViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserted
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserted
  nameWithType: DetailsView.ItemInserted
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserted
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventHandler
  nameWithType: DetailsViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemInserting
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemInserting
  nameWithType: DetailsView.ItemInserting
  fullName: System.Web.UI.WebControls.DetailsView.ItemInserting
- uid: System.Web.UI.WebControls.DetailsViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventHandler
  nameWithType: DetailsViewInsertEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdated
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdated
  nameWithType: DetailsView.ItemUpdated
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdated
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventHandler
  nameWithType: DetailsViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.DetailsView.ItemUpdating
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ItemUpdating
  nameWithType: DetailsView.ItemUpdating
  fullName: System.Web.UI.WebControls.DetailsView.ItemUpdating
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventHandler
  nameWithType: DetailsViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventHandler
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: DetailsView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DetailsView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DetailsView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DetailsView.ModeChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanged
  nameWithType: DetailsView.ModeChanged
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanged
- uid: System.Web.UI.WebControls.DetailsView.ModeChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ModeChanging
  nameWithType: DetailsView.ModeChanging
  fullName: System.Web.UI.WebControls.DetailsView.ModeChanging
- uid: System.Web.UI.WebControls.DetailsViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventHandler
  nameWithType: DetailsViewModeEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewModeEventHandler
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DetailsView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged(Object,EventArgs)
  nameWithType: DetailsView.OnDataSourceViewChanged(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DetailsView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand(DetailsViewCommandEventArgs)
  nameWithType: DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCommand(DetailsViewCommandEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: DetailsView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted(DetailsViewDeletedEventArgs)
  nameWithType: DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleted(DetailsViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeletedEventArgs
  nameWithType: DetailsViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeletedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting(DetailsViewDeleteEventArgs)
  nameWithType: DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemDeleting(DetailsViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewDeleteEventArgs
  nameWithType: DetailsViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewDeleteEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted(DetailsViewInsertedEventArgs)
  nameWithType: DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserted(DetailsViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertedEventArgs
  nameWithType: DetailsViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting(DetailsViewInsertEventArgs)
  nameWithType: DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemInserting(DetailsViewInsertEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewInsertEventArgs
  nameWithType: DetailsViewInsertEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewInsertEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated(DetailsViewUpdatedEventArgs)
  nameWithType: DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdated(DetailsViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdatedEventArgs
  nameWithType: DetailsViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating(DetailsViewUpdateEventArgs)
  nameWithType: DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnItemUpdating(DetailsViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewUpdateEventArgs
  nameWithType: DetailsViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewUpdateEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: DetailsView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging(DetailsViewModeEventArgs)
  nameWithType: DetailsView.OnModeChanging(DetailsViewModeEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnModeChanging(DetailsViewModeEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewModeEventArgs
  nameWithType: DetailsViewModeEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewModeEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: DetailsView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging(DetailsViewPageEventArgs)
  nameWithType: DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(DetailsViewPageEventArgs)
- uid: System.Web.UI.WebControls.DetailsViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventArgs
  nameWithType: DetailsViewPageEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewPageEventArgs
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad(Object,EventArgs)
  nameWithType: DetailsView.OnPagePreLoad(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPagePreLoad(Object,EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: DetailsView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.DetailsView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.DetailsView.PageCount
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
  fullName: System.Web.UI.WebControls.DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
  fullName: System.Web.UI.WebControls.DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanged
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanged
  nameWithType: DetailsView.PageIndexChanged
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.PageIndexChanging
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndexChanging
  nameWithType: DetailsView.PageIndexChanging
  fullName: System.Web.UI.WebControls.DetailsView.PageIndexChanging
- uid: System.Web.UI.WebControls.DetailsViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewPageEventHandler
  nameWithType: DetailsViewPageEventHandler
  fullName: System.Web.UI.WebControls.DetailsViewPageEventHandler
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
  fullName: System.Web.UI.WebControls.DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
  fullName: System.Web.UI.WebControls.DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
  fullName: System.Web.UI.WebControls.DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: DetailsView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.DetailsView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DetailsView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: DetailsView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: DetailsView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DetailsView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DetailsView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DetailsView.Rows
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
  fullName: System.Web.UI.WebControls.DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsViewRowCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DetailsViewRowCollection
  nameWithType: DetailsViewRowCollection
  fullName: System.Web.UI.WebControls.DetailsViewRowCollection
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.RowsGenerator
- uid: System.Web.UI.IAutoFieldGenerator
  parent: System.Web.UI
  isExternal: false
  name: IAutoFieldGenerator
  nameWithType: IAutoFieldGenerator
  fullName: System.Web.UI.IAutoFieldGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
  fullName: System.Web.UI.WebControls.DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState()
  nameWithType: DetailsView.SaveControlState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveControlState()
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState()
  nameWithType: DetailsView.SaveViewState()
  fullName: System.Web.UI.WebControls.DetailsView.SaveViewState()
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
  fullName: System.Web.UI.WebControls.DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: DetailsView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.DetailsView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
  fullName: System.Web.UI.WebControls.DetailsView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
  fullName: System.Web.UI.WebControls.DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState()
  nameWithType: DetailsView.TrackViewState()
  fullName: System.Web.UI.WebControls.DetailsView.TrackViewState()
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: DetailsView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.DetailsView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
  fullName: System.Web.UI.WebControls.DetailsView.UpdateMethod
- uid: System.Web.UI.WebControls.DetailsView.#ctor*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DetailsView
  nameWithType: DetailsView.DetailsView
- uid: System.Web.UI.WebControls.DetailsView.AllowPaging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AllowPaging
  nameWithType: DetailsView.AllowPaging
- uid: System.Web.UI.WebControls.DetailsView.AlternatingRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AlternatingRowStyle
  nameWithType: DetailsView.AlternatingRowStyle
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateDeleteButton
  nameWithType: DetailsView.AutoGenerateDeleteButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateEditButton
  nameWithType: DetailsView.AutoGenerateEditButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateInsertButton
  nameWithType: DetailsView.AutoGenerateInsertButton
- uid: System.Web.UI.WebControls.DetailsView.AutoGenerateRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: AutoGenerateRows
  nameWithType: DetailsView.AutoGenerateRows
- uid: System.Web.UI.WebControls.DetailsView.BackImageUrl*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BackImageUrl
  nameWithType: DetailsView.BackImageUrl
- uid: System.Web.UI.WebControls.DetailsView.BottomPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: BottomPagerRow
  nameWithType: DetailsView.BottomPagerRow
- uid: System.Web.UI.WebControls.DetailsView.Caption*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Caption
  nameWithType: DetailsView.Caption
- uid: System.Web.UI.WebControls.DetailsView.CaptionAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CaptionAlign
  nameWithType: DetailsView.CaptionAlign
- uid: System.Web.UI.WebControls.DetailsView.CellPadding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellPadding
  nameWithType: DetailsView.CellPadding
- uid: System.Web.UI.WebControls.DetailsView.CellSpacing*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CellSpacing
  nameWithType: DetailsView.CellSpacing
- uid: System.Web.UI.WebControls.DetailsView.ChangeMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ChangeMode
  nameWithType: DetailsView.ChangeMode
- uid: System.Web.UI.WebControls.DetailsView.CommandRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CommandRowStyle
  nameWithType: DetailsView.CommandRowStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRow
  nameWithType: DetailsView.CreateAutoGeneratedRow
- uid: System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateAutoGeneratedRows
  nameWithType: DetailsView.CreateAutoGeneratedRows
- uid: System.Web.UI.WebControls.DetailsView.CreateChildControls*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateChildControls
  nameWithType: DetailsView.CreateChildControls
- uid: System.Web.UI.WebControls.DetailsView.CreateControlStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateControlStyle
  nameWithType: DetailsView.CreateControlStyle
- uid: System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: DetailsView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.DetailsView.CreateFieldSet*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateFieldSet
  nameWithType: DetailsView.CreateFieldSet
- uid: System.Web.UI.WebControls.DetailsView.CreateRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateRow
  nameWithType: DetailsView.CreateRow
- uid: System.Web.UI.WebControls.DetailsView.CreateTable*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CreateTable
  nameWithType: DetailsView.CreateTable
- uid: System.Web.UI.WebControls.DetailsView.CurrentMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: CurrentMode
  nameWithType: DetailsView.CurrentMode
- uid: System.Web.UI.WebControls.DetailsView.DataBind*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataBind
  nameWithType: DetailsView.DataBind
- uid: System.Web.UI.WebControls.DetailsView.DataItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItem
  nameWithType: DetailsView.DataItem
- uid: System.Web.UI.WebControls.DetailsView.DataItemCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemCount
  nameWithType: DetailsView.DataItemCount
- uid: System.Web.UI.WebControls.DetailsView.DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataItemIndex
  nameWithType: DetailsView.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKey
  nameWithType: DetailsView.DataKey
- uid: System.Web.UI.WebControls.DetailsView.DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DataKeyNames
  nameWithType: DetailsView.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.DefaultMode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DefaultMode
  nameWithType: DetailsView.DefaultMode
- uid: System.Web.UI.WebControls.DetailsView.DeleteItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteItem
  nameWithType: DetailsView.DeleteItem
- uid: System.Web.UI.WebControls.DetailsView.DeleteMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: DeleteMethod
  nameWithType: DetailsView.DeleteMethod
- uid: System.Web.UI.WebControls.DetailsView.EditRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EditRowStyle
  nameWithType: DetailsView.EditRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: DetailsView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: DetailsView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.DetailsView.EmptyDataText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EmptyDataText
  nameWithType: DetailsView.EmptyDataText
- uid: System.Web.UI.WebControls.DetailsView.EnableModelValidation*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnableModelValidation
  nameWithType: DetailsView.EnableModelValidation
- uid: System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnablePagingCallbacks
  nameWithType: DetailsView.EnablePagingCallbacks
- uid: System.Web.UI.WebControls.DetailsView.EnsureDataBound*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: EnsureDataBound
  nameWithType: DetailsView.EnsureDataBound
- uid: System.Web.UI.WebControls.DetailsView.ExtractRowValues*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: ExtractRowValues
  nameWithType: DetailsView.ExtractRowValues
- uid: System.Web.UI.WebControls.DetailsView.FieldHeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FieldHeaderStyle
  nameWithType: DetailsView.FieldHeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.Fields*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Fields
  nameWithType: DetailsView.Fields
- uid: System.Web.UI.WebControls.DetailsView.FooterRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterRow
  nameWithType: DetailsView.FooterRow
- uid: System.Web.UI.WebControls.DetailsView.FooterStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterStyle
  nameWithType: DetailsView.FooterStyle
- uid: System.Web.UI.WebControls.DetailsView.FooterTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterTemplate
  nameWithType: DetailsView.FooterTemplate
- uid: System.Web.UI.WebControls.DetailsView.FooterText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: FooterText
  nameWithType: DetailsView.FooterText
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackResult
  nameWithType: DetailsView.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GetCallbackScript
  nameWithType: DetailsView.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.GridLines*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: GridLines
  nameWithType: DetailsView.GridLines
- uid: System.Web.UI.WebControls.DetailsView.HeaderRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderRow
  nameWithType: DetailsView.HeaderRow
- uid: System.Web.UI.WebControls.DetailsView.HeaderStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderStyle
  nameWithType: DetailsView.HeaderStyle
- uid: System.Web.UI.WebControls.DetailsView.HeaderTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderTemplate
  nameWithType: DetailsView.HeaderTemplate
- uid: System.Web.UI.WebControls.DetailsView.HeaderText*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HeaderText
  nameWithType: DetailsView.HeaderText
- uid: System.Web.UI.WebControls.DetailsView.HorizontalAlign*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: HorizontalAlign
  nameWithType: DetailsView.HorizontalAlign
- uid: System.Web.UI.WebControls.DetailsView.InitializePager*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializePager
  nameWithType: DetailsView.InitializePager
- uid: System.Web.UI.WebControls.DetailsView.InitializeRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InitializeRow
  nameWithType: DetailsView.InitializeRow
- uid: System.Web.UI.WebControls.DetailsView.InsertItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertItem
  nameWithType: DetailsView.InsertItem
- uid: System.Web.UI.WebControls.DetailsView.InsertMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertMethod
  nameWithType: DetailsView.InsertMethod
- uid: System.Web.UI.WebControls.DetailsView.InsertRowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: InsertRowStyle
  nameWithType: DetailsView.InsertRowStyle
- uid: System.Web.UI.WebControls.DetailsView.IsBindableType*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: IsBindableType
  nameWithType: DetailsView.IsBindableType
- uid: System.Web.UI.WebControls.DetailsView.LoadControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadControlState
  nameWithType: DetailsView.LoadControlState
- uid: System.Web.UI.WebControls.DetailsView.LoadViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: LoadViewState
  nameWithType: DetailsView.LoadViewState
- uid: System.Web.UI.WebControls.DetailsView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DetailsView.OnBubbleEvent
- uid: System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DetailsView.OnDataSourceViewChanged
- uid: System.Web.UI.WebControls.DetailsView.OnInit*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnInit
  nameWithType: DetailsView.OnInit
- uid: System.Web.UI.WebControls.DetailsView.OnItemCommand*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCommand
  nameWithType: DetailsView.OnItemCommand
- uid: System.Web.UI.WebControls.DetailsView.OnItemCreated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemCreated
  nameWithType: DetailsView.OnItemCreated
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleted
  nameWithType: DetailsView.OnItemDeleted
- uid: System.Web.UI.WebControls.DetailsView.OnItemDeleting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemDeleting
  nameWithType: DetailsView.OnItemDeleting
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserted*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserted
  nameWithType: DetailsView.OnItemInserted
- uid: System.Web.UI.WebControls.DetailsView.OnItemInserting*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemInserting
  nameWithType: DetailsView.OnItemInserting
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdated*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdated
  nameWithType: DetailsView.OnItemUpdated
- uid: System.Web.UI.WebControls.DetailsView.OnItemUpdating*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnItemUpdating
  nameWithType: DetailsView.OnItemUpdating
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanged
  nameWithType: DetailsView.OnModeChanged
- uid: System.Web.UI.WebControls.DetailsView.OnModeChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnModeChanging
  nameWithType: DetailsView.OnModeChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: DetailsView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.DetailsView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: DetailsView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.DetailsView.OnPagePreLoad*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPagePreLoad
  nameWithType: DetailsView.OnPagePreLoad
- uid: System.Web.UI.WebControls.DetailsView.OnPreRender*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: OnPreRender
  nameWithType: DetailsView.OnPreRender
- uid: System.Web.UI.WebControls.DetailsView.PageCount*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageCount
  nameWithType: DetailsView.PageCount
- uid: System.Web.UI.WebControls.DetailsView.PageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PageIndex
  nameWithType: DetailsView.PageIndex
- uid: System.Web.UI.WebControls.DetailsView.PagerSettings*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerSettings
  nameWithType: DetailsView.PagerSettings
- uid: System.Web.UI.WebControls.DetailsView.PagerStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerStyle
  nameWithType: DetailsView.PagerStyle
- uid: System.Web.UI.WebControls.DetailsView.PagerTemplate*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PagerTemplate
  nameWithType: DetailsView.PagerTemplate
- uid: System.Web.UI.WebControls.DetailsView.PerformDataBinding*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PerformDataBinding
  nameWithType: DetailsView.PerformDataBinding
- uid: System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DetailsView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: DetailsView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: DetailsView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.Render*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Render
  nameWithType: DetailsView.Render
- uid: System.Web.UI.WebControls.DetailsView.Rows*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: Rows
  nameWithType: DetailsView.Rows
- uid: System.Web.UI.WebControls.DetailsView.RowsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowsGenerator
  nameWithType: DetailsView.RowsGenerator
- uid: System.Web.UI.WebControls.DetailsView.RowStyle*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: RowStyle
  nameWithType: DetailsView.RowStyle
- uid: System.Web.UI.WebControls.DetailsView.SaveControlState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveControlState
  nameWithType: DetailsView.SaveControlState
- uid: System.Web.UI.WebControls.DetailsView.SaveViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SaveViewState
  nameWithType: DetailsView.SaveViewState
- uid: System.Web.UI.WebControls.DetailsView.SelectedValue*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SelectedValue
  nameWithType: DetailsView.SelectedValue
- uid: System.Web.UI.WebControls.DetailsView.SetPageIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: SetPageIndex
  nameWithType: DetailsView.SetPageIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: DetailsView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: DetailsView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: DetailsView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
  nameWithType: DetailsView.System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: DetailsView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IFieldControl.FieldsGenerator
  nameWithType: DetailsView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator
- uid: System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: DetailsView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.DetailsView.TagKey*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TagKey
  nameWithType: DetailsView.TagKey
- uid: System.Web.UI.WebControls.DetailsView.TopPagerRow*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TopPagerRow
  nameWithType: DetailsView.TopPagerRow
- uid: System.Web.UI.WebControls.DetailsView.TrackViewState*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: TrackViewState
  nameWithType: DetailsView.TrackViewState
- uid: System.Web.UI.WebControls.DetailsView.UpdateItem*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateItem
  nameWithType: DetailsView.UpdateItem
- uid: System.Web.UI.WebControls.DetailsView.UpdateMethod*
  parent: System.Web.UI.WebControls.DetailsView
  isExternal: false
  name: UpdateMethod
  nameWithType: DetailsView.UpdateMethod
