### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContext
  id: TraceContext
  children:
  - System.Web.TraceContext.#ctor(System.Web.HttpContext)
  - System.Web.TraceContext.IsEnabled
  - System.Web.TraceContext.TraceFinished
  - System.Web.TraceContext.TraceMode
  - System.Web.TraceContext.Warn(System.String)
  - System.Web.TraceContext.Warn(System.String,System.String)
  - System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  - System.Web.TraceContext.Write(System.String)
  - System.Web.TraceContext.Write(System.String,System.String)
  - System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  langs:
  - csharp
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
  type: Class
  summary: "캡처 및 웹 요청에 대 한 실행 정보를 표시 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "메시지를 특정 추적 범주에 추가 하려면이 클래스를 사용할 수 있습니다. 예를 들어의 인스턴스를 만들려는 경우에 <xref:System.Web.UI.WebControls.Calendar>클래스 응용 프로그램에 대 한 &quot;렌더링 시작&quot; 추적 메시지에 포함 렌더링 프로시저와 &quot;OnChange 이벤트를 발생 시키는&quot; 이벤트 처리기 프로시저에서.</xref:System.Web.UI.WebControls.Calendar>       또한 TraceContext 클래스를 사용 하 여 사용자 지정 처리에 대 한 요청을 실행의 끝에 추적 레코드의 집합을 가져옵니다. 자세한 내용은 참조 [ASP.NET 추적 개요](~/add/includes/ajax-current-ext-md.md)합니다.       추적을 사용 하려면 설정는 `Trace` 특성에 [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 지시문 또는 <xref:System.Web.TraceContext.IsEnabled%2A>속성을 `true`.</xref:System.Web.TraceContext.IsEnabled%2A> 사용자가 지정한 추적 콘텐츠를 표시할 뿐만 아니라 추적을 사용 하는 경우는 <xref:System.Web.UI.Page>성능 데이터, 컨트롤-트리 구조 정보 및 상태 관리 콘텐츠의 모든 요청에 대해 자동으로 클래스를 포함 합니다.</xref:System.Web.UI.Page>"
  syntax:
    content: public sealed class TraceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  id: '#ctor(System.Web.HttpContext)'
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.TraceContext&quot;> </xref> 클래스입니다."
  syntax:
    content: public TraceContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 현재 웹 요청에 대 한 정보가 들어 있는입니다."
  overload: System.Web.TraceContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.IsEnabled
  id: IsEnabled
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "현재 웹 요청에 대 한 추적이 사용 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 플래그를 사용 하 여 페이지 또는 응용 프로그램 출력 하는지 여부를 추적 정보를 추적 로그를 기록 하기 전에 확인 합니다.       IsEnabled 속성 값의 하위 섹션의 설정에 따라 달라 집니다는 `system.web` 구성 섹션의 값과는 `trace` 지시문의 특성입니다. Page 지시문에 설정 된 추적 옵션이 구성 파일에 설정 된 옵션 보다 우선 합니다. IsEnabled 값을 프로그래밍 방식으로 설정 보다 우선 페이지 지시문 특성와 구성 설정 합니다.      > [!NOTE] > IsEnabled 속성을 설정 하면 `true` 전체 응용 프로그램에 대 한 명시적으로 설정 해야이 속성 `false` 를 원하지 않는 추적 정보를 표시 하는 응용 프로그램의 모든 페이지에 대 한 합니다."
  example:
  - "The following code example demonstrates how you can determine whether tracing is enabled for a page. The code iterates through the rows in a dataset, writing trace statements for each row in that dataset.  \n  \n [!code-cs[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_4_1.cs)]\n [!code-vb[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_4_1.vb)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>추적을 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.TraceContext.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceFinished
  id: TraceFinished
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "에 의해 발생 된 <xref href=&quot;System.Web.TraceContext&quot;> </xref> 모든 요청 정보를 수집한 다음 메시지를 추적을 노출 하는 개체입니다."
  remarks: "TraceFinished 이벤트 중에 발생 되는 `EndRequest` HTTP 요청을 처리의 단계입니다. 에 의해 발생 한 <xref:System.Web.TraceContext>개체의 컬렉션을 노출 하려면 모든 요청 정보를 수집한 다음 <xref:System.Web.TraceContextRecord>등록 메시지 <xref:System.Web.TraceContextEventHandler>대리자.</xref:System.Web.TraceContextEventHandler> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> to handle the TraceFinished event. In this example, the delegate iterates through the trace messages and writes them to the response stream; however, you could write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/e-system.web.tracecontex_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/e-system.web.tracecontex_1.aspx)]"
  syntax:
    content: public event System.Web.TraceContextEventHandler TraceFinished;
    return:
      type: System.Web.TraceContextEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceMode
  id: TraceMode
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "추적 메시지에 출력 해야 요청 브라우저 정렬 된 순서를 가져오거나 설정 합니다."
  remarks: "추적 메시지는 처리 된 순서로 또는 사용자 정의 범주에 따라 사전순으로 정렬할 수 있습니다."
  example:
  - "The following code example demonstrates how you can sort a page's trace statements alphabetically by the categories that you have assigned to the statements.  \n  \n [!code-cs[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_5_1.aspx)]\n [!code-vb[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_5_1.aspx)]"
  syntax:
    content: public System.Web.TraceMode TraceMode { get; set; }
    return:
      type: System.Web.TraceMode
      description: "중 하나는 <xref href=&quot;System.Web.TraceMode&quot;> </xref> 열거형 값입니다. 기본값은에서 지정한 설정의 <xref uid=&quot;langword_csharp_traceMode&quot; name=&quot;traceMode&quot; href=&quot;&quot;> </xref> 특성에 <xref uid=&quot;langword_csharp_trace&quot; name=&quot;trace&quot; href=&quot;&quot;> </xref> 기본 구성 파일의 섹션 <xref uid=&quot;langword_csharp_SortByTime&quot; name=&quot;SortByTime&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.TraceContext.TraceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값 중 하나이 고 <xref href=&quot;System.Web.TraceMode&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String)
  id: Warn(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "추적 로그에 추적 메시지를 씁니다. 모든 경고 로그에 빨간색 텍스트로 표시 됩니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Warn%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `true` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>속성이로 설정 `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string message);
    parameters:
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  id: Warn(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "쓰기 모든 사용자 정의 범주를 포함 하 여 추적 로그에 정보를 추적 하 고 메시지를 추적 합니다. 모든 경고 로그에 빨간색 텍스트로 표시 됩니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Warn%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `true` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>속성이로 설정 `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "메시지를 수신 하는 추적 범주입니다."
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  id: Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "추적 정보를 모든 사용자 정의 범주, 추적 메시지 및 오류 정보를 포함 하 여 추적 로그에 씁니다. 모든 경고 로그에 빨간색 텍스트로 표시 됩니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Warn%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `true`, 및 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>전달 된 개체가 속성은 `errorInfo` 매개 변수.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public void Warn (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "메시지를 수신 하는 추적 범주입니다."
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>의 오류에 대 한 정보가 들어 있는.</xref:System.Exception>"
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String)
  id: Write(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "추적 로그에 추적 메시지를 씁니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Write%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `false` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>속성이로 설정 `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "메시지와 모든 사용자 정의 범주를 포함 하 여 추적 로그에 추적 정보를 씁니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Write%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `false` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>속성이로 설정 `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, the delegate iterates through the trace messages and writes them as an HTML table; however, you can write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/m-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public void Write (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "메시지를 수신 하는 추적 범주입니다."
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  id: Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "추적 정보를 모든 사용자 정의 범주, 추적 메시지 및 오류 정보를 포함 하 여 추적 로그에 씁니다."
  remarks: "될 때마다는 <xref:System.Web.TraceContext.Write%2A>메서드가 호출 되는 <xref:System.Web.TraceContext>추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished>이벤트.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> 메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A>속성이로 설정 `false`, 및 <xref:System.Web.TraceContextRecord.ErrorInfo%2A>전달 된 개체가 속성은 `errorInfo` 매개 변수.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public void Write (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "메시지를 수신 하는 추적 범주입니다."
    - id: message
      type: System.String
      description: "로그에 쓸 추적 메시지입니다."
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>의 오류에 대 한 정보가 들어 있는.</xref:System.Exception>"
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.TraceContext.IsEnabled
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.TraceContext.TraceFinished
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
- uid: System.Web.TraceContextEventHandler
  parent: System.Web
  isExternal: false
  name: TraceContextEventHandler
  nameWithType: TraceContextEventHandler
  fullName: System.Web.TraceContextEventHandler
- uid: System.Web.TraceContext.TraceMode
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.TraceContext.Warn(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContext.Write(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
- uid: System.Web.TraceContext.Write(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
- uid: System.Web.TraceContext.#ctor*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext.TraceContext
- uid: System.Web.TraceContext.IsEnabled*
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
- uid: System.Web.TraceContext.TraceMode*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
- uid: System.Web.TraceContext.Warn*
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn
  nameWithType: TraceContext.Warn
- uid: System.Web.TraceContext.Write*
  parent: System.Web.TraceContext
  isExternal: false
  name: Write
  nameWithType: TraceContext.Write
