### YamlMime:ManagedReference
items:
- uid: System.Web.Security.DefaultAuthenticationModule
  id: DefaultAuthenticationModule
  children:
  - System.Web.Security.DefaultAuthenticationModule.#ctor
  - System.Web.Security.DefaultAuthenticationModule.Authenticate
  - System.Web.Security.DefaultAuthenticationModule.Dispose
  - System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule
  fullName: System.Web.Security.DefaultAuthenticationModule
  type: Class
  summary: "인증 개체 컨텍스트에 되는지 확인 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "DefaultAuthenticationModule 되도록는 <xref:System.Web.HttpContext.User%2A>현재 <xref:System.Web.HttpContext>인스턴스로 설정 됩니다는 <xref:System.Security.Principal.IPrincipal>각 요청에 대 한 개체입니다.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> DefaultAuthenticationModule 검사 하는 <xref:System.Web.HttpContext.User%2A>후는 <xref:System.Web.HttpApplication.AuthenticateRequest>이벤트 및 하기 전에 <xref:System.Web.HttpApplication.AuthorizeRequest>이벤트.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> </xref:System.Web.HttpContext.User%2A> 경우는 <xref:System.Web.HttpContext.User%2A>속성은 `null`, DefaultAuthenticationModule 집합은 <xref:System.Web.HttpContext.User%2A>속성을 한 <xref:System.Security.Principal.GenericPrincipal>사용자 정보를 포함 하는 개체입니다.</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext.User%2A>       인증 모듈을 설정 하는 경우는 <xref:System.Web.HttpResponse.StatusCode%2A>속성을 401은 DefaultAuthenticationModule 액세스 거부 오류 페이지를 렌더링 합니다.</xref:System.Web.HttpResponse.StatusCode%2A> 하는 경우의 값은 <xref:System.Web.HttpResponse.StatusCode%2A>속성이 200 보다 큰 값으로 설정 되어 있으면 DefaultAuthenticationModule 개체 요청 종료 됩니다.</xref:System.Web.HttpResponse.StatusCode%2A> 이 경우 HTTP 모듈에만 구독 하는 <xref:System.Web.HttpApplication.EndRequest>이벤트는 현재 요청이 완료 되기 전에 호출 됩니다.</xref:System.Web.HttpApplication.EndRequest>       DefaultAuthenticationModule 노출 한 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>이벤트.</xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> 이 이벤트를 사용 하 여 사용자 지정을 제공 하기 <xref:System.Security.Principal.IPrincipal>개체에 대 한는 <xref:System.Web.HttpContext.User%2A>현재 <xref:System.Web.HttpContext>인스턴스.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Security.Principal.IPrincipal> <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>명명 된 이벤트를 지정 하 여 이벤트 액세스 **DefaultAuthentication_OnAuthenticate** 응용 프로그램의 Global.asax 파일에.</xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>"
  example:
  - "The following example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/t-system.web.security.de_1_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/t-system.web.security.de_1_1.asax)]"
  syntax:
    content: 'public sealed class DefaultAuthenticationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 응용 프로그램 코드에서 호출할 수 없습니다.       <xref:System.Web.Security.DefaultAuthenticationModule>클래스</xref:System.Web.Security.DefaultAuthenticationModule> 의 인스턴스를 만들려면이 생성자를 호출 하는 ASP.NET 생성자를 호출한 후 호출 된 <xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>새로운 초기화 하려면 메서드 <xref:System.Web.Security.DefaultAuthenticationModule>개체입니다.</xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>"
  syntax:
    content: public DefaultAuthenticationModule ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  id: Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "요청이 인증 후 발생 합니다."
  remarks: "인증 이벤트 후에 발생는 <xref:System.Web.HttpApplication.AuthenticateRequest>이벤트.</xref:System.Web.HttpApplication.AuthenticateRequest> 확인 하는 데 사용 됩니다는 <xref:System.Web.HttpContext.User%2A>현재 <xref:System.Web.HttpContext>인스턴스 채워집니다는 <xref:System.Security.Principal.IPrincipal>개체입니다.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A>       인증 이벤트에 액세스할 수 있습니다는 <xref:System.Web.Security.DefaultAuthenticationModule>라는 서브루틴을 지정 하 여 클래스 **DefaultAuthentication_OnAuthenticate** 응용 프로그램의 Global.asax 파일에.</xref:System.Web.Security.DefaultAuthenticationModule>       사용할 수 있습니다는 <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>속성은 <xref:System.Web.Security.DefaultAuthenticationEventArgs>개체는 **DefaultAuthentication_OnAuthenticate** 설정 하는 이벤트는 <xref:System.Web.HttpContext.User%2A>현재 <xref:System.Web.HttpContext>을 사용자 지정 인스턴스 <xref:System.Security.Principal.IPrincipal>개체.</xref:System.Security.Principal.IPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationEventArgs> </xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> 에 대 한 값을 지정 하지 않으면는 <xref:System.Web.HttpContext.User%2A>속성을는 <xref:System.Web.Security.DefaultAuthenticationModule>설정는 <xref:System.Web.HttpContext.User%2A>속성의는 <xref:System.Web.HttpContext>인스턴스를 한 <xref:System.Security.Principal.GenericPrincipal>사용자 정보를 포함 하는 개체입니다.</xref:System.Security.Principal.GenericPrincipal> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.DefaultAuthenticationModule> </xref:System.Web.HttpContext.User%2A>       **DefaultAuthentication_OnAuthenticate** 후에 이벤트가 발생 된 <xref:System.Web.HttpApplication.AuthenticateRequest>이벤트 및 하기 전에 <xref:System.Web.HttpApplication.AuthorizeRequest>이벤트.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.HttpApplication.AuthenticateRequest> 거부 하거나 응용 프로그램에 대 한 액세스 허용 사용자 이름에 따라는 섹션이 있는 경우 수정 된 <xref:System.Web.HttpContext.User%2A>현재 <xref:System.Web.HttpContext>인스턴스 응용 프로그램의 동작에 영향을 줄 수 있습니다.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.User%2A> 수 있도록 하는 동안 설정 된 사용자 이름에서 **DefaultAuthentication_OnAuthenticate** 이벤트 구성에서 섹션을 지정 하는 경우 것으로 간주 됩니다.      > [!NOTE] > 웹 응용 프로그램 통합된 모드의 인증 이벤트의 IIS 7.0에서 실행 중인 경우는 <xref:System.Web.Security.DefaultAuthenticationModule>발생 하지 않습니다.</xref:System.Web.Security.DefaultAuthenticationModule> 경우는 `mode` 구성 요소의 특성 &quot;None&quot;으로 설정 되 고 응용 프로그램 인증 이벤트를 구독 한 <xref:System.PlatformNotSupportedException>오류가 발생 합니다.</xref:System.PlatformNotSupportedException> 이 시나리오에서는 인증 알림을 받으려면를 구독 하는 <xref:System.Web.HttpApplication.AuthenticateRequest>의 이벤트는 <xref:System.Web.HttpApplication>인스턴스.</xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.AuthenticateRequest> 통합된 모드의 호환성 문제에 대 한 자세한 내용은 참조 [ASP.NET 응용 프로그램을 IIS 6.0에서 IIS 7.0 이동](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses the **DefaultAuthentication_OnAuthenticate** event to test whether the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance is `null`. If the <xref:System.Web.HttpContext.User%2A> property is `null`, then the sample sets the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a <xref:System.Security.Principal.GenericPrincipal> object where the <xref:System.Security.Principal.GenericPrincipal.Identity%2A> of the <xref:System.Security.Principal.GenericPrincipal> object is a <xref:System.Security.Principal.GenericIdentity> with a <xref:System.Security.Principal.GenericIdentity.Name%2A> value of \"default.\"  \n  \n> [!NOTE]\n>  The **DefaultAuthentication_OnAuthenticate** event is raised before the <xref:System.Web.HttpApplication.AuthorizeRequest> event. As a result, if you set the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> instance to a custom identity, it can affect the behavior of your application. For example, if you are using the <xref:System.Web.Security.FormsAuthentication> class and you specify `<deny users=\"?\" />` in the  configuration section to ensure that only authenticated users have access to your site, this sample will cause the  element to be ignored, as the user will have a name, which is \"default.\" Instead, you would specify `<deny users=\"default\" />` to ensure that only authenticated users can access your site.  \n  \n [!code-cs[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/csharp/e-system.web.security.de_1.asax)]\n [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/add/codesnippet/visualbasic/e-system.web.security.de_1.asax)]"
  syntax:
    content: public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;
    return:
      type: System.Web.Security.DefaultAuthenticationEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  id: Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "사용 하는 메모리의 모든 리소스를 해제는 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref>합니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.DefaultAuthenticationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "초기화는 <xref href=&quot;System.Web.Security.DefaultAuthenticationModule&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.       Init 메서드를 사용 하면는 <xref:System.Web.Security.DefaultAuthenticationModule>이벤트 처리에 포함 됩니다.</xref:System.Web.Security.DefaultAuthenticationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "현재 <xref href=&quot;System.Web.HttpApplication&quot;> </xref> 인스턴스."
  overload: System.Web.Security.DefaultAuthenticationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule()
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule()
  fullName: System.Web.Security.DefaultAuthenticationModule.DefaultAuthenticationModule()
- uid: System.Web.Security.DefaultAuthenticationModule.Authenticate
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Authenticate
  nameWithType: DefaultAuthenticationModule.Authenticate
  fullName: System.Web.Security.DefaultAuthenticationModule.Authenticate
- uid: System.Web.Security.DefaultAuthenticationEventHandler
  parent: System.Web.Security
  isExternal: false
  name: DefaultAuthenticationEventHandler
  nameWithType: DefaultAuthenticationEventHandler
  fullName: System.Web.Security.DefaultAuthenticationEventHandler
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose()
  nameWithType: DefaultAuthenticationModule.Dispose()
  fullName: System.Web.Security.DefaultAuthenticationModule.Dispose()
- uid: System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: DefaultAuthenticationModule.Init(HttpApplication)
  fullName: System.Web.Security.DefaultAuthenticationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.DefaultAuthenticationModule.#ctor*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: DefaultAuthenticationModule
  nameWithType: DefaultAuthenticationModule.DefaultAuthenticationModule
- uid: System.Web.Security.DefaultAuthenticationModule.Dispose*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Dispose
  nameWithType: DefaultAuthenticationModule.Dispose
- uid: System.Web.Security.DefaultAuthenticationModule.Init*
  parent: System.Web.Security.DefaultAuthenticationModule
  isExternal: false
  name: Init
  nameWithType: DefaultAuthenticationModule.Init
