### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DataColumnSelectionConverter
  id: DataColumnSelectionConverter
  children:
  - System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  - System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: DataColumnSelectionConverter
  nameWithType: DataColumnSelectionConverter
  fullName: System.Web.UI.Design.DataColumnSelectionConverter
  type: Class
  summary: "바인딩된 열 필드의 필드 이름을 나타내는 속성에 대 한 형식 변환기를 제공는 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref> 제어 합니다."
  remarks: "컨트롤 속성에 할당 하기 전에 개체 형식을 변환 하려면 DataColumnSelectionConverter 클래스를 사용 합니다. 일반적으로 DataColumnSelectionConverter 클래스 변환 하는 동안 문자열 개체 유형을 지원 하 고 연결된 된 컨트롤 속성에 할당 하기 위해 사용할 수 있는 표준 값의 목록을 제공 합니다. 표준 값 컬렉션은 현재 바인딩된 열 필드에 대 한 필드 이름 목록이 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView>       를 지원 하기 위해 추가 개체 형식의 변환을 DataColumnSelectionConverter 및 재정의에서 클래스를 파생 된 <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A>및 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A>추가 개체 형식에 대 한 메서드.</xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> </xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> 표준 할당 가능한 값 목록은 사용자 지정을 지원 하려면 재정의 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>메서드.</xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>       적용 된 <xref:System.ComponentModel.TypeConverterAttribute>컨트롤 속성에 대 한 형식 변환기로 DataColumnSelectionConverter 클래스를 지정 하는 특성.</xref:System.ComponentModel.TypeConverterAttribute> 예를 들어는 <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A>의 속성은 <xref:System.Web.UI.WebControls.GridView>컨트롤 형식 변환기로 DataColumnSelectionConverter 지정.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A>      > [!NOTE] >는 형식 변환기를 직접 액세스 하지 마십시오. 대신, 적절 한 변환기를 사용 하 여 호출 된 <xref:System.ComponentModel.TypeDescriptor>개체입니다.</xref:System.ComponentModel.TypeDescriptor> 자세한 내용은 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 예제를 참조 하세요.       <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A>메서드 변환기를 통해 사용 가능한 값의 목록 반환을 지원 하는지 나타냅니다는 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>메서드.</xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> </xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A>메서드 목록을 사용할 수 있는 값의 단독 목록 인지를 나타냅니다.</xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A>"
  syntax:
    content: 'public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: DataColumnSelectionConverter()
  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Design.DataColumnSelectionConverter&quot;> </xref> 클래스입니다."
  remarks: >-
    > [!NOTE]

    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.
  syntax:
    content: public DataColumnSelectionConverter ();
    parameters: []
  overload: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "시스템 연결된 된 컨트롤 속성의 형식으로 지정 된 소스 형식으로 변환할 수 있는지를 나타냅니다."
  remarks: "확인 하려면 CanConvertFrom 메서드를 호출 여부는 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A>메서드는 소스 형식 변환을 지원 합니다.</xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A>       <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A>CanConvertFrom 메서드를 반환 하므로 메서드는 문자열에서만 변환할 수 `true` 때 `sourceType` 문자열인.</xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 구현 합니다."
    - id: sourceType
      type: System.Type
      description: "변환할 원본 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "연결된 된 컨트롤 속성의 형식으로 지정된 된 개체를 변환 합니다."
  remarks: "경우 `value` 가 문자열의 문자열 표현을 `value` 반환 됩니다. 경우 `value` 은 `null`, 빈 문자열 (&quot;&quot;)이 반환 됩니다. 다른 모든 값에 대해서는 <xref:System.NotSupportedException>예외가 throw 됩니다.</xref:System.NotSupportedException>       호출 된 <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A>ConvertFrom 메서드 소스 형식 변환을 지원 하는지 여부를 결정 하는 메서드.</xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 구현 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>지역화 기능을 지 원하는 데 사용할 수 있는 개체입니다.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "변환할 개체입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 개체를 나타내는 인스턴스입니다.</xref:System.Object>"
  overload: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "연결된 된 컨트롤 속성에 지정할 수 있는 사용 가능한 값 목록을 반환 합니다."
  remarks: "GetStandardValues 메서드에서 사용 하는 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A>는 지정 된 속성 `context` 개체를 가져옵니다는 <xref:System.ComponentModel.IComponent>구현.</xref:System.ComponentModel.IComponent> </xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 경우는 <xref:System.ComponentModel.IComponent>구현 ´ ï ´, 디자인 타임에 연결된 된 컨트롤에 액세스 하 고 연결 된 사용 가능한 값 목록을 검색 하는 <xref:System.Web.UI.WebControls.GridView>구성 요소.</xref:System.Web.UI.WebControls.GridView> </xref:System.ComponentModel.IComponent>       사용 가능한 값의 컬렉션에 바인딩된 열 필드에서 작성 되는 <xref:System.Web.UI.WebControls.GridView>컨트롤.</xref:System.Web.UI.WebControls.GridView> 바인딩된 열 필드 이루어져 <xref:System.Web.UI.WebControls.BoundField>개체에 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션 및 필드 데이터 원본에 대 한 자동으로 생성 된 바인딩된 열 필드에서.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 구현 합니다."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>연결된 된 컨트롤 속성에 할당 하기 위해 사용할 수 있는 값이 포함 된 인스턴스.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 변환기에 연결된 된 컨트롤 속성에 지정할 수 있는 가능한 모든 값을 포함 하는 목록을 반환 하는지 여부를 나타냅니다."
  remarks: "<xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A>에 대 한 메서드는 <xref:System.Web.UI.Design.DataColumnSelectionConverter>반환 인스턴스 `false`, 나타내는 목록에서 반환 하는 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>메서드는 할당할 수 있는 가능한 모든 값의 단독 목록 없습니다.</xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> </xref:System.Web.UI.Design.DataColumnSelectionConverter> </xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 구현 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에는 연결 된 컨트롤 속성;에 할당할 수 있는 가능한 모든 값을 포함 하는 목록을 반환 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 변환기에서 지정 된 컨텍스트 내에서 컨트롤 속성에 할당할 수 있는 값의 집합을 반환 하는지 여부를 나타냅니다."
  remarks: "GetStandardValuesSupported 메서드가 변환기를 통해 사용 가능한 값의 목록 반환을 지원 하는지 여부를 나타내는 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>메서드.</xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>       <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A>에 대 한 메서드는 <xref:System.Web.UI.Design.DataColumnSelectionConverter>반환 `true` 경우 지정 된 `context` 공급 장치 개체는 <xref:System.ComponentModel.IComponent>구현에서 해당 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A>속성.</xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> </xref:System.ComponentModel.IComponent> </xref:System.Web.UI.Design.DataColumnSelectionConverter> </xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>메서드는 <xref:System.ComponentModel.IComponent>관련 바인딩된 열 필드를 디자인 타임에 연결된 된 컨트롤에 액세스 하 고 사용할 수 있는 목록을 검색 하는 데 구현 <xref:System.Web.UI.WebControls.GridView>구성 요소.</xref:System.Web.UI.WebControls.GridView> </xref:System.ComponentModel.IComponent> </xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 추가 컨텍스트 정보를 얻는 데 사용할 수 있는 구현 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 연결 된 컨트롤 속성;에 할당할 사용 가능한 값의 표준 집합을 반환 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: DataColumnSelectionConverter()
  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()
- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: DataColumnSelectionConverter
  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter
- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DataColumnSelectionConverter.CanConvertFrom
- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DataColumnSelectionConverter.ConvertFrom
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: DataColumnSelectionConverter.GetStandardValues
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported
