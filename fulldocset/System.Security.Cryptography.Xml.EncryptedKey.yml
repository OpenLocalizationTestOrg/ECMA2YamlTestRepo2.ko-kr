### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedKey
  id: EncryptedKey
  children:
  - System.Security.Cryptography.Xml.EncryptedKey.#ctor
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  - System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  - System.Security.Cryptography.Xml.EncryptedKey.GetXml
  - System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedKey.Recipient
  - System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  langs:
  - csharp
  name: EncryptedKey
  nameWithType: EncryptedKey
  fullName: System.Security.Cryptography.Xml.EncryptedKey
  type: Class
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스는 나타냅니다는 `<EncryptedKey>` XML 암호화에는 요소입니다. `<EncryptedKey>` 요소는 암호화 키를 보내는 데 사용 됩니다. 독립 실행형 XML 문서에서 만들 수 있습니다, 응용 프로그램 문서, 안에 배치 또는 내부에 있을 것는 `<EncryptedData>` 의 자식으로 `<KeyInfo>` 요소입니다. 키 값은 항상 받는 사람에 게 암호화 됩니다. 때 `<EncryptedKey>` 은 암호를 해독 결과 키를 사용할 수는 `<EncryptionMethod>` 추가 처리 없이 알고리즘입니다.       `<EncryptedKey>` 요소는 비슷합니다는 `<EncryptedData>` 의 요소는 <xref:System.Security.Cryptography.Xml.EncryptedData>암호화 된 데이터는 키 값이 항상 클래스.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the EncryptedKey class. This example then displays the values of various properties of the EncryptedKey class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_46_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_46_1.vb)]"
  syntax:
    content: 'public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedType
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 <xref:System.Security.Cryptography.Xml.EncryptedKey>클래스</xref:System.Security.Cryptography.Xml.EncryptedKey> 의 새 인스턴스를 만듭니다. XML 암호화 표준에 대 한 자세한 내용은 http://www.w3.org/TR/xmlenc-core/에서 XML 암호화 구문 및 처리 문서를 참조 하십시오."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_82_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_82_1.vb)]"
  syntax:
    content: public EncryptedKey ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  id: AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref uid=&quot;langword_csharp_&lt;DataReference&gt; &quot; name=&quot;&lt;DataReference&gt; &quot; href=&quot;&quot;> </xref>요소는 <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "이 메서드는 추가 <xref:System.Security.Cryptography.Xml.DataReference>개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>속성은 <xref:System.Security.Cryptography.Xml.EncryptedKey>개체.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.DataReference> `<DataReference>` 요소에 지정 된 키를 사용 하 여 암호화 된 암호화 된 데이터를 가리키는 `<EncryptedKey>` 요소입니다."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);
    parameters:
    - id: dataReference
      type: System.Security.Cryptography.Xml.DataReference
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;> </xref> 에 추가할 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>속성.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  id: AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref uid=&quot;langword_csharp_&lt;KeyReference&gt; &quot; name=&quot;&lt;KeyReference&gt; &quot; href=&quot;&quot;> </xref>요소는 <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "이 메서드는 추가 <xref:System.Security.Cryptography.Xml.KeyReference>개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>속성은 <xref:System.Security.Cryptography.Xml.EncryptedKey>개체입니다.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.KeyReference> `<KeyReference>` 요소에 지정 된 키를 사용 하 여 암호화 된 암호화 된 키를 가리키는 `<EncryptedKey>` 요소입니다."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);
    parameters:
    - id: keyReference
      type: System.Security.Cryptography.Xml.KeyReference
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.KeyReference&quot;> </xref> 에 추가할 개체는 <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>속성.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  id: CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "선택적 설정 하거나 가져옵니다 <xref uid=&quot;langword_csharp_&lt;CarriedKeyName&gt;&quot; name=&quot;&lt;CarriedKeyName&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다."
  remarks: "`<CarriedKeyName>` 요소는 사용자가 읽을 수 있는 이름을 키 값을 연결 하는 선택적 요소입니다. 이 이름을 사용 하 여 키를 참조 하도록 한 다음 사용할 수 있습니다는 `<KeyName>` 내의 요소는 `<KeyInfo>` 요소입니다. 동일한 `<CarriedKeyName>` ID 값을 달리 요소 값은 단일 문서에서 여러 번 발생할 수 있습니다. 키의 값 모두에 동일 해야 `<EncryptedKey>` 같은 식별 되는 요소 `<CarriedKeyName>` XML 문서 내에서 이름입니다. 공백은 값에 중요 합니다 되므로 `<KeyName>` 요소인 공백은 중요 값에도 합니다.는 `<CarriedKeyName>` 요소입니다."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_109_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_109_1.vb)]"
  syntax:
    content: public string CarriedKeyName { get; set; }
    return:
      type: System.String
      description: "키 값의 이름을 나타내는 문자열입니다."
  overload: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 표현을 반환 된 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 사용 하 여 출력할는 `<EncryptedKey>` xml에서 요소입니다."
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 나타내는 <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다."
  overload: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "에 지정 된 XML 정보를 로드는 <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다."
  remarks: "이 메서드를 사용 하 여 기존 XML 요소를 로드 하는 `<EncryptedKey>` 나타내는 요소는 <xref:System.Security.Cryptography.Xml.EncryptedData>개체입니다.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_79_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_79_1.vb)]"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 에 사용할 XML 요소를 나타내는 <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> 매개 변수를 포함 하지 않는 한 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> 요소입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  id: Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "선택적 설정 하거나 가져옵니다 <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> XML 암호화에는 특성입니다."
  remarks: "`<Recipient>` 특성은 암호화 된 키 값이 위한는 받는 사람에 대 한 정보를 포함 하는 선택적 특성입니다. 해당 내용이 종속 응용 프로그램에 설명 합니다."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_92_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_92_1.vb)]"
  syntax:
    content: public string Recipient { get; set; }
    return:
      type: System.String
      description: "값을 나타내는 문자열의 <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> 특성입니다."
  overload: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  id: ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다."
  remarks: "`<ReferenceList>` 요소는 데이터와이 키를 사용 하 여 암호화 키에 대 한 포인터를 포함 하는 선택적 요소입니다. 참조 목록에 대 한 여러 참조가 포함 될 수 있습니다는 `<EncryptedKey>`및 `<EncryptedData>` 사용 하 여 요소는 `<KeyReference>` 및 `<DataReference>` 요소 각각."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_50_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_50_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }
    return:
      type: System.Security.Cryptography.Xml.ReferenceList
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.ReferenceList&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedType
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
- uid: System.Security.Cryptography.Xml.DataReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataReference
  nameWithType: DataReference
  fullName: System.Security.Cryptography.Xml.DataReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
- uid: System.Security.Cryptography.Xml.KeyReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyReference
  nameWithType: KeyReference
  fullName: System.Security.Cryptography.Xml.KeyReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
- uid: System.Security.Cryptography.Xml.ReferenceList
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: ReferenceList
  nameWithType: ReferenceList
  fullName: System.Security.Cryptography.Xml.ReferenceList
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey
  nameWithType: EncryptedKey.EncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference
  nameWithType: EncryptedKey.AddReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml
  nameWithType: EncryptedKey.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedKey.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
