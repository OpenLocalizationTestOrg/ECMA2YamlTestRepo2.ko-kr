### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagedDataSource
  id: PagedDataSource
  children:
  - System.Web.UI.WebControls.PagedDataSource.#ctor
  - System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.PagedDataSource.Count
  - System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  - System.Web.UI.WebControls.PagedDataSource.DataSource
  - System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  - System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  - System.Web.UI.WebControls.PagedDataSource.IsLastPage
  - System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.PagedDataSource.PageCount
  - System.Web.UI.WebControls.PagedDataSource.PageSize
  - System.Web.UI.WebControls.PagedDataSource.SyncRoot
  - System.Web.UI.WebControls.PagedDataSource.VirtualCount
  langs:
  - csharp
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
  type: Class
  summary: "데이터 바인딩된 컨트롤의 페이징 관련 속성을 캡슐화 (같은 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>, 및 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>) 페이징을 수행할 수 있도록 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "PagedDataSource 클래스와 같은 데이터 소스 제어를 허용 하는 속성을 캡슐화는 <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>페이징 수행 하 고,.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataGrid> 이 클래스는 사용자 지정 데이터 바인딩된 컨트롤 페이징 지원을 제공 하는 경우 컨트롤 개발자가 사용 됩니다.       이 클래스는 현재 페이지에 속한 데이터 전체를 열거 하 가장 사용 가능한 메서드를 사용 합니다. 데이터 원본에서 인덱싱된 액세스를 지 원하는 경우 (예: <xref:System.Array?displayProperty=fullName>및 <xref:System.Collections.IList?displayProperty=fullName>),이 클래스를 사용 합니다.</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> 그렇지 않은 경우 만든 열거자를 사용 하 여 <xref:System.Collections.IEnumerable.GetEnumerator%2A>메서드.</xref:System.Collections.IEnumerable.GetEnumerator%2A>       목록이 PagedDataSource의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.PagedDataSource>클래스</xref:System.Web.UI.WebControls.PagedDataSource> 의 새 인스턴스를 초기화 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.PagedDataSource>안내 하십시오.</xref:System.Web.UI.WebControls.PagedDataSource> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|   | <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|&10; |   | <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public PagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.PagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 사용자 지정 페이징을 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "Allowcustompaging은 속성을 사용 하 여 사용자 지정 페이징을 사용 되는지 여부를 나타냅니다. 사용자 지정 페이징을 페이징에서 특정 하 게 제공 되는 선택적 유형의 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>) 서버측 페이징을 사용 하 고 사용자 지정 페이징을 지원 하지 않습니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 사용자 지정 페이징과 서버 쪽 페이징은 함께 사용할 수 없습니다. Allowcustompaging은로 설정 하는 경우 `true`수 있도록, <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>로 설정 된 `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>       사용자 지정 페이징에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 페이징을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 데이터 바인딩된 컨트롤에서 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "AllowPaging 속성을 사용 하 여 데이터 바인딩된 컨트롤에서 페이징을 사용 여부를 지정할 수 있습니다. ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (같은 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>)도 서버 쪽 페이징을 사용 하 여 자동 페이징 기능을 제공 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 서버 쪽 페이징에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 을 참조 하십시오. 사용 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤을 제공할 수도 있습니다 고유의 사용자 지정 페이징 논리.</xref:System.Web.UI.WebControls.DataGrid> 사용자 지정 페이징에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName> 를 참조 하십시오.       데이터 바인딩된 컨트롤에 대 한 페이징 지원에 대 한 자세한 내용은 참조는 `AllowPaging` 데이터 바인딩된 컨트롤의 속성입니다."
  syntax:
    content: public bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 사용 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "서버 쪽 페이징 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>) 서버측 페이징을 통해 자동 페이징 기능을 제공 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> ASP.NET 2.0 데이터 바인딩된 컨트롤을 사용할 경우이 속성을 설정 `true`합니다.      > [!NOTE] > 서버 쪽 페이징 및 사용자 지정 페이징은 함께 사용할 수 없습니다. AllowServerPaging을 설정 하면 `true`수 있도록, <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>로 설정 된 `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서버측 페이징을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 데이터 원본에서 모든 항목을 복사 &lt;xref:System.Array?displayProperty=fullName&gt;의 지정된 된 인덱스에서 시작 하는 &lt;xref:System.Array?displayProperty=fullName&gt;합니다."
  remarks: "이 메서드를 사용 하 여 지정 된 데이터 원본의 내용을 복사 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스부터 시작 합니다.</xref:System.Array?displayProperty=fullName> <xref:System.Array?displayProperty=fullName>데이터 원본에 있는 항목을 반복 하는 대개.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 항목을 데이터 원본에서 받는입니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용을 받을 수 있습니다."
  overload: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 사용할 수 있는 항목의 수를 가져옵니다."
  remarks: "Count 속성을 사용 하 여 데이터 원본에서 사용할 수 있는 항목 수를 결정 합니다. 반환 되는 값 페이징을 활성화 되어 있는지 여부 및 사용자 지정 페이징을 사용 여부에 따라 달라 집니다.      -페이징을 비활성화 되 면 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성을 `false`), 값은 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>속성이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성을 `true`) 사용자 지정 페이징을 사용 하도록 설정 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>속성이로 설정 `true`)의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>속성이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성을 `true`) 및 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>속성이로 설정 되어 `false`의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>속성이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      -페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성을 `true`), 사용자 지정 페이징을 사용할 수 없습니다 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>속성 `false`), 및 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>속성이로 설정 되어 `true`의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>속성의 값에서 빼면는 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A>속성 반환 하기 전에.</xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>속성 포함 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "데이터 원본에서 사용할 수 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 페이지의 인덱스를 가져오거나 설정 합니다."
  remarks: "CurrentPageIndex 속성을 사용 하 여 지정 하거나 현재 페이지의 인덱스를 확인 합니다."
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "현재 페이지의 인덱스입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스를 가져오거나 설정 합니다."
  remarks: "데이터 원본 속성을 사용 하 여을 지정 하거나 페이징 되는 데이터 소스를 확인 합니다."
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "A &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; 데이터 소스를 나타내는 개체를 구현 합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 항목의 수를 가져옵니다."
  remarks: "DataSourceCount 속성을 사용 하 여 데이터 원본에 있는 항목의 수를 결정 합니다. 서버 쪽 페이징 또는 사용자 지정 페이징을 사용 하는 경우의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>속성이 반환 됩니다. 그렇지 않으면 데이터 원본에 있는 항목의 총 수는 반환 합니다.</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>속성 포함 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "데이터 소스는 &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; 개체를 구현 합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  id: FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이지에 표시 되는 첫 번째 레코드의 인덱스를 가져옵니다."
  remarks: "FirstIndexInPage 속성을 사용 하 여 현재 페이지에서 첫 번째 항목의 인덱스를 확인 합니다.      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성이 `false`, 또는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>또는 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>속성으로 설정 됩니다 `true`, 또는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>속성 포함 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int FirstIndexInPage { get; }
    return:
      type: System.Int32
      description: "페이지에 표시 되는 첫 번째 레코드의 인덱스입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반환 된 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 데이터 원본에 있는 모든 항목을 포함 합니다."
  remarks: "이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=fullName>반복할 수 있는 통해 각 항목을 데이터 원본에 가져올.</xref:System.Collections.IEnumerator?displayProperty=fullName> 열거자의 현재 위치에 있는 항목에 액세스 하려면 사용 된 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> 사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 초기 위치에 열거자를 이동 하려면 사용 된 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 처음에 열거자를 가져옵니다. 하거나 때 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 데이터 원본에 있는 모든 항목을 포함 합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반환 된 <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다."
  remarks: "GetItemProperties 메서드를 사용 하 여 만들는 <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>속성은 `null` 없거나는 <xref:System.ComponentModel.ITypedList?displayProperty=fullName>구현 개체를 `null` 반환 됩니다.</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> GetItemProperties 방법에 대 한 자세한 내용은 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>.</xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 는 목록 이름에 포함 된 개체를 반환 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "목록의 이름을 반환합니다. 이 메서드는이 클래스에는 적용 되지 않습니다."
  remarks: "이 메서드는 <xref:System.ComponentModel.ITypedList?displayProperty=fullName>이 클래스에 적용할 수 없는</xref:System.ComponentModel.ITypedList?displayProperty=fullName> 에서 상속 반환할 구현 되었습니다 <xref:System.String.Empty?displayProperty=fullName>모든 경우에 대 한.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 는 목록 이름에 포함 된 개체를 반환 합니다. 이 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: '&lt;xref:System.String?displayProperty=fullName&gt; 모든 경우에 대 한 합니다.'
  overload: System.Web.UI.WebControls.PagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  id: IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자 지정 페이징을 사용 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "사용자 지정 페이징을 사용 되는지 여부를 결정 하려면 IsCustomPagingEnabled 속성을 사용 합니다.      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>속성이 해야 `true` 반환 하도록이 속성에 대 한 `true`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public bool IsCustomPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 페이징을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  id: IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 페이지의 첫 번째 페이지 인지를 나타내는 값을 가져옵니다."
  remarks: "IsFirstPage 속성을 사용 하 여 현재 페이지의 첫 번째 페이지 인지 여부를 확인 합니다."
  syntax:
    content: public bool IsFirstPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 페이지 첫 번째 페이지; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  id: IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 페이지의 마지막 페이지 인지를 나타내는 값을 가져옵니다."
  remarks: "IsLastPage 속성을 사용 하 여 현재 페이지의 마지막 페이지 인지 여부를 확인 합니다."
  syntax:
    content: public bool IsLastPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 페이지가 마지막 페이지; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  id: IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 사용 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "페이징이 설정 되어 있는지 확인 하려면 IsPagingEnabled 속성을 사용 합니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>속성 이어야 `true` 및 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>속성을 반환 하도록이 속성에 대 한 0으로 설정할 수 없습니다 `true`.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 사용 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성은 항상 반환 하도록 구현 `false`, 데이터 원본의 모든 경우에에서 수정 될 수 있음을 나타냅니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "서버 쪽 페이징 지원 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "서버 쪽 페이징을 사용 하는 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>속성 둘 다로 설정 `true`, 데이터 원본에서 검색 된 데이터 양을 단일 페이지에 표시 될 수 없습니다.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징이 활성화 되 고 서버 쪽 페이징이 사용 하 여 지정 된 된 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>속성, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "(스레드로부터 안전한 지) 데이터 원본에 대 한 액세스 동기화 되는지를 나타내는 값을 가져옵니다."
  remarks: "이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>클래스 및 항상 반환 하도록 재정의 `false` 이 클래스가 스레드로부터 안전 하지 않음을 나타냅니다.</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 모든 항목을 표시 하는 데 필요한 총 페이지 수를 가져옵니다."
  remarks: "PageCount 속성을 사용 하 여 데이터 원본에서 모든 항목을 표시 하는 데 필요한 페이지 수를 결정 합니다.      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>속성은 `null`, 0이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>속성이 `false` 또는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>0 이하로 속성이 설정 되어 있으면 1이 반환 됩니다.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에서 모든 항목을 표시 하는 데 필요한 페이지 수입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "단일 페이지에 표시할 항목의 수를 가져오거나 설정 합니다."
  remarks: "PageSize 속성을 사용 하 여 지정 하거나 단일 페이지에 표시할 항목의 수를 확인 합니다."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "단일 페이지에 표시할 항목의 수입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.PagedDataSource>개체 자체입니다.</xref:System.Web.UI.WebControls.PagedDataSource>       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  id: VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자 지정 페이징을 사용 하는 경우 데이터 원본에 가상 항목의 수를 가져오거나 설정 합니다."
  remarks: "사용자 지정 페이징 또는 서버 쪽 페이징을 사용 하 여 데이터 원본에 있는 항목의 가상 수를 결정 하는 경우 VirtualCount 속성을 사용 합니다. VirtualCount 속성에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public int VirtualCount { get; set; }
    return:
      type: System.Int32
      description: "사용자 지정 페이징을 사용 하는 경우 데이터 소스에 있는 항목의 가상 수입니다."
  overload: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource.PagedDataSource
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: PagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.PagedDataSource.Count*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: PagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: PagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: PagedDataSource.GetListName
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
