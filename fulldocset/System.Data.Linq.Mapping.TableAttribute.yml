### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.TableAttribute
  id: TableAttribute
  children:
  - System.Data.Linq.Mapping.TableAttribute.#ctor
  - System.Data.Linq.Mapping.TableAttribute.Name
  langs:
  - csharp
  name: TableAttribute
  nameWithType: TableAttribute
  fullName: System.Data.Linq.Mapping.TableAttribute
  type: Class
  summary: "클래스를 데이터베이스 테이블과 연결 된 엔터티 클래스로 지정 합니다."
  remarks: "클래스는 데이터베이스 테이블 또는 뷰와 연결 된 엔터티 클래스로 지정 하려면이 특성을 사용 합니다. [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]클래스를 영구 클래스로 TableAttribute 특성에 있는 클래스를 처리 합니다.       [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)]단일 테이블 매핑만 지원합니다. 즉, 정확히 하나의 데이터베이스 테이블에 엔터티 클래스 매핑되어야 하 고 동시에 여러 클래스를 데이터베이스 테이블을 매핑할 수 없습니다.       사용할 수는 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>테이블 이름을 정규화 하는 테이블과 있습니다에 대 한 이름을 지정 하려면 TableAttribute 특성의 속성 스키마 이름을 선택적으로 사용할 수 있습니다.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 사용 하 여 이름을 지정 하지 않는 경우는 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>속성을 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>      ## 필요에 따라 테이블 이름을 정규화 할 스키마 이름을 사용할 수 스키마 한정 이름을 있습니다. 기본적으로 첫 번째 기간의 왼쪽에 토큰의 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>문자열은 스키마 이름이 될 것으로 간주 됩니다.</xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 이름의 나머지 부분에서는 테이블 이름이 될 것으로 간주 됩니다. 공급자는 적절 하 게 테이블 이름을 따옴표로합니다. 예를 들어는 [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] SQL Server 용 공급자 대괄호가 사용 이상 필요할 경우에 있게 합니다.      > [!NOTE] > 경우에 따라 있습니다 해야 명시적으로 특성을 인용 SQL Server 공급자 없습니다 자동 견적 합니다. 다음 표에서 몇 가지 예를 보여 줍니다.      | 대/소문자 | 예: 식별자 이름 | 예: 특성에 문자열이 있어야 하는데 | 그렇지 않으면... |   |----------|------------------------------|--------------------------------------------|----------------|   | 스키마 이름에 마침표가 | 스키마: &quot;A.B&quot;<br /><br /> 테이블: &quot;C&quot; | &quot; [A.B]입니다. C &quot;| 스키마 이름을 테이블 이름에서 분리 하는 첫 번째 기간 간주 됩니다. |   | 스키마/테이블 이름으로 시작 `@`| &quot; @SomeName&quot;|&quot; [@SomeName]&quot;| 매개 변수 이름으로 간주 됩니다. |   | 스키마로 시작 `[` 끝나는 `]`| &quot; [Schema.Table]&quot;|&quot; [[Schema]입니다. [Table]]] &quot;| 따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사 합니다. |   | 표도 시작 `[` 끝나는 `]`| &quot; [Table] &quot;|&quot; [[Table]]] &quot;| 따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사 합니다. |"
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class TableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Linq.Mapping.TableAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public TableAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.TableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.TableAttribute
  langs:
  - csharp
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "테이블 또는 뷰의 이름을 가져오거나 설정 합니다."
  remarks: "이름을 사용 하 여 이름을 지정 하지 않는 경우 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.      > [!NOTE] > (예: Schema3.Table5) 테이블 이름을 정규화 하는 스키마 이름을 선택적으로 사용할 수 있습니다. 기본적으로 스키마 이름과 테이블 이름에 나머지 되도록 왼쪽의 첫 번째 기간 이름 문자열에 토큰 간주 됩니다.       다음 예제에서는 기본 테이블 이름에에서 `Customer`를로 변경 `Customers`합니다."
  example:
  - >-
    [!code-vb[DLinqCustomize#1](~/add/codesnippet/visualbasic/customize/Module1.vb#1)]
     [!code-cs[DLinqCustomize#1](~/add/codesnippet/csharp/customize/Program.cs#1)]
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "기본적으로 값은 클래스의 이름과 동일 합니다."
  overload: System.Data.Linq.Mapping.TableAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute()
  nameWithType: TableAttribute.TableAttribute()
  fullName: System.Data.Linq.Mapping.TableAttribute.TableAttribute()
- uid: System.Data.Linq.Mapping.TableAttribute.Name
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
  fullName: System.Data.Linq.Mapping.TableAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.TableAttribute.#ctor*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: TableAttribute
  nameWithType: TableAttribute.TableAttribute
- uid: System.Data.Linq.Mapping.TableAttribute.Name*
  parent: System.Data.Linq.Mapping.TableAttribute
  isExternal: false
  name: Name
  nameWithType: TableAttribute.Name
