### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Extensible Stylesheet Language Transformations (XSLT) 스타일 시트에 대 한 사용 하 여 XML 데이터를 변환 합니다."
  remarks: "> [!NOTE]> XslTransform 클래스는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않습니다. <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       XslTransform에는 XSLT 1.0 구문을 지원합니다. XSLT 스타일 시트 네임 스페이스를 사용 해야 `http://www.w3.org/1999/XSL/Transform`합니다.       <xref:System.Xml.Xsl.XsltArgumentList>클래스</xref:System.Xml.Xsl.XsltArgumentList> 를 사용 하 여 스타일 시트에 추가 인수를 추가할 수도 있습니다. 이 클래스는 스타일 시트에서 호출할 수 있는 스타일 시트 및 확장 개체에 대 한 입력된 매개 변수를 포함 합니다.       XML 데이터를 변환: 1입니다.  XslTransform 개체를 만듭니다.      2.  사용 하 여는 <xref:System.Xml.Xsl.XslTransform.Load%2A>변환에 대 한 스타일 시트를 로드 하는 메서드.</xref:System.Xml.Xsl.XslTransform.Load%2A> 이 메서드는 여러 오버 로드가 하 고 사용 하 여 스타일 시트를 로드할 수는 <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, 또는 파일의 위치를 포함 하는 URL입니다.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  사용 된 <xref:System.Xml.Xsl.XslTransform.Transform%2A>메서드를 XML 데이터를 변환 합니다.</xref:System.Xml.Xsl.XslTransform.Transform%2A> 이 메서드는 여러 오버 로드가 하며 다양 한 유형의 입력 및 출력을 처리할 수 있습니다. 지정할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList>변환 중에 입력으로 사용할 추가 인수를 포함 합니다.</xref:System.Xml.Xsl.XsltArgumentList>       **보안 고려 사항** XslTransform 클래스를 사용 하 여 응용 프로그램을 만들 때는 다음 항목 및 그 의미에 대해 고려해 야 해야:-확장 개체는 기본적으로 사용 합니다. 경우는 <xref:System.Xml.Xsl.XsltArgumentList>확장 개체가 포함 된 개체는 전달 된 <xref:System.Xml.Xsl.XslTransform.Transform%2A>메서드를 사용 됩니다.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -XSLT 스타일 시트는 다른 파일 및 포함 된 스크립트 블록에 대 한 참조를 포함할 수 있습니다. 악의적인 사용자 데이터와 함께 제공 하 여 악용할 수 있습니다 또는 스타일 시트를 실행 하면 시스템 리소스에서 컴퓨터가 느리게 실행 될 때까지 처리를 발생 합니다.      -혼합된 신뢰 환경에서 실행 되는 응용 프로그램 XSLT 스타일 시트가 스푸핑될 발생할 수 있습니다. 악의적인 사용자는 해로운 스타일 시트가 있는 개체를 로드 하 고 다른 사용자에 게 이후에 호출에 전달할 수 예를 들어는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>메서드 고 변형을 실행할.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       XslTransform 개체, XSLT 스타일 시트 또는 신뢰할 수 없는 소스의 XML 원본 데이터를 허용 하지 않음으로써 이러한 보안 문제를 완화할 수 있습니다.       **스크립팅 지원** 이 클래스를 사용 하 여 포함 스크립트를 지원는 `msxsl:script` 요소입니다.       .NET Framework의 버전 1.1에서는 스타일 시트의 증명 정보 포함 된 스크립트에 지정 된 권한을 결정 합니다.      -스타일 시트에서는 식별자 URI (Uniform Resource)을 로드 하는 경우 URI는 증거를 만들려면 사용 됩니다. 이 증명 정보가 해당 사이트 및 영역 함께 URI를 포함합니다.      -다른 원본을 사용 하 여 스타일 시트를 로드할 경우 전달 하 여 증명 정보를 제공할 수 있습니다는 <xref:System.Security.Policy.Evidence?displayProperty=fullName>개체는 <xref:System.Xml.Xsl.XslTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> 그렇지 않으면 스크립트 어셈블리에 완전 신뢰 합니다.       부분적으로 신뢰할 수 있는 호출자: `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일하는 데 필요 합니다. `ControlEvidence`사용 권한을 제공 해야 합니다. <xref:System.Security.Policy.Evidence>에 <xref:System.Xml.Xsl.XslTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> A <xref:System.Security.SecurityException>호출자에 게 필요한 권한이 없는 경우 throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       `msxsl:script` 요소에는 다음 요구 사항을:- `msxsl:script` 요소가 속한는 `urn:schemas-microsoft-com:xslt` 네임 스페이스입니다. 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`합니다.      - `msxsl:script` 요소에 포함 될 수는 `language` 사용할 스크립트 언어를 지정 하는 특성입니다. 값은 `language` 특성에서 다음 중 하나 여야 합니다: C#, CSharp, VB, VisualBasic, JScript, 또는 JavaScript 합니다. 언어 이름은 대/소문자 구분 없기 때문에 JavaScript 및 javascript은 모두 유효 합니다. 경우는 `language` 특성을 지정 하지 않으면 기본값은 JScript입니다.      - `msxsl:script` 요소 포함 되어야 합니다는 `implements-prefix` 나타내는 스크립트 블록에 연결 된 네임 스페이스 접두사가 포함 된 특성입니다. 이 네임 스페이스는 스타일 시트 내에서 정의 되어야 합니다. 스타일 시트는 그룹화 된 네임 스페이스는 여러 개의 스크립트 블록을 포함할 수 있습니다. 동일한 네임 스페이스 내에서 여러 언어를 사용 하 여 스크립트 블록을 사용할 수 없습니다. 동일한 네임 스페이스 내에 있는 스크립트 블록의 제공 된 스크립트 블록에서 다른 스크립트 블록에 정의 된 함수를 호출할 수 있습니다. 규칙 및 스크립트 언어의 구문에 따라 스크립트 블록의 내용을 구문 분석 (제공한는 `language` 특성). 예를 들어 C# 스크립트 블록을 설치한 경우 메모 접두사로 옵니다는 `//` 문자입니다. 주석은 유효한 XML 콘텐츠 여야 합니다.       `Note`CDATA 섹션의 스크립트 블록을 래핑하는 것이 좋습니다.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```함수 내에서 선언할 수 있습니다는 `msxsl:script` 요소입니다. 다음 표에서 기본적으로는 지원 되는 네임 스페이스를 보여 줍니다.      | 네임 스페이스 지원 | 설명 |   |--------------------------|-----------------|   | `System`| 시스템 클래스입니다. |   | `System.Collection`| 컬렉션 클래스입니다. |   | `System.Text`| 클래스를 처리 하는 텍스트입니다. |   | `System.Xml`| 핵심 XML 클래스입니다. |   | `System.Xml.Xsl`| XSLT 클래스입니다. |   | `System.Xml.XPath`| XML 경로 언어 (XPath) 클래스입니다. |       인수와 스크립트 함수에 의해 정의 된 반환 값은 아래 나열 된 World Wide Web Consortium (W3C) 형식 중 하나 여야 합니다. 다음 표에서 XPath 또는 XSLT, W3C 형식 간의 매핑을 설명 및 해당.NET Framework 클래스입니다.      | W3C 형식 | 해당 하는.NET 클래스 |   |--------------|---------------------------|   | 문자열 (XPath) | `System.String`|   | 부울 값 (XPath) | `System.Boolean`|   | 숫자 (XPath) | `System.Double`|   | 결과 트리 조각 (XSLT) | `System.Xml.XPath.XPathNavigator`|   | 노드 집합 (XPath) | `System.Xml.XPath.XPathNodeIterator`|       스크립트 함수는 다음과 같은 숫자 형식 중 하나를 사용 하는 경우: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single 또는 Decimal, 이러한 형식은로 강제 변환 W3C XPath 형식의 숫자에 매핑되는 Double입니다.       예외가 발생 하는 함수가 호출 될 때 필요한 형식 중 하나에 결과 인수를 변환할 수 없습니다.      > [!NOTE]  >   `msxsl:script` 및 `msxsl:node-list` 에서 유일한 함수는 `urn:schemas-microsoft-com:xslt` XslTransform 클래스에서 지원 되는 네임 스페이스입니다.       XslTransform에 공용 언어 런타임 (CLR) 코드 확장명 메커니즘으로 사용할 수 있습니다. XslTransform 클래스에는 클래스의 인스턴스를 전달 하 고 XSLT 스타일 시트 내에서 공용 메서드를 호출 하면 됩니다. 정의 된 메서드는 `params` 키워드에 전달 될 매개 변수 개수는 지정 되지 않은 허용 하는이 시나리오에서 제대로 작동 하지 않습니다. 참조 [params](~/add/includes/ajax-current-ext-md.md) 내용을 확인 합니다.       자세한 내용은 참조 [XslTransform 클래스도 XSLT 변형을 수행할](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> 클래스입니다."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URL로 지정 된 XSLT 스타일 시트를 로드 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 데 사용 됩니다. 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "지정 된 XSLT 스타일 시트를 로드 하는 URL입니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "로드 된 리소스가 유효한 스타일 시트가 아닙니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "포함 된 스크립트를 포함 하는 스타일 시트와 호출자에 게 않아도 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에 포함 된 XSLT 스타일 시트를 로드 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader>모든 자식을 통해.</xref:System.Xml.XmlReader> 그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다. 후의 <xref:System.Xml.Xsl.XslTransform.Load%2A>메서드가 반환 되 면는 <xref:System.Xml.XmlReader>스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> 문서 끝에 도달 하면는 <xref:System.Xml.XmlReader>파일의 끝 (EOF)에 배치 됩니다.</xref:System.Xml.XmlReader>       지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader>엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> 반환 `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> 이 경우에 <xref:System.Xml.XmlValidatingReader>사용할 수 있습니다.</xref:System.Xml.XmlValidatingReader>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. 증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>메서드.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>XSLT 스타일 시트를 포함 하는 개체입니다.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. 증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>메서드.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT 스타일 시트를 포함 합니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "로드 된 리소스가 유효한 스타일 시트가 아닙니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       스타일 시트 <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> 의 현재 위치에서 로드 로드 된 문서의 일부만 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다. Load 메서드에서 반환 된 후의 <xref:System.Xml.XPath.XPathNavigator>스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</xref:System.Xml.XPath.XPathNavigator>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. 증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>메서드.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> XSLT 스타일 시트를 포함 하는 개체입니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URL로 지정 된 XSLT 스타일 시트를 로드 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 데 사용 됩니다. 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "지정 된 XSLT 스타일 시트를 로드 하는 URL입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 스타일 시트 및에서 참조 되는 스타일 시트를 로드 하는 데 `xsl:import` 및 `xsl:include` 요소입니다.       이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 기본 <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> 없는 사용자와 자격 증명 사용에 스타일 시트를 엽니다. 기본 <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> 스타일 시트에 외부 리소스를 지금 확인에 사용 되지 않는 `xsl:import` 및 `xsl:include` 요소는 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Load 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "로드 된 리소스가 유효한 스타일 시트가 아닙니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "포함 된 스크립트를 포함 하는 스타일 시트와 호출자에 게 않아도 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에 포함 된 XSLT 스타일 시트를 로드 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader>모든 자식을 통해.</xref:System.Xml.XmlReader> 그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.       Load 메서드에서 반환 된 후, <xref:System.Xml.XmlReader>스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</xref:System.Xml.XmlReader> 문서 끝에 도달 하면는 <xref:System.Xml.XmlReader>파일의 끝 (EOF)에 배치 됩니다.</xref:System.Xml.XmlReader>       지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader>엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> 반환 `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> 이 경우에 <xref:System.Xml.XmlValidatingReader>사용할 수 있습니다.</xref:System.Xml.XmlValidatingReader>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. 증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>메서드.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>XSLT 스타일 시트를 포함 하는 개체입니다.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Load 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. 증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>메서드.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT 스타일 시트를 포함 합니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Load*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "로드 된 리소스가 유효한 스타일 시트가 아닙니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       스타일 시트 <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> 의 현재 위치에서 로드 로드 된 문서의 일부 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다. Load 메서드에서 반환 된 후의 <xref:System.Xml.XPath.XPathNavigator>스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</xref:System.Xml.XPath.XPathNavigator>       스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다. 이 어셈블리가 완전히 신뢰 합니다. <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 를 사용 하 여 증명 정보를 제공 하는 것이 좋습니다. 문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > 호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException>throw 됩니다.</xref:System.Security.SecurityException> 참조 <xref:System.Security.Permissions.SecurityPermission>및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>자세한 내용은.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> XSLT 스타일 시트를 포함 하는 개체입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Load*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "스타일 시트에 포함된 스크립트가 들어 및 호출자가 없습니다 <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에 포함 된 XSLT 스타일 시트를 로드 합니다. 이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다. 스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader>모든 자식을 통해.</xref:System.Xml.XmlReader> 그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.       Load 메서드에서 반환 된 후, <xref:System.Xml.XmlReader>스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</xref:System.Xml.XmlReader> 문서 끝에 도달 하면는 <xref:System.Xml.XmlReader>파일의 끝 (EOF)에 배치 됩니다.</xref:System.Xml.XmlReader>       지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader>엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> 반환 `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> 이 경우에 <xref:System.Xml.XmlValidatingReader>사용할 수 있습니다.</xref:System.Xml.XmlValidatingReader>       문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>       여러 가지 방법으로 증명 정보를 제공 합니다. 다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>스타일 시트를 로드를 포함 하는 개체입니다.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Load*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT 스타일 시트에 스크립트 블록에 대해 생성 된 어셈블리에 설정 합니다.       이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT 스크립트 블록은 처리 `document()` 함수가 지원 되지 않으며, 및 권한 있는 확장명 개체는 허용 되지 않습니다.       호출자에 게 있어야 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 스크립트 어셈블리에 대 한 증거를 제공 하기 위해 권한이 있습니다. 부분 신뢰 호출자이 매개 변수를 설정할 수 있습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.       호출자에 게 증명 정보를 제공 하 려 했지만 않아도 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>합니다. 이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>       여러 가지 방법으로 증명 정보를 제공 합니다. 다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT 스타일 시트를 포함 합니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Load*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT 스타일 시트에 스크립트 블록에 대해 생성 된 어셈블리에 설정 합니다.       이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT 스크립트 블록은 처리 `document()` 함수가 지원 되지 않으며, 및 권한 있는 확장명 개체는 허용 되지 않습니다.       호출자에 게 있어야 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 스크립트 어셈블리에 대 한 증거를 제공 하기 위해 권한이 있습니다. 부분 신뢰 호출자이 매개 변수를 설정할 수 있습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "로드 된 리소스가 유효한 스타일 시트가 아닙니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.       호출자에 게 증명 정보를 제공 하 려 했지만 않아도 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XSLT 스타일 시트에 포함 된 로드는 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>합니다. 이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       스타일 시트 <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> 의 현재 위치에서 로드 로드 된 문서의 일부 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다. Load 메서드에서 반환 된 후의 <xref:System.Xml.XPath.XPathNavigator>스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</xref:System.Xml.XPath.XPathNavigator>       문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A>포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755 http://support.microsoft.com에서 Microsoft 기술 자료에서를 참조 하십시오.</xref:System.Xml.Xsl.XslTransform.Load%2A>       여러 가지 방법으로 증명 정보를 제공 합니다. 다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 스타일 시트를 로드를 포함 하는 개체입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 에서 참조 되는 스타일 시트를 로드 하는 데 사용 `xsl:import` 및 `xsl:include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Load*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT 스타일 시트에 스크립트 블록에 대해 생성 된 어셈블리에 설정 합니다.       이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT 스크립트 블록은 처리 `document()` 함수가 지원 되지 않으며, 및 권한 있는 확장명 개체는 허용 되지 않습니다.       호출자에 게 있어야 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 스크립트 어셈블리에 대 한 증거를 제공 하기 위해 권한이 있습니다. 부분 신뢰 호출자이 매개 변수를 설정할 수 있습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "현재 노드의 유효한 스타일 시트에 맞지 않습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.       호출자에 게 증명 정보를 제공 하 려 했지만 않아도 <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> 권한."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "입력된 파일에서 XML 데이터를 변환 하 고 결과 출력 파일에 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.      > [!NOTE] >이 메서드는.NET Framework의 버전 1.1에에서 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "변환할 원본 문서의 URL입니다."
    - id: outputfile
      type: System.String
      description: "출력 파일의 URL입니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader>(의 `xsl:output` 요소는 무시 됩니다).</xref:System.Xml.XmlReader> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>변환의 결과가 포함 된.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       때문에 <xref:System.Xml.XmlReader>읽기 전용 출력 제공는 `xsl:output` 요소는 무시 됩니다.</xref:System.Xml.XmlReader> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.      > [!NOTE] >이 메서드는 사용 되지 않습니다. 설정 된 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 XSLT document () 함수를 해결 하는 방법을 결정 합니다.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>변환의 결과가 포함 된.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "입력된 파일에서 XML 데이터를 변환 하 고 결과 출력 파일에 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "변환할 원본 문서의 URL입니다."
    - id: outputfile
      type: System.String
      description: "출력 파일의 URL입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.Stream
      description: "출력 스트림입니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.       인코딩 특성이 `xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 에 출력할 때 요소가 지원 되지 않습니다 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화, 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader>(의 `xsl:output` 요소는 무시 됩니다).</xref:System.Xml.XmlReader> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화, 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>변환의 결과가 포함 된.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter>(`xsl:output` 는 무시 됩니다).</xref:System.Xml.XmlWriter> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.Stream
      description: "출력 스트림입니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       인코딩 특성이 `xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 에 출력할 때 요소가 지원 되지 않습니다 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       때문에 <xref:System.Xml.XmlReader>읽기 전용 출력 제공는 `xsl:output` 요소는 무시 됩니다.</xref:System.Xml.XmlReader> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>변환의 결과가 포함 된.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 지정된 된 인수를 사용 하 여 코드를 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter>(`xsl:output` 는 무시 됩니다).</xref:System.Xml.XmlWriter> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.      > [!NOTE] >이 메서드는 더 이상 사용 되지 않습니다. 설정은 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>속성 결정 방법을 XSLT `document()` 함수 해결 됨.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>사용 메서드는 <xref:System.Xml.XmlResolver>개체를 해당 인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.Stream
      description: "출력 스트림입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform*>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.       인코딩 특성이 `xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 에 출력할 때 요소가 지원 되지 않습니다 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter>(`xsl:output` 는 무시 됩니다).</xref:System.Xml.XmlWriter> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다.       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument>조각화 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument>변환 메서드.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       다음 예에서는 노드 조각에 대해 변형을 수행 합니다.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. .NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.Stream
      description: "출력 스트림입니다."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 사용 하 여 지정 된 <code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       인코딩 특성이 `xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 에 출력할 때 요소가 지원 되지 않습니다 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML 데이터를 변환의 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 지정된 된 인수를 사용 하 여 코드를 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 결과 출력 합니다."
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 구문을 지원합니다.</xref:System.Xml.Xsl.XslTransform> XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.       `args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다. 변환은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다. 변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator>는 원래 상태로 유지 됩니다.</xref:System.Xml.XPath.XPathNavigator> 즉 Transform 메서드를 호출한 후 노드 전의 변환 프로세스를 현재 노드를 유지 합니다.       `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter>(`xsl:output` 는 무시 됩니다).</xref:System.Xml.XmlWriter> 참조 [XslTransform 출력](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환에 대 한 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 메서드가 완료 된 후에 캐시 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.       참고: 이것은 이전 버전의 동작이 변경 됩니다. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft.NET Framework 버전 1.1을 사용 하는 경우에 throw 됩니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "설정의 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 외부 리소스를 확인 하는 데 사용 때는 <xref:System.Xml.Xsl.XslTransform.Transform*>메서드를 호출 합니다.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]>은 <xref:System.Xml.Xsl.XslTransform>클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>클래스는 새 XSLT 프로세서.</xref:System.Xml.Xsl.XslCompiledTransform> 자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.       .NET Framework 버전 1.1에서는 응용 프로그램의 신뢰 수준을 기본 동작을 결정: `Fully trusted code:` 기본값 <xref:System.Xml.XmlUrlResolver>자격 증명을 해결 하려면 사용 하 여 사용자는 `document()` 함수.</xref:System.Xml.XmlUrlResolver> 외부 리소스에 액세스 하기에 인증이 필요한 경우이 속성을 사용 하 여 지정 하는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`속성이로 설정 되어 `null`, 즉은 `document()` 함수가 확인 되지 않습니다. 완전 신뢰를 지정 해야 하기 때문에 프로그램 <xref:System.Xml.XmlResolver>,이 속성도 설정할 수 없습니다.</xref:System.Xml.XmlResolver>       이 해결 프로그램을 사용 하면 XSLT `document()` 함수를 호출 합니다. 해결에 사용 되지 않는 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소입니다. 지정 하는 <xref:System.Xml.XmlResolver>해결 하는 데 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소를 사용 하 여는 <xref:System.Xml.Xsl.XslTransform.Load%2A>오버 로드를 <xref:System.Xml.XmlResolver>인수 중 하나로.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      > [!NOTE] >이 속성은.NET Framework의 버전 1.1에서에서 사용 되지 않습니다. 지정 하는 <xref:System.Xml.XmlResolver>를 사용 하는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>메서드는 것이 좋습니다.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> 이 경우에 <xref:System.Xml.XmlResolver>후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A>메서드가 완료 되 면.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 변환 하는 동안 사용 하도록 합니다. 경우 설정 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT `document()` 함수가 확인 되지 않습니다."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
