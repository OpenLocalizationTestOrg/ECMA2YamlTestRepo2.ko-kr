### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustCollection
  id: ApplicationTrustCollection
  children:
  - System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  - System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  - System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  - System.Security.Policy.ApplicationTrustCollection.Clear
  - System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.Count
  - System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  - System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  - System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  - System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  - System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  - System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  - System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  - System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  - System.Security.Policy.ApplicationTrustCollection.SyncRoot
  - System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 개체입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrust>개체는 응용 프로그램에 대 한 보안 결정을 캡슐화합니다.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class ApplicationTrustCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  id: Add(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Add(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Add(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Add(ApplicationTrust)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에 요소를 추가 합니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrust>개체 컬렉션의 끝에 추가 됩니다.</xref:System.Security.Policy.ApplicationTrust>  사용 하 여 이전에 추가한 응용 프로그램 신뢰를 제거 하려면는 <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>메서드.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>"
  syntax:
    content: public int Add (System.Security.Policy.ApplicationTrust trust);
    parameters:
    - id: trust
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 추가할 개체입니다."
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 인덱스입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trust</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of the <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  id: AddRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: AddRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrust[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 요소에 복사 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 배열 컬렉션의 끝입니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrust>에 포함 된 개체는 `trusts` 배열 컬렉션의 끝에 추가 됩니다.</xref:System.Security.Policy.ApplicationTrust>       사용 하 여 이전에 추가한 응용 프로그램 트러스트의 범위를 제거 하려면는 <xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>메서드.</xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>"
  syntax:
    content: public void AddRange (System.Security.Policy.ApplicationTrust[] trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrust[]
      description: "형식의 배열 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 컬렉션에 추가할 개체를 포함 합니다."
  overload: System.Security.Policy.ApplicationTrustCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of an <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  id: AddRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: AddRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 요소에 복사 <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 컬렉션의 끝에 있습니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrust>에 포함 된 개체 `trusts` 컬렉션의 끝에 추가 됩니다.</xref:System.Security.Policy.ApplicationTrust>       AddRange 메서드를 사용 하 여 신속 하 게 다른 컬렉션을 추가할 응용 프로그램 트러스트 개체의 컬렉션을 사용 하 여 컬렉션에 각 응용 프로그램 신뢰를 수동으로 추가 하는 대신에 <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>메서드.</xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>       사용 하 여 이전에 추가한 응용 프로그램 트러스트의 범위를 제거 하려면는 <xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>메서드.</xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>"
  syntax:
    content: public void AddRange (System.Security.Policy.ApplicationTrustCollection trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrustCollection
      description: "A <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 컬렉션에 추가할 개체를 포함 합니다."
  overload: System.Security.Policy.ApplicationTrustCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of an <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Clear
  id: Clear
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ApplicationTrustCollection.Clear()
  fullName: System.Security.Policy.ApplicationTrustCollection.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에서 모든 응용 프로그램 트러스트를 제거합니다."
  remarks: "각 <xref:System.Security.Policy.ApplicationTrust>으로 식별 되는 컬렉션에 해당 <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>속성.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A> </xref:System.Security.Policy.ApplicationTrust> 경우의 값은 <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>에 대 한 속성 <xref:System.Security.Policy.ApplicationTrust>컬렉션의 개체는 `null`, <xref:System.ArgumentException>throw 됩니다.</xref:System.ArgumentException> </xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustCollection.Clear*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>컬렉션에 있는 항목의 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  id: CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: CopyTo(ApplicationTrust[],Int32)
  nameWithType: ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션 전체를 대상 배열의 지정 된 인덱스부터 호환 가능한&1; 차원 배열에 복사 합니다."
  remarks: >-
    > [!CAUTION]

    >  All the application trusts in the collection are copied into the array starting at the specified index location, overwriting any existing data within the range of objects copied into the array.
  syntax:
    content: public void CopyTo (System.Security.Policy.ApplicationTrust[] array, int index);
    parameters:
    - id: array
      type: System.Security.Policy.ApplicationTrust[]
      description: "형식의&1; 차원 배열을 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 현재 컬렉션에서 복사한 요소의 대상입니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Policy.ApplicationTrustCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>하한값 보다 작습니다 <code>array</code>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-에 있는 요소의 수는 <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 대상의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Count
  id: Count
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Count
  nameWithType: ApplicationTrustCollection.Count
  fullName: System.Security.Policy.ApplicationTrustCollection.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에 포함 된 항목의 수를 가져옵니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 포함 된 항목의 수입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  id: Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Find(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 응용 프로그램 id와 일치 하는 컬렉션에 응용 프로그램 트러스트를 가져옵니다."
  remarks: "응용 프로그램 신뢰 되는 정확한 일치 하는 버전의 값에 따라로 선택할 수는 `versionMatch` 매개 변수입니다."
  syntax:
    content: public System.Security.Policy.ApplicationTrustCollection Find (ApplicationIdentity applicationIdentity, System.Security.Policy.ApplicationVersionMatch versionMatch);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> 찾을 응용 프로그램을 설명 하는 개체입니다."
    - id: versionMatch
      type: System.Security.Policy.ApplicationVersionMatch
      description: "중 하나는 <xref href=&quot;System.Security.Policy.ApplicationVersionMatch&quot;> </xref> 값입니다."
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 일치 하는 모든 포함 된 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 개체입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ApplicationTrustCollection.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션을 반복 하는 데 사용할 수 있는 개체를 반환 합니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrustEnumerator>구현 하는 <xref:System.Collections.IEnumerator?displayProperty=fullName>인터페이스 하는 컬렉션 내에서 이동할 수 있습니다.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Security.Policy.ApplicationTrustEnumerator>       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>의 초기 위치에 열거자를 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 열거자를 만들거나 사용 하 여 다음의 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>메서드 열거자는 컬렉션의 시작 부분에 위치를 다음 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>열거자 첫 번째 항목을 배치 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Security.Policy.ApplicationTrustEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Security.Policy.ApplicationTrustEnumerator
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustEnumerator&quot;> </xref> 컬렉션을 반복에 사용할 수 있는 합니다."
  overload: System.Security.Policy.ApplicationTrustCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
  fullName: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "스레드로부터 안전한 컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Security.Policy.ApplicationTrustCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ApplicationTrustCollection.Item(Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "가져옵니다는 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스에 위치 합니다."
  remarks: "이 메서드를 사용 하 여 가져오려는 <xref:System.Security.Policy.ApplicationTrust>에서 개체는 <xref:System.Security.Policy.ApplicationTrustCollection>지정된 된 인덱스에.</xref:System.Security.Policy.ApplicationTrustCollection> </xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 개체의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션에서 개체 개수 보다 크거나입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>index</code>가 음수입니다."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationTrustCollection.Item(String)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(String)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "가져옵니다는 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 지정된 된 응용 프로그램에 대 한 개체입니다."
  remarks: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>각 속성 <xref:System.Security.Policy.ApplicationTrust>컬렉션의에서 개체를 검사 하는 <xref:System.ApplicationIdentity.FullName%2A>속성 값에서 지정한 응용 프로그램 일치 하는 `appFullName` 매개 변수.</xref:System.ApplicationIdentity.FullName%2A> </xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust this[string appFullName] { get; }
    parameters:
    - id: appFullName
      type: System.String
      description: "응용 프로그램의 전체 이름입니다."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 지정된 된 응용 프로그램에 대 한 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체를 찾을 수 없는 경우."
  overload: System.Security.Policy.ApplicationTrustCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  id: Remove(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Remove(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationTrust)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에서 지정 된 응용 프로그램 신뢰를 제거합니다."
  remarks: "전체 컬렉션을 검색 하 고 지정 된 응용 프로그램 신뢰의 모든 인스턴스가 제거 됩니다.       제거 된 개체는 개체는 빈 지점을를 위로 이동 합니다. 이동 된 개체의 인덱스도 업데이트 됩니다."
  syntax:
    content: public void Remove (System.Security.Policy.ApplicationTrust trust);
    parameters:
    - id: trust
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 제거할 개체입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trust</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>의 속성은 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 로 지정 된 개체 <code> trust </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  id: Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Remove(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에서 지정 된 조건과 일치 하는 모든 응용 프로그램 신뢰 개체를 제거 합니다."
  remarks: "값에 따라 정확한 버전 일치에 의해 응용 프로그램 신뢰를 식별할 수 있습니다는 `versionMatch` 매개 변수입니다. <xref:System.Security.Policy.ApplicationTrustCollection.Find%2A>일치 하는 항목 컬렉션에서 제거 되 고 메서드는 일치 하는 모든 응용 프로그램 트러스트를 찾는 데 사용 됩니다.</xref:System.Security.Policy.ApplicationTrustCollection.Find%2A>       제거 된 개체는 개체는 빈 지점을를 위로 이동 합니다. 이동 된 개체의 인덱스도 업데이트 됩니다."
  syntax:
    content: public void Remove (ApplicationIdentity applicationIdentity, System.Security.Policy.ApplicationVersionMatch versionMatch);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> 의 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 제거할 개체입니다."
    - id: versionMatch
      type: System.Security.Policy.ApplicationVersionMatch
      description: "중 하나는 <xref href=&quot;System.Security.Policy.ApplicationVersionMatch&quot;> </xref> 값입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  id: RemoveRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: RemoveRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에서 지정된 된 배열에 응용 프로그램 트러스트 개체를 제거합니다."
  remarks: "제거 된 개체는 개체는 빈 지점을를 위로 이동 합니다. 이동 된 개체의 인덱스도 업데이트 됩니다."
  syntax:
    content: public void RemoveRange (System.Security.Policy.ApplicationTrust[] trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrust[]
      description: "형식의&1; 차원 배열을 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 현재 컬렉션에서 제거할 항목에 들어 있는입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  id: RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: RemoveRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에서 지정된 된 컬렉션의 응용 프로그램 트러스트 개체를 제거합니다."
  remarks: "제거 된 개체는 개체는 빈 지점을를 위로 이동 합니다. 이동 된 개체의 인덱스도 업데이트 됩니다."
  syntax:
    content: public void RemoveRange (System.Security.Policy.ApplicationTrustCollection trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 현재 컬렉션에서 제거할 항목에 들어 있는입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
  fullName: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "기본 구현에서는 현재 응용 프로그램 트러스트 개체를 반환 합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용 되는 개체입니다."
  overload: System.Security.Policy.ApplicationTrustCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "요소에 복사는 <xref:System.Collections.ICollection>지정 된 <xref:System.Array>지정 된 위치에서 시작 하는 <xref:System.Array>인덱스.</xref:System.Array> </xref:System.Array> </xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array> <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 에서 복사한 요소의 대상인</xref:System.Array>&1; 차원 <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-소스에 있는 요소의 수 <xref:System.Collections.ICollection> 에서 사용 가능한 공간 보다 큰 <code>index</code> 대상의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Add(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Add(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Add(ApplicationTrust)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrust[])
- uid: System.Security.Policy.ApplicationTrust[]
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust[]
  spec.csharp:
  - uid: System.Security.Policy.ApplicationTrust
    name: ApplicationTrust
    nameWithType: ApplicationTrust
    fullName: ApplicationTrust[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationTrustCollection.Clear
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Clear()
  nameWithType: ApplicationTrustCollection.Clear()
  fullName: System.Security.Policy.ApplicationTrustCollection.Clear()
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: CopyTo(ApplicationTrust[],Int32)
  nameWithType: ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
- uid: System.Security.Policy.ApplicationTrustCollection.Count
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Count
  nameWithType: ApplicationTrustCollection.Count
  fullName: System.Security.Policy.ApplicationTrustCollection.Count
- uid: System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Find(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.ApplicationVersionMatch
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationVersionMatch
  nameWithType: ApplicationVersionMatch
  fullName: System.Security.Policy.ApplicationVersionMatch
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ApplicationTrustCollection.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.GetEnumerator()
- uid: System.Security.Policy.ApplicationTrustEnumerator
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
  fullName: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ApplicationTrustCollection.Item(Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(Int32)
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationTrustCollection.Item(String)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationTrust)
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
  fullName: System.Security.Policy.ApplicationTrustCollection.SyncRoot
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.Add*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Add
  nameWithType: ApplicationTrustCollection.Add
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange
  nameWithType: ApplicationTrustCollection.AddRange
- uid: System.Security.Policy.ApplicationTrustCollection.Clear*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Clear
  nameWithType: ApplicationTrustCollection.Clear
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: CopyTo
  nameWithType: ApplicationTrustCollection.CopyTo
- uid: System.Security.Policy.ApplicationTrustCollection.Count*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Count
  nameWithType: ApplicationTrustCollection.Count
- uid: System.Security.Policy.ApplicationTrustCollection.Find*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Find
  nameWithType: ApplicationTrustCollection.Find
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ApplicationTrustCollection.GetEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
- uid: System.Security.Policy.ApplicationTrustCollection.Item*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item
  nameWithType: ApplicationTrustCollection.Item
- uid: System.Security.Policy.ApplicationTrustCollection.Remove*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove
  nameWithType: ApplicationTrustCollection.Remove
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange
  nameWithType: ApplicationTrustCollection.RemoveRange
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator
