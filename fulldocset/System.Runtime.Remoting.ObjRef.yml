### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.ObjRef
  id: ObjRef
  children:
  - System.Runtime.Remoting.ObjRef.#ctor
  - System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  - System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.ChannelInfo
  - System.Runtime.Remoting.ObjRef.EnvoyInfo
  - System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  - System.Runtime.Remoting.ObjRef.IsFromThisProcess
  - System.Runtime.Remoting.ObjRef.TypeInfo
  - System.Runtime.Remoting.ObjRef.URI
  langs:
  - csharp
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
  type: Class
  summary: "원격 개체와 통신 하려면 프록시를 생성 하는 데 필요한 모든 관련 정보를 저장 합니다."
  remarks: "확장 하는 개체의 직렬화 가능 표현인는 ObjRef <xref:System.MarshalByRefObject>(MBR).</xref:System.MarshalByRefObject> ObjRef는 전체 개체 참조를 전송 하는 데 사용 되는 <xref:System.AppDomain>경계.</xref:System.AppDomain> 개체에 대 한 ObjRef 만들기 마샬링으로 알려져 있습니다. ObjRef를 만들 수 있습니다 (마샬링 한 <xref:System.MarshalByRefObject>) 하거나 명시적으로 MBR을 등록 하 여 개체를 원격 인프라 (참조 <xref:System.Runtime.Remoting.RemotingConfiguration>및 <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName>), 원격 개체를 호출할 때 MBR 개체를 매개 변수로 전달 하 여 암시적 또는.</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.RemotingConfiguration> </xref:System.MarshalByRefObject> Remoting ObjRef 개체를 사용 하 여 저장 하 고 모든 관련 정보에 대 한 전송는 <xref:System.MarshalByRefObject>원격 처리 되 고.</xref:System.MarshalByRefObject>       ObjRef 설명 하는 정보가 포함 되어는 <xref:System.Type>및 개체의 클래스는 마샬링하, 정확한 위치 및 개체 위치한 원격 하위 영역에 도달 하는 방법에 대 한 통신 관련 정보가.</xref:System.Type>       클래스를 구현한 후 <xref:System.MarshalByRefObject>은 마샬링되지 점을 나타내는 ObjRef 전송 되는 채널을 통해 다른 응용 프로그램 도메인에 다른 프로세스 또는 컴퓨터에 있을 수 있음.</xref:System.MarshalByRefObject> ObjRef가 deserialize (참조 [XML 및 SOAP Serialization](~/add/includes/ajax-current-ext-md.md)) 대상 응용 프로그램 도메인의 구문 분석 되어야 원격 MBR 개체에 대 한 투명 프록시를 만들 수 있습니다. 이 작업을 역마샬링 라고 합니다.       투명 프록시는 클라이언트의 공간에서 실제 개체가 있는 효과 제공 하는 개체입니다. 에 원격 인프라를 사용 하 여 실제 개체에 대 한 호출을 전달 하 여 얻습니다. 투명 프록시는 자체 관리 <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> 형식의 관리 되는 런타임 클래스의 인스턴스 <xref:System.Runtime.Remoting.Proxies.RealProxy>투명 프록시에서 작업을 전달 하는 데 필요한 기능 중 일부를 구현 합니다.</xref:System.Runtime.Remoting.Proxies.RealProxy>       프록시 개체에 <xref:System.AppDomain>.</xref:System.AppDomain> 내 원격 창 나누기에 관계 없이 사용할 수 있습니다. 응용 프로그램 프록시 참조 한 개체 참조를 구분 하지 않습니다 필요 합니다. 그러나 활성화 등의 문제를 다룰 서비스 공급자 수명 관리 및 트랜잭션 해야 차이점을 확인 합니다.       이 클래스는 클래스 수준에 상속 요청과 링크 요청을 만듭니다. A <xref:System.Security.SecurityException>직접 실행 호출자 또는 파생된 클래스 중 하나에 인프라 권한이 없는 경우에 throw 됩니다.</xref:System.Security.SecurityException> 보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/add/includes/ajax-current-ext-md.md) 및 [상속 요청](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다."
  example:
  - "The following code example demonstrates the use of a custom ObjRef. To view the activation code that tests the custom ObjRef, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> method.  \n  \n [!code-cs[CreateObjRef2#1](~/add/codesnippet/csharp/t-system.runtime.remotin_10_1.cs)]\n [!code-vb[CreateObjRef2#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_10_1.vb)]\n [!code-cpp[CreateObjRef2#1](~/add/codesnippet/cpp/t-system.runtime.remotin_10_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class ObjRef : System.Runtime.Serialization.IObjectReference, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IObjectReference
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 클래스 기본값을 사용 합니다."
  syntax:
    content: public ObjRef ();
    parameters: []
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  id: '#ctor(System.MarshalByRefObject,System.Type)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 지정 된 참조 하기 위해 클래스 <xref href=&quot;System.MarshalByRefObject&quot;> </xref> 지정 <xref:System.Type>.</xref:System.Type>"
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/6f2b5e71-8a5c-4754-afa3-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/6f2b5e71-8a5c-4754-afa3-_1.cpp)]
  syntax:
    content: public ObjRef (MarshalByRefObject o, Type requestedType);
    parameters:
    - id: o
      type: System.MarshalByRefObject
      description: "개체는 새 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 인스턴스를 참조 합니다."
    - id: requestedType
      type: System.Type
      description: "<xref:System.Type>개체의 하는 새 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 인스턴스를 참조 합니다.</xref:System.Type>"
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> serialize 된 데이터에서 클래스입니다."
  remarks: "이 생성자는 스트림을 통해 전송 된 예외 개체를 다시 구성 하기 위해 역직렬화 하는 동안 호출 됩니다. 자세한 내용은 <xref:System.Runtime.Serialization.ISerializable>.</xref:System.Runtime.Serialization.ISerializable> 을 참조 하십시오."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/350cf75f-e9f3-40d2-ab87-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/350cf75f-e9f3-40d2-ab87-_1.cpp)]
  syntax:
    content: protected ObjRef (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 대상의 예외에 대 한 컨텍스트 정보입니다."
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  id: ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "가져오거나는 <xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;> </xref> 에 대 한는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>합니다."
  remarks: "프로세스에서 활성 채널에서 제공한 정보를 보유 하는 current 속성 때는 <xref:System.Runtime.Remoting.ObjRef>만들어집니다 (참조 <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>마샬링에 대 한 자세한 내용은).</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> </xref:System.Runtime.Remoting.ObjRef> 이 정보 다른 프로세스나 응용 프로그램 도메인에 대 한 채널에서 현재 인스턴스에 의해 표시 되는 개체와 통신 하는 전송 싱크를 만들 것인지 여부를 결정 데 사용할 수 있습니다."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_106_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_106_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IChannelInfo ChannelInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IChannelInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;> </xref> 에 대 한 인터페이스는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.ObjRef.ChannelInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  id: EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "가져오거나는 <xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;> </xref> 에 대 한는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>합니다."
  remarks: "현재 속성 개체를 나타내는 프록시를 만들 때 다시 생성 되는 직렬화 된 메시지 싱크 체인을 포함 합니다. 이 값에 사용 <xref:System.Runtime.Remoting.Contexts.Context>바인딩된 개체 형식에 하 고 트랜잭션와 같은 런타임 서비스를 제공 하는 개체 그룹을 나타냅니다.</xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public virtual System.Runtime.Remoting.IEnvoyInfo EnvoyInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IEnvoyInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;> </xref> 에 대 한 인터페이스는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "지정 된 채웁니다 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 현재 직렬화 하는 데 필요한 데이터로 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 인스턴스."
  remarks: "현재는 제공 된 채워지는 <xref:System.Runtime.Serialization.SerializationInfo> <xref:System.Runtime.Remoting.ObjRef>.</xref:System.Runtime.Remoting.ObjRef> 다시 만드는 데 필요한 모든 데이터가</xref:System.Runtime.Serialization.SerializationInfo>       현재 메서드는 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>안내 하십시오.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 구현"
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/088e4c86-d393-401b-857d-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/088e4c86-d393-401b-857d-_1.cpp)]
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "소스 또는 serialization의 대상에 대 한 컨텍스트 정보입니다."
  overload: System.Runtime.Remoting.ObjRef.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "직접 실행 호출자에 직렬화 포맷터 권한이 없습니다."
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  id: GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "원격 개체에 대 한 참조를 반환 된 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 에 대해 설명 합니다."
  remarks: "현재 메서드는 deserialization의 픽스업 단계에서 호출 됩니다."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/37d6be7e-83fc-46ca-8f58-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/37d6be7e-83fc-46ca-8f58-_1.cpp)]
  syntax:
    content: public virtual object GetRealObject (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "현재 개체가 있는 컨텍스트."
    return:
      type: System.Object
      description: "원격에 대 한 참조는 개체는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 에 대해 설명 합니다."
  overload: System.Runtime.Remoting.ObjRef.GetRealObject*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "직접 실행 호출자에 직렬화 포맷터 권한이 없습니다."
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  id: IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "나타내는 부울 값을 반환 하는지 여부를 현재 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 현재에 있는 개체를 참조 하는 인스턴스 <xref href=&quot;System.AppDomain&quot;> </xref>합니다."
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_86_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_86_1.cpp)]
  syntax:
    content: public bool IsFromThisAppDomain ();
    parameters: []
    return:
      type: System.Boolean
      description: "나타내는 부울 값 여부 현재 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 현재에 있는 개체를 참조 하는 인스턴스 <xref href=&quot;System.AppDomain&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  id: IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "나타내는 부울 값을 반환 하는지 여부를 현재 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 인스턴스가 현재 프로세스에 있는 개체를 참조 합니다."
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_53_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_53_1.cpp)]
  syntax:
    content: public bool IsFromThisProcess ();
    parameters: []
    return:
      type: System.Boolean
      description: "나타내는 부울 값 여부 현재 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 인스턴스가 현재 프로세스에 있는 개체를 참조 합니다."
  overload: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  id: TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "가져오거나는 <xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;> </xref> 개체에 대해 하는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 에 대해 설명 합니다."
  remarks: "TypeInfo 현재 <xref:System.Runtime.Remoting.ObjRef>.</xref:System.Runtime.Remoting.ObjRef> 원격 개체의 형식에 대 한 자세한 정보를 포함 합니다. 현재 속성에는 형식 계층 구조 뿐만 아니라 형식이 구현 하는 인터페이스의 목록을 포함 합니다. 이 정보는 클라이언트의 보기 원격 개체의 형식에 맞게 조정 되도록 증분 프록시 구체화 하려면 사용할 수 있습니다."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_18_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_18_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IRemotingTypeInfo TypeInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IRemotingTypeInfo
      description: "<xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;> </xref> 개체에 대해 하는 <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> 에 대해 설명 합니다."
  overload: System.Runtime.Remoting.ObjRef.TypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.URI
  id: URI
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "특정 개체의 URI를 가져오거나 설정 합니다."
  remarks: "URI는 특정 개체 인스턴스를 고유 하 게 식별합니다."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_8_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_8_1.cpp)]
  syntax:
    content: public virtual string URI { get; set; }
    return:
      type: System.String
      description: "특정 개체의 URI입니다."
  overload: System.Runtime.Remoting.ObjRef.URI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.ObjRef.#ctor
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.IChannelInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IChannelInfo
  nameWithType: IChannelInfo
  fullName: System.Runtime.Remoting.IChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.IEnvoyInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IEnvoyInfo
  nameWithType: IEnvoyInfo
  fullName: System.Runtime.Remoting.IEnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
- uid: System.Runtime.Remoting.IRemotingTypeInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IRemotingTypeInfo
  nameWithType: IRemotingTypeInfo
  fullName: System.Runtime.Remoting.IRemotingTypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.ObjRef.#ctor*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef.ObjRef
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData
  nameWithType: ObjRef.GetObjectData
- uid: System.Runtime.Remoting.ObjRef.GetRealObject*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject
  nameWithType: ObjRef.GetRealObject
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain
  nameWithType: ObjRef.IsFromThisAppDomain
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess
  nameWithType: ObjRef.IsFromThisProcess
- uid: System.Runtime.Remoting.ObjRef.TypeInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
