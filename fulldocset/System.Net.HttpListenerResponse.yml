### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "처리 중인 요청에 응답을 나타냅니다는 <xref href=&quot;System.Net.HttpListener&quot;> </xref> 개체입니다."
  remarks: "클라이언트 리소스에 대 한 요청을 수행 하는 경우 처리는 <xref:System.Net.HttpListener>개체를 요청 및 응답에서 응용 프로그램에서 사용할 수는 <xref:System.Net.HttpListenerContext>개체입니다.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> 요청으로 표시 됩니다는 <xref:System.Net.HttpListenerRequest>개체 및에서 사용할 수는 <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>속성.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> </xref:System.Net.HttpListenerRequest> 응답 HttpListenerResponse 개체 표시 되 고 사용할 수는 <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>속성.</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>       와 같은 다양 한 속성을 설정 하 여 응답을 사용자 지정할 수 있습니다 <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, 및 <xref:System.Net.HttpListenerResponse.Cookies%2A>.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> 사용 하 여는 <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>속성을 한 <xref:System.IO.Stream>인스턴스는 응답에 대 한 데이터를 쓸 수 있습니다.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> 마지막으로 호출 하 여 클라이언트에 응답 데이터를 보낼는 <xref:System.Net.HttpListenerResponse.Close%2A>메서드.</xref:System.Net.HttpListenerResponse.Close%2A>"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "보내는 응답 하지 않고 클라이언트에 대 한 연결을 닫습니다."
  remarks: "이미 잠겨 있는 개체에이 메서드를 호출 해도 아무 효과가 없습니다. 응답 아직 닫히지 경우이 메서드 닫히지 않은 연결 된 <xref:System.Net.HttpListenerRequest>및 <xref:System.Net.HttpListenerContext>개체.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListenerRequest> 클라이언트에 대 한 연결에 관계 없이 닫힌 이기도 <xref:System.Net.HttpListenerRequest.KeepAlive%2A>클라이언트 요청의 속성 값.</xref:System.Net.HttpListenerRequest.KeepAlive%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "이 응답에 대 한 HTTP 헤더에 지정 된 헤더 및 값을 추가합니다."
  remarks: "이 메서드를 호출 하는 것은 <xref:System.Net.WebHeaderCollection.Set%2A>에서 반환 된 컬렉션에 대 한 메서드는 <xref:System.Net.HttpListenerResponse.Headers%2A>속성.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Set%2A>       헤더에 지정 된 경우 `name` 존재 하지 않는에 새 헤더를 삽입 하는이 메서드는 <xref:System.Net.HttpListenerResponse.Headers%2A>속성의 컬렉션입니다.</xref:System.Net.HttpListenerResponse.Headers%2A> 경우 `name` 기존 값과 메서드 대체가 컬렉션에 있는 `value`합니다. 기존 값을 바꾸지 않고 기존 헤더에 값을 추가 하려면 사용 된 <xref:System.Net.HttpListenerResponse.AppendHeader%2A>메서드.</xref:System.Net.HttpListenerResponse.AppendHeader%2A>"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "설정 하려면 HTTP 헤더의 이름입니다."
    - id: value
      type: System.String
      description: "에 대 한 값은 `name` 헤더입니다."
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정된 된 헤더에 대 한 값을 지정할 수 없습니다.       -또는- <code> name </code> 또는 <code> value </code> 잘못 된 문자가 있습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "길이가 <code> value </code> 65, 535 자를 초과 합니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "지정 된 추가 <xref:System.Net.Cookie>이 응답에 대 한 쿠키 컬렉션에.</xref:System.Net.Cookie>"
  remarks: "이 메서드를 호출 하는 것은 <xref:System.Net.CookieCollection.Add%2A>에서 반환 된 컬렉션에 대 한 메서드는 <xref:System.Net.HttpListenerResponse.Cookies%2A>속성.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.CookieCollection.Add%2A>       지정된 된 쿠키에 존재 하지 않는 경우는 <xref:System.Net.HttpListenerResponse.Cookies%2A>속성의 컬렉션 `cookie` 추가 됩니다.</xref:System.Net.HttpListenerResponse.Cookies%2A> 쿠키의 컬렉션에 있는 경우 `cookie` 대체 합니다."
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "<xref:System.Net.Cookie>이 응답과 함께 보내야 하는 컬렉션에 추가할.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "이 응답에 보낼 수 지정된 된 HTTP 헤더에 값을 추가 합니다."
  remarks: "이 메서드를 호출 하는 것은 <xref:System.Net.WebHeaderCollection.Add%2A>에서 반환 된 컬렉션에 대 한 메서드는 <xref:System.Net.HttpListenerResponse.Headers%2A>속성.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Add%2A>       헤더에 지정 된 경우 `header` 존재 하지 않는에 새 헤더를 삽입 하는이 메서드는 <xref:System.Net.HttpListenerResponse.Headers%2A>속성의 컬렉션입니다.</xref:System.Net.HttpListenerResponse.Headers%2A> 경우 `header` 가 추가 하는이 메서드는 컬렉션에 있는지 `value` 기존 값입니다. 사용 하 여 기존 헤더의 값을 대체 하려면는 <xref:System.Net.HttpListenerResponse.AddHeader%2A>메서드.</xref:System.Net.HttpListenerResponse.AddHeader%2A>"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "추가할 HTTP 헤더의 이름 `value` 하 합니다."
    - id: value
      type: System.String
      description: "에 추가할 값의 `name` 헤더입니다."
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;).       -또는-지정된 된 헤더에 대 한 값을 지정할 수 없습니다.       -또는- <code>name</code> 또는 <code>value</code> 잘못 된 문자가 있습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "길이가 <code> value </code> 65, 535 자를 초과 합니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "클라이언트에 대 한 응답을 보내고가 보유 하는 리소스를 해제 <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> 인스턴스."
  remarks: "이 메서드는 응답 스트림을 닫습니다 및 <xref:System.Net.HttpListenerRequest>응답과 관련 된.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "클라이언트에 지정된 된 바이트 배열을 반환 하 고이 보유 한 리소스를 해제 <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> 인스턴스."
  remarks: "응답 본문 데이터를 보내는 경우로 보내도록이 메서드를 사용할 수 있습니다는 <xref:System.Byte>본문 데이터를 작성 하는 대신 배열은 <xref:System.Net.HttpListenerResponse.OutputStream%2A>속성과 호출은 <xref:System.Net.HttpListenerResponse.Close%2A>메서드.</xref:System.Net.HttpListenerResponse.Close%2A> </xref:System.Net.HttpListenerResponse.OutputStream%2A> </xref:System.Byte>       이 메서드는 응답 스트림을 닫습니다 및 <xref:System.Net.HttpListenerRequest>응답과 관련 된.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "A <xref:System.Byte>클라이언트에 보낼 응답이 포함 된 배열입니다.</xref:System.Byte>"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트로 스트림을 플러시하는 동안 실행을 차단 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "<xref:System.Text.Encoding>이 응답에 대해의 <xref:System.Net.HttpListenerResponse.OutputStream*>.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding> 가져오거나"
  remarks: "<xref:System.Text.Encoding>개체를 사용 하 여 바이트 시퀀스 문자 집합 (코드 페이지) 및 문자를 바이트 시퀀스로 변환할 수 있습니다.</xref:System.Text.Encoding>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>개체의 데이터로 사용 하기 적합는 <xref:System.Net.HttpListenerResponse.OutputStream*>속성 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 인코딩이 지정 되지 않은 경우.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "응답에 포함 된 본문 데이터의 바이트 수를 가져오거나 설정 합니다."
  remarks: "`Content-Length` 헤더 응답의 본문 데이터의 길이 (바이트)를 나타냅니다. 청크 분할 또는 원시 데이터를 보내지 않은 형식을 사용 하 여 때 ContentLength64 속성을 설정 해야 합니다. 그렇지 않고 하는 경우는 <xref:System.Net.HttpListener>응답 데이터를 전송 하지 않습니다.</xref:System.Net.HttpListener>       응답 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpResponseHeader>열거형.</xref:System.Net.HttpResponseHeader>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "응답의 값 <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> 헤더입니다."
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "설정 작업은 지정 된 값은&0; 보다 작습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "응답을 이미 보냈습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "반환 된 콘텐츠의 MIME 형식을 가져오거나 설정 합니다."
  remarks: "웹 브라우저를 통신할 때 명시적으로 설정 해야이 속성이 아닌 다른 어떤 콘텐츠 형식 반환 하는 경우 `text/html`합니다.       응답 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpResponseHeader>열거형.</xref:System.Net.HttpResponseHeader>"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>응답의 텍스트를 포함 하는 인스턴스 <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> 헤더.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "설정 작업은 지정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Set 작업은 빈 문자열에 대해 지정 된 값 (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "응답과 함께 반환 된 쿠키의 컬렉션을 가져오거나 설정 합니다."
  remarks: '쿠키는 이름/값 텍스트 데이터는 로컬 클라이언트 컴퓨터에 저장 하는 웹 서버입니다. 지원 되는 다음 쿠키 형식은: Netscape, RFC 2109 및 RFC 2965 합니다. Netscape 쿠키 지정 http://wp.netscape.com/newsref/std/cookie_spec.html;에서 제공 됩니다. RFC 문서에서 사용할 수 있는 [http://www.rfc-editor.org](http://www.rfc-editor.org)합니다.'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "A <xref:System.Net.CookieCollection>쿠키 응답과 함께 포함 된.</xref:System.Net.CookieCollection> 쿠키가 응답에 추가 된 경우에 컬렉션이 비어 있습니다."
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "지정 된 위치에서 속성을 복사 <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> 이 응답에 대 한 합니다."
  remarks: "정기적으로 변경 하면 많은 속성이 기본값에서 새 값의 고정된 된 집합으로,이 사용 하기 어려운는 <xref:System.Net.HttpListenerResponse>인스턴스를 템플릿으로.</xref:System.Net.HttpListenerResponse> 및 사용자 지정 템플릿 응답 한 번, 각 응답을 개별적으로 구성 하는 대신, 템플릿 파일에 대 한 응답으로 속성 값을 기반으로 새 응답을 구성 하려면 CopyFrom 메서드를 호출 합니다.       다음 속성을 복사 `templateResponse` 현재 인스턴스에 있습니다.      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "<xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> 복사할 인스턴스입니다."
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "서버에서 반환 된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정 합니다."
  remarks: "날짜 및 응답 시간, 응답 서버 및 응답 본문에 포함 된 데이터의 MIME 형식을의 id와 같은 메타 데이터 정보를 포함 하는 응답 헤더입니다.       응답 헤더의 전체 목록은 참조 하십시오.는 <xref:System.Net.HttpResponseHeader>열거형.</xref:System.Net.HttpResponseHeader>      > [!NOTE] > 콘텐츠 길이가 설정 하려고 하면 유지, 전송, 인코딩 또는 Www-authenticate 헤더 예외가 헤더 속성을 사용 하 여이 throw 됩니다. 사용 된 <xref:System.Net.HttpListenerResponse.KeepAlive%2A>또는 <xref:System.Net.HttpListenerResponse.ContentLength64%2A>이러한 헤더를 설정 하는 속성.</xref:System.Net.HttpListenerResponse.ContentLength64%2A> </xref:System.Net.HttpListenerResponse.KeepAlive%2A> 전송 인코딩 또는 Www-authenticate 헤더를 수동으로 설정할 수 없습니다."
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A <xref:System.Net.WebHeaderCollection>인스턴스 모두 포함 하는 HTTP 헤더 응답에 포함 되도록 명시적으로 설정 합니다.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.WebHeaderCollection>set 작업에 대 한 응답 올바르지 않습니다. 지정 된 인스턴스.</xref:System.Net.WebHeaderCollection>"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "서버에서 영구 연결을 요청 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우 HTTP 클라이언트와 서버 데이터를 교환 하는 짧은 기간에 여러 번, 영구 연결 속도가 통신을 열고 각 메시지에 대 한 TCP 연결을 닫는 데 필요한 오버 헤드를 방지할 수 있으므로 합니다. 영구 연결 최신 웹 브라우저와 웹 서버 간의 통신에 널리 사용에서 됩니다.       영구 연결 RTF 편집기 웹 사이트에서 사용할 수 있는 HTTP/1.1 프로토콜 사양 (RFC 2616)에 대해 자세히 설명 ([http://www.rfc-editor.org](http://www.rfc-editor.org))."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서버에서 영구 연결을 요청 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "가져옵니다는 <xref:System.IO.Stream>응답을 쓸 수 있는 개체입니다.</xref:System.IO.Stream>"
  remarks: "<xref:System.Net.HttpListenerResponse.ContentLength64%2A>반환 된에 쓰기 전에 속성을 명시적으로 설정 해야 <xref:System.IO.Stream>개체입니다.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.ContentLength64%2A>      > [!NOTE] > 요청을 닫으면이 속성에서 반환 된 스트림이 닫히지 않습니다. 스트림이 필요 없는 Close 메서드를 호출 하 여 닫습니다 해야 합니다."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>응답을 쓸 수 있는 개체입니다.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "응답에 사용 된 HTTP 버전을 가져오거나 설정 합니다."
  remarks: "다양 한 HTTP 버전의 기능 http://www.ietf.org에서 사용할 수 있는 문서에 지정 됩니다."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "A <xref:System.Version>클라이언트에 응답할 때 사용 되는 HTTP의 버전을 나타내는 개체입니다.</xref:System.Version> 참고가이 속성은 더 이상 사용 되지 않습니다."
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "설정 작업은 지정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Set 작업에 없는 지정 된 값이 해당 <> </> *> 속성이 1로 설정 있거나 없는 해당 <> </> *> 속성을 0 또는 1로 설정 합니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "지정된 된 URL로 클라이언트를 리디렉션할에 대 한 응답을 구성 합니다."
  remarks: "리디렉션 메서드는 클라이언트는 리소스에 대 한 새 위치로 리디렉션할를 사용 합니다. 이 메서드는 응답의 설정 `Location` 헤더를 `url`, <xref:System.Net.HttpListenerResponse.StatusCode%2A>속성을 <xref:System.Net.HttpStatusCode>, 및 <xref:System.Net.HttpListenerResponse.StatusDescription%2A>속성을 &quot;Found&quot;.</xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "클라이언트가 요청 된 리소스를 찾는 데 사용 해야 하는 URL입니다."
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "HTTP의 값을 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> 이 응답에는 헤더입니다."
  remarks: "`Location` 헤더 요청 된 리소스를 찾는 클라이언트 리디렉션되는 URL을 지정 합니다.      > [!NOTE] > 설정은이 속성이 설정 되지 않습니다는 <xref:System.Net.HttpListenerResponse.StatusCode%2A>속성.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>형태로 클라이언트에 게 보낼 절대 URL을 포함 하는 <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> 헤더.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Set 작업은 빈 문자열에 대해 지정 된 값 (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "응답 청크 분할된 전송 인코딩을 사용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "청크 된 메시지의 본문은 일련의 청크로 구성 됩니다. 각 청크는 두 부분으로 구성 — 청크 데이터와 실제 데이터의 크기입니다. 청크 분할 전송 인코딩을 설정 된 경우 응답을 true로 사용 하 여 보내집니다."
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응답 청크 분할된 전송 인코딩을 사용 하도록 설정 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "추가 하거나 업데이트 한 <xref:System.Net.Cookie>이 응답과 함께 보낸 쿠키의 컬렉션에.</xref:System.Net.Cookie>"
  remarks: "두 개의 쿠키 경우는 동일한 것으로 간주 됩니다 값의 <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, 및 <xref:System.Net.Cookie.Path%2A>속성은 동일 합니다.</xref:System.Net.Cookie.Path%2A> </xref:System.Net.Cookie.Domain%2A> </xref:System.Net.Cookie.Name%2A> 이러한 세 가지 정보가 같으면 메서드는 쿠키를 업데이트 하려고 합니다. 이름 및 도메인 비교 작업 대/소문자를 구분 하지 않습니다. 하지만 경로 비교 시 대/소문자 구분 합니다."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "A <xref:System.Net.Cookie>이 응답에 대 한.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "쿠키는 컬렉션에 이미 있으며를 바꿀 수 없습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "클라이언트에 반환할 HTTP 상태 코드를 가져오거나 설정 합니다."
  remarks: "클라이언트는 계속 하는 방법을 결정 하는 서버에서 반환 된 상태 코드를 사용 합니다. 값이 <xref:System.Net.HttpStatusCode>나타내고 서버 성공적으로 클라이언트의 요청을 처리 한 응답 본문에 요청 된 리소스를 포함 합니다.</xref:System.Net.HttpStatusCode> 다른 일반적인 상태 코드가 포함 <xref:System.Net.HttpStatusCode>, 요청 된 리소스는 서버에서 찾을 수 없는 나타내는 및 <xref:System.Net.HttpStatusCode>, 클라이언트의 캐시 된 복사본이 리소스의 때문에 요청된 된 리소스의 응답 본문에 반환 하는 데 필요한 없음을 나타내는 최신 상태입니다.</xref:System.Net.HttpStatusCode> </xref:System.Net.HttpStatusCode>       가능한 상태 코드 목록은 전체 참조는 <xref:System.Net.HttpStatusCode>열거형.</xref:System.Net.HttpStatusCode>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>요청된 된 리소스에 대 한 HTTP 상태 코드를 지정 하는 값입니다.</xref:System.Int32> 기본값은 <xref:System.Net.HttpStatusCode>, 서버 성공적으로 처리 클라이언트의 요청 고 응답 본문에 요청 된 리소스를 포함 합니다.</xref:System.Net.HttpStatusCode>"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체가 닫혀 있습니다."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Set 작업에 지정 된 값이 잘못 되었습니다. 유효한 값은 100에서 999 까지입니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "클라이언트에 반환 하는 HTTP 상태 코드에 대 한 텍스트 설명을 가져오거나 설정 합니다."
  remarks: "상태 설명에는 일반적으로 설명 하는 세부 정보 제공의 <xref:System.Net.HttpListenerResponse.StatusCode%2A>값.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "클라이언트에 반환 하는 HTTP 상태 코드의 텍스트 설명입니다. 기본값은에 대 한 RFC 2616 설명은 <xref:System.Net.HttpListenerResponse.StatusCode*>속성 값 또는 빈 문자열 (&quot;&quot;)는 RFC 2616 설명 존재 하지 않는 경우.</xref:System.Net.HttpListenerResponse.StatusCode*>"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "설정 작업은 지정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Set 작업에 지정 된 값에 인쇄할 수 없는 문자가 있습니다."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>합니다."
  remarks: "<xref:System.Net.HttpListenerResponse.Close%2A>응답을 보내고 <xref:System.Net.HttpListenerResponse>.</xref:System.Net.HttpListenerResponse> 보유 한 리소스를 해제 하는 메서드</xref:System.Net.HttpListenerResponse.Close%2A> 를 사용 하 여 응답을 삭제 하 고이 인스턴스에서 보유 한 리소스를 해제를 사용는 <xref:System.Net.HttpListenerResponse.Abort%2A>메서드.</xref:System.Net.HttpListenerResponse.Abort%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
