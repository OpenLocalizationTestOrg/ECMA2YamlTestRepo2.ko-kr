### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection
  id: HtmlTableCellCollection
  children:
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  langs:
  - csharp
  name: HtmlTableCellCollection
  nameWithType: HtmlTableCellCollection
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection
  type: Class
  summary: "컬렉션 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 의 단일 행의 셀을 나타내는 개체는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTable&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "HtmlTableCellCollection 클래스를 사용 하 여 프로그래밍 방식으로 컬렉션을 관리 <xref:System.Web.UI.HtmlControls.HtmlTableCell>에 단일 행의 셀을 나타내는 개체는 <xref:System.Web.UI.HtmlControls.HtmlTable>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlTable> </xref:System.Web.UI.HtmlControls.HtmlTableCell> 이 클래스는 추가, 제거 또는 행의 셀의 내용을 수정 하는 데 주로 사용 된 <xref:System.Web.UI.HtmlControls.HtmlTable>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlTable>      > [!NOTE] >는 <xref:System.Web.UI.HtmlControls.HtmlTable>컨트롤에 포함 된 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>속성의 컬렉션을 포함 하는 <xref:System.Web.UI.HtmlControls.HtmlTableRow>개체.</xref:System.Web.UI.HtmlControls.HtmlTableRow> </xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> </xref:System.Web.UI.HtmlControls.HtmlTable> 각 <xref:System.Web.UI.HtmlControls.HtmlTableRow>개체 테이블의 개별 행을 나타냅니다.</xref:System.Web.UI.HtmlControls.HtmlTableRow> <xref:System.Web.UI.HtmlControls.HtmlTableRow>개체에 포함 되어는 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>속성의 컬렉션을 나타내는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>개체.</xref:System.Web.UI.HtmlControls.HtmlTableCell> </xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> </xref:System.Web.UI.HtmlControls.HtmlTableRow> 이러한 개체는 행의 개별 셀을 나타냅니다. 개별 셀을 검색 하려면 먼저 가져온는 <xref:System.Web.UI.HtmlControls.HtmlTableRow>테이블의 셀을 포함 하는 행을 나타내는 개체입니다 (에서 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>의 컬렉션은 <xref:System.Web.UI.HtmlControls.HtmlTable>컨트롤).</xref:System.Web.UI.HtmlControls.HtmlTable> </xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> </xref:System.Web.UI.HtmlControls.HtmlTableRow> 가져올 수 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>행의 셀을 나타내는 개체입니다 (에서 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>의 컬렉션은 <xref:System.Web.UI.HtmlControls.HtmlTableRow>개체).</xref:System.Web.UI.HtmlControls.HtmlTableRow> </xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> </xref:System.Web.UI.HtmlControls.HtmlTableCell>"
  example:
  - "The following code example demonstrates how to dynamically generate the contents of an <xref:System.Web.UI.HtmlControls.HtmlTable> control by adding cells to an HtmlTableCellCollection collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object, is the HtmlTableCellCollection collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_21_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_21_1.aspx)]"
  syntax:
    content: 'public sealed class HtmlTableCellCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  id: Add(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Add(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Add(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체의 끝에는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 사용 하 여 지정 된 추가 <xref:System.Web.UI.HtmlControls.HtmlTableCell>개체의 끝에는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell> 삽입 하려는 경우는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>사용 하 여 컬렉션의 지정된 된 위치에서 개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A>메서드.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> </xref:System.Web.UI.HtmlControls.HtmlTableCell>"
  example:
  - "The following code example demonstrates how to use the Add method to append a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, to the end of an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/d41707e0-0d2f-493c-9f0d-_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/d41707e0-0d2f-493c-9f0d-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 컬렉션에 추가 합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  id: Clear
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HtmlTableCellCollection.Clear()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "모든 제거 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "모든 제거 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.HtmlControls.HtmlTableCell>에서 개체를 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션과 재설정은 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A>속성을 `0`.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> </xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell>      > [!NOTE] >이 메서드는 행에서 셀을 제거 하지만 테이블에서 행을 제거 하지는 않습니다. 테이블에서 행을 제거 하려면도 제거 해야는 <xref:System.Web.UI.HtmlControls.HtmlTableRow>에서 행을 나타내는 개체는 <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>의 컬렉션은 <xref:System.Web.UI.HtmlControls.HtmlTable>컨트롤.</xref:System.Web.UI.HtmlControls.HtmlTable> </xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> </xref:System.Web.UI.HtmlControls.HtmlTableRow>"
  example:
  - "The following code example demonstrates how to use the Clear method to remove all items from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. New entries are then added to the collection and displayed in the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectioncClear#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_6_1.aspx)]\n [!code-vb[HtmlTableCellCollectioncClear#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_6_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HtmlTableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "항목 복사는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 지정 된 컬렉션 &lt;xref:System.Array?displayProperty=fullName&gt;의 지정된 된 인덱스부터는 &lt;xref:System.Array?displayProperty=fullName&gt;합니다."
  remarks: "내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>여 지정 된 컬렉션 <xref:System.Array?displayProperty=fullName>배열의 지정한 인덱스에서 시작 합니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>      > [!NOTE] >는 `array` 매개 변수는&0;부터 시작 <xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName> 이어야 합니다."
  example:
  - "The following code example demonstrates how to use the CopyTo method to create an array that contains the same contents as the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The array is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollectionCopyTo#1](~/add/codesnippet/visualbasic/6c1e488c-8a37-46ed-b81a-_1.aspx)]\n [!code-cs[HtmlTableCellCollectionCopyTo#1](~/add/codesnippet/csharp/6c1e488c-8a37-46ed-b81a-_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 인덱스 &lt;xref:System.Array?displayProperty=fullName&gt; 항목을 받도록 합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  id: Count
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Count
  nameWithType: HtmlTableCellCollection.Count
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "개수를 가져옵니다 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "Count 속성을 사용 하 여에 포함 된 셀의 수를 확인 하 고 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> Count 속성 컬렉션을 반복 하는 경우의 상한을 결정 하려면 일반적으로 사용 됩니다."
  example:
  - "The following code example demonstrates how to use the Count property to determine the number of cells in a row of the <xref:System.Web.UI.HtmlControls.HtmlTable> control. This value is then used as the upper bound of a loop to iterate through the cells of a row in the table.  \n  \n [!code-vb[HtmlTableCellCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_35_1.aspx)]\n [!code-cs[HtmlTableCellCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_35_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HtmlTableCellCollection.GetEnumerator()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "반환 된 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;-구현 모두 포함 하는 개체 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션."
  remarks: "이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=fullName>-구현에서 각 항목의 콘텐츠를 검색 하 반복할 수 있는 개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Collections.IEnumerator?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>초기 위치에 열거자를 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] >는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>만든 후에 메서드를 호출 해야는 <xref:System.Collections.IEnumerator?displayProperty=fullName>-구현 개체를 사용한 후 또는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName>-implemented object. The object is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollectionienumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_29_1.aspx)]\n [!code-cs[HtmlTableCellCollectionienumerator#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_29_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;-구현 모두 포함 하는 개체 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  id: Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Insert(Int32,HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체의 지정한 인덱스 위치는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "Insert 메서드를 사용 하 여 지정 된 추가 <xref:System.Web.UI.HtmlControls.HtmlTableCell>개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션 내의 지정한 인덱스에.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell> 단순히 추가 하려는 경우는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>개체를 사용 하 여 컬렉션의 끝에서 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A>메서드.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> </xref:System.Web.UI.HtmlControls.HtmlTableCell>"
  example:
  - "The following code example demonstrates how to use the Insert method to dynamically insert a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, in an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-cs[HtmlTableCellCollectionInsert#1](~/add/codesnippet/csharp/8541af04-8379-4426-8973-_1.aspx)]\n [!code-vb[HtmlTableCellCollectionInsert#1](~/add/codesnippet/visualbasic/8541af04-8379-4426-8973-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: index
      type: System.Int32
      description: "위치는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 를 추가할는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref>합니다."
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "The <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to add to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션은 읽기 전용입니다."
  remarks: "이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>모든 경우에에서 컬렉션에 쓸 수 있습니다.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션이 동기화 되어 스레드로부터 안전 하 게 보호 합니다."
  remarks: "이 속성에서 파생 된 <xref:System.Collections.ICollection?displayProperty=fullName>항상 반환 하도록 재정의 하 고 `false` 대 한 액세스를 나타내기 위해는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션 (스레드로부터 안전 하지) 동기화 되지 됩니다.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한 액세스가 나타냅니다는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> (스레드로부터 안전 하지) 동기화 되지 않습니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HtmlTableCellCollection.Item(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 인덱서를 사용 하 여 가져오려는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>에서 개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell> 에 액세스할 수 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>단순 배열 표기법을 사용 하 여 지정된 된 인덱스에는 개체입니다.</xref:System.Web.UI.HtmlControls.HtmlTableCell>      > [!NOTE] > 따라서 컬렉션의 첫 번째 요소 인덱스 값이 나와 있습니다; 컬렉션은&0;부터 시작 `0`합니다."
  example:
  - "The following code example demonstrates how to use the indexer to retrieve a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The cell is then updated with new content. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_79_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_79_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "지정 하는 서 수 인덱스 값은 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 돌아갑니다."
    return:
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 에 포함 된 셀을 나타내는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  id: Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Remove(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Remove(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 사용 하 여 지정 된 제거 <xref:System.Web.UI.HtmlControls.HtmlTableCell>에서 개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell>      > [!NOTE] > 지정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>에 존재 하지 않는 개체는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션 항목이 컬렉션에서 제거 됩니다.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove the specified cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectionRemove#1](~/add/codesnippet/csharp/45baa1b7-4804-4e79-afd4-_1.aspx)]\n [!code-vb[HtmlTableCellCollectionRemove#1](~/add/codesnippet/visualbasic/45baa1b7-4804-4e79-afd4-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "<xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 에서 제거 하 고 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HtmlTableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "제거는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.HtmlControls.HtmlTableCell>개체에서 지정 된 인덱스는 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>컬렉션.</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> </xref:System.Web.UI.HtmlControls.HtmlTableCell> 인덱스 번호는&0;부터 시작 합니다. 따라서 컬렉션의 첫 번째 항목에는 인덱스 값 `0`합니다.      > [!NOTE] > 인덱스 값의 범위 밖에 있는 인덱스를 지정 하는 경우 예외가 발생 합니다."
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove the item at the specified index from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_5_1.aspx)]\n [!code-vb[HtmlTableCellCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_5_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;> </xref> 에서 제거 하 고 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref>합니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 인덱스는 컬렉션의 인덱스 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;> </xref> 컬렉션입니다."
  remarks: "<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>클래스</xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> 의 현재 인스턴스가이 구현에서 반환 되는 개체       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Add(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Add(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCell
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlTableCell
  nameWithType: HtmlTableCell
  fullName: System.Web.UI.HtmlControls.HtmlTableCell
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Clear()
  nameWithType: HtmlTableCellCollection.Clear()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear()
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HtmlTableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Count
  nameWithType: HtmlTableCellCollection.Count
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HtmlTableCellCollection.GetEnumerator()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Insert(Int32,HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: HtmlTableCellCollection.Item(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(Int32)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Remove(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Remove(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HtmlTableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(Int32)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Add
  nameWithType: HtmlTableCellCollection.Add
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Clear
  nameWithType: HtmlTableCellCollection.Clear
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: HtmlTableCellCollection.CopyTo
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Count
  nameWithType: HtmlTableCellCollection.Count
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HtmlTableCellCollection.GetEnumerator
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Insert
  nameWithType: HtmlTableCellCollection.Insert
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Item
  nameWithType: HtmlTableCellCollection.Item
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Remove
  nameWithType: HtmlTableCellCollection.Remove
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: HtmlTableCellCollection.RemoveAt
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
