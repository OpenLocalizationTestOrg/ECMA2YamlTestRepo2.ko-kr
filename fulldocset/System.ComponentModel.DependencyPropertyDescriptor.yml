### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DependencyPropertyDescriptor
  id: DependencyPropertyDescriptor
  children:
  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.Attributes
  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.Category
  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  - System.ComponentModel.DependencyPropertyDescriptor.Converter
  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  - System.ComponentModel.DependencyPropertyDescriptor.Description
  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  - System.ComponentModel.DependencyPropertyDescriptor.Metadata
  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  - System.ComponentModel.DependencyPropertyDescriptor.ToString
  langs:
  - csharp
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
  type: Class
  summary: "확장을 제공 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 종속성 속성의 추가 속성 특징에 대해 설명 하 합니다."
  remarks: "이 클래스는 디자이너 응용 프로그램에서 주로 사용 됩니다. 이러한 응용 프로그램 속성 창이 나 속성 값 편집에 사용 되는 다른 도구를 통해 종속성 속성의 특징을 보고 해야 합니다.       역할을 사용할 수 있는 DependencyPropertyDescriptor 되었는지 확인 하려면 특정 속성을 확인 하기 위해는 <xref:System.ComponentModel.PropertyDescriptor>, 호출 <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, 또는 <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>.</xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName> </xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor> 두 방법 중 하나를 반환 하는 경우 `null`, 해당 속성은 종속성 속성 없습니다. 메서드가 유효한 DependencyPropertyDescriptor 반환 하는 경우 속성은 종속성 속성입니다."
  syntax:
    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  - System.ComponentModel.PropertyDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)
  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.PropertyDescriptor.GetChildProperties
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])
  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)
  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)
  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)
  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)
  - System.ComponentModel.PropertyDescriptor.SerializationVisibility
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  id: AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "다른 개체를를이 속성이 변경 될 때 알림을 받을 수 있습니다."
  syntax:
    content: public override void AddValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "에 대 한 처리기를 추가 구성 요소입니다."
    - id: handler
      type: System.EventHandler
      description: "수신기로 추가 하는 대리자입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 멤버에 대 한 특성의 컬렉션을 가져옵니다."
  syntax:
    content: public override System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> 특성의 컬렉션입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  id: CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "개체를 다시 설정 하면 해당 값 변경 되는지 여부를 반환 합니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override bool CanResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "재설정 기능에 대 한 테스트 구성 요소입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>구성 요소를 다시 설정 하는 경우 해당 값이 변경 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  id: Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "멤버가 속한 범주의 이름을 가져옵니다에 지정 된 대로 <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Category { get; }
    return:
      type: System.String
      description: "멤버가 속한 범주의 이름입니다. 없는 경우 없는 <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, 기본 범주에 범주 이름이 설정 되어 <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성에 바인딩된 구성의 유형을 가져옵니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override Type ComponentType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>이 속성이 바인딩되는 구성 요소의 형식을 나타내는.</xref:System.Type> 때 <> </> *> 또는 <> </> *>은 호출, 지정 된 개체 수 있습니다 이러한 형식의 인스턴스."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  id: Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성에 대 한 형식 변환기를 가져옵니다."
  remarks: "이 속성 못할 `null` 경우에서 여기서 특성을 사용 <xref:System.ComponentModel.TypeConverter>하지 공용 클래스입니다.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public override System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> 변환 하기 위해 사용 되는 <xref:System.Type>이 속성의.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  id: DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "종속성 속성 식별자를 반환합니다."
  remarks: "이 속성 못할 `null` 경우는 <xref:System.ComponentModel.DependencyPropertyDescriptor>속성을 종속성 속성에 대 한 인스턴스를 만들었습니다.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "종속성 속성 식별자입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  id: Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "에 지정 된 멤버에 대 한 설명을 가져옵니다는 <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string Description { get; }
    return:
      type: System.String
      description: "멤버의 설명입니다. 없는 경우 없는 <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, 속성 값이 빈 문자열인 기본값으로 설정 (&quot;&quot;)."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  id: DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "종속성 속성 값이 종속성 속성 엔진에 저장 되기 전에 종속성 속성의 유효 값을 수정 하려면 디자이너를 사용 하는 콜백을 가져오거나 설정 합니다."
  syntax:
    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }
    return:
      type: System.Windows.CoerceValueCallback
      description: "디자이너에 종속성 속성 값이 종속성 속성 엔진에 저장 되기 전에 종속성 속성의 유효 값을 수정 하는 데 사용 하는 콜백."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 멤버에 지정 된 대로 디자인 타임에만 설정 해야 하는지 여부를 가져옵니다는 <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 멤버는 디자인 타임에만 설정 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 멤버는 런타임에 설정할 수 있는 경우. 없는 경우 없는 <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>, 반환 값이 기본값 즉 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "속성 창 등의 창에 표시 될 수 있는 이름을 가져옵니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override string DisplayName { get; }
    return:
      type: System.String
      description: "속성에 대해 표시할 이름입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "두 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 인스턴스가 같은지 여부."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 현재 인스턴스와 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>값이 동일 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  id: FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 제공된 된 속성 이름에 대 한 합니다."
  remarks: "`name` 종속성 속성 또는 연결된 된 속성을 참조할 수 있으며이 `name` 에 전달 된 매개 변수는 <xref:System.Windows.DependencyProperty.Register%2A>또는 <xref:System.Windows.DependencyProperty.RegisterAttached%2A>해당 속성에 정의 된 호출.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`다시으로 속성을 소유 하 고 있는 개체의 형식 <xref:System.Windows.DependencyProperty.Register%2A>또는 <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> 에 전달 된 `targetType`속성을 설정 하려는 개체의 유형이입니다. 종속성 속성에 대 한 `ownerType` 및 `targetType` 동일한 형식이 있습니다. 연결 된 속성에 대 한 일반적으로 다릅니다."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);
    parameters:
    - id: name
      type: System.String
      description: "종속성 속성 또는 연결된 된 속성의 등록 된 이름입니다."
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>속성 정의 소유 하는 개체입니다.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>속성 >for 설정 하려는 개체의</xref:System.Type>"
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "요청 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  id: FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 제공된 된 속성 이름에 대 한 합니다."
  remarks: "`name` 종속성 속성 또는 연결된 된 속성을 참조할 수 있으며이 `name` 에 전달 된 매개 변수는 <xref:System.Windows.DependencyProperty.Register%2A>또는 <xref:System.Windows.DependencyProperty.RegisterAttached%2A>해당 속성에 정의 된 호출.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> `ownerType`다시으로 속성을 소유 하 고 있는 개체의 형식 <xref:System.Windows.DependencyProperty.Register%2A>또는 <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</xref:System.Windows.DependencyProperty.RegisterAttached%2A> </xref:System.Windows.DependencyProperty.Register%2A> 에 전달 된 `targetType`속성을 설정 하려는 개체의 유형이입니다. 종속성 속성에 대 한 `ownerType` 및 `targetType` 동일한 형식이 있습니다. 연결 된 속성에 대 한 일반적으로 다릅니다."
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);
    parameters:
    - id: name
      type: System.String
      description: "종속성 속성 또는 연결된 된 속성의 등록 된 이름입니다."
    - id: ownerType
      type: System.Type
      description: "<xref:System.Type>속성 정의 소유 하는 개체입니다.</xref:System.Type>"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>속성 >for 설정 하려는 개체의</xref:System.Type>"
    - id: ignorePropertyType
      type: System.Boolean
      description: "속성 형식을 무시 하도록 지정 합니다."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "요청 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  id: FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 제공에 대 한 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>합니다."
  remarks: "이 메서드는 한 <xref:System.ComponentModel.DependencyPropertyDescriptor>모든 속성에 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 을 확인 하 여 기준</xref:System.ComponentModel.DependencyPropertyDescriptor> 얻으려고 디자이너 응용 프로그램에서 사용 되는 기본 방법"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 확인 합니다."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "속성에 설명 하는 경우 <code> property </code> 속성은 종속성 속성을 유효한 반환 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>합니다. 그렇지 않으면 반환 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  id: FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 제공 된 종속성 속성 및 대상 유형에 대 한 합니다."
  remarks: "`dependencyProperty` 종속성 속성 또는 연결된 된 속성을 참조할 수 있습니다. `targetType`속성을 설정 하려는 개체의 유형이입니다. 형식에 해당 하는 종속성 속성에 대 한는 <xref:System.Windows.DependencyProperty.OwnerType%2A>에 대 한는 `dependencyProperty`.</xref:System.Windows.DependencyProperty.OwnerType%2A> 연결 된 속성에 대 한는 `targetType` 는 일반적으로 다른 <xref:System.Windows.DependencyObject>유형.</xref:System.Windows.DependencyObject>"
  syntax:
    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);
    parameters:
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "종속성 속성의 식별자입니다."
    - id: targetType
      type: System.Type
      description: "속성이 설정 되어 있는 개체의 형식입니다."
    return:
      type: System.ComponentModel.DependencyPropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref> 제공된 된 종속성 속성에 대 한 합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  id: GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "반환 된 <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>합니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);
    parameters:
    - id: instance
      type: System.Object
      description: "속성을 가져올 구성 요소입니다."
    - id: filter
      type: System.Attribute[]
      description: "형식의 배열 <xref:System.Attribute>필터로 사용할.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 지정된 된 구성 요소에 대 한 지정된 된 특성과 일치 하는 속성이 있습니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "지정 된 형식의 편집기를 가져옵니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "속성이 지 원하는 여러 명의 편집기 사이 구분 하는 데 사용 되는 편집기의 기본 형식입니다."
    return:
      type: System.Object
      description: "요청 된 편집기 형식의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 편집기를 찾을 수 없는 경우."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.ComponentModel.DependencyPropertyDescriptor&quot;> </xref>합니다."
  remarks: "에 대 한 해시 코드 <xref:System.ComponentModel.DependencyPropertyDescriptor>종속성 속성의 식별자와 설정 된 형식에 기반 합니다.</xref:System.ComponentModel.DependencyPropertyDescriptor> 다를 <xref:System.ComponentModel.DependencyPropertyDescriptor>부적절 하 게 많은 가능한 파생된 클래스에서 상속 하는 속성 또는 속성에 속성 시스템을 통해 다시 할당 되는 동일한 해시 코드를 반환 하지 않습니다.</xref:System.ComponentModel.DependencyPropertyDescriptor>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 해시 코드입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Resturns는 구성 요소에서 속성의 현재 값입니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override object GetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "구성 요소 인스턴스입니다."
    return:
      type: System.Object
      description: "요청 된 값입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  id: IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "속성이 연결된 된 속성으로 등록 하 고 연결된 된 사용을 통해 사용 되는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성이 연결된 된 속성; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "값을 나타내는 값을 가져옵니다는 <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> 속성에 있습니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref> 고, 그러지 않으면 속성에 지정 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  id: IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성 지역화 해야 하는지 여부를 나타내는 값을 가져옵니다에 지정 된 대로 <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool IsLocalizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>멤버가 표시 되는 <xref href=&quot;System.ComponentModel.LocalizableAttribute&quot;> </xref> 값의 생성자 true, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>       읽기 전용으로 특정 메서드 호출을 사용 하 여 종속성 속성을 등록 하 고 일반적으로는 [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] 리플렉션 및 설명자를 통해 표시 되는 읽기 전용으로 설정 해야 합니다. 그러나이 규칙 및 컴파일하는 데 요구 사항이 아니라 이므로 다시 종속성 속성 식별자의 읽기 전용 상태를 확인 하는 것이 좋습니다. 이렇게 하려면 식별자를 가져올 (<xref:System.Windows.DependencyProperty>)에 대해 값이 <xref:System.ComponentModel.DependencyPropertyDescriptor>다음 <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</xref:System.Windows.DependencyProperty.ReadOnly%2A> 의 값을 확인 하 고</xref:System.ComponentModel.DependencyPropertyDescriptor> </xref:System.Windows.DependencyProperty> <xref:System.Windows.DependencyProperty.ReadOnly%2A>하지 메타 데이터 식별자 자체에.</xref:System.Windows.DependencyProperty.ReadOnly%2A>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성이 읽기 전용 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  id: Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "종속성 속성과 연결 된 메타 데이터를 가져옵니다."
  remarks: "값일 수 `null` 메타 데이터가 아니면는 속성은 종속성 속성이 아닙니다.       개념에 대해 일치 하는 메타 데이터 [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] 특성에서 특성으로 다시 노출 됩니다는 <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>컬렉션.</xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>"
  syntax:
    content: public System.Windows.PropertyMetadata Metadata { get; }
    return:
      type: System.Windows.PropertyMetadata
      description: "종속성 속성 메타 데이터입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  id: PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "표시 되는 가져옵니다 <xref:System.Type>종속성 속성의.</xref:System.Type>"
  remarks: "이 속성은 반환 된 <xref:System.Type>종속성 속성에 등록 되었습니다.</xref:System.Type>"
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>종속성 속성의.</xref:System.Type>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  id: RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "다른 개체를를이 속성이 변경 될 때 알림을 받을 수 있습니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override void RemoveValueChanged (object component, EventHandler handler);
    parameters:
    - id: component
      type: System.Object
      description: "에 대 한 처리기를 추가 구성 요소입니다."
    - id: handler
      type: System.EventHandler
      description: "수신기로 추가 하는 대리자입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  id: ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성의 구성 요소에 대 한 값을 기본값으로 다시 설정합니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override void ResetValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "기본값으로 다시 설정할 속성 값과 구성 요소입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "구성 요소 값을 다른 값으로 설정합니다."
  remarks: "이 방법은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> 에 의존"
  syntax:
    content: public override void SetValue (object component, object value);
    parameters:
    - id: component
      type: System.Object
      description: "설정할 속성 값과 구성 요소입니다."
    - id: value
      type: System.Object
      description: "새 값입니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  id: ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 속성의 값을 직렬화 프로세스를 통해 지속 되어야 하는지 여부를 나타냅니다."
  syntax:
    content: public override bool ShouldSerializeValue (object component);
    parameters:
    - id: component
      type: System.Object
      description: "검사 하 여 지 속성에 대 한 속성으로 구성 요소입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성을 유지 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  id: SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "여부 에서만 발생 <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*> 에 대 한 직접 호출에서 또는 여부이 속성에 대 한 값 변경 알림이 외부에서 발생 속성 설명자와 같은 구성 요소 자체를 나타냅니다."
  remarks: "예를 들어는 `true` 경우 구성 요소를 구현할 수 있습니다는 <xref:System.ComponentModel.INotifyPropertyChanged>인터페이스, 또는 명시적 있을 수 있습니다 `propertyName``Changed` 이 속성에 대 한 이벤트.</xref:System.ComponentModel.INotifyPropertyChanged>       이 속성은 기본 <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public override bool SupportsChangeEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우이 속성에 대 한 알림 외부에서 발생 된 속성 설명자와 같은 구성 요소 자체입니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref><xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.</xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*> 에 대 한 직접 호출에서 에서만 발생 하는 경우"
  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  id: ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  langs:
  - csharp
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "이 인스턴스의 값을 해당 하는 문자열 표현으로 변환합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "반환 된 <xref:System.ComponentModel.MemberDescriptor.Name*>값.</xref:System.ComponentModel.MemberDescriptor.Name*>"
  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.PropertyDescriptor
  isExternal: false
  name: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyDescriptor.Equals(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: DependencyPropertyDescriptor
  nameWithType: DependencyPropertyDescriptor
  fullName: System.ComponentModel.DependencyPropertyDescriptor
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName(String,Type,Type,Boolean)
  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(PropertyDescriptor)
  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty(DependencyProperty,Type)
  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties(Object,Attribute[])
  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyDescriptor.GetHashCode()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue(Object)
  nameWithType: DependencyPropertyDescriptor.GetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged(Object,EventHandler)
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue(Object)
  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue(Object)
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString()
  nameWithType: DependencyPropertyDescriptor.ToString()
  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()
- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: AddValueChanged
  nameWithType: DependencyPropertyDescriptor.AddValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Attributes
  nameWithType: DependencyPropertyDescriptor.Attributes
- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: CanResetValue
  nameWithType: DependencyPropertyDescriptor.CanResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Category
  nameWithType: DependencyPropertyDescriptor.Category
- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: DependencyPropertyDescriptor.ComponentType
- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Converter
  nameWithType: DependencyPropertyDescriptor.Converter
- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyDescriptor.DependencyProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Description
  nameWithType: DependencyPropertyDescriptor.Description
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignerCoerceValueCallback
  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback
- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: DependencyPropertyDescriptor.DisplayName
- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyDescriptor.Equals
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromName
  nameWithType: DependencyPropertyDescriptor.FromName
- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: FromProperty
  nameWithType: DependencyPropertyDescriptor.FromProperty
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetChildProperties
  nameWithType: DependencyPropertyDescriptor.GetChildProperties
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: DependencyPropertyDescriptor.GetEditor
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyDescriptor.GetHashCode
- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: GetValue
  nameWithType: DependencyPropertyDescriptor.GetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsAttached
  nameWithType: DependencyPropertyDescriptor.IsAttached
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: DependencyPropertyDescriptor.IsBrowsable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsLocalizable
  nameWithType: DependencyPropertyDescriptor.IsLocalizable
- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: IsReadOnly
  nameWithType: DependencyPropertyDescriptor.IsReadOnly
- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: Metadata
  nameWithType: DependencyPropertyDescriptor.Metadata
- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: PropertyType
  nameWithType: DependencyPropertyDescriptor.PropertyType
- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: RemoveValueChanged
  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged
- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ResetValue
  nameWithType: DependencyPropertyDescriptor.ResetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SetValue
  nameWithType: DependencyPropertyDescriptor.SetValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ShouldSerializeValue
  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue
- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: SupportsChangeEvents
  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents
- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*
  parent: System.ComponentModel.DependencyPropertyDescriptor
  isExternal: false
  name: ToString
  nameWithType: DependencyPropertyDescriptor.ToString
