### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchive
  id: ZipArchive
  children:
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipArchive.Dispose
  - System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  - System.IO.Compression.ZipArchive.Entries
  - System.IO.Compression.ZipArchive.GetEntry(System.String)
  - System.IO.Compression.ZipArchive.Mode
  langs:
  - csharp
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
  summary: "Zip 보관 파일 형식으로 압축 된 파일의 패키지를 나타냅니다."
  remarks: "The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, ZipArchive, and <xref:System.IO.Compression.ZipArchiveEntry>.  \n  \n|To|Use|  \n|--------|---------|  \n|Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  \n|Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  \n|Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  \n|Retrieve a file from a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  \n|Retrieve all the files from a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  \n|Open a stream to a single file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  \n|Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  \n  \n When you create a new entry, the file is compressed and added to the zip package. The <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method enables you to specify a directory hierarchy when adding the entry. You include the relative path of the new entry within the zip package. For example, creating a new entry with a relative path of `AddedFolder\\NewFile.txt` creates a compressed text file in a directory named AddedFolder.  \n  \n If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access three extension methods (from the <xref:System.IO.Compression.ZipFileExtensions> class) for the ZipArchive class: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, and <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>. These extension methods enable you to compress and decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can compress and decompress files by using the <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream> class, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkID=246357) and [Decompressor](http://go.microsoft.com/fwlink/p/?LinkID=246358)."
  example:
  - "The first example shows how to create a new entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_1.vb)]  \n  \n The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._1_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_2.vb)]  \n  \n The third example shows how to use extension methods to create a new entry in a zip archive from an existing file and extract the archive contents. You must reference the `System.IO.Compression.FileSystem` assembly to execute the code.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._1_3.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._1_3.vb)]"
  syntax:
    content: 'public class ZipArchive : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 지정 된 스트림에서 클래스입니다."
  syntax:
    content: public ZipArchive (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "읽을 보관 저장소가 포함 된 스트림."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 이미 닫혀 있거나 읽기를 지원 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "스트림의 내용을 zip 보관 파일 형식에 없는 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 클래스 지정 된 스트림에서 지정 된 모드를 사용 합니다."
  remarks: "경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 읽기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 쓰기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 읽기, 쓰기 및 검색 스트림을 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode>"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "입력 또는 출력 스트림."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "Zip 보관 파일을 읽을 만들거나 항목을 업데이트 사용 되는지 여부를 나타내는 열거형 값 중 하나입니다."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 이미 닫혀 또는 스트림의 기능과 모드는 일치 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값이입니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 보관 파일로 스트림의 내용을 해석할 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목이 보관에서 누락 또는 손상 되어 읽을 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목은 너무 커서 메모리에 적합 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 에 지정 된 모드와 필요에 따라 스트림의 연 상태로 둘에 대 한 지정된 된 스트림 클래스입니다."
  remarks: "경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 읽기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 쓰기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 읽기, 쓰기 및 검색 스트림을 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode>"
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "입력 또는 출력 스트림."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "Zip 보관 파일을 읽을 만들거나 항목을 업데이트 사용 되는지 여부를 나타내는 열거형 값 중 하나입니다."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스트림 후 열어 두려면는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 개체가 고, 그렇지 않으면 삭제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 이미 닫혀 또는 스트림의 기능과 모드는 일치 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값이입니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 보관 파일로 스트림의 내용을 해석할 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목이 보관에서 누락 또는 손상 되어 읽을 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목은 너무 커서 메모리에 적합 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 클래스는 지정 된 스트림에서 지정된 된 모드에 대 한 항목 이름에 대해 지정 된 인코딩을 사용 하 여 및 필요에 따라 스트림의 열어 둡니다."
  remarks: "경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 읽기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 스트림이 쓰기를 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode> 경우는 `mode` 로 설정 된 <xref:System.IO.Compression.ZipArchiveMode>, 읽기, 쓰기 및 검색 스트림을 지원 해야 합니다.</xref:System.IO.Compression.ZipArchiveMode>       읽기 위해 zip 보관 파일을 열 때 및 `entryNameEncoding` 로 설정 되어 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-현재 시스템 기본 코드 페이지 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)을 설정 하지 않으면 언어 항목 이름을 디코딩하는 데 사용 됩니다.      -언어 인코딩 플래그가 설정 된 경우에 u t F-8 항목 이름을 디코딩 하기 위한 사용 됩니다.       읽기 위해 zip 보관 파일을 열 때 및 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-언어 인코딩 플래그를 설정 하지 않으면 지정 된 경우 `entryNameEncoding` 항목 이름을 디코딩하는 데 사용 됩니다.      -언어 인코딩 플래그가 설정 된 경우에 u t F-8 항목 이름을 디코딩 하기 위한 사용 됩니다.       보관 파일을 작성 하는 경우 및 `entryNameEncoding` 로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 인코딩됩니다:-항목에 대 한 외부 ASCII 문자가 포함 된 이름을 범위로 언어 인코딩 플래그를 설정 하 고 항목 이름은 u t F-8을 사용 하 여 인코딩됩니다.      -ASCII 문자만 포함 된 항목 이름에 대 한 언어 인코딩 플래그를 설정 하지 않으면 및 항목 이름은 현재 시스템 기본 코드 페이지를 사용 하 여 인코딩됩니다.       보관 파일을 작성 하는 경우 및 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 지정 된 `entryNameEncoding` 바이트에 항목 이름 인코딩하는 데 사용 됩니다. 언어 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)에 지정 된 인코딩의 인코딩을 u t F-8 인 경우에 설정 됩니다."
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "입력 또는 출력 스트림."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "Zip 보관 파일을 읽을 만들거나 항목을 업데이트 사용 되는지 여부를 나타내는 열거형 값 중 하나입니다."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스트림 후 열어 두려면는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 개체가 고, 그렇지 않으면 삭제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "읽을 때 사용할 인코딩을 또는 항목 이름이 보관이 파일에 작성 합니다. 인코딩이 zip 보관 도구 및 라이브러리 지원 하지 않는 utf-8 인코딩이 항목 이름에 대 한 상호 운용성을 위해 필요할 경우에이 매개 변수의 값을 지정 합니다."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "스트림이 이미 닫혀 또는 스트림의 기능과 모드는 일치 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값이입니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 보관 파일로 스트림의 내용을 해석할 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목이 보관에서 누락 또는 손상 되어 읽을 수 없습니다.       -또는- <code> mode </code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 및 항목은 너무 커서 메모리에 적합 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  id: CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 지정된 된 경로 및 항목 이름을 가진 빈 항목을 만듭니다."
  remarks: "`entryName` 문자열 zip 보관 파일 내에서 만들 항목의 상대 경로 반영 해야 합니다. 사용자가 제공한 문자열에 대 한 제한은 없습니다. 그러나이 파일의 형식은 상대 경로, 항목 만들어지기는 하지만 zip 보관 파일의 내용을 추출 하는 경우 예외가 발생할 수 있습니다. 지정 된 경로 및 이름을 가진 항목이 이미 보관 되어 있는, 두 번째 항목은 동일한 이름과 경로 만들어집니다.       값은 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>새 항목에 대 한 속성은 현재 시간으로 설정 됩니다.</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 항목은 기본 압축 알고리즘의 기본 압축 수준을 사용 하 여 압축 됩니다. 사용 하 여 다른 압축 수준을 지정 하려면는 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>메서드.</xref:System.IO.Compression.ZipArchive.CreateEntry%2A>"
  example:
  - "The following example shows how to create an entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._1_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "만들 항목의 이름을 지정 하는, 보관 저장소의 루트에 상대적인 경로입니다."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip 보관 파일의 빈 항목입니다."
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 보관 파일에서 쓰기를 지원 하지 않습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 보관 파일이 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 지정 된 항목 이름 및 압축 수준을 가진 빈 항목을 만듭니다."
  remarks: "`entryName` 문자열 zip 보관 파일 내에서 만들 항목의 상대 경로 반영 해야 합니다. 사용자가 제공한 문자열에 대 한 제한은 없습니다. 그러나이 파일의 형식은 상대 경로, 항목 만들어지기는 하지만 zip 보관 파일의 내용을 추출 하는 경우 예외가 발생할 수 있습니다. 보관 파일에 지정 된 이름 가진 엔터티가 이미 같은 이름의 두 번째 항목이 만들어집니다.       값은 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>새 항목에 대 한 속성은 현재 시간으로 설정 됩니다.</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 설정의 `compressionLevel` 매개 변수를 <xref:System.IO.Compression.CompressionLevel>하려는 파일 압축을 가능한 한 경우.</xref:System.IO.Compression.CompressionLevel> 설정의 `compressionLevel` 매개 변수를 <xref:System.IO.Compression.CompressionLevel>에서 압축 작업 시나리오에 대해 신속 하 게 완료 됩니다 되지 우려되는 경우에.</xref:System.IO.Compression.CompressionLevel>"
  example:
  - "The following example shows how to create an entry with the optimal compression level. It also writes to the new entry by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/csharp/356fbc42-2094-4738-b1de-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/visualbasic/356fbc42-2094-4738-b1de-_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: entryName
      type: System.String
      description: "만들 항목의 이름을 지정 하는, 보관 저장소의 루트에 상대적인 경로입니다."
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "항목을 만들 때 속도 또는 압축 효율을 강조할 지를 나타내는 열거형 값 중 하나입니다."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip 보관 파일의 빈 항목입니다."
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 보관 파일에서 쓰기를 지원 하지 않습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 보관 파일이 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose
  id: Dispose
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "현재 인스턴스에서 사용 하는 리소스를 해제는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 클래스입니다."
  remarks: "이 메서드는 보관 파일을 작성 완료 되 고 사용 하는 모든 리소스를 해제는 <xref:System.IO.Compression.ZipArchive>개체입니다.</xref:System.IO.Compression.ZipArchive> 사용 하 여 개체를 생성 하지 않는 한는 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>생성자 오버 로드 하 고 집합의 `leaveOpen` 매개 변수를 `true`, 모든 기본 스트림이 닫혀 있고 후속 쓰기 작업을 위해 더 이상 사용할 수는.</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>       이 인스턴스를 사용 하 여 작업을 마쳤으면 <xref:System.IO.Compression.ZipArchive>,이 인스턴스에 사용 되는 모든 리소스를 해제는 Dispose를 호출 합니다.</xref:System.IO.Compression.ZipArchive> 이에 대 한 추가 참조를 제거 해야 <xref:System.IO.Compression.ZipArchive>가비지 수집기가 종료에 대 한 활성 상태로 유지 하지 않고 인스턴스의 메모리를 회수할 수 있도록 인스턴스.</xref:System.IO.Compression.ZipArchive>       호출 dispose는 <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>관리 및 관리 되지 않는 리소스를 해제 하는 코드를 포함 하는 메서드에.</xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> 자세한 내용은 다음을 참조 합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "에 의해 호출 된 <xref href=&quot;System.IO.Compression.ZipArchive.Dispose&quot;> </xref> 및 <xref:System.Object.Finalize>의 현재 인스턴스에서 사용 하는 관리 되지 않는 리소스를 해제 하는 메서드는 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref> 클래스를 필요에 따라 보관 파일을 작성 하는 완료 되 고 관리 되는 리소스를 해제 합니다.</xref:System.Object.Finalize>"
  remarks: "경우 `disposing` 로 설정 된 `true`, 사용 하 여 개체를 생성 하지 않는 한 모든 기본 스트림이 닫혀 있고 후속 쓰기 작업을 위해 더 이상 사용할 수는 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>생성자 오버 로드 하 고 집합의 `leaveOpen` 매개 변수를 `true`.</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>       공개적으로만이 메서드는 <xref:System.IO.Compression.ZipArchive.Dispose>및 <xref:System.Object.Finalize>방식의이 메서드를 직접 호출 하지 않습니다.</xref:System.Object.Finalize> </xref:System.IO.Compression.ZipArchive.Dispose>       Dispose 메서드의 부울 매개 변수 다음과 같이 사용 될 dispose 패턴을 구현 하는 경우:- <xref:System.IO.Compression.ZipArchive.Dispose>현재 개체의 메서드 설정 부울 매개 변수와 함께 Dispose를 호출 해야 `true` 와 관리 되지 않는 리소스를 해제 합니다.</xref:System.IO.Compression.ZipArchive.Dispose>      - <xref:System.Object.Finalize>현재 개체의 메서드 설정 부울 매개 변수와 함께 Dispose를 호출 해야 `false` 만 관리 되지 않는 리소스를 해제 합니다.</xref:System.Object.Finalize>       자세한 내용은 다음을 참조 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 마치고 보관 파일을 작성 하 고 관리 되는 관리 되지 않는 리소스만 해제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Entries
  id: Entries
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "현재 zip 보관 파일에 있는 항목의 컬렉션을 가져옵니다."
  remarks: "항목 속성을 사용 하 여 항목의 전체 컬렉션을 검색할 수 있습니다. 사용 하 여는 <xref:System.IO.Compression.ZipArchive.GetEntry%2A>이름별 단일 항목을 검색 하는 메서드입니다.</xref:System.IO.Compression.ZipArchive.GetEntry%2A>"
  example:
  - "The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._5_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry> Entries { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
      description: "현재 zip 보관 파일에 있는 항목의 컬렉션입니다."
  overload: System.IO.Compression.ZipArchive.Entries*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 보관 파일에서 읽기를 지원 하지 않습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 보관 파일이 삭제 되었습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 보관 파일이 손상 되 고, 해당 항목을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  id: GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일의 지정된 된 항목에 대 한 래퍼를 검색합니다."
  remarks: "보관 파일에 지정 된 이름을 가진 여러 항목이 있으면 첫 번째 반환 됩니다. 항목의 이름을 비교할 `entryName` 서 수 비교를 사용 하 여 합니다."
  example:
  - "The following example shows how to use the GetEntry method to retrieve an entry.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/m-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/m-system.io.compression._4_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "검색할 항목을 식별 하는, 보관 저장소의 루트에 상대적인 경로입니다."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "보관;의 지정된 된 항목에 대 한 래퍼 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 보관 파일에는 항목이 없는 경우."
  overload: System.IO.Compression.ZipArchive.GetEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code>is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 보관 파일에서 읽기를 지원 하지 않습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip 보관 파일이 삭제 되었습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "Zip 보관 파일이 손상 되 고, 해당 항목을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Mode
  id: Mode
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일 항목에 대해 수행 하는 동작의 유형을 설명 하는 값을 가져옵니다."
  remarks: "<xref:System.IO.Compression.ZipArchive> <xref:System.IO.Compression.ZipArchive>클래스</xref:System.IO.Compression.ZipArchive> 의 인스턴스를 만들 때 속성</xref:System.IO.Compression.ZipArchive> 에 대 한 값을 지정 하면 사용 된 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>또는 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>모드 속성에 대 한 값을 제공 하는 생성자입니다.</xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>"
  syntax:
    content: public System.IO.Compression.ZipArchiveMode Mode { get; }
    return:
      type: System.IO.Compression.ZipArchiveMode
      description: "형식을 설명 하는 열거형 값 중 하나 (읽기, 만들기 또는 업데이트) 동작의 zip 보관 파일 항목에 수행할 수 있습니다."
  overload: System.IO.Compression.ZipArchive.Mode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipArchive.Dispose
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
- uid: System.IO.Compression.ZipArchive.Entries
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ZipArchiveEntry>
  nameWithType: ReadOnlyCollection<ZipArchiveEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    nameWithType: ZipArchiveEntry
    fullName: ZipArchiveEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
- uid: System.IO.Compression.ZipArchive.Mode
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
- uid: System.IO.Compression.ZipArchive.#ctor*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive.ZipArchive
- uid: System.IO.Compression.ZipArchive.CreateEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry
  nameWithType: ZipArchive.CreateEntry
- uid: System.IO.Compression.ZipArchive.Dispose*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose
  nameWithType: ZipArchive.Dispose
- uid: System.IO.Compression.ZipArchive.Entries*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
- uid: System.IO.Compression.ZipArchive.GetEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry
  nameWithType: ZipArchive.GetEntry
- uid: System.IO.Compression.ZipArchive.Mode*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
