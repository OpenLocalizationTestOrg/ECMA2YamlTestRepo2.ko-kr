### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHost
  id: ServiceHost
  children:
  - System.ServiceModel.ServiceHost.#ctor
  - System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  langs:
  - csharp
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
  type: Class
  summary: "서비스에 대 한 호스트를 제공합니다."
  remarks: "사용 되는 호스트를 구현 하는 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 서비스 모델 프로그래밍 모델입니다.       ServiceHost 클래스를 사용 하 여 구성 하 고 서비스 노출을 위해 인터넷 정보 서비스 (IIS) 또는 서비스 WAS (Windows Activation)를 사용 하지 않는 경우 클라이언트 응용 프로그램에서 사용 하기 위해 서비스를 노출 합니다. IIS와 WAS 모두 사용자 대신 ServiceHost 개체 상호 작용합니다.       호출자가 사용할 서비스 노출을 위해 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 자세한 서비스 설명이 있어야 (나타내는 <xref:System.ServiceModel.Description.ServiceDescription>클래스).</xref:System.ServiceModel.Description.ServiceDescription> ServiceHost 클래스를 만듭니다는 <xref:System.ServiceModel.Description.ServiceDescription>서비스 형식 및 구성 정보에서 다음 해당 설명을 사용 하 여 만들려는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>설명의 각 끝점에 대 한 개체입니다.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.Description.ServiceDescription>       서비스를 로드, 끝점을 구성 하 고, 보안 설정을 적용 하 고 들어오는 요청을 처리 하는 수신기를 시작 하는 ServiceHost 개체를 사용 합니다."
  example:
  - >-
    [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_0_1.cs)]
     [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_0_1.vb)]
  syntax:
    content: 'public class ServiceHost : System.ServiceModel.ServiceHostBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.ServiceModel.ServiceHost>클래스</xref:System.ServiceModel.ServiceHost> 의 인스턴스를 만드는 데는 두 명의 생성자 사용 하 여는 [ServiceHost (형식, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])?qualifyHint=False&autoUpgrade=False) 서비스 유형을 대부분의 시간을 입력된 매개 변수로 사용 하는 생성자입니다. 호스트가를 사용 하 여 필요에 따라 새 서비스를 만들 수 있습니다. 사용 하 여는 [ServiceHost (개체, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) 생성자 대신 서비스 호스트는 서비스의 특정 singleton 인스턴스를 사용 하도록 하려는 경우에 가능 합니다."
  syntax:
    content: protected ServiceHost ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> 지정 된 기본 주소 및 서비스의 인스턴스를 사용 하 여 클래스입니다."
  remarks: "이 생성자를 사용 하 여 사용자 지정을 구현 하는 대신 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>singleton 서비스에서 사용할 특정 개체 인스턴스를 제공 하려는 경우.</xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> 같이 서비스 구현 형식을 (예를 들어 경우 매개 변수가 없는 기본 public 생성자를 구현 하지 않습니다)를 생성 하기 어려운 경우이 오버 로드를 사용 해야 하는 경우가 있습니다.       이 오버 로드에 개체가 제공 되, 일부 기능에 관련 된 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 다르게 동작 작업 인스턴스 만들기. 예를 들어 호출 <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName>이 생성자 오버 로드를 사용 하 여는 잘 알려진 개체 인스턴스를 제공 하는 경우 효과가 없습니다.</xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=fullName> 마찬가지로 다른 인스턴스 해제 메커니즘도 무시 됩니다. <xref:System.ServiceModel.ServiceHost>항상 동작 처럼는 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName>속성이 <xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName>모든 작업에 대해.</xref:System.ServiceModel.ReleaseInstanceMode?displayProperty=fullName> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceHost>"
  example:
  - >-
    [!code-cs[S_UEServiceHost2#1](~/add/codesnippet/csharp/m-system.servicemodel.se_2_1.cs)]
     [!code-vb[S_UEServiceHost2#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_2_1.vb)]
  syntax:
    content: public ServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "호스팅된 서비스의 인스턴스입니다."
    - id: baseAddresses
      type: System.Uri[]
      description: "<xref:System.Array>형식의 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri> </xref:System.Array>"
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>singletonInstance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> 서비스 형식과 지정 된 기본 주소를 사용 하 여 클래스입니다."
  remarks: "서비스 유형이 며 단일 인스턴스가 필요한 경우에 필요할 때의 새 인스턴스를 만들 수 있습니다 하는 경우이 생성자를 사용 합니다. 사용 하 여는 [ServiceHost (개체, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) 생성자 대신 서비스 호스트는 서비스의 특정 singleton 인스턴스를 사용 하도록 하려는 경우에 가능 합니다."
  example:
  - "This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:  \n  \n [!code-vb[S_UEServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.se_1_1.vb)]\n [!code-cs[S_UEServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.se_1_1.cs)]"
  syntax:
    content: public ServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "호스팅된 서비스의 형식입니다."
    - id: baseAddresses
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.ServiceHost.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소와 호스팅된 서비스에 서비스 끝점을 추가합니다."
  remarks: ''
  example:
  - >-
    [!code-vb[S_UEServiceHost#3](~/add/codesnippet/visualbasic/70b66628-f847-4088-a4ea-_1.vb)]
     [!code-cs[S_UEServiceHost#3](~/add/codesnippet/csharp/70b66628-f847-4088-a4ea-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "추가 된 끝점의 주소입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소를 포함 하는 URI와 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  remarks: ''
  example:
  - >-
    [!code-vb[S_UEServiceHost#4](~/add/codesnippet/visualbasic/8e2cc351-67c1-445b-afad-_1.vb)]
     [!code-cs[S_UEServiceHost#4](~/add/codesnippet/csharp/8e2cc351-67c1-445b-afad-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점 주소 및 서비스가 수신 대기 URI로 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  remarks: "지정 된 URI는 동일한 수신 대기 해야 하는 여러 끝점이 있는 경우이 버전의 메서드를 사용 합니다."
  example:
  - >-
    [!code-vb[S_UEServiceHost#5](~/add/codesnippet/visualbasic/53ef03a0-4eb7-4902-b7b1-_1.vb)]
     [!code-cs[S_UEServiceHost#5](~/add/codesnippet/csharp/53ef03a0-4eb7-4902-b7b1-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "서비스에 대 한 끝점 주소입니다."
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>에 서비스 끝점이 수신 대기할 수 있습니다.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점 주소를 포함 하는 URI 및 서비스가 수신 대기 URI로 호스팅된 서비스에 서비스 끝점을 추가 합니다."
  remarks: "지정 된 URI는 동일한 수신 대기 해야 하는 여러 끝점이 있는 경우이 버전의 메서드를 사용 합니다."
  example:
  - >-
    [!code-vb[S_UEServiceHost#6](~/add/codesnippet/visualbasic/681d17d9-9f10-449e-a378-_1.vb)]
     [!code-cs[S_UEServiceHost#6](~/add/codesnippet/csharp/681d17d9-9f10-449e-a378-_1.cs)]
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri>"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>에 서비스 끝점이 수신 대기할 수 있습니다.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>호스팅된 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "계약이 초기화 되지 않거나 계약 키를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 설명 구성 파일에서 로드 하 고 생성 중인 런타임에 적용 합니다."
  syntax:
    content: protected override void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스에 대 한 설명을 만듭니다."
  remarks: "이 메서드는 사용자 지정된 프로그래밍 모델에서 계약 설명을 생성에 사용 됩니다. 해당 하는 기본 클래스 메서드를 재정의 <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>사용자 지정 된 모델을 구현 합니다.</xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>"
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;xref:System.Collections.Generic.IDictionary%602&gt; 형식의 키 쌍이 있는 (<xref:System.String>, <xref:System.ServiceModel.Description.ContractDescription>) 계약을 포함 하는 키가 지정 된 호스팅된 서비스의 구현 된.</xref:System.ServiceModel.Description.ContractDescription> </xref:System.String>"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 호스팅된 서비스의 합니다."
  overload: System.ServiceModel.ServiceHost.CreateDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호스팅된 서비스의 형식이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "기본 주소를 호스팅된 서비스에 대 한 설명을 해당 인스턴스를 기반으로 하며 지정 된 초기화 합니다."
  syntax:
    content: protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "호스팅된 서비스의 인스턴스입니다."
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "<xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> 호스팅된 서비스에 대 한 기본 주소를 포함 하는 합니다."
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>singletonInstance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "기본 주소를 호스팅된 서비스에 대 한 설명의 유형을 기반으로 하 고 지정 된 초기화 합니다."
  syntax:
    content: protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "<xref:System.Type>호스팅된 서비스의.</xref:System.Type>"
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "<xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref> 호스팅된 서비스에 대 한 기본 주소를 포함 하는 합니다."
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 호스트가 닫히면 호스팅 중인 삭제 가능한 서비스를 삭제 합니다."
  remarks: "OnClosed 메서드를 재정의 하는 경우 기본을 확인 해야 합니다. 예외가 발생 하는 경우에 OnClosed 메서드 호출 됩니다. 다음 코드에는이 작업을 수행 하는 방법을 보여 줍니다.      ```   protected override void OnClosed()   {       try       {           if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)           {               FaultFlagService.faultFlag = ThrowDuring.Never;               throw new ServiceActivationException(&quot;Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed&quot;);           }       }       finally       {           base.OnClosed();       }   }      ```"
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  id: SingletonInstance
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "호스팅된 서비스의 singleton 인스턴스를 가져옵니다."
  remarks: "사용 하 여는 [ServiceHost (개체, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=False) 사용 되는 서비스의 인스턴스를 제어 하려는 경우 호스팅할 서비스의 singleton 인스턴스를 초기화 하는 생성자입니다."
  syntax:
    content: public object SingletonInstance { get; }
    return:
      type: System.Object
      description: "호스팅된 서비스 개체입니다."
  overload: System.ServiceModel.ServiceHost.SingletonInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.ServiceHost.#ctor
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
- uid: System.ServiceModel.ServiceHost.OnClosed
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
- uid: System.ServiceModel.ServiceHost.#ctor*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost.ServiceHost
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHost.ApplyConfiguration
- uid: System.ServiceModel.ServiceHost.CreateDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHost.CreateDescription
- uid: System.ServiceModel.ServiceHost.InitializeDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHost.InitializeDescription
- uid: System.ServiceModel.ServiceHost.OnClosed*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHost.OnClosed
- uid: System.ServiceModel.ServiceHost.SingletonInstance*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
