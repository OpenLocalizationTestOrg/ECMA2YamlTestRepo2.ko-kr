### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbConnectionStringBuilder
  id: OleDbConnectionStringBuilder
  children:
  - System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  - System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  - System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  - System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  - System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  - System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  - System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  - System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  - System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  - System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: OleDbConnectionStringBuilder
  nameWithType: OleDbConnectionStringBuilder
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder
  type: Class
  summary: "만들기 및 사용 되는 연결 문자열의 내용을 관리 하는 간단한 방법을 제공는 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref> 클래스입니다."
  remarks: "The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class. The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by OLE DB connections, and developers can add arbitrary key/value pairs for any other connection string values. The OleDbConnectionStringBuilder class implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface. This means that the class works with Visual Studio .NET designers at design time. When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio .NET, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.  \n  \n Developers needing to create connection strings as part of applications can use the OleDbConnectionStringBuilder class to build and modify connection strings. The class also makes it easy to manage connection strings stored in an application configuration file. The OleDbConnectionStringBuilder performs checks only for the limited set of known key/value pairs. Therefore, this class can be used to create invalid connection strings. The following table lists the known keys and their corresponding properties within the OleDbConnectionStringBuilder class, and their default values. Besides these specific values, developers can add any key/value pairs to the collection that is contained within the OleDbConnectionStringBuilder instance:  \n  \n|Key|Property|Default value|  \n|---------|--------------|-------------------|  \n|File Name|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A>|\"\"|  \n|Provider|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>|\"\"|  \n|Data Source|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>|\"\"|  \n|Persist Security Info|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>|False|  \n|OLE DB Services|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>|-13|  \n  \n The <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property handles attempts to insert malicious entries. For example, the following code, using the default <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property (the indexer, in C#) correctly escapes the nested key/value pair:  \n  \n```vb#  \nDim builder As _  \n    New System.Data.OleDb.OleDbConnectionStringBuilder  \nbuilder(\"Provider\") = \"Microsoft.Jet.OLEDB.4.0\"  \nbuilder(\"Data Source\") = \"C:\\Sample.mdb\"  \nbuilder(\"User Id\") = \"Admin;NewValue=Bad\"  \n```  \n  \n```c#  \nSystem.Data.OleDb.OleDbConnectionStringBuilder builder =   \n    new System.Data.OleDb.OleDbConnectionStringBuilder();  \nbuilder[\"Provider\"] = \"Microsoft.Jet.OLEDB.4.0\";  \nbuilder[\"Data Source\"] = \"C:\\\\Sample.mdb\";  \nbuilder[\"User Id\"] = \"Admin;NewValue=Bad\";  \n```  \n  \n The result is the following connection string that handles the invalid value in a safe manner:  \n  \n```  \nProvider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\Sample.mdb;User ID=\"Admin;NewValue=Bad\"  \n```"
  example:
  - "The following console application builds connection strings for several OLE DB databases. First, the example creates a connection string for a Microsoft Access database, and then creates a connection string for an IBM DB2 database. The example also parses an existing connection string, and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how OleDbConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_1_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_1_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Provider")]

      [System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]

      [System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))]

      public sealed class OleDbConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsFixedSize
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbConnectionStringBuilder()
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 클래스입니다."
  syntax:
    content: public OleDbConnectionStringBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbConnectionStringBuilder(String)
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 클래스입니다. 제공 된 연결 문자열은 인스턴스의 내부 연결 정보에 대 한 데이터를 제공 합니다."
  remarks: "설정의 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>직접적 속성 (설정 하 여는 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>속성) 연결 문자열을 매개 변수로 생성자에 전달 하 여 영향을 줄 수에 포함 된 키/값 쌍의 집합 또는 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>인스턴스.</xref:System.Data.OleDb.OleDbConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 설정 된 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>속성을 &quot;sqloledb&quot; 예를 들어 모든 표준 SQL 연결 문자열 속성을 추가 합니다.</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 이 동작의 데모를 위한이 항목의 예제를 참조 하십시오.       일부 공급자에 대 한 연결 문자열 내에서 할당 된 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>생성자 하면 제공 된 키/값 쌍의 순서를 다시 정렬 됩니다.</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_18_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public OleDbConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "개체의 내부 연결 정보에 대 한 기초로 사용 됩니다. 키/값 쌍으로 구문 분석 합니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "연결 문자열 형식이 잘못 되었습니다 (아마도 누락 된 필수 &quot;=&quot; 키/값 쌍 내에서)."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: OleDbConnectionStringBuilder.Clear()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "내용을 지웁니다는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 인스턴스."
  remarks: "모든 키/값 쌍을 제거 하는 Clear 메서드는 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>, 모든 해당 속성을 기본값으로 다시 설정 합니다.</xref:System.Data.OleDb.OleDbConnectionStringBuilder> 이 포함 됩니다는 <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>속성을 0으로 설정 된 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>속성을 빈 문자열로.</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>"
  example:
  - "The following example demonstrates the effect of calling the Clear method. This example populates the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> with some key/value pairs, and then calls the Clear method and shows the results.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_29_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_29_1.vb)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: OleDbConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "결정 여부는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 특정 키가 들어 있습니다."
  remarks: "설정 된 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>속성 공급자에 대 한 적절 한 키/값 쌍에서 암시적으로 채워질 수 있습니다, ContainsKey 메서드 반환 하지 않습니다 `true` 암시적으로 제공 된 키에 대 한.</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 이 메서드가 반환 `true` 명시적으로 제공 된 키에 대해서만 합니다."
  example:
  - The following example creates an <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the ContainsKey method.
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "찾을 수 있는 키의 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "true 이면은 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 를 가진 지정 된 요소가 포함 된 키, 그렇지 않으면 false입니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "연결할 데이터 원본의 이름을 가져오거나 설정 합니다."
  remarks: "속성을 설정 하려고 할 때 전달 된 값이 null 이면 DataSource 속성이 다시 설정 됩니다. 반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 `String.Empty`합니다. 이 속성은 연결 문자열 내의 &quot;Data Source&quot; 키에 해당 합니다."
  example:
  - "The following example console application creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, and then sets the DataSource and <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> properties. Finally, the example creates a new <xref:System.Data.OleDb.OleDbConnection> instance, and uses that object to connect to the indicated data store.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_25_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_25_1.cs)]"
  syntax:
    content: public string DataSource { get; set; }
    return:
      type: System.String
      description: "DataSource 속성의 값 또는 <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> 제공 된 경우."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  id: FileName
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "데이터 원본에 연결 하기 위한 유니버설 데이터 링크 (UDL) 파일의 이름을 가져오거나 설정 합니다."
  remarks: "속성을 설정 하려고 할 때 전달 된 값이 null 이면 FileName 속성 다시 설정 됩니다. 반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 `String.Empty`합니다. 이 속성은 연결 문자열 내의 &quot;FileName&quot; 키에 해당 합니다.       이 속성을 일으키지 않는 설정의 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>파일이 있고 유효한 연결 정보를 포함 하는 경우에 참조 된 파일의 내용을 읽을 수 있는 인스턴스.</xref:System.Data.OleDb.OleDbConnectionStringBuilder> 이 속성을 설정 효과가 없습니다 이외의 다른 데이터 원본에 연결할 때 읽을 파일을 나타냅니다."
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "FileName 속성의 값 또는 <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> 제공 된 경우."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: OleDbConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: "추가할 수 있습니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: OleDbConnectionStringBuilder.Item(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "지정된 된 키와 연결 된 값을 가져오거나 설정 합니다. C#의 경우이 속성은 인덱서 합니다."
  remarks: "설정 때문에 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>속성 (에 따라 특정 공급자의 동작은) 키/값 쌍의 컬렉션에 해당 항목을 추가할 수 있습니다, 명시적으로 설정 하지 않은 키에 대 한 값을 검색할 수 있습니다.</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 예를 들어, 설정으로 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>속성 &quot;sqloledb&quot;로 검색할 수 있습니다 &quot;Workstation ID&quot; 값을 설정 하지 않은 것 직접 하는 경우에.</xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 데모를 위한이 항목의 예제를 참조 하십시오."
  example:
  - "The following example uses the Item property (the indexer, in C#) to retrieve and set values within the collection of key/value pairs. Note that setting the provider, in this case, also provides default values for all the key/value pairs associated with the selected provider.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_5_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "가져오거나 설정할 항목의 키입니다."
    return:
      type: System.Object
      description: "지정된 된 키와 연결 된 값입니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "연결 문자열 형식이 잘못 되었습니다 (아마도 누락 된 필수 &quot;=&quot; 키/값 쌍 내에서)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "가져옵니다는 <xref:System.Collections.ICollection>에 키를 포함 하는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "에 있는 값의 순서는 <xref:System.Collections.ICollection>지정 되어 있지에 연결 된 값과 순서가 동일 하지만 <xref:System.Collections.ICollection>에서 반환 되는 <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A>속성.</xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  example:
  - "The following console application example creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_10_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_10_1.vb)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>에 키를 포함 하는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  id: OleDbServices
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "연결 문자열 내에서 OLE DB 서비스 키에 대 한 전달 될 값을 가져오거나 설정 합니다."
  remarks: "연결 문자열 내에서 OLE DB 서비스 키를 사용 하면 개발자가 OLE DB 서비스 활성화 또는 비활성화 하는 값의 조합을 정의 합니다. 속성은 OLE DB 설명서에서 설명 하는 값의 비트 조합을 포함 합니다. 이 속성에 대 한 적절 한 값에 대 한 자세한 내용은 OLE DB 프로그래머 참조, 특히 &quot;덮어씁니다 공급자 서비스 기본값입니다.&quot;를 참조 하십시오. 이 속성의 기본값은-13입니다. 리소스 풀링, 자동 트랜잭션 인 리스트 먼 트, 세션 수준 집계 및 클라이언트 커서 엔진 없음에 대 한 요청에 해당 합니다."
  example:
  - "The following example works with the OleDbServices property in two ways. First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string. Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the OLE DB Services key. This step demonstrates that setting the value from the connection string modifies the OleDbServices property, as well.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_8_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public int OleDbServices { get; set; }
    return:
      type: System.Int32
      description: "연결 문자열 내에서 OLE DB 서비스 키에 해당 하는 값을 반환 합니다. 기본적으로 값은-13입니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "연결이 현재 열려 있거나 열린 상태에서 였 암호와 같은 보안 관련 정보가 연결의 일부로 반환 여부를 나타내는 부울 값을 가져오거나 설정 합니다."
  remarks: "이 속성은 연결 문자열 내의 &quot;Persist Security Info&quot; 키에 해당 합니다."
  example:
  - "The following example works with the PersistSecurityInfo property in two ways. First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string. Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the \"Persist Security Info\" key. This step demonstrates that setting the value from the connection string modifies the PersistSecurityInfo property, as well.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_23_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_23_1.vb)]"
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: "PersistSecurityInfo 속성의 값 또는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 제공 된 경우."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  id: Provider
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "내부 연결 문자열과 관련 된 데이터 공급자의 이름을 포함 하는 문자열을 가져오거나 설정 합니다."
  remarks: "속성을 설정 하려고 할 때 전달 된 값이 null 이면 공급자 속성이 다시 설정 됩니다. 반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 `String.Empty`합니다. 이 속성은 연결 문자열 내의 &quot;Provider&quot; 키에 해당 합니다.       값을 설정는 `Provider` 직접적 속성 (설정 하 여는 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>속성) 연결 문자열을 매개 변수로 생성자에 전달 하 여 영향을 줄 수에 포함 된 키/값 쌍의 집합 또는 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>인스턴스.</xref:System.Data.OleDb.OleDbConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 모든 표준 SQL 연결 문자열 속성을 추가 예를 들어 &quot;sqloledb&quot;로 공급자 속성을 설정 합니다. 이 동작의 데모를 위한이 항목의 예제를 참조 하십시오.       일부 공급자에 대 한 연결 문자열 내에서 할당 된 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>생성자 하면 제공 된 키/값 쌍의 순서를 다시 정렬 됩니다.</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.Provider#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_24_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.Provider#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_24_1.cs)]"
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "공급자 속성의 값 또는 <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> 제공 된 경우."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: OleDbConnectionStringBuilder.Remove(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "지정된 된 키를 가지는 엔트리를 제거는 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 인스턴스."
  remarks: "찾을 키/값 쌍을 제거 하려고 하기 전에 키가 있는지에 대 한 필요 없습니다 Remove 메서드는 성공 여부를 나타내는 값을 반환 하므로 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>인스턴스.</xref:System.Data.OleDb.OleDbConnectionStringBuilder>"
  example:
  - "The following example creates a <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and demonstrates the behavior of the Remove method.  \n  \n [!code-cs[DataWorks OleDbConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_22_1.cs)]\n [!code-vb[DataWorks OleDbConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_22_1.vb)]"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "이 연결 문자열에서 제거할 키/값 쌍의 키 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 연결 문자열 내에 존재 하 고 제거 된 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 존재 하지 않았습니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: OleDbConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "제공 된 키에 해당 하는 값을 검색 된 <xref href=&quot;System.Data.OleDb.OleDbConnectionStringBuilder&quot;> </xref> 인스턴스."
  remarks: "TryGetValue 메서드 값을 안전 하 게 검색할 수 있습니다는 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>제공 된 키 이름이 올바른 키 이름 인지 확인할 필요 없이.</xref:System.Data.OleDb.OleDbConnectionStringBuilder> TryGetValue 존재 하지 않는 키를 전달, 호출 하는 경우 예외를 발생 하지 않으므로, 해당 값을 검색 하기 전에 키를 찾이 필요가 없습니다. 존재 하지 않는 키를 가진 TryGetValue 호출 null 값을 배치 합니다 (`Nothing` Visual basic에서)에 `value` 매개 변수입니다."
  example:
  - "The following example demonstrates the behavior of the TryGetValue method.  \n  \n [!code-vb[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/c608ef8d-2ee4-49df-a105-_1.vb)]\n [!code-cs[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/c608ef8d-2ee4-49df-a105-_1.cs)]"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "검색할 항목의 키입니다."
    - id: value
      type: System.Object
      description: "해당 하는 값`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> keyword </code> 했으면 연결 문자열에 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>에 null 값 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder()
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder()
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder(String)
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: OleDbConnectionStringBuilder.Clear()
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Clear()
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: OleDbConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.FileName
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: OleDbConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: OleDbConnectionStringBuilder.Item(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Provider
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: OleDbConnectionStringBuilder.Remove(String)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.Remove(String)
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: OleDbConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.#ctor*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbConnectionStringBuilder
  nameWithType: OleDbConnectionStringBuilder.OleDbConnectionStringBuilder
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Clear*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: OleDbConnectionStringBuilder.Clear
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: OleDbConnectionStringBuilder.ContainsKey
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.DataSource*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: OleDbConnectionStringBuilder.DataSource
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.FileName*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: FileName
  nameWithType: OleDbConnectionStringBuilder.FileName
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: OleDbConnectionStringBuilder.GetProperties
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Item*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: OleDbConnectionStringBuilder.Item
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Keys*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OleDbConnectionStringBuilder.Keys
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: OleDbServices
  nameWithType: OleDbConnectionStringBuilder.OleDbServices
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: OleDbConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Provider*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: OleDbConnectionStringBuilder.Provider
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.Remove*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: OleDbConnectionStringBuilder.Remove
- uid: System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue*
  parent: System.Data.OleDb.OleDbConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: OleDbConnectionStringBuilder.TryGetValue
