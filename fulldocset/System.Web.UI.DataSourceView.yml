### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataSourceView
  id: DataSourceView
  children:
  - System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  langs:
  - csharp
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
  type: Class
  summary: "모든 데이터 원본 뷰를 정의 하는 클래스 데이터 소스 컨트롤의 기능에 대 한 기본 클래스로 사용 됩니다."
  remarks: "ASP.NET 웹 서버 컨트롤의 데이터를 일관성 있게에 바인딩할 수 있도록 하는 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤 및 데이터 소스 제어 바인딩 이라고 하는 클래스 라고 합니다. 데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 관계형 데이터베이스, 파일, 스트림, 비즈니스 개체 및 등입니다. 데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.       제공 되는 데이터 소스 제어를 사용 하 여 asp.net을 포함 하 여 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, 및 <xref:System.Web.UI.WebControls.XmlDataSource>대부분의 웹 개발 작업을 수행 하 고,.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 기본 사용 하 여 <xref:System.Web.UI.DataSourceControl>DataSourceView 클래스 사용자 지정 데이터를 구현 하려면 소스 제어 및.</xref:System.Web.UI.DataSourceControl>       데이터 소스 제어의 조합으로 생각할 수 있습니다는 <xref:System.Web.UI.IDataSource>개체 및 데이터 원본 뷰를 라고 하는 데이터의 연결 된 해당 목록.</xref:System.Web.UI.IDataSource> 데이터의 각 목록은 DataSourceView 개체에 의해 표시 됩니다. DataSourceView 클래스는 모든 데이터 원본 뷰 또는 목록 데이터 소스 컨트롤과 연결 된 데이터에 대 한 기본 클래스입니다. 데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다. 내부 데이터 저장소에서 데이터의 하나 이상의 목록에 포함 되어 있으므로 데이터 소스 제어는 항상 하나 이상의 명명 된 데이터 원본 뷰를 연결 합니다. 데이터 소스 제어에서 사용 하는 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>메서드 열거 데이터를 원본 데이터 소스 컨트롤과 연결 된 현재 뷰 및 <xref:System.Web.UI.DataSourceControl.GetView%2A>이름으로 특정 데이터 원본 뷰 인스턴스를 검색 하는 메서드입니다.</xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceControl.GetViewNames%2A>       DataSourceView 개체를 모두 사용 하 여 기본 데이터 원본에서 데이터 검색을 지원는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>메서드.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 모든 보기와 같은 작업을 포함 하는 작업의 기본 집합을 필요에 따라 지원 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, 및 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 볼를 검색할 수는 <xref:System.Web.UI.DataSourceControl.GetView%2A>및 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>메서드 및 디자인 타임 또는 런타임에 뷰를 쿼리하여.</xref:System.Web.UI.DataSourceControl.GetViewNames%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A>"
  example:
  - "The following code example demonstrates how to extend the DataSourceView class to create a strongly typed view class for a data source control. The `CsVDataSourceView` class defines the capabilities of the `CsvDataSource` data source control and provides an implementation for data-bound controls to use data stored in comma-separated value (.csv) files. For more information on the `CsvDataSource` data source control, see the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public abstract class DataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  id: '#ctor(System.Web.UI.IDataSource,System.String)'
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.IDataSource
      description: "데이터 소스 컨트롤의 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 연관 됩니다."
    - id: viewName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체입니다."
  overload: System.Web.UI.DataSourceView.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>viewName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 지원 개체는 <xref:System.Web.UI.DataSourceView.ExecuteDelete*>작업.</xref:System.Web.UI.DataSourceView.ExecuteDelete*>"
  remarks: "CanDelete 속성 연산을 수행 하기 위해 현재 적절 한지 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라를 반영 합니다. 예를 들어, 경우에 볼 지원 데이터 소스는 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>일반적에서 작업, 필수 속성 또는 다른 데이터가 설정 되지 않은 경우 CanDelete 속성 반환 `false`삭제 작업은 실패 하는,.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>"
  example:
  - "The following code example demonstrates how to override the CanDelete property and the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/p-system.web.ui.datasour_3_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_3_1.vb)]"
  syntax:
    content: public virtual bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 클래스 구현을 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  id: CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정 된 명령을 실행할 수 있는지 여부를 결정 합니다."
  syntax:
    content: public virtual bool CanExecute (string commandName);
    parameters:
    - id: commandName
      type: System.String
      description: "명령 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>명령을 실행할 수; 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 지원 개체는 <xref:System.Web.UI.DataSourceView.ExecuteInsert*>작업.</xref:System.Web.UI.DataSourceView.ExecuteInsert*>"
  remarks: "CanInsert 속성 연산을 수행 하기 위해 현재 적절 한지 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라를 반영 합니다. 데이터 소스 제어 지원 해도 예를 들어는 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>작업의 경우 필수 insert 명령 또는 기타 데이터를 설정 하지 않으면 CanInsert 속성은 반환 `false`삽입 작업은 실패 하는,.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>"
  example:
  - "The following code example demonstrates how to override the CanInsert property and the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/p-system.web.ui.datasour_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_2_1.vb)]"
  syntax:
    content: public virtual bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 클래스 구현을 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 개체가 검색 된 데이터 집합에 대해 페이징을 지원는 <xref:System.Web.UI.DataSourceView.ExecuteSelect*>메서드.</xref:System.Web.UI.DataSourceView.ExecuteSelect*>"
  remarks: "데이터 바인딩된 컨트롤을 추가 하 여 페이징을 요청할 수는 <xref:System.Web.UI.DataSourceCapabilities>필드는 <xref:System.Web.UI.DataSourceSelectArguments>에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>메서드.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 데이터 바인딩된 컨트롤 페이징를 요청 하지만 CanPage 속성을 반환 하는 경우 `false`, 데이터 원본 뷰는 예외를 throw 합니다."
  syntax:
    content: public virtual bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 클래스 구현을 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 개체가 데이터 대신 데이터 행의 총 수를 검색을 지원 합니다."
  remarks: "데이터 바인딩된 컨트롤을 추가 하 여 전체 행 수를 요청할 수는 <xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName>필드는 <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName>에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>메서드.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> </xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> 데이터 바인딩된 컨트롤에는 총 행 수를 요청 하지만 CanRetrieveTotalRowCount 속성을 반환 하는 경우 `false`, 데이터 원본 뷰는 예외를 throw 합니다."
  syntax:
    content: public virtual bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 클래스 구현을 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 개체가 기본 데이터 원본에 대 한 정렬 된 뷰를 지원 합니다."
  remarks: "데이터 바인딩된 컨트롤을 추가 하 여 정렬을 요청할 수 있습니다는 <xref:System.Web.UI.DataSourceCapabilities>필드는 <xref:System.Web.UI.DataSourceSelectArguments>에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>메서드.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> 데이터 바인딩된 컨트롤이 정렬을 요청할 경우 CanSort 속성은 반환 하지만 `false`, 데이터 원본 뷰는 예외를 throw 합니다."
  example:
  - "The following code example demonstrates how to override the CanSort property in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 구현은 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> 지원 개체는 <xref:System.Web.UI.DataSourceView.ExecuteUpdate*>작업.</xref:System.Web.UI.DataSourceView.ExecuteUpdate*>"
  remarks: "CanUpdate 속성 연산을 수행 하기 위해 현재 적절 한지 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라를 반영 합니다. 데이터 바인딩된 컨트롤을 지원 하더라도 예를 들어는 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>작업의 경우 필요한 업데이트 명령이 나 다른 데이터 설정 되지 않은 경우 CanUpdate 속성 반환 `false`업데이트 작업은 실패 하는,.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>"
  example:
  - "The following code example demonstrates how to override the CanUpdate property and the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/p-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: public virtual bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본 구현은 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.DataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  id: DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터 원본 뷰에서 변경 될 때 발생 합니다."
  remarks: "데이터 원본 뷰를 변경 또는 변경 데이터 원본 뷰에서 수행 되는 데이터 작업으로 인해 데이터에 해당 속성의 값이 변경 때문일 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler DataSourceViewChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "목록에서 데이터의 비동기 삭제 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "Delete 메서드는 모든 데이터 원본 뷰 개체에 대 한 비동기 데이터 삭제 인터페이스입니다. Delete 메서드 호출의 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>메서드를 사용 하 여 `keys` 및 `oldValues` 제공 하는 매개 변수 값.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> `callback` 매개 변수는 대리자 데이터 소스에 데이터 바인딩된 컨트롤을 전달 하는 뷰 데이터 바인딩된 알리는 데 사용 되는 시기를 제어는 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>작업이 완료 된.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 매개 변수를 사용 하는 메서드는 <xref:System.Web.UI.DataSourceViewOperationCallback>및 영향을 받는 레코드 수를 반환 하는 대리자 <xref:System.Exception>에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>메서드.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>개체 또는 행 키를 삭제할 수는 <xref:System.Web.UI.DataSourceView.ExecuteDelete*>작업.</xref:System.Web.UI.DataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 원래 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> 비동기 작업이 완료 되 면 데이터 바인딩된 컨트롤을 알리는 데 사용 되는 대리자입니다."
  overload: System.Web.UI.DataSourceView.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Events
  id: Events
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터 원본 뷰에 대 한 이벤트 처리기 대리자의 목록을 가져옵니다."
  remarks: "이 속성은 형식의 <xref:System.ComponentModel.EventHandlerList>, 대리자 목록에서 항목을 찾는 선형 검색 알고리즘을 사용 하 합니다.</xref:System.ComponentModel.EventHandlerList> 선형 검색 알고리즘을 다 수의 항목이 작업할 경우 비효율적입니다. 따라서 큰 목록에 있으면이 속성을 가진 항목이 느려집니다. 찾고 있습니다."
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "이벤트 처리기 대리자 목록입니다."
  overload: System.Web.UI.DataSourceView.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 명령을 실행 합니다."
  syntax:
    content: protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);
    parameters:
    - id: commandName
      type: System.String
      description: "명령 이름입니다."
    - id: keys
      type: System.Collections.IDictionary
      description: "사전 개체 키 또는 작업을 수행 하는 행 키입니다."
    - id: values
      type: System.Collections.IDictionary
      description: "데이터 요소 및 해당 값을 나타내는 이름/값 쌍의 사전입니다."
    return:
      type: System.Int32
      description: "작업에 의해 영향을 받는 항목의 수입니다."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 명령을 실행 합니다."
  remarks: "이 메서드는 값을 반환 하지 않습니다."
  syntax:
    content: public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: commandName
      type: System.String
      description: "명령 이름입니다."
    - id: keys
      type: System.Collections.IDictionary
      description: "사전 개체 키 또는 작업을 수행 하는 행 키입니다."
    - id: values
      type: System.Collections.IDictionary
      description: "데이터 요소 및 해당 값을 나타내는 이름/값 쌍의 사전입니다."
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> object."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터의 목록에서 삭제 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "데이터 바인딩된 컨트롤 ExecuteDelete 작업을 검색 하 여 데이터 소스 컨트롤에서 지원 되는지 여부를 확인할 수는 <xref:System.Web.UI.DataSourceView>를 사용 하 여 개체는 <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>메서드와 검사는 <xref:System.Web.UI.DataSourceView.CanDelete%2A>속성.</xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceView>       `keys` 매개 변수를 삭제 하는 데이터의 개체 또는 행 키를 나타냅니다. 같은 관계형 데이터를 나타내는 데이터 원본에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤의 `keys` 매개 변수는 데이터베이스의 기본 키 컬렉션입니다.</xref:System.Web.UI.WebControls.SqlDataSource> 다른 시나리오에서는 `keys` 매개 변수 이름/값 쌍의 컬렉션 이며 데이터의 목록을 필터링 하는 데 사용 됩니다. 이름/값 쌍을 일치 하는 모든 데이터가 삭제 됩니다.      > [!NOTE] >는 <xref:System.Web.UI.DataSourceView>클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 확장 하는 경우는 <xref:System.Web.UI.DataSourceView>클래스, 클래스에 기본 데이터 저장소에서 삭제 작업을 지원 하는 경우 ExecuteDelete 메서드를 재정의 합니다.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property and the ExecuteDelete method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/84991e4a-bbbd-47a3-bfea-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/84991e4a-bbbd-47a3-bfea-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>ExecuteDelete 작업에 의해 삭제 될 개체 또는 행 키입니다.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 원래 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "내부 데이터 저장소에서 삭제 된 항목의 수입니다."
  overload: System.Web.UI.DataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ExecuteDelete 작업에서 지원 되지 않습니다는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터의 목록에 삽입 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "데이터 바인딩된 컨트롤 ExecuteInsert 작업을 검색 하 여 데이터 소스 컨트롤에서 지원 되는지 여부를 확인할 수는 <xref:System.Web.UI.DataSourceView>를 사용 하 여 개체는 <xref:System.Web.UI.DataSourceControl.GetView%2A>메서드와 검사는 <xref:System.Web.UI.DataSourceView.CanInsert%2A>속성.</xref:System.Web.UI.DataSourceView.CanInsert%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceView>       `values` 매개 변수는 데이터 열 또는 필드와 해당 삽입할 값을 나타내는 이름/값 쌍의 집합입니다.      > [!NOTE] >는 <xref:System.Web.UI.DataSourceView>클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 확장 하는 경우는 <xref:System.Web.UI.DataSourceView>클래스, 클래스가 내부 데이터 저장소에 삽입을 지 원하는 경우 ExecuteInsert 메서드를 재정의 합니다.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property and the ExecuteInsert method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/m-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: protected virtual int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>삽입 작업 중 사용 되는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "내부 데이터 저장소에 삽입 된 항목의 수입니다."
  overload: System.Web.UI.DataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ExecuteInsert 작업에서 지원 되지 않습니다는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "내부 데이터 저장소에서 데이터의 목록을 가져옵니다."
  remarks: "Executeselect를 실행 메서드를 호출로 반환 하 고 기본 데이터 저장소에서 데이터를 검색 하는 <xref:System.Collections.IEnumerable>개체입니다.</xref:System.Collections.IEnumerable> 모든 데이터 소스 컨트롤 삽입 및 정렬 등의 다른 작업 지원 되지 않는 경우에은 내부 데이터 저장소에서 데이터를 검색을 지원 합니다. 데이터 바인딩된 컨트롤을 언제 든 지의 결과로 데이터 목록을 요청할 수 있으므로 한 <xref:System.Web.UI.IDataSource.DataSourceChanged>이벤트 또는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>메서드 호출에서 필요에 따라 데이터 검색을 수행 해야 합니다.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  example:
  - "The following code example demonstrates how to override the ExecuteSelect method in a class that extends the <xref:System.Web.UI.DataSourceView> class. The `CsvDataSourceView` opens a comma-separated value (.csv) file, parses it line by line, and creates a <xref:System.Data.DataTable> object and a <xref:System.Data.DataView> object to hold the data in memory. Finally, a sort expression is applied if one is supplied by the <xref:System.Web.UI.DataSourceSelectArguments> object, and the <xref:System.Data.DataView> object is returned as an <xref:System.Collections.IEnumerable> instance. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/csharp/9907e30e-e760-42a4-aba2-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/visualbasic/9907e30e-e760-42a4-aba2-_1.vb)]"
  syntax:
    content: protected abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 기본 데이터 검색 범위를 벗어난 데이터에 대 한 작업을 요청 하는 데 사용 되는 합니다."
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>내부 데이터 저장소에서 데이터의 목록.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.DataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터의 목록에서 업데이트 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "데이터 바인딩된 컨트롤 ExecuteUpdate 작업을 사용 하 여 데이터 소스 컨트롤에서 지원 되는지 여부를 확인할 수는 <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>를 검색할 메서드는 <xref:System.Web.UI.DataSourceView>개체의 값을 확인 하 고는 <xref:System.Web.UI.DataSourceView.CanUpdate%2A>속성.</xref:System.Web.UI.DataSourceView.CanUpdate%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>       `keys` 매개 변수를 업데이트 하는 데이터의 개체 또는 행 키를 나타냅니다. 같은 관계형 데이터를 나타내는 데이터 원본에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤의 `keys` 매개 변수는 데이터베이스의 기본 키 컬렉션입니다.</xref:System.Web.UI.WebControls.SqlDataSource> 다른 시나리오에서는 `keys` 매개 변수 이름/값 쌍의 컬렉션 이며 데이터의 목록을 필터링 하는 데 사용 됩니다. 이름/값 쌍을 일치 하는 모든 데이터에서 찾은 값으로 업데이트 됩니다는 `values` 매개 변수는 기존 필드 또는 열에 대 한 새 값을 나타내는 이름/값 쌍의 집합입니다.      > [!NOTE] >는 <xref:System.Web.UI.DataSourceView>클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> 확장 하는 경우는 <xref:System.Web.UI.DataSourceView>클래스, 클래스가 내부 데이터 저장소의 데이터 업데이트를 지 원하는 경우 ExecuteUpdate 메서드를 재정의 합니다.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property and the ExecuteUpdate method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/41646def-d513-4cd2-ab48-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/41646def-d513-4cd2-ab48-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>업데이트 작업으로 업데이트 될 개체 또는 행 키입니다.</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 새 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 원래 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "내부 데이터 저장소에서 업데이트 된 항목의 수입니다."
  overload: System.Web.UI.DataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ExecuteUpdate 작업에서 지원 되지 않습니다는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "목록에서 데이터의 비동기 삽입 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "Insert 메서드는 모든 데이터 원본 뷰 개체에 대 한 비동기 데이터 삽입 인터페이스입니다. Insert 메서드 호출의 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>메서드를 사용 하 여 `values` 제공.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> `callback` 매개 변수는 대리자 데이터 소스에 데이터 바인딩된 컨트롤을 전달 하는 뷰 데이터 바인딩된 알리는 데 사용 되는 시기를 제어는 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>작업이 완료 된.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 매개 변수를 사용 하는 메서드는 <xref:System.Web.UI.DataSourceViewOperationCallback>및 영향을 받는 레코드 수를 반환 하는 대리자 <xref:System.Exception>에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>메서드를 호출 합니다.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>삽입 작업 중 사용 되는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> 비동기 작업이 완료 되 면 데이터 바인딩된 컨트롤을 알리는 데 사용 되는 대리자입니다."
  overload: System.Web.UI.DataSourceView.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Name
  id: Name
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "데이터 원본 뷰의 이름을 가져옵니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>, 있는 경우. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.DataSourceView.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  id: OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생 된 <xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnDataSourceViewChanged 메서드 데이터 원본 변경 되었습니다 및 다시 바인딩을 필요한 작업을 수행 해야 하는 데이터 바인딩된 컨트롤을 알립니다. 일반적으로 OnDataSourceViewChanged 메서드는 데이터 원본 뷰의 속성이 변경 되 면 호출 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnDataSourceViewChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDataSourceViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 의해 호출 된 <> </> *>에 대해 요청 된 기능을 비교 하는 메서드는 <> </> *> 뷰에서 지원 것에 대해 작업 합니다."
  remarks: "RaiseUnsupportedCapabilityError 메서드를 사용 하는 데이터 원본 뷰에서 나타내는 데이터 바인딩된 컨트롤에서 요청한 기능을 각각 검사는 <xref:System.Web.UI.DataSourceSelectArguments>에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.Select%2A>메서드 및 데이터 원본 뷰에서 지 원하는 기능에 비교 합니다.</xref:System.Web.UI.DataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "중 하나는 <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> 뷰가 지 원하는 기능에 대해 비교 하는 값입니다."
  overload: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "데이터 원본 뷰에 지정 된 데이터 소스 기능을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  id: Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "내부 데이터 저장소에서 데이터의 목록을 비동기적으로 가져옵니다."
  remarks: "Select 메서드는 모든 데이터 원본 뷰 개체에 대 한 비동기 데이터 검색 인터페이스입니다. Select 메서드 호출의 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>전달 하는 모든 메서드를 <xref:System.Web.UI.DataSourceSelectArguments>제공.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> `callback` 매개 변수는 대리자 데이터 소스에 데이터 바인딩된 컨트롤을 전달 하는 뷰 데이터 바인딩된 알리는 데 사용 되는 시기를 제어는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>작업이 완료 된.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 반환 된 데이터는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>호출의 매개 변수에서 반환 되는 <xref:System.Web.UI.DataSourceViewSelectCallback>위임.</xref:System.Web.UI.DataSourceViewSelectCallback> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 기본 데이터 검색 범위를 벗어난 데이터에 대 한 작업을 요청 하는 데 사용 되는 합니다."
    - id: callback
      type: System.Web.UI.DataSourceViewSelectCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;> </xref> 비동기 작업이 완료 되 면 데이터 바인딩된 컨트롤을 알리는 데 사용 되는 대리자입니다."
  overload: System.Web.UI.DataSourceView.Select*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "목록에서 데이터의 비동기 업데이트 작업을 수행 하는 <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 개체가 나타내는입니다."
  remarks: "큐브의 Update 메서드에 모든 데이터 원본 뷰 개체에 대 한 비동기 데이터 수정 인터페이스입니다. Update 메서드 호출의 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>메서드를 사용 하 여 `keys`, `values`, 및 `oldValues` 제공 하는 매개 변수 값.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> `callback` 매개 변수는 대리자 데이터 소스에 데이터 바인딩된 컨트롤을 전달 하는 뷰 데이터 바인딩된 알리는 데 사용 되는 시기를 제어는 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>작업이 완료 된.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 매개 변수를 사용 하는 메서드는 <xref:System.Web.UI.DataSourceViewOperationCallback>및 영향을 받는 레코드 수를 반환 하는 대리자 <xref:System.Exception>에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>호출.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>업데이트 작업으로 업데이트 될 개체 또는 행 키입니다.</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 새 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>데이터 요소와 원래 값을 나타내는 이름/값 쌍의.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> 비동기 작업이 완료 되 면 데이터 바인딩된 컨트롤을 알리는 데 사용 되는 대리자입니다."
  overload: System.Web.UI.DataSourceView.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataSourceView.CanDelete
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
- uid: System.Web.UI.DataSourceView.CanInsert
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.DataSourceViewOperationCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewOperationCallback
  nameWithType: DataSourceViewOperationCallback
  fullName: System.Web.UI.DataSourceViewOperationCallback
- uid: System.Web.UI.DataSourceView.Events
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Name
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
- uid: System.Web.UI.DataSourceViewSelectCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewSelectCallback
  nameWithType: DataSourceViewSelectCallback
  fullName: System.Web.UI.DataSourceViewSelectCallback
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.#ctor*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView.DataSourceView
- uid: System.Web.UI.DataSourceView.CanDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
- uid: System.Web.UI.DataSourceView.CanExecute*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute
  nameWithType: DataSourceView.CanExecute
- uid: System.Web.UI.DataSourceView.CanInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.Delete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete
  nameWithType: DataSourceView.Delete
- uid: System.Web.UI.DataSourceView.Events*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
- uid: System.Web.UI.DataSourceView.ExecuteCommand*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand
  nameWithType: DataSourceView.ExecuteCommand
- uid: System.Web.UI.DataSourceView.ExecuteDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: DataSourceView.ExecuteDelete
- uid: System.Web.UI.DataSourceView.ExecuteInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: DataSourceView.ExecuteInsert
- uid: System.Web.UI.DataSourceView.ExecuteSelect*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: DataSourceView.ExecuteSelect
- uid: System.Web.UI.DataSourceView.ExecuteUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: DataSourceView.ExecuteUpdate
- uid: System.Web.UI.DataSourceView.Insert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert
  nameWithType: DataSourceView.Insert
- uid: System.Web.UI.DataSourceView.Name*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DataSourceView.OnDataSourceViewChanged
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.DataSourceView.Select*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select
  nameWithType: DataSourceView.Select
- uid: System.Web.UI.DataSourceView.Update*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update
  nameWithType: DataSourceView.Update
