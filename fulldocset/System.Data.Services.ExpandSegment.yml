### YamlMime:ManagedReference
items:
- uid: System.Data.Services.ExpandSegment
  id: ExpandSegment
  children:
  - System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  - System.Data.Services.ExpandSegment.ExpandedProperty
  - System.Data.Services.ExpandSegment.Filter
  - System.Data.Services.ExpandSegment.HasFilter
  - System.Data.Services.ExpandSegment.MaxResultsExpected
  - System.Data.Services.ExpandSegment.Name
  - System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  langs:
  - csharp
  name: ExpandSegment
  nameWithType: ExpandSegment
  fullName: System.Data.Services.ExpandSegment
  type: Class
  summary: "지연 콘텐츠 대신 인라인으로 데이터 반환 되어야 하는지 여부를 나타내는 쿼리 세그먼트입니다."
  remarks: "`$expand`절은 각 나타냅니다 `$expand`항목이 완전히 확장 되어야 합니다. 예를 들어, 값 `OrderLines.Product.Image` 와 `$expand` 하면 `OrderLines`, `Product` 의 각 요소에 `OrderLines`, 및 `Image` 의 `Product` 에 있는 각 요소의 `OrderLines` 가 확장 됩니다.       맨 왼쪽 속성은 `$expand` 절은 요청 URI에서에서 마지막 경로 세그먼트에 의해 식별 된 엔터티 집합 내 엔터티 형식의 속성 이어야 합니다.       중복 expand 절 규칙은 허용의 경우 무시 됩니다."
  example:
  - "The following URI expands the `OrderLines` associated with each `Order` returned by the query.  \n  \n```  \nhttp://host/service.svc/Orders?$expand=OrderLines  \n  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("ExpandSegment ({name},Filter={filter})]")]

      public class ExpandSegment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  id: '#ctor(System.String,System.Linq.Expressions.Expression)'
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: ExpandSegment(String,Expression)
  nameWithType: ExpandSegment.ExpandSegment(String,Expression)
  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "초기화는 <xref href=&quot;System.Data.Services.ExpandSegment&quot;> </xref> 지정한 속성 이름과 필터링 식, null 일 수 있는 개체입니다."
  syntax:
    content: public ExpandSegment (string name, System.Linq.Expressions.Expression filter);
    parameters:
    - id: name
      type: System.String
      description: "확장할 속성의 이름입니다."
    - id: filter
      type: System.Linq.Expressions.Expression
      description: "확장 세그먼트가 적용 되는 쿼리의 필터 옵션입니다."
  overload: System.Data.Services.ExpandSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.ExpandedProperty
  id: ExpandedProperty
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
  fullName: System.Data.Services.ExpandSegment.ExpandedProperty
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "확장할 속성을 가져옵니다."
  syntax:
    content: public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }
    return:
      type: System.Data.Services.Providers.ResourceProperty
      description: "해당 속성을 확장 합니다."
  overload: System.Data.Services.ExpandSegment.ExpandedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.Filter
  id: Filter
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: Filter
  nameWithType: ExpandSegment.Filter
  fullName: System.Data.Services.ExpandSegment.Filter
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "확장 세그먼트가 적용 되는 쿼리의 필터 옵션입니다."
  syntax:
    content: public System.Linq.Expressions.Expression Filter { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "대상 데이터에 대 한 필터를 지정 하는 식입니다."
  overload: System.Data.Services.ExpandSegment.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.HasFilter
  id: HasFilter
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
  fullName: System.Data.Services.ExpandSegment.HasFilter
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Expand 문을 필터 식과 함께 사용 되는지 여부를 나타내는 부울 값입니다."
  syntax:
    content: public bool HasFilter { get; }
    return:
      type: System.Boolean
      description: "True 또는 false입니다."
  overload: System.Data.Services.ExpandSegment.HasFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected
  id: MaxResultsExpected
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "예상 결과의 최대 수를 가져옵니다."
  remarks: "이 제약 조건을 충족, 확장 공급자는 오류를 검색 하기 위해 데이터 서비스를 사용 하도록 설정 하려면 되돌려야 MaxResultsExpected + 1 개 요소 보다 더 이상 없습니다."
  syntax:
    content: public int MaxResultsExpected { get; }
    return:
      type: System.Int32
      description: "최대 결과 수를 나타내는 정수 값입니다."
  overload: System.Data.Services.ExpandSegment.MaxResultsExpected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.Name
  id: Name
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: Name
  nameWithType: ExpandSegment.Name
  fullName: System.Data.Services.ExpandSegment.Name
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "확장할 속성의 이름입니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "속성의 이름을 포함 하는 문자열 값입니다."
  overload: System.Data.Services.ExpandSegment.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  id: PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: PathHasFilter(IEnumerable<ExpandSegment>)
  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "경로 대상 데이터의 필터 옵션이 포함 되는지 여부를 나타내는 부울 값입니다."
  syntax:
    content: public static bool PathHasFilter (System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment> path);
    parameters:
    - id: path
      type: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}
      description: "필터를 확인할 세그먼트의 열거형입니다."
    return:
      type: System.Boolean
      description: "된 경로에서 세그먼트에 필터가 있으면 true입니다. false 그렇지 않은 경우."
  overload: System.Data.Services.ExpandSegment.PathHasFilter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandSegment(String,Expression)
  nameWithType: ExpandSegment.ExpandSegment(String,Expression)
  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Services.ExpandSegment.ExpandedProperty
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
  fullName: System.Data.Services.ExpandSegment.ExpandedProperty
- uid: System.Data.Services.Providers.ResourceProperty
  parent: System.Data.Services.Providers
  isExternal: false
  name: ResourceProperty
  nameWithType: ResourceProperty
  fullName: System.Data.Services.Providers.ResourceProperty
- uid: System.Data.Services.ExpandSegment.Filter
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Filter
  nameWithType: ExpandSegment.Filter
  fullName: System.Data.Services.ExpandSegment.Filter
- uid: System.Data.Services.ExpandSegment.HasFilter
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
  fullName: System.Data.Services.ExpandSegment.HasFilter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.ExpandSegment.Name
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Name
  nameWithType: ExpandSegment.Name
  fullName: System.Data.Services.ExpandSegment.Name
- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: PathHasFilter(IEnumerable<ExpandSegment>)
  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ExpandSegment>
  nameWithType: IEnumerable<ExpandSegment>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Services.ExpandSegment>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.ExpandSegment
    name: ExpandSegment
    nameWithType: ExpandSegment
    fullName: ExpandSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.ExpandSegment.#ctor*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandSegment
  nameWithType: ExpandSegment.ExpandSegment
- uid: System.Data.Services.ExpandSegment.ExpandedProperty*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
- uid: System.Data.Services.ExpandSegment.Filter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Filter
  nameWithType: ExpandSegment.Filter
- uid: System.Data.Services.ExpandSegment.HasFilter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
- uid: System.Data.Services.ExpandSegment.Name*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Name
  nameWithType: ExpandSegment.Name
- uid: System.Data.Services.ExpandSegment.PathHasFilter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: PathHasFilter
  nameWithType: ExpandSegment.PathHasFilter
