### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.Serialization.SerializerDescriptor
  id: SerializerDescriptor
  children:
  - System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName
  - System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath
  - System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion
  - System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)
  - System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension
  - System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName
  - System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)
  - System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName
  - System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode
  - System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable
  - System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName
  - System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite
  - System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion
  langs:
  - csharp
  name: SerializerDescriptor
  nameWithType: SerializerDescriptor
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor
  type: Class
  summary: "설치 된 플러그 인 직렬 변환기에 대 한 정보를 제공합니다."
  remarks: "플러그 인 직렬 변환기 클래스에서 파생 되 고 구현 된 <xref:System.Windows.Documents.Serialization.ISerializerFactory>인터페이스.</xref:System.Windows.Documents.Serialization.ISerializerFactory>"
  example:
  - "The following examples illustrate using a SerializerDescriptor to return information on installed plug-in serializers.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public sealed class SerializerDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName
  id: AssemblyName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializerDescriptor.AssemblyName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer를 포함 하는 어셈블리의 이름을 가져옵니다."
  syntax:
    content: public string AssemblyName { get; }
    return:
      type: System.String
      description: "플러그 인 직렬 변환기를 포함 하는 어셈블리 (대개 DLL)의 이름입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath
  id: AssemblyPath
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: AssemblyPath
  nameWithType: SerializerDescriptor.AssemblyPath
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer가 포함 된 어셈블리 파일의 경로를 가져옵니다."
  syntax:
    content: public string AssemblyPath { get; }
    return:
      type: System.String
      description: "플러그 인 직렬 변환기가 포함 된 어셈블리 파일 경로입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion
  id: AssemblyVersion
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: AssemblyVersion
  nameWithType: SerializerDescriptor.AssemblyVersion
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer가 포함 된 어셈블리의 버전을 가져옵니다."
  syntax:
    content: public Version AssemblyVersion { get; }
    return:
      type: System.Version
      description: "플러그 인 직렬 변환기를 포함 하는 어셈블리의 버전입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)
  id: CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: CreateFromFactoryInstance(ISerializerFactory)
  nameWithType: SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory)
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "새 <xref href=&quot;System.Windows.Documents.Serialization.SerializerDescriptor&quot;> </xref> 통해는 주어진 <xref href=&quot;System.Windows.Documents.Serialization.ISerializerFactory&quot;> </xref> 구현 합니다."
  remarks: "만 완전 신뢰 호출자는이 방법을 사용할 수 있습니다."
  syntax:
    content: public static System.Windows.Documents.Serialization.SerializerDescriptor CreateFromFactoryInstance (System.Windows.Documents.Serialization.ISerializerFactory factoryInstance);
    parameters:
    - id: factoryInstance
      type: System.Windows.Documents.Serialization.ISerializerFactory
      description: "새 데이터의 원본을 <xref href=&quot;System.Windows.Documents.Serialization.SerializerDescriptor&quot;> </xref>합니다."
    return:
      type: System.Windows.Documents.Serialization.SerializerDescriptor
      description: "새 <xref href=&quot;System.Windows.Documents.Serialization.SerializerDescriptor&quot;> </xref> 속성의 값으로 초기화는 주어진 <xref href=&quot;System.Windows.Documents.Serialization.ISerializerFactory&quot;> </xref> 구현 합니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>factoryInstance</code>null입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 속성 중 하나 이상이 고 <code> factoryInstance </code> null: <> </> *>, <> </> *>, <> </> *>, 및<>*>'
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension
  id: DefaultFileExtension
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: DefaultFileExtension
  nameWithType: SerializerDescriptor.DefaultFileExtension
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer를 출력 파일에 연결 된 기본 확장을 가져옵니다."
  remarks: ''
  example:
  - "The following examples illustrate using DefaultFileExtension to return the default file extensions for installed plug-in serializers.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public string DefaultFileExtension { get; }
    return:
      type: System.String
      description: "Serializer를 출력 파일에 연결 된 기본 확장 프로그램입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName
  id: DisplayName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: SerializerDescriptor.DisplayName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer의 공용 표시 이름을 가져옵니다."
  remarks: ''
  example:
  - "The following example shows using DisplayName to obtain and display the public name of a plug-in serializer.  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "Serializer의 공용 표시 이름입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SerializerDescriptor.Equals(Object)
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "두 <xref href=&quot;System.Windows.Documents.Serialization.SerializerDescriptor&quot;> </xref> 같음에 대 한 개체입니다."
  remarks: '반환 같음 `true` 두 개체의 속성 중 하나 이상이 다른 경우에: <xref:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName%2A>, <xref:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite%2A>, 및 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable%2A>.</xref:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName%2A>'
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "이 경로와 비교할 개체 <xref href=&quot;System.Windows.Documents.Serialization.SerializerDescriptor&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모두 동일 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName
  id: FactoryInterfaceName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: FactoryInterfaceName
  nameWithType: SerializerDescriptor.FactoryInterfaceName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "이름을 가져옵니다는 <xref href=&quot;System.Windows.Documents.Serialization.ISerializerFactory&quot;> </xref> serializer를 구현 하는 클래스를 파생 합니다."
  syntax:
    content: public string FactoryInterfaceName { get; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Windows.Documents.Serialization.ISerializerFactory&quot;> </xref> serializer를 구현 하는 클래스를 파생 합니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode
  id: GetHashCode
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SerializerDescriptor.GetHashCode()
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer의 고유한 해시 코드 값을 가져옵니다."
  remarks: "고유 해시 코드 값에 따라 만들어집니다는 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName%2A>, <xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName%2A>, <xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath%2A>, <xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A>, <xref:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName%2A>, 및 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion%2A>serializer의 속성입니다.</xref:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName%2A> </xref:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Serializer의 고유한 해시 코드 값입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable
  id: IsLoadable
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: IsLoadable
  nameWithType: SerializerDescriptor.IsLoadable
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer의 현재 설치 된 버전으로 로드할 수 있는지 여부를 나타내는 값을 가져옵니다 [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]합니다."
  remarks: "IsLoadable 해야 **false** 하지 않는 한 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A>동일한 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion%2A>.</xref:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion%2A> 값</xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A>"
  example:
  - "The following examples illustrate using IsLoadable to determine if the associated plug-in serializer can be loaded and used.  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public bool IsLoadable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>serializer 어셈블리 로드할; 수 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.  기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName
  id: ManufacturerName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: ManufacturerName
  nameWithType: SerializerDescriptor.ManufacturerName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer를 개발 하는 회사의 이름을 가져옵니다."
  remarks: "플러그 인 직렬 변환기 클래스에서 파생 되 고 구현 된 <xref:System.Windows.Documents.Serialization.ISerializerFactory>인터페이스.</xref:System.Windows.Documents.Serialization.ISerializerFactory>"
  syntax:
    content: public string ManufacturerName { get; }
    return:
      type: System.String
      description: "플러그 인 직렬 변환기를 개발 하는 회사의 이름입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite
  id: ManufacturerWebsite
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: ManufacturerWebsite
  nameWithType: SerializerDescriptor.ManufacturerWebsite
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Serializer를 개발 하는 회사의 웹 주소를 가져옵니다."
  syntax:
    content: public Uri ManufacturerWebsite { get; }
    return:
      type: System.Uri
      description: "Serializer를 개발 하는 회사의 웹 주소입니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion
  id: WinFXVersion
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  langs:
  - csharp
  name: WinFXVersion
  nameWithType: SerializerDescriptor.WinFXVersion
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "버전을 가져옵니다 [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)] serializer에 필요 합니다."
  remarks: "WinFXVersion와 같은 값이 있어야 합니다.는 <xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A>되었거나 serializer 어셈블리를 로드할 수 없습니다.</xref:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion%2A>"
  syntax:
    content: public Version WinFXVersion { get; }
    return:
      type: System.Version
      description: "버전의 [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)] 플러그 인 직렬 변환기에 필요 합니다."
  overload: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyName
  nameWithType: SerializerDescriptor.AssemblyName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyPath
  nameWithType: SerializerDescriptor.AssemblyPath
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyVersion
  nameWithType: SerializerDescriptor.AssemblyVersion
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: CreateFromFactoryInstance(ISerializerFactory)
  nameWithType: SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory)
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(ISerializerFactory)
- uid: System.Windows.Documents.Serialization.SerializerDescriptor
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: SerializerDescriptor
  nameWithType: SerializerDescriptor
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor
- uid: System.Windows.Documents.Serialization.ISerializerFactory
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: ISerializerFactory
  nameWithType: ISerializerFactory
  fullName: System.Windows.Documents.Serialization.ISerializerFactory
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: DefaultFileExtension
  nameWithType: SerializerDescriptor.DefaultFileExtension
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: SerializerDescriptor.DisplayName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: SerializerDescriptor.Equals(Object)
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: FactoryInterfaceName
  nameWithType: SerializerDescriptor.FactoryInterfaceName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: SerializerDescriptor.GetHashCode()
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: IsLoadable
  nameWithType: SerializerDescriptor.IsLoadable
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: ManufacturerName
  nameWithType: SerializerDescriptor.ManufacturerName
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: ManufacturerWebsite
  nameWithType: SerializerDescriptor.ManufacturerWebsite
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: WinFXVersion
  nameWithType: SerializerDescriptor.WinFXVersion
  fullName: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyName
  nameWithType: SerializerDescriptor.AssemblyName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyPath
  nameWithType: SerializerDescriptor.AssemblyPath
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: AssemblyVersion
  nameWithType: SerializerDescriptor.AssemblyVersion
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: CreateFromFactoryInstance
  nameWithType: SerializerDescriptor.CreateFromFactoryInstance
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: DefaultFileExtension
  nameWithType: SerializerDescriptor.DefaultFileExtension
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: SerializerDescriptor.DisplayName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.Equals*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: Equals
  nameWithType: SerializerDescriptor.Equals
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: FactoryInterfaceName
  nameWithType: SerializerDescriptor.FactoryInterfaceName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: SerializerDescriptor.GetHashCode
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: IsLoadable
  nameWithType: SerializerDescriptor.IsLoadable
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: ManufacturerName
  nameWithType: SerializerDescriptor.ManufacturerName
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: ManufacturerWebsite
  nameWithType: SerializerDescriptor.ManufacturerWebsite
- uid: System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion*
  parent: System.Windows.Documents.Serialization.SerializerDescriptor
  isExternal: false
  name: WinFXVersion
  nameWithType: SerializerDescriptor.WinFXVersion
