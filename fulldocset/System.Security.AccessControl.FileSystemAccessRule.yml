### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAccessRule
  id: FileSystemAccessRule
  children:
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
  type: Class
  summary: "파일 또는 디렉터리에 대 한 액세스 규칙을 정의 하는 액세스 제어 항목 (ACE)에 대 한 추상화를 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "FileSystemAccessRule 클래스를 추상적으로 나타낸은 사용자 계정, (읽기, 쓰기 및 등)를 제공 하려면 액세스 유형을 지정 하는 기본 액세스 제어 항목 (ACE) 및 해당 권한을 허용 하거나 거부 여부입니다.  이 클래스 액세스 규칙이 자식 개체에 전파 되는 방법을 지정할 수 있습니다.       새 액세스 규칙을 만들려면 FileSystemAccessRule 클래스를 사용 합니다.  <xref:System.Security.AccessControl.FileSecurity>또는 <xref:System.Security.AccessControl.DirectorySecurity>클래스</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity> 를 사용 하 여 규칙을 유지할 수 있습니다."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_4_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_4_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_4_1.cpp)]"
  syntax:
    content: 'public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 클래스는 사용자 계정, 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값 및 작업의 허용 여부를 지정 하는 값에 대 한 참조를 사용 합니다."
  remarks: "<xref:System.Security.AccessControl.FileSecurity>또는 <xref:System.Security.AccessControl.DirectorySecurity>클래스</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity> 를 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다.  액세스 제어 규칙 허용 되거나 Microsoft Windows를 실행 하는 컴퓨터에서 허용 되지 않는 작업을 결정 하는 사용자 계정 권한을 정의 합니다."
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 사용자 계정에 대 한 참조를 캡슐화 하는 개체입니다."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 작업의 허용 여부를 지정 하는 값입니다."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code> 매개 변수가 않습니다는 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 개체입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "잘못 된 열거형에 전달 된는 <code> type  </code>매개 변수입니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 클래스는 사용자 계정, 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값 및 작업의 허용 여부를 설명 하는 값의 이름을 사용 합니다."
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/33a6ea58-04ff-40ef-bfcd-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/33a6ea58-04ff-40ef-bfcd-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/33a6ea58-04ff-40ef-bfcd-_1.cpp)]"
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "사용자 계정의 이름입니다."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 작업의 허용 여부를 지정 하는 값입니다."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "잘못 된 열거형에 전달 된는 <code> type  </code>매개 변수입니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 클래스는 사용자 계정 액세스 규칙, 권한이 상속 되는 방법을 결정 하는 값, 권한 전파 되는 방법을 결정 하는 값 및 작업의 허용 여부를 지정 하는 값을 연관 된 작업의 유형을 지정 하는 값에 대 한 참조를 사용 합니다."
  remarks: "<xref:System.Security.AccessControl.FileSecurity>또는 <xref:System.Security.AccessControl.DirectorySecurity>클래스</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity> 를 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다.  액세스 제어 규칙 허용 되거나 Microsoft Windows를 실행 하는 컴퓨터에서 허용 되지 않는 작업을 결정 하는 사용자 계정 권한을 정의 합니다."
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 사용자 계정에 대 한 참조를 캡슐화 하는 개체입니다."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 마스크 자식 개체에 전파 되는 방법을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> (Ace) 액세스 제어 항목 자식 개체에 전파 되는 방법을 지정 하는 값입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 작업의 허용 여부를 지정 하는 값입니다."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code> 매개 변수가 않습니다는 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 개체입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "잘못 된 열거형에 전달 된는 <code> type  </code>매개 변수입니다.       -또는-잘못 된 열거형에 전달 된는 <code> inheritanceFlags  </code>매개 변수입니다.       -또는-잘못 된 열거형에 전달 된는 <code> propagationFlags  </code>매개 변수입니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 클래스는 사용자 계정 액세스 규칙, 권한이 상속 되는 방법을 결정 하는 값, 권한 전파 되는 방법을 결정 하는 값 및 작업의 허용 여부를 지정 하는 값을 연관 된 작업의 유형을 지정 하는 값의 이름을 사용 합니다."
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "사용자 계정의 이름입니다."
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 마스크 자식 개체에 전파 되는 방법을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> (Ace) 액세스 제어 항목 자식 개체에 전파 되는 방법을 지정 하는 값입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 작업의 허용 여부를 지정 하는 값입니다."
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "잘못 된 열거형에 전달 된는 <code> type  </code>매개 변수입니다.       -또는-잘못 된 열거형에 전달 된는 <code> inheritanceFlags  </code>매개 변수입니다.       -또는-잘못 된 열거형에 전달 된는 <code> propagationFlags  </code>매개 변수입니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 현재과 관련 된 플래그 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 현재과 관련 된 플래그 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
