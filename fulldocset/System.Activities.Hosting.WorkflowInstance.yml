### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.WorkflowInstance
  id: WorkflowInstance
  children:
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Id
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  - System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Activities.Hosting.WorkflowInstance
  type: Class
  summary: "WorkflowInstance는 워크플로 프로그램을 실행 하기 위한 간단한, 인스턴스별 런타임. 새 워크플로 인스턴스를 생성 하기 위해 구성할 수 있습니다 또는 기존 인스턴스 상태입니다. Api는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>은 상위 수준의 작업을 구현할 수 있는 런타임 컨트롤의 최소 집합을 노출 합니다.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> 이 API 집합은 전체 범위의 런타임 기능을 나타냅니다. WorkflowInstance는 추상 클래스 이며 동기화, 지 속성, 추적 및 확장 같은 호스트 기능을 제공 하기 위해 호스트의 추상 메서드 구현을 사용 합니다."
  remarks: "WorkflowInstance는 단일 스레드 이며 호스트가 모든 액세스를 동기화 한다고 가정 합니다. 동시에 여러 Api를 호출 하려고 하면는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>       내부적으로 WorkflowInstance에 두 개의 상태: 실행 중 및 일시 중지 됨입니다. 일시 중지 변환 전의 런타임을 지정 하는 유일한 방법은 실행 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> 를 호출 하는 것 일시 중지를 제외한 모든 동작은 런타임이 일시 중지 된 동안에 가져올 수 있습니다. 런타임에서 될 자발적으로 일시 중지 다음과 같은 경우:-런타임에 치명적인 오류가 발생 했습니다. 통해 호스트가 신호를 받은 됩니다 <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>(입니다 일시 중지 됨으로 전환 신호 하지 않는 경우) 다음 <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> 통해 알림을</xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>      -워크플로의 예외가 검색 되었습니다 되지 않았고 루트를 이스케이프 합니다. 호스트를 통해 알림이 표시 됩니다는 <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>메서드.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>      -스케줄러 작업 항목이 모두 실행 하 고 이제 <xref:System.Activities.Hosting.WorkflowInstanceState>.</xref:System.Activities.Hosting.WorkflowInstanceState> 호스트를 통해 알림이 표시 됩니다는 <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>메서드.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> 유휴 상태 이거나 인스턴스가 완료 되어 스케줄러에서 작업 항목이 모두 실행 되었을 수 있는 참고 합니다. <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>의 값은 <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>두 구분할 수 속성을 사용할 수 있습니다.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       호스트의 호출 하 여 실행을 일시 중지 된 변경을 요청할 수는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>또는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A>의 메서드는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>에서 반환 된 인스턴스는 <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>속성.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> 있어야 호스트는 OnNotify 상관 관계를 시도 하지 않아야 의미 하는 특정 응답이이 요청 간주 되지 않아야* 또는 <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>를 특정 일시 중지 호출과.</xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> 일시 중지 요청에 대 한 응답으로 런타임이 일시 중지 됨 및 호출 전환 될 수 있습니다 <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>스케줄러에 보류 중인 작업 항목이 아직 있는 동안.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>의 값은 <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>결정 하기 위해 스케줄러에 더 많은 작업을 일시 중지 요청에 의해 중단 되었습니다 속성을 사용할 수 있습니다.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>의 메서드는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>에서 반환 된 인스턴스는 <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>속성 WorkflowInstance 실행 중 상태인 동안에 호출 될 수 있는 유일한 방법입니다.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> 다른 모든 메서드를 호출 하는 경우는 <xref:System.InvalidOperationException>시킵니다. 다른 WorkflowInstance 한 상태에서 변환 하는 방법에 대 한 규칙을 제공, 실행 중 및 일시 중지 됨의 공용 개념 수 다음과 같이 정의할 수:-실행-에 대 한 호출 간의 상태 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>및 다음 WorkflowInstance.OnNotify*.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> </xref:System.InvalidOperationException>      -일시 중지 됨-마지막 workflowinstance.onnotify *와 다음 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> 호출 간의 상태"
  syntax:
    content: public abstract class WorkflowInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> 지정한 워크플로 정의 사용 하 여 클래스입니다."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "워크플로 정의 하는 작업입니다."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> 지정한 워크플로 정 및 정의 id를 사용 하 여 클래스입니다."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "워크플로 정의 하는 작업입니다."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "정의 id입니다."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "보류 중인 추적 레코드를 추적 참가자를 비동기적으로 보내기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간이 지난 후 시도를 중단할입니다."
    - id: callback
      type: System.AsyncCallback
      description: "추적 작업이 완료 되었을 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 정보입니다."
    return:
      type: System.IAsyncResult
      description: "현재 추적 작업의 상태입니다."
  overload: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  id: Controller
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "가져옵니다는 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>이 대 한 인스턴스 <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>"
  syntax:
    content: protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "이 워크플로 인스턴스의 컨트롤러 인스턴스입니다."
  overload: System.Activities.Hosting.WorkflowInstance.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  id: DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "정의 id를 가져오거나 설정 합니다. <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>합니다."
  syntax:
    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }
    return:
      type: System.Activities.WorkflowIdentity
      description: "정의 id <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>합니다."
  overload: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  id: DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "<xref:System.Disposable.Dispose*> <xref:System.IDisposable>.</xref:System.IDisposable> 를 구현 하는 모든 확장에 대해</xref:System.Disposable.Dispose*> 호출"
  syntax:
    content: protected void DisposeExtensions ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  id: EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "추적 작업을 종료 하기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected void EndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "비동기 추적 작업의 상태입니다."
  overload: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  id: FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "보류 중인 추적 레코드를 추적 참가자에 게 보내기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected void FlushTrackingRecords (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간이 지난 후 시도를 중단할입니다."
  overload: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 업데이트를 차단 하는 활동의 목록을 검색 합니다."
  syntax:
    content: protected static System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "역직렬화 된 런타임 상태입니다."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "업데이트 맵을 합니다."
    return:
      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
      description: "목록에서 업데이트를 차단 하는 활동입니다."
  overload: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  id: GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected T GetExtension<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  id: GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected System.Collections.Generic.IEnumerable<T> GetExtensions<T> () where T : class;'
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "추가할 수 있습니다."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  id: HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스의 인수 및 변수에 대 한 루트 환경을 가져오거나 설정 합니다."
  remarks: "워크플로 인스턴스를 초기화 한 후이 속성을 설정 하는 경우 및 <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>반환 `true`, <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "워크플로 인스턴스의 인수 및 변수에 대 한 루트 환경입니다."
  overload: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Id
  id: Id
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스의 고유 식별자를 가져옵니다."
  syntax:
    content: public abstract Guid Id { get; }
    return:
      type: System.Guid
      description: "워크플로 인스턴스의 고유 식별자입니다."
  overload: System.Activities.Hosting.WorkflowInstance.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 런타임 상태와 워크플로 인스턴스를 초기화 하기 위해 호스트에 의해 호출 됩니다."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "워크플로 실행 하는 데 런타임 상태입니다."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "인수 값과 실행 속성을 사용 하 여 워크플로 인스턴스를 초기화 하기 위해 호스트에서 호출 됩니다."
  syntax:
    content: protected void Initialize (System.Collections.Generic.IDictionary<string,object> workflowArgumentValues, System.Collections.Generic.IList<System.Activities.Handle> workflowExecutionProperties);
    parameters:
    - id: workflowArgumentValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "인수 이름으로 키가 지정 된 워크플로 입력된 매개 변수입니다."
    - id: workflowExecutionProperties
      type: System.Collections.Generic.IList{System.Activities.Handle}
      description: "목록 워크플로 실행 속성입니다."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 런타임 상태와 워크플로 인스턴스를 초기화 하 고 지도 업데이트 하기 위해 호스트에 의해 호출 됩니다."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "워크플로 실행 하는 데 런타임 상태입니다."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "업데이트 맵을 합니다."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스가 초기화 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: protected bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>워크플로 인스턴스가 초기화 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "새 인스턴스 키를이 인스턴스와 연결 해야 함을 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "이 워크플로 인스턴스와 연결할 인스턴스 키입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 정보를 포함 하는 선택적 응용 프로그램 관련 개체입니다."
    return:
      type: System.IAsyncResult
      description: "에 대 한 참조는 비동기 연결 키 작업입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  id: OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "보류 중인 추적 레코드를 추적 참가자에 게 플러시하도록 호스트에 요청을 비동기 호출입니다."
  syntax:
    content: protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "추적 작업이 완료 되었을 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 정보입니다."
    return:
      type: System.IAsyncResult
      description: "현재 추적 작업의 상태입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "호스트에 워크플로 지 속하도록 요청 하는 비동기 호출입니다."
  syntax:
    content: protected abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "지속 작업이 완료 되었을 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 정보를 포함 하는 선택적 응용 프로그램 관련 개체입니다."
    return:
      type: System.IAsyncResult
      description: "에 대 한 참조를 현재 지속 작업입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "책갈피 다시 시작 작업이 시작 하 고 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "다시 시작 하는 책갈피입니다."
    - id: value
      type: System.Object
      description: "만든 작업에 전달할 데이터의 <xref href=&quot;System.Activities.Bookmark&quot;> </xref>합니다."
    - id: timeout
      type: System.TimeSpan
      description: "다시 시작 작업을 완료 해야 작업을 취소 하기 전에 간격 <xref:System.TimeoutException>throw 됩니다.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "다시 시작 작업이 완료 되 면 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업에 대 한 정보를 포함 하는 선택적 응용 프로그램 관련 개체입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 다시 시작 작업에 대 한 참조입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "특정 인스턴스 키 집합을 더 이상 되도록이 인스턴스에 연결 된 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "연결을 끊을 키의 목록입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "연결 키 작업이 완료 되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "연결 키 작업을 비동기 작업에 대 한 참조입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  id: OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "추적 레코드 플러시 작업이 완료 되 면 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "비동기 추적 레코드 플러시 작업이의 상태입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "지속 작업이 완료 되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "비동기에 대 한 참조 지속 작업입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "책갈피 다시 시작 작업이 완료 되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "책갈피 다시 시작 비동기 작업에 대 한 참조입니다."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "결과 나타내는 열거형 값 중 하나는 <xref href=&quot;System.Activities.Bookmark&quot;> </xref> 작업을 다시 시작 합니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스가 실행 중인 상태에서 일시 중지 된 상태로 전환 된 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스에서 처리 되지 않은 예외가 발생 했음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  syntax:
    content: protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "처리 되지 않은 예외입니다."
    - id: source
      type: System.Activities.Activity
      description: "예외를 발생 시킨 작업입니다."
    - id: sourceInstanceId
      type: System.String
      description: "고유 식별자는 <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> 예외를 발생 시킨 활동이 표시 됩니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스에 대 한 중단 작업이 요청 되었습니다는 호스트에 알리기 위해 워크플로 런타임에 의해 호출 됩니다."
  remarks: "한 번 OnRequestAbort 라고, 대부분의 <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>Api <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 을 throw 합니다</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> 를 제외 하 고</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> OnRequestAbort를 호출한 후 호스트가 중단을 충족 시킬 수 있는 상태로 전환 되어야 합니다 사용할 수 있습니다."
  syntax:
    content: protected abstract void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "워크플로 인스턴스의 중단에 대 한 설명입니다."
  overload: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  id: RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "지정한 확장명 관리자에 등록, 필요한 모든 확장이 있는지 확인 하 고 사용할 확장명 컬렉션을 초기화할 수는 호스트에 의해 호출 됩니다."
  remarks: "형식에 의해 확장 키 사용 및 호스트 제공 확장 제공 하는 경우 항상 사용 됩니다. 통해 추가 된 확장 <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>개체의 런타임 형식을 형식 키로 사용 합니다.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> 통해 추가 된 확장 공급자 <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>는 f 선언 된 형식 T를 사용 하 여\\<T >를 형식 키로.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> 다양 한 * activitymetadata.adddefaultextensionprovider 메서드를 통해 작업에서 제공한 확장 공급자가 선언된 형식에 대 한 호스트 확장이 있는 경우 또는 (예를 들어, 통해 제공 된 보다 광범위 한 형식이 있는 경우 삭제 됩니다. 경우 Func\\<StreamWriter > 제공 및 Func\\<TextWriter > 제공만 Func\\<StreamWriter > 유지). 확장 작업에 필요한 컬렉션에 존재 하지 않는 경우 (호출 하 여 표현 \\*ActivityMetadata.RequireExtension)는 <xref:System.Activities.ValidationException>throw 됩니다.</xref:System.Activities.ValidationException>"
  syntax:
    content: protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);
    parameters:
    - id: extensionManager
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "등록할 확장명 관리자입니다."
  overload: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "호스트의 연결을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>런타임에 인스턴스와.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  syntax:
    content: protected abstract bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>호스트의 연결을 지 원하는 경우 <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>워크플로 인스턴스와; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  overload: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  id: SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "가져오거나는 <xref:System.Threading.SynchronizationContext>워크플로 인스턴스 예약에 사용 되는.</xref:System.Threading.SynchronizationContext>"
  remarks: "워크플로 인스턴스를 초기화 한 후이 속성을 설정 하는 경우 및 <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>반환 `true`, <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }
    return:
      type: System.Threading.SynchronizationContext
      description: "워크플로 인스턴스 예약에 사용 되는 동기화 컨텍스트."
  overload: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  id: ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "<xref:System.InvalidOperationException>워크플로 인스턴스에 있으면 초기화 된 <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*>.</xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*> 기준으로</xref:System.InvalidOperationException> 발생 시킵니다."
  remarks: "경우 <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>반환 `true`, 아니라면 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: protected void ThrowIfReadOnly ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  id: WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "워크플로 인스턴스의 워크플로 정을 가져옵니다."
  syntax:
    content: public System.Activities.Activity WorkflowDefinition { get; }
    return:
      type: System.Activities.Activity
      description: "워크플로 인스턴스의 워크플로 정의입니다."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ActivityBlockingUpdate>
  nameWithType: IList<ActivityBlockingUpdate>
  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate
    name: ActivityBlockingUpdate
    nameWithType: ActivityBlockingUpdate
    fullName: ActivityBlockingUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IList{System.Activities.Handle}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Handle>
  nameWithType: IList<Handle>
  fullName: System.Collections.Generic.IList<System.Activities.Handle>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.Handle>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Handle
    name: Handle
    nameWithType: Handle
    fullName: Handle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
- uid: System.Activities.Hosting.WorkflowInstance.#ctor*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance.WorkflowInstance
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.Controller*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions
  nameWithType: WorkflowInstance.DisposeExtensions
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords
  nameWithType: WorkflowInstance.EndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords
  nameWithType: WorkflowInstance.FlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension<T>
  nameWithType: WorkflowInstance.GetExtension<T>
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions<T>
  nameWithType: WorkflowInstance.GetExtensions<T>
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
- uid: System.Activities.Hosting.WorkflowInstance.Initialize*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize
  nameWithType: WorkflowInstance.Initialize
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowInstance.OnBeginAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowInstance.OnBeginPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowInstance.OnBeginResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowInstance.OnDisassociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowInstance.OnEndAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowInstance.OnEndPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowInstance.OnEndResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowInstance.OnNotifyPaused
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowInstance.OnNotifyUnhandledException
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowInstance.OnRequestAbort
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager
  nameWithType: WorkflowInstance.RegisterExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly
  nameWithType: WorkflowInstance.ThrowIfReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
