### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  id: IPropertyFilterTarget
  children:
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  langs:
  - csharp
  name: IPropertyFilterTarget
  nameWithType: IPropertyFilterTarget
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  type: Interface
  summary: "호스트 인프라에서 정렬 및 필터링 기능을 처리 하도록 속성 편집에 사용 되는 인터페이스입니다."
  remarks: "특정 개체를 필터링 해야 하는지 여부를 결정 하는 데 사용 됩니다."
  syntax:
    content: public interface IPropertyFilterTarget
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  id: ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: ApplyFilter(PropertyFilter)
  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "새 설정 하는 데 <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> 에 <xref href=&quot;System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget&quot;> </xref>합니다."
  syntax:
    content: public void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);
    parameters:
    - id: filter
      type: System.Activities.Presentation.PropertyEditing.PropertyFilter
      description: "새 <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> 인스턴스."
  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  id: FilterApplied
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: FilterApplied
  nameWithType: IPropertyFilterTarget.FilterApplied
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "이벤트의 선언 될 때 발생 하는 <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> <xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*>.</xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*> 에 대 한 호출을 통해 변경"
  syntax:
    content: public event EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied;
    return:
      type: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  id: MatchesFilter
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: MatchesFilter
  nameWithType: IPropertyFilterTarget.MatchesFilter
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "반환 하는 읽기 전용 속성 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilter&quot;> </xref> 개체에 대 한 일치 하는 항목이 있습니다."
  syntax:
    content: public bool MatchesFilter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성 필터 속성 필터 대상;와 일치 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  id: MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: MatchesPredicate(PropertyFilterPredicate)
  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: "확인 하는 데 여부이 <xref href=&quot;System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget&quot;> </xref> 특정 작업에 대해 일치 하는 항목이 <xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&quot;> </xref>합니다."
  syntax:
    content: public bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);
    parameters:
    - id: predicate
      type: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
      description: "<xref href=&quot;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&quot;> </xref> 비교 하도록 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>속성 필터 대상과 속성 필터 조건자; 간에 일치 항목이 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: ApplyFilter(PropertyFilter)
  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: PropertyFilter
  nameWithType: PropertyFilter
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: FilterApplied
  nameWithType: IPropertyFilterTarget.FilterApplied
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
- uid: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PropertyFilterAppliedEventArgs>
  nameWithType: EventHandler<PropertyFilterAppliedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs
    name: PropertyFilterAppliedEventArgs
    nameWithType: PropertyFilterAppliedEventArgs
    fullName: PropertyFilterAppliedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesFilter
  nameWithType: IPropertyFilterTarget.MatchesFilter
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesPredicate(PropertyFilterPredicate)
  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: PropertyFilterPredicate
  nameWithType: PropertyFilterPredicate
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter*
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: ApplyFilter
  nameWithType: IPropertyFilterTarget.ApplyFilter
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter*
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesFilter
  nameWithType: IPropertyFilterTarget.MatchesFilter
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate*
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesPredicate
  nameWithType: IPropertyFilterTarget.MatchesPredicate
