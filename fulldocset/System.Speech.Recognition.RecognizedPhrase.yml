### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "음성 인식기에서 인식 된 입력에 대 한에서 생성 하는 자세한 정보를 포함 합니다."
  remarks: "이 클래스에는 단어와 구 하는 동안 다음을 포함 한 음성 인식 작업을 처리 하는 방법에 대 한 자세한 정보가 포함 되어:- <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>속성 참조는 <xref:System.Speech.Recognition.Grammar>인식기에서 입력을 식별 하는 데 사용 합니다.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>속성 구에 대 한 정규화 된 텍스트를 포함 합니다.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>결과에 포함 된 의미 체계 정보를 참조 하는 속성.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 의미 체계 정보에는 키 이름 및 연결 된 의미 체계 데이터의 사전입니다.      - <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>속성의 정렬된 된 컬렉션에 포함 <xref:System.Speech.Recognition.RecognizedWordUnit>각각 나타내는 개체를 입력의 단어를 인식 합니다.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 각 단어 단위 표시 형식, 어휘 형식 및 해당 단어에 대 한 발음 정보를 포함합니다.      - <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>특수 단어 대체 하는 방법에 대 한 정보를 포함 하는 속성.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>및 <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>속성 동일 하거나 유사한 발음을 가진 인식 대체 항목에 대 한 정보를 포함 합니다.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -의 값은 <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>속성 확신도 할당 음성 인식기에서 인식 된 구와 입력과 일치 하는 수준을 나타냅니다.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       음성 인식기에서 인식 결과 반환 합니다.는 <xref:System.Speech.Recognition.RecognitionResult>RecognizedPhrase에서 상속 하는 개체입니다.</xref:System.Speech.Recognition.RecognitionResult> 인식 결과 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>속성 인식기에 대 한 입력에 대 한 가능한 일치 항목은 각각 RecognizedPhrase 개체의 정렬된 된 컬렉션을 포함 합니다.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "가능성을 나타내는 자가 할당 된 값을 가져옵니다 하는 <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> 지정된 된 입력과 일치 합니다."
  remarks: "신뢰성 점수는 구를 제대로 인식 된 절대 가능성을 나타내지 않습니다. 대신, 신뢰성 점수는 지정된 된 입력에 대 한 여러 인식 대체 항목의 상대 정확도 비교 하기 위한 메커니즘을 제공 합니다. 이 가장 정확한 인식 결과 반환할 수 있습니다. 예를 들어 0.8 신뢰성 점수는 인식 된 구와 있으면, 아닙니다는 구를 검색에는 80 %0이 될 가능성은 입력에 대해 정확 하 게 일치 합니다.  구 확신 하는 다른 결과 보다 입력에 대 한 정확한 일치 점수 0.8 보다 작은 일 가능성이 높다는 임을 의미 합니다.       대체 결과 또는 동일한 인식 작업에서 동일한 입력의 이전 인증 내역에서 비교할 수 없는 경우에 자체적으로 신뢰성 점수는 의미가 없습니다. 반환 된 구 대체 후보의 순위 값이 사용 됩니다는 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>속성 <xref:System.Speech.Recognition.RecognitionResult>개체.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       신뢰도 값은 상대 고유 각 인식 엔진입니다. 두 개의 서로 다른 인식 엔진에서 반환 된 신뢰도 값을 의미 있게 비교할 수 없습니다.       음성 인식 엔진은 신뢰성 점수는 낮습니다 배경 간섭, inarticulate 음성 또는 예기치 않은 단어 또는 word 시퀀스를 포함 하 여 여러 가지 이유로 음성된 입력에 할당할 수 있습니다. 응용 프로그램을 사용 하는 경우는 <xref:System.Speech.Recognition.SpeechRecognitionEngine>인스턴스, 입력은 음성 승인 또는 거부 중 하나가 지정 된 신뢰 수준을 수정할 수 있습니다는 <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>메서드.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> 관리 하는 공유 인식기에서에 대 한 신뢰도 임계값 <xref:System.Speech.Recognition.SpeechRecognizer>, 사용자 프로필에 연결 된 및 Windows 레지스트리에 저장 합니다.</xref:System.Speech.Recognition.SpeechRecognizer> 응용 프로그램에 공유 인식기에서의 속성에 대 한 레지스트리 변경 내용을 작성 해야 합니다.       <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>의 속성은 <xref:System.Speech.Recognition.RecognitionResult>개체의 정렬된 된 컬렉션에 포함 되어 <xref:System.Speech.Recognition.RecognizedPhrase>인식기에 대 한 입력에 대 한 가능한 일치 하는 각각 개체.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 대체 항목은 가장 낮은 신뢰를 아래로 정렬 됩니다."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "구 대 한 올바른 인식 확신도의 상대 측정값입니다. 값은 0.0에서 1.0 낮음에서 높음 신뢰도 각각."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "의미 체계 정보에 대 한 의미 체계 태그 언어 (SML) 문서를 반환 하는 <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> 개체입니다."
  remarks: "의미 체계 태그 언어 SML ()에 대 한 정보를 참조 하십시오.는 [의미 체계 태그 언어 참조](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)합니다."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "의미 체계에 대 한 SML 설명을 반환 된 <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> 로 [XPath](http://msdn.microsoft.com/library/ms256115.aspx) 탐색 가능한 개체입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "가져옵니다는 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> 음성 인식기에서 반환 하는 데 사용 하 여 <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>합니다."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "음성 인식기에서 입력을 식별 하는 데 사용 하는 문법 개체입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "구에 대 한 동음이의어 그룹에 대 한 식별자를 가져옵니다."
  remarks: "음성 인식기에서 동일한 발음을 가진 모든 인식 대체 항목에는 그룹 식별자를 할당 합니다. 인식기에서 고유한 발음을 가진 각 대체에 대 한 동음이의어 그룹을 만듭니다. 음성 인식기에서 새 그룹의 각 인식 작업에 대 한 식별자를 생성 하 고는 별도 인식 작업에서 생성 된 대체에서 비교 하는 식별자를 사용할 수 없습니다.       예를 들어 &quot;tale&quot;, &quot;꼬리&quot; 및 &quot;다음&quot; 하는 대체 항목을 포함 하는 인식 결과 대 한 처음 두 명의 대체 한 동음이의어 그룹에 속할 및 마지막 대체 용어는 두 번째 동음이의어 그룹의 단일 멤버가 됩니다."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "구에 대 한 동음이의어 그룹에 대 한 식별자입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "로이 인식된 된 구와 동일한 발음 가진 인식 대체 항목의 컬렉션을 가져옵니다."
  remarks: "이 속성은 모든 다른 가진 인식 대체 항목으로이 인식된 된 구와 동일한 발음 반환 합니다.       예를 들어 인식 결과 포함 하는 대체 항목, &quot;tale&quot;와 &quot;꼬리&quot;, &quot;tale&quot; 첫 번째 대체 용어에 대 한 동음이의어 컬렉션 &quot;비상&quot; 고 두 번째 구문을 포함 됩니다. 두 번째 대체 용어 &quot;비상&quot;에 대 한 동음이의어 컬렉션 &quot;tale&quot; 첫 번째 라는 구가 포함 됩니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "로이 인식된 된 구와 동일한 발음 가진 인식 대체 항목의 읽기 전용 컬렉션입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "음성 인식기에서 음성 부분-텍스트 정규화도 변경 된 텍스트에 대 한 정보를 가져옵니다."
  remarks: "음성 인식기에서 음성 인식 프로세스의 일부로 표시 형식으로 인식 된 입력을 정규화합니다.       음성된 입력을 &quot;25 달러&quot; 인식 결과 생성 하는 예를 들어 여기서는 <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>단어, &quot;20&quot;, &quot;5&quot; 및 &quot;달러&quot;를 포함 하는 속성 및 <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>속성에 &quot;$25.00&quot; 라는 구가 포함.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 텍스트 정규화에 대 한 자세한 내용은 <xref:System.Speech.Recognition.ReplacementText>클래스</xref:System.Speech.Recognition.ReplacementText> 를 참조 하십시오."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "컬렉션 <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> 음성 인식기 된 인식 된 입력을 정규화 할 때 교체한 텍스트 부분을 설명 하는 개체입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "인식된 된 구와 연관 된 의미 체계 정보를 가져옵니다."
  remarks: "음성 인식 문법 의미 체계 정보를 포함할 수 있습니다. 음성 인식기 이러한 문법에 대 한 인식 결과 생성할 때 문법과 인식기에 대 한 입력의 규칙에 따라 인식 결과에서 의미 체계 정보에 포함 될 있습니다. 의미 체계 정보에 대 한 자세한 내용은 참조 [의미 체계 결과 이해](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) 및 <xref:System.Speech.Recognition.SemanticResultKey>및 <xref:System.Speech.Recognition.SemanticResultValue>클래스.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "인식된 된 구와와 관련 된 의미 체계 정보입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "음성 인식기에서 인식 된 입력에 의해 생성 된 정규화 된 텍스트를 가져옵니다."
  remarks: "음성 인식기에서 음성 인식 프로세스의 일부로 표시 형식으로 인식 된 입력의 음성-텍스트 정규화를 수행합니다.       음성된 입력을 &quot;25 달러&quot; 인식 결과 생성 하는 예를 들어 여기서는 <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>속성 단어, &quot;20&quot;, &quot;5&quot; 및 &quot;달러&quot;이 포함 되며 Text 속성에 &quot;$25.00&quot; 라는 구가 포함 되어 있습니다.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 텍스트 정규화에 대 한 자세한 내용은 <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText> 을 참조 하십시오."
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "음성 인식기에서 인식 된 입력에 의해 생성 된 정규화 된 텍스트입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "음성 인식기에서 인식 된 입력에 의해 생성 된 단어를 가져옵니다."
  remarks: "이 속성 결과의 인식기에서 음성-텍스트 정규화 하기 전에 음성 인식기에서 입력 으로부터 생성 된 단어를 포함 합니다.       음성된 입력을 &quot;25 달러&quot; 단어 속성 단어, &quot;20&quot;, &quot;5&quot; 및 &quot;달러&quot;에 포함 된 인식 결과 생성 하는 예를 들어 및 <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>속성에 &quot;$25.00&quot; 라는 구가 포함 되어 있습니다.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 텍스트 정규화에 대 한 자세한 내용은 <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText> 을 참조 하십시오."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "컬렉션 <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> 인식 된 입력에 대 한 음성 인식기에서 생성 된 개체입니다."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
