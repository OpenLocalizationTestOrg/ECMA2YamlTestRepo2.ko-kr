### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  id: Peer
  children:
  - System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.Invite
  - System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.ToString
  langs:
  - csharp
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
  type: Class
  summary: "이 클래스는 원격 피어를 나타냅니다."
  remarks: "추상 피어 클래스의 용도 등 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> <xref:System.Net.PeerToPeer.Collaboration.PeerContact>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> 파생된 클래스에서 공유할 수 있는 공통 기본 클래스 정의 제공 하는 것 그 직접를 구성할 수 없으면 추상 이기 때문입니다. 개발자는 PeerNearMe 또는 PeerContact 서브 클래스를 대신 사용 해야 합니다.       연락처, 피어, 원격 피어 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>, 및 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>는 모두 컨텍스트에 따라 동의어.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>       &quot;호출 피어&quot; 및 &quot;원격 피어&quot;는 일반적으로 동의어입니다.  지정 된 메서드를 호출 하는 응용 프로그램에는 호출 피어 참조 하지 않습니다."
  syntax:
    content: 'public abstract class Peer : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.Peer>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.Peer>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 유형입니다."
  remarks: "형식 <xref:System.Net.PeerToPeer.Collaboration.Peer>또는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.PeerContact> 서브클래싱된 개체</xref:System.Net.PeerToPeer.Collaboration.Peer> 반환 PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>또는 PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A>새 피어 개체의 이름에 대 한 고유 참조를 포함 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>"
  syntax:
    content: protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "이 인스턴스를 deserialize 하는 데 필요한 데이터를 보유 하는 개체에 대 한 참조입니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "데이터를 역직렬화 하는 동안에 방법을 제공 하는 컨텍스트. Serialize 된 데이터의 원본 라고도 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체입니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체를 선택적으로 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 와 관리 되지 않는 리소스만 해제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  id: Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "현재 대/소문자 구분 비교를 수행 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 및 지정 된 피어입니다."
  remarks: "두 피어 값에 관계 없이 동일한 끝점 컬렉션이 있는 경우 같은 개체로 간주 되는지 자신의 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>속성.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> 이 클래스를 직접 하지만 대신 파생 사용 시나리오를 포함 하지 않는 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>또는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>클래스.</xref:System.Net.PeerToPeer.Collaboration.PeerContact> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>"
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.Peer
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 이 인스턴스와 비교할 인스턴스입니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 제공 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 인스턴스에 동일한 <xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*>그렇지 않으면이 피어 인스턴스와 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*> 또한이 메서드 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 피어 매개 변수가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 serialize 하는 데 필요한 데이터로 개체 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>합니다."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  id: GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "로컬 캐시에서 데이터 개체의 컬렉션을 가져옵니다."
  remarks: "이 기능은 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>클래스</xref:System.Net.PeerToPeer.Collaboration.PeerContact> 에 노출 됩니다.  이 기능은 다른 형식의 보안상의 이유로 피어에 노출 되지 않습니다.       피어 공동 작업 세션으로 인스턴스화하지 않은 경우는 <xref:System.Security.Permissions.PermissionState>의 <xref:System.Security.Permissions.PermissionState>,이 메서드는 로컬 컴퓨터 개체에 액세스할 수 없습니다.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>  공동 작업 세션으로 등록 된 응용 프로그램의 마찬가지입니다.       피어 개체의 컬렉션 응용 프로그램, 데이터 개체 및 피어 또는이 인스턴스에 지정 된 끝점에 대 한 상태 정보로 이루어져 있습니다. 끝점에 대 한 개체가 발견 되 면 크기의 콜렉션에 영 (0) 반환 됩니다. 호출 피어를이 끝점에 구독 하는 경우 캐시 자동으로 업데이트 됩니다. 그렇지 않으면 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>이 메서드를 호출 하기 전에 호출 되어야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       호출자에 게가 메서드가 성공적으로 완료 하려면 공동 작업 인프라에 서명이 필요 하지 않습니다.  성공적으로 호출 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>또는 중 하나는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>메서드가 완료 되어야이 메서드를 호출 하기 전에 호출자가 로그인 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       참고: 추가 오버 로드는 <xref:System.Net.PeerToPeer.Collaboration.Peer>하위 클래스 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>및 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.PeerContact> 대신 클래스</xref:System.Net.PeerToPeer.Collaboration.Peer> 에 정의 된"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref> 피어 또는이 인스턴스에 지정 된 끝점에 대 한 컬렉션입니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출자에 게 끝점에 등록 되어 있지 않습니다 또는 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*> 아직 호출 하지 않은"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "메서드는 기본 피어 공동 작업 인프라의 오류 때문에 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "가져옵니다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 제공 된 관련 개체 <xref:System.Guid>에서 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;> </xref>.</xref:System.Guid>"
  remarks: "이 기능은 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>클래스</xref:System.Net.PeerToPeer.Collaboration.PeerContact> 에 노출 됩니다. 이 기능은 다른 형식의 보안상의 이유로 피어에 노출 되지 않습니다.       피어 개체의 컬렉션 응용 프로그램, 데이터 개체 및 피어 또는이 인스턴스에 지정 된 끝점에 대 한 상태 정보로 이루어져 있습니다. 끝점에 대 한 개체가 발견 되 면 크기의 콜렉션에 영 (0) 반환 됩니다. 호출을이 끝점에 구독 캐시 자동으로 업데이트 됩니다. 그렇지 않으면 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>이 메서드를 호출 하기 전에 호출 되어야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>       호출자에 게가 메서드가 성공적으로 완료 하려면 공동 작업 인프라에 서명이 필요 하지 않습니다.  성공적으로 호출 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>또는 중 하나는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>메서드가 완료 되어야이 메서드를 호출 하기 전에 호출자가 로그인 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출. 이 상태는 공동 작업 세션이 시작 될 때 만들어집니다.       참고: 추가 오버 로드 <xref:System.Net.PeerToPeer.Collaboration.Peer>파생 된 클래스 <xref:System.Net.PeerToPeer.Collaboration.PeerContact>및 <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> </xref:System.Net.PeerToPeer.Collaboration.PeerContact> 클래스</xref:System.Net.PeerToPeer.Collaboration.Peer> 에 정의 된"
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);
    parameters:
    - id: objectId
      type: System.Guid
      description: "<xref:System.Guid>의 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체를 컬렉션에서 검색할</xref:System.Guid>"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>제공 된 <xref:System.Guid>.</xref:System.Guid> 연관 된 개체 개체가 없는 경우 크기의 콜렉션에 영 (0) 반환 됩니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ID가 개체 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출자에 게 구독 하지 않습니다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref> <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>합니다.에 대해</xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*> 아직 호출 하지 않은 또는"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "피어 로부터 개체 정보를 가져오는 중 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "에 대 한 현재 상태 정보를 가져옵니다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
  remarks: "현재 상태 정보는 온라인, 오프 라인 및 트래버스하여 같은 상태 설명자를 포함합니다.       <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref> 상태 정보를 검색할입니다."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "반환 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;> </xref> 되 고, 그렇지 않으면 사용할 수 있는 경우 사용 가능한 끝점에 대 한 현재 상태 정보를 포함 한 개체 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerEndPoint</code>유효한 끝점을 포함 되지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerEndPoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 개체는 삭제 된 및 현재 피어 작업에 사용할 수 없습니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "피어에서 현재 상태 정보를 검색 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "전송는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 특정 시작 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  remarks: "<xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출. 이 상태는 피어 공동 작업 세션이 시작 될 때 만들어집니다."
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref> 초대를 받은 피어 로부터 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   초대 프로세스 중에 오류가 발생 했습니다.      -현재 실행 중인 응용 프로그램의 피어 공동 작업 인프라와 등록 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "전송는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 특정 시작 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  remarks: "<xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출. 이 상태는 피어 공동 작업 세션이 시작 될 때 만들어집니다."
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 초대를 보낸에 대 한 합니다."
    - id: message
      type: System.String
      description: "응용 프로그램 초대와 함께 원격 피어에 보낼 메시지입니다.  메시지에는 최대 255 자의 유니코드 문자 수 있습니다."
    - id: invitationData
      type: System.Byte[]
      description: "사용자는 초대와 연결할 데이터 blob를 정의 합니다.  크기는 16, 384 바이트 미만 될 수 있습니다."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref> 초대를 받은 피어 로부터 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "공동 작업에 대 한 응용 프로그램 등록 되지 않았습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>16, 384 바이트 보다 큽니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   초대 프로세스 중에 오류가 발생 했습니다.      현재 실행 중인 응용 프로그램-피어 공동 작업 인프라에 등록 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "초대를 전송 하는 비동기 초대 작업 시작을 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 특정 시작 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  remarks: "<xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출. 이 상태는 피어 공동 작업 세션이 시작 될 때 만들어집니다."
  syntax:
    content: public abstract void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "확인을 위해 비동기 작업의 콜백에 전달할 사용자 정의 개체입니다. 이 필수 매개 변수 진행 중인 모든 비동기 초대 작업에서 고유 해야 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>은<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   초대 프로세스 중에 오류가 발생 했습니다.      -공동 작업 인프라 현재 실행 중인 응용 프로그램 등록 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "초대를 전송 하는 비동기 초대 작업 시작을 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 특정 시작 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  remarks: "<xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출. 이 상태는 피어 공동 작업 세션이 시작 될 때 만들어집니다."
  syntax:
    content: public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 초대를 보낸에 대 한 합니다."
    - id: message
      type: System.String
      description: "응용 프로그램 초대와 함께 원격 피어에 보낼 메시지입니다. 이 메시지의 최대 크기는 255 자의 유니코드 문자입니다."
    - id: invitationData
      type: System.Byte[]
      description: "사용자는 초대와 연결할 데이터 blob를 정의 합니다.  크기는 16, 384 바이트 미만 될 수 있습니다."
    - id: userToken
      type: System.Object
      description: "확인을 위해 비동기 작업의 콜백에 전달할 사용자 정의 개체입니다. 이 필수 매개 변수 진행 중인 모든 비동기 초대 작업에서 고유 해야 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "공동 작업 인프라에는 응용 프로그램 등록 되지 않았습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code>은<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code>16, 384 바이트 보다 큽니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   초대 프로세스 중에 오류가 발생 했습니다.      -공동 작업 인프라 현재 실행 중인 응용 프로그램 등록 되지 않았습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  id: InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "와 보낸 초대를 취소는 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>메서드.</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>"
  remarks: "이 메서드를 호출에 대해 기다려야 시스템 중단 보장는 <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>InviteAsync 요청과 연결 된 피어 로부터.</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       언제 든 지 여러 개의 초대가 미해결 수 있습니다.  비동기 작업으로 식별 하는 경우 InviteAsyncCancel 메서드를 호출 하면는 `userToken` 은 존재에 없는 예외가 throw 됩니다. `userToken` 특정 비동기 호출을 추적 하는 데 사용 되는 이후 개체를 제공 해야 합니다. 이 호스트 응용 프로그램에서 제공 개체는 각 초대 요청에 대해 고유 합니다.       이 메서드를 사용할 때의 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>이벤트 발생 될 수, 취소 됨 속성은 관련 되지만 <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>개체 설정 될 `true.` 는 <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출 하려면</xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> </xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: public void InviteAsyncCancel (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "사용자 정의 개체의 콜백에 전달 하는 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*>확인을 위해 작업.</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*> 이 필수 매개 변수 진행 중인 모든 비동기 초대 작업에서 고유 해야 합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userToken </code> 매개 변수 수 없습니다<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "비동기 처리 중인있지 않습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  id: InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "원격 피어에 대 한 초대 프로세스가 완료 되 면 발생 합니다."
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>초대 작업의 결과 지정 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>       <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>안내 하십시오.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 이 메서드를 호출."
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> InviteCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
      description: "추가할 수 있습니다."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  id: IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "하는 경우를 지정 하는 값을 가져옵니다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 현재 &quot;온라인&quot;이 있습니다."
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 연결 된 끝점에서 온라인 상태가 아니면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       이 속성에 대 한 기본값은 지정 되지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  id: OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "발생 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;> </xref> 이벤트입니다."
  remarks: "이 클래스에서 상속 된 클래스는이 설정을 재정의할 수 경우 메서드를 추가 작업은 <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>이벤트가 발생 합니다.</xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted>"
  syntax:
    content: protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;> </xref> 개체와 연결 된 대리자를 전달 하도록 이벤트 데이터를 포함 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;> </xref> 이벤트입니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  id: PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "가져옵니다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref> 연관는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>합니다."
  remarks: "원격 피어가 중간자 호스트 피어에 대 한 경우는 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>에 포함 된 개체 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>원격 피어에 대 한 로컬 연락처와 연결 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> </xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>"
  syntax:
    content: public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;> </xref> 연관 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "이 속성 값을 설정 하는 경우 하지는 비동기 작업의 결과로 발생 하는 모든 이벤트 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*> 특정 작성 된 스레드에서 다시 호출 하는 연결 된 이벤트 처리기 것"
  remarks: "이 속성에 대 한 기본 설정 값은 `null`를 나타내는 모든 이벤트 처리기 시스템 스레드 풀 스레드에서 호출 됩니다.       이 속성은 일반적으로 같은으로 설정 UI 요소는 <xref:System.Windows.Forms.Form>인스턴스.</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "구현 하는 개체는 <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;> </xref> 인터페이스를 작성 하는 스레드에서 이벤트 처리기 동기화에이 유형의 인스턴스에서 사용 됩니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "호출 하는 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 지정 된 직렬화 하는 데 필요한 데이터를 사용 하 여 클래스 인스턴스 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;> </xref> 인스턴스. 파생된 된 형식을 기본 형식을 호출 해야 <xref:System.Runtime.Serialization.ISerializable.GetObjectData*>메서드.</xref:System.Runtime.Serialization.ISerializable.GetObjectData*>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "반환 된 <xref:System.String>나타내는 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>와 관련 된는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;> </xref>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String><xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>.</xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> 나타내는</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
- uid: System.Net.PeerToPeer.Collaboration.Peer
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InviteCompletedEventArgs>
  nameWithType: EventHandler<InviteCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
    name: InviteCompletedEventArgs
    nameWithType: InviteCompletedEventArgs
    fullName: InviteCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: InviteCompletedEventArgs
  nameWithType: InviteCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPointCollection
  nameWithType: PeerEndPointCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer
  nameWithType: Peer.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose
  nameWithType: Peer.Dispose
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals
  nameWithType: Peer.Equals
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData
  nameWithType: Peer.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects
  nameWithType: Peer.GetObjects
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo
  nameWithType: Peer.GetPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite
  nameWithType: Peer.Invite
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync
  nameWithType: Peer.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel
  nameWithType: Peer.InviteAsyncCancel
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted
  nameWithType: Peer.OnInviteCompleted
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString
  nameWithType: Peer.ToString
