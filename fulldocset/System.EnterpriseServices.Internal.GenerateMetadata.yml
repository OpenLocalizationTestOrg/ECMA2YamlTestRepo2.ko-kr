### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "COM + 구성 요소에 대 한 공용 언어 런타임 (CLR) 메타 데이터를 생성합니다."
  remarks: "필요한 경우 GenerateMetadata 클래스는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다.       GenerateMetadata는.NET Framework에서 내부적으로 사용 됩니다. 코드에서 직접 클래스를 사용할 필요가 없습니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;> </xref> 클래스입니다."
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "생성 하거나 지정된 된 형식 라이브러리를 나타내는 COM + 구성 요소에 대 한 공용 언어 런타임 (CLR) 메타 데이터를 포함 하는 어셈블리를 찾습니다."
  remarks: "필요한 경우 생성 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다. 이러한 처리를 수행 하려면 호출는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>메서드.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>       이러한 메서드는 사용자 코드에서 직접 호출할 필요가 없습니다."
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "어셈블리를 생성할 형식 라이브러리의 이름입니다."
    - id: outPath
      type: System.String
      description: "어셈블리를 생성 하거나 기존 어셈블리를 찾을 수 있는 폴더입니다."
    return:
      type: System.String
      description: "생성 된 어셈블리 이름입니다. 그렇지 않은 경우는 입력이 잘못 경우 빈 문자열입니다."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "생성 하거나 포함 된 지정 된 형식 라이브러리로 표시 되는 COM + 구성 요소에 대 한 공용 언어 런타임 (CLR) 메타 데이터는 강력한 이름의 키 쌍을 사용 하 여 어셈블리를 서명 하 고 전역 어셈블리 캐시에 설치 하는 어셈블리를 찾습니다."
  remarks: "필요한 경우 GenerateMetaData 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다. 문자열에서 생성 된 이름의 어셈블리가 이미 있는 경우 어셈블리를 생성 하지 `outPath` 폴더입니다.       GenerateMetaData 사용자 코드에서 직접 호출할 필요는 없습니다. 둘 다에 의해 호출 됩니다는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>및 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>메서드.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> </xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>       호출 하는 경우 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData도 강력한 이름의 키 쌍을 생성에서 어셈블리에 서명 하 고 전역 어셈블리 캐시에 설치 합니다.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "어셈블리를 생성할 형식 라이브러리의 이름입니다."
    - id: outPath
      type: System.String
      description: "어셈블리를 생성 하거나 기존 어셈블리를 찾을 수 있는 폴더입니다."
    - id: PublicKey
      type: System.Byte[]
      description: "어셈블리를 형식 라이브러리 정보를 가져오는 데 사용할 공개 키입니다."
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "강력한 이름의 키 쌍 생성 된 어셈블리에 서명 하는 데 사용 합니다."
    return:
      type: System.String
      description: "생성 된 어셈블리 이름입니다. 그렇지 않은 경우는 입력이 잘못 경우 빈 문자열입니다."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "생성 하거나 포함 된 지정 된 형식 라이브러리로 표시 되는 COM + 구성 요소에 대 한 공용 언어 런타임 (CLR) 메타 데이터는 강력한 이름의 키 쌍을 사용 하 여 어셈블리를 서명 하 고 전역 어셈블리 캐시에 설치 하는 어셈블리를 찾습니다."
  remarks: "필요한 경우 GenerateSigned 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다. 또한 강력한 이름의 키 쌍을 생성 하 고 어셈블리에 서명 합니다.       이러한 처리를 수행 하려면 호출는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>메서드.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 이러한 메서드는 사용자 코드에서 직접 호출할 필요가 없습니다.       `InstallGac` 매개 변수를 전역 어셈블리 캐시에 어셈블리를 설치할 것인지를 나타냅니다. 그러나 구현은이 값을 무시 하 고 항상 서명 된 어셈블리를 전역 어셈블리 캐시에 설치 하려고 합니다."
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "어셈블리를 생성할 형식 라이브러리의 이름입니다."
    - id: outPath
      type: System.String
      description: "어셈블리를 생성 하거나 기존 어셈블리를 찾을 수 있는 폴더입니다."
    - id: InstallGac
      type: System.Boolean
      description: "무시 됩니다."
    - id: Error
      type: System.String
      description: "오류 메시지를 작성할 수 있는 문자열입니다."
    return:
      type: System.String
      description: "생성 된 어셈블리 이름입니다. 그렇지 않은 경우는 입력이 잘못 경우 빈 문자열입니다."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "지정된 된 경로에서 지정된 된 파일을 검색 합니다."
  remarks: "자세한 내용은에서 SearchPath에 대 한 Platform SDK 설명서를 참조 하십시오. [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)합니다."
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "파일에 대 한 검색할 경로입니다."
    - id: fileName
      type: System.String
      description: "검색할 파일의 이름입니다."
    - id: extension
      type: System.String
      description: "파일을 검색할 때 파일 이름에 추가할 확장입니다."
    - id: numBufferChars
      type: System.Int32
      description: "유효한 경로 파일 이름을 받는 버퍼의 크기입니다."
    - id: buffer
      type: System.String
      description: "찾은 파일의 경로 파일 이름을 받는 버퍼입니다."
    - id: filePart
      type: System.Int32[]
      description: "유효한 경로 파일 이름의 마지막 구성 요소 주소를 받는 변수입니다."
    return:
      type: System.Int32
      description: "반환 값에 복사 된 문자열의 길이가 검색이 성공 하면 <code> buffer </code>합니다. 검색에 실패 하면 반환 값은 0입니다."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
