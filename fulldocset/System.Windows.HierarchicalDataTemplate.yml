### YamlMime:ManagedReference
items:
- uid: System.Windows.HierarchicalDataTemplate
  id: HierarchicalDataTemplate
  children:
  - System.Windows.HierarchicalDataTemplate.#ctor
  - System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  - System.Windows.HierarchicalDataTemplate.AlternationCount
  - System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  - System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  - System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  - System.Windows.HierarchicalDataTemplate.ItemsSource
  - System.Windows.HierarchicalDataTemplate.ItemStringFormat
  - System.Windows.HierarchicalDataTemplate.ItemTemplate
  - System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  langs:
  - csharp
  name: HierarchicalDataTemplate
  nameWithType: HierarchicalDataTemplate
  fullName: System.Windows.HierarchicalDataTemplate
  type: Class
  summary: "Represents a <xref href=&quot;System.Windows.DataTemplate&quot;></xref> that supports <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;></xref>, such as <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;></xref> or <xref href=&quot;System.Windows.Controls.MenuItem&quot;></xref>."
  remarks: ''
  example:
  - "In the following example, `ListLeagueList` is a list of `League` objects. Each `League` object has a `Name` and a collection of `Division` objects. Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.  \n  \n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/t-system.windows.hierarc_1.xaml)]\n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/t-system.windows.hierarc_1.xaml)]  \n  \n The example shows that with the use of HierarchicalDataTemplate, you can easily display list data that contains other lists. The following is a screenshot of the example.  \n  \n ![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png \"HierarchicalDataTemplate sample screen shot\")"
  syntax:
    content: 'public class HierarchicalDataTemplate : System.Windows.DataTemplate'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  - System.Windows.DataTemplate
  implements: []
  inheritedMembers:
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: HierarchicalDataTemplate()
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate()
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.HierarchicalDataTemplate&quot;> </xref> 클래스입니다."
  syntax:
    content: public HierarchicalDataTemplate ();
    parameters: []
  overload: System.Windows.HierarchicalDataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: HierarchicalDataTemplate(Object)
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.HierarchicalDataTemplate&quot;> </xref> 지정 된 형식의 템플릿이 사용 되는 클래스입니다."
  remarks: "`dataType` 매개 변수가 [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] 개체 또는 문자열 나타내는 [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] 요소입니다. 자세한 내용은 참조 [바인딩 소스 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public HierarchicalDataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "이 템플릿이 사용 되는 형식입니다."
  overload: System.Windows.HierarchicalDataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount
  id: AlternationCount
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
  fullName: System.Windows.HierarchicalDataTemplate.AlternationCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "컨테이너의 자식 항목에 대 한 대체 항목의 수를 가져오거나 설정 합니다."
  remarks: "<xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>및 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>속성을 사용 하면 두 개 이상의 교대로 반복 되는 항목 컨테이너에 대 한 모양을 지정할 수 있습니다.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 예를 들어 <xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl> 모든 세 번째 항목에 대 한 대체 배경 색을 지정할 수 있습니다.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> <xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl> 각 항목 컨테이너에 할당 된</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>0에서 시작 될 때까지 증가, <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>1와 다음 다시 0에서 뺀 값입니다.</xref:System.Windows.Controls.ItemsControl.AlternationCount%2A></xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 예를 들어 경우 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>은 3 이며 7 개의 항목이에 <xref:System.Windows.Controls.ItemsControl>, 다음 표에 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>각 항목에 대 한.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>      | 항목의 위치는 <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>|   |---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|   |&1; |&0; |   |&2; |&1; |   |&3; |&2; |   |&4; |&0; |   |&5; |&1; |   |&6; |&2; |   |&7; |&0; |       자식 항목이 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>이 <xref:System.Windows.HierarchicalDataTemplate>적용</xref:System.Windows.HierarchicalDataTemplate> 된 항목이 아니라 해당 범위에서</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 발생 해야 나타내는 AlternationCount 속성을 설정 하면</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl> 예를 들어 경우는 <xref:System.Windows.Controls.HeaderedItemsControl>호출 `aHeaderedItemsControl` 사용 하 여 한 <xref:System.Windows.HierarchicalDataTemplate>AlternationCount 설정 되 면 항목 컨테이너의 자식 항목의 `aHeaderedItemsControl` 갖습니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>에 대 한 항목 컨테이너가 아니라 `aHeaderedItemsControl`.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.HierarchicalDataTemplate> </xref:System.Windows.Controls.HeaderedItemsControl>       교대로 반복 되는 항목 컨테이너에는 다른 모양을 지정 하는 데는 여러 가지가 있습니다. <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 항목 컨테이너의 속성을 바인딩하는 한 가지 방법은 그런 다음 사용할 수는 <xref:System.Windows.Controls.AlternationConverter>특정 보유 하는 항목 컨테이너에 적용 해야 하는 값을 지정 하려면 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>값.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.AlternationConverter> 해당 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.</xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 값에 따라 항목 컨테이너의 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다."
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that is bound to data that is three levels deep, and each item is displayed in a <xref:System.Windows.Controls.TextBlock>.  The <xref:System.Windows.Controls.TextBlock> objects in the first level have the same property values, the <xref:System.Windows.Controls.TextBlock> objects in the second level use alternating values for the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> property, and the <xref:System.Windows.Controls.TextBlock> objects in the third level use alternating values for the <xref:System.Windows.Controls.TextBlock.Background%2A> property.  \n  \n Because the <xref:System.Windows.HierarchicalDataTemplate> for the first level, `Level1Data`, has the AlternationCount property set to 2, the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> for the <xref:System.Windows.Controls.TreeViewItem> objects in the second level alternates between 0 and 1. In the <xref:System.Windows.HierarchicalDataTemplate> for the second level, `Level2Data`, the <xref:System.Windows.Controls.TextBlock.FontStyle%2A> of the <xref:System.Windows.Controls.TextBlock> is bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and an <xref:System.Windows.Controls.AlternationConverter> is provided to convert the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> to an alternating <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  A similar relationship exists between `Level2Data` and `Level3Data`:  The AlternationCount is set to 3 on `Level2Data`, and the <xref:System.Windows.Controls.TextBlock> in `Level3Ddata` has its <xref:System.Windows.Controls.TextBlock.Background%2A> property bound to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.  \n  \n [!code-xml[AlternationIndexSnippets#5](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#5)]"
  syntax:
    content: public int AlternationCount { get; set; }
    return:
      type: System.Int32
      description: "항목의 다음 수준에 대 한 컨테이너 대체 항목의 수입니다."
  overload: System.Windows.HierarchicalDataTemplate.AlternationCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  id: ItemBindingGroup
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
  fullName: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져오거나는 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 하는 각 자식 항목에 복사 됩니다."
  remarks: "설정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>속성, 각 항목 컨테이너를 가져옵니다는 <xref:System.Windows.Data.BindingGroup>동일한를 있는 <xref:System.Windows.Controls.ValidationRule>개체로 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, <xref:System.Windows.Data.BindingGroup.Items%2A> <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>관련 <xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl> 의 각 항목에 대 한 데이터</xref:System.Windows.Data.BindingGroup.BindingExpressions%2A> 와</xref:System.Windows.Data.BindingGroup.Items%2A> 같은 바인딩에서 데이터를 설명 하는 속성 이지만</xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>  항목 컨테이너에 액세스 해야 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>수행 하려면 작업 유효성 검사와 같은 데이터 및 항목에서 오류를 확인 합니다.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A>"
  syntax:
    content: public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }
    return:
      type: System.Windows.Data.BindingGroup
      description: "<xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 하는 각 자식 항목에 복사 됩니다."
  overload: System.Windows.HierarchicalDataTemplate.ItemBindingGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  id: ItemContainerStyle
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져오거나는 <xref href=&quot;System.Windows.Style&quot;> </xref> 각 자식 항목에 대 한 항목 컨테이너에 적용 되는 합니다."
  remarks: "이 속성을 사용 하 여 또는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A>속성을 데이터 항목을 포함 하는 요소의 모양을 좌우 하는 스타일을 설정 합니다.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> 예를 들어 <xref:System.Windows.Controls.TreeView>, 생성 된 컨테이너는 <xref:System.Windows.Controls.TreeViewItem>제어;에 대 한 <xref:System.Windows.Controls.Menu>, 이들은 <xref:System.Windows.Controls.MenuItem>컨트롤.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.TreeView>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that uses one style for items in its first level and another style for items in its second level.  The style for the first level is set in the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property of the <xref:System.Windows.Controls.TreeView>.  The style for the second level is set in the ItemContainerStyle property of the <xref:System.Windows.HierarchicalDataTemplate>.  \n  \n [!code-xml[RecycleItemContainerShippets#VirtualizingTreeView](~/add/codesnippet/xaml/RecycleItemContainerShippets/Window1.xaml#virtualizingtreeview)]  \n  \n The following example creates the data that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewdata)]\n [!code-vb[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewdata)]"
  syntax:
    content: public System.Windows.Style ItemContainerStyle { get; set; }
    return:
      type: System.Windows.Style
      description: "<xref href=&quot;System.Windows.Style&quot;> </xref> 각 자식 항목에 대 한 항목 컨테이너에 적용 되는 합니다."
  overload: System.Windows.HierarchicalDataTemplate.ItemContainerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  id: ItemContainerStyleSelector
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "각 항목 컨테이너에 적용할 수 있는 스타일에 대 한 사용자 지정 스타일 선택 논리를 가져오거나 설정 합니다."
  remarks: "사용 된 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>속성을 데이터 항목을 포함 하는 요소의 모양을 좌우 하는 스타일을 설정 합니다.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 예를 들어 <xref:System.Windows.Controls.TreeView>, 생성 된 컨테이너는 <xref:System.Windows.Controls.TreeViewItem>제어;에 대 한 <xref:System.Windows.Controls.Menu>, 이들은 <xref:System.Windows.Controls.MenuItem>컨트롤.</xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.TreeView> 대신 ItemContainerStyleSelector 속성을 사용 하면 다음 둘 이상의 스타일을 정의 하 고, 적용할을 선택 하는 논리를 제공 해야 하는 경우는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>속성.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> 있으면이 속성은 무시 됩니다는 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>속성을 설정 합니다.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.TreeView> that uses the <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> of a <xref:System.Windows.HierarchicalDataTemplate> to choose between two styles for items in the second level of the <xref:System.Windows.Controls.TreeView>.  \n  \n [!code-xml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/add/codesnippet/xaml/RecycleItemContainerShippets/Window1.xaml#itemcontainerstyleselector)]  \n  \n The following example shows the <xref:System.Windows.Controls.StyleSelector> that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewitemstyleselector)]\n [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewitemstyleselector)]  \n  \n The following example creates the data that is used in the previous example.  \n  \n [!code-cs[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/csharp/RecycleItemContainerShippets/Window1.xaml.cs#treeviewdata)]\n [!code-vb[RecycleItemContainerShippets#TreeViewData](~/add/codesnippet/visualbasic/recycleitemcontainershippets/window1.xaml.vb#treeviewdata)]"
  syntax:
    content: public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }
    return:
      type: System.Windows.Controls.StyleSelector
      description: "A <xref href=&quot;System.Windows.Controls.StyleSelector&quot;> </xref> <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle*>.</xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle*> 사용할 스타일을 선택 하는 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource
  id: ItemsSource
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
  fullName: System.Windows.HierarchicalDataTemplate.ItemsSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "데이터 계층 구조에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 나타내는이 데이터 템플릿에 대 한 바인딩을 가져오거나 설정 합니다."
  remarks: "이 적용 되는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>생성 된 속성 <xref:System.Windows.Controls.HeaderedItemsControl>(같은 <xref:System.Windows.Controls.MenuItem>또는 <xref:System.Windows.Controls.TreeViewItem>) 데이터 계층 구조에서 다음 수준을 나타내는 컬렉션을 찾을 위치를 지정 합니다.</xref:System.Windows.Controls.TreeViewItem> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.HeaderedItemsControl> </xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>      <a name=&quot;xamlTextUsage_ItemsSource&quot;></a># # XAML 텍스트 사용에 대 한 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 내용은 참조는 <xref:System.Windows.Data.Binding>유형.</xref:System.Windows.Data.Binding>"
  example:
  - "In the following example, `ListLeagueList` is a list of `League` objects. Each `League` object has a `Name` and a collection of `Division` objects. Each `Division` has a `Name` and a collection of `Team` objects, and each `Team` object has a `Name`.  \n  \n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/p-system.windows.hierarc_1_1.xaml)]\n [!code-xml[HierarchicalDataTemplate#HDT](~/add/codesnippet/xaml/p-system.windows.hierarc_1_1.xaml)]  \n  \n The example shows that with the use of <xref:System.Windows.HierarchicalDataTemplate>, you can easily display list data that contains other lists. The following is a screenshot of the example.  \n  \n ![HierarchicalDataTemplate sample screen shot](~/add/media/databinding-hierarchicaldatatemplate.png \"HierarchicalDataTemplate sample screen shot\")"
  syntax:
    content: public System.Windows.Data.BindingBase ItemsSource { get; set; }
    return:
      type: System.Windows.Data.BindingBase
      description: "기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.HierarchicalDataTemplate.ItemsSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  id: ItemStringFormat
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
  fullName: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "문자열로 표시 되는 경우 데이터 계층 구조의 다음 수준에 있는 항목의 서식을 지정 하는 방법을 지정 하는 복합 문자열을 가져오거나 설정 합니다."
  syntax:
    content: public string ItemStringFormat { get; set; }
    return:
      type: System.String
      description: "문자열로 표시 되는 경우 데이터 계층의 다음 수준에 있는 항목의 서식을 지정 하는 방법을 지정 하는 복합 문자열입니다."
  overload: System.Windows.HierarchicalDataTemplate.ItemStringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate
  id: ItemTemplate
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplate
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져오거나는 <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> 에 적용할는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate*>속성에는 생성 된 <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (같은 <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>) 데이터 계층 구조의 다음 수준에서 항목을 표시 하는 방법을 나타내기 위해.</xref:System.Windows.Controls.ItemsControl.ItemTemplate*>"
  syntax:
    content: public System.Windows.DataTemplate ItemTemplate { get; set; }
    return:
      type: System.Windows.DataTemplate
      description: "<xref href=&quot;System.Windows.DataTemplate&quot;> </xref> 에 적용할는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate*>속성에는 생성 된 <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (같은 <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>) 데이터 계층 구조의 다음 수준에서 항목을 표시 하는 방법을 나타내기 위해.</xref:System.Windows.Controls.ItemsControl.ItemTemplate*>"
  overload: System.Windows.HierarchicalDataTemplate.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  id: ItemTemplateSelector
  parent: System.Windows.HierarchicalDataTemplate
  langs:
  - csharp
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "가져오거나는 <xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref> 에 적용할는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>속성에는 생성 된 <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (같은 <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>) 데이터 계층 구조의 다음 수준에서 항목을 표시 하는 템플릿을 선택 하는 방법을 나타내기 위해.</xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>"
  syntax:
    content: public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }
    return:
      type: System.Windows.Controls.DataTemplateSelector
      description: "<xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref> 적용 하는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>속성에는 생성 된 <xref href=&quot;System.Windows.Controls.HeaderedItemsControl&quot;> </xref> (같은 <xref href=&quot;System.Windows.Controls.MenuItem&quot;> </xref> 또는 <xref href=&quot;System.Windows.Controls.TreeViewItem&quot;> </xref>) 데이터 계층 구조의 다음 수준에서 항목을 표시 하는 템플릿을 선택 하는 방법을 나타내기 위해.</xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector*>"
  overload: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DataTemplate
  isExternal: false
  name: System.Windows.DataTemplate
- uid: System.Windows.HierarchicalDataTemplate.#ctor
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate()
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate()
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate()
- uid: System.Windows.HierarchicalDataTemplate.#ctor(System.Object)
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate(Object)
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
  fullName: System.Windows.HierarchicalDataTemplate.HierarchicalDataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
  fullName: System.Windows.HierarchicalDataTemplate.AlternationCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
  fullName: System.Windows.HierarchicalDataTemplate.ItemBindingGroup
- uid: System.Windows.Data.BindingGroup
  parent: System.Windows.Data
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyle
- uid: System.Windows.Style
  parent: System.Windows
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector
- uid: System.Windows.Controls.StyleSelector
  parent: System.Windows.Controls
  isExternal: false
  name: StyleSelector
  nameWithType: StyleSelector
  fullName: System.Windows.Controls.StyleSelector
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
  fullName: System.Windows.HierarchicalDataTemplate.ItemsSource
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
  fullName: System.Windows.HierarchicalDataTemplate.ItemStringFormat
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplate
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
  fullName: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector
- uid: System.Windows.Controls.DataTemplateSelector
  parent: System.Windows.Controls
  isExternal: false
  name: DataTemplateSelector
  nameWithType: DataTemplateSelector
  fullName: System.Windows.Controls.DataTemplateSelector
- uid: System.Windows.HierarchicalDataTemplate.#ctor*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: HierarchicalDataTemplate
  nameWithType: HierarchicalDataTemplate.HierarchicalDataTemplate
- uid: System.Windows.HierarchicalDataTemplate.AlternationCount*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: AlternationCount
  nameWithType: HierarchicalDataTemplate.AlternationCount
- uid: System.Windows.HierarchicalDataTemplate.ItemBindingGroup*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemBindingGroup
  nameWithType: HierarchicalDataTemplate.ItemBindingGroup
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyle*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyle
  nameWithType: HierarchicalDataTemplate.ItemContainerStyle
- uid: System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemContainerStyleSelector
  nameWithType: HierarchicalDataTemplate.ItemContainerStyleSelector
- uid: System.Windows.HierarchicalDataTemplate.ItemsSource*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemsSource
  nameWithType: HierarchicalDataTemplate.ItemsSource
- uid: System.Windows.HierarchicalDataTemplate.ItemStringFormat*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemStringFormat
  nameWithType: HierarchicalDataTemplate.ItemStringFormat
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplate*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplate
  nameWithType: HierarchicalDataTemplate.ItemTemplate
- uid: System.Windows.HierarchicalDataTemplate.ItemTemplateSelector*
  parent: System.Windows.HierarchicalDataTemplate
  isExternal: false
  name: ItemTemplateSelector
  nameWithType: HierarchicalDataTemplate.ItemTemplateSelector
