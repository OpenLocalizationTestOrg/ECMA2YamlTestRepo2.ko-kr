### YamlMime:ManagedReference
items:
- uid: System.Data.Services.QueryInterceptorAttribute
  id: QueryInterceptorAttribute
  children:
  - System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  - System.Data.Services.QueryInterceptorAttribute.EntitySetName
  langs:
  - csharp
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute
  fullName: System.Data.Services.QueryInterceptorAttribute
  type: Class
  summary: "QueryInterceptorAttribute 메서드에 지정된 된 엔터티 집합에 쿼리 인터셉터로 주석 처리 합니다."
  remarks: "엔터티 집합 수준 권한 부여 및 유효성 검사는 QueryInterceptorAttribute로 주석이 달려 있어야 하는 방법으로 구현 됩니다. [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]보안 정책을 구현 하지 않지만 대신 서비스 개발자가 자신의 보안 규칙 및 비즈니스 유효성 검사를 작성 하는 데 필요한 인프라를 제공 합니다.       엔터티 집합 액세스 제어 및 유효성 검사는 쿼리 구성을 사용 하 여 쿼리 작업을 통해 사용할 수 있습니다. 엔터티 기반 액세스를 제어 하려면 구현 된 메서드-엔터티 집합별 다음 규칙에 따라: 메서드 공용 범위가 있어야 하 고 매개 변수로 설정 엔터티의 이름을 사용 하는 QueryInterceptorAttribute로 주석을 달아야 합니다.       메서드 매개 변수 없이 동의 해야 합니다.       이 메서드는 형식의 식을 반환 해야 `Expression<Func<T, bool>>` 엔터티 집합에 대해 구성할 필터 인 합니다."
  example:
  - "The following example controls access to the `Customers` entity set. Each `Customer` can only see `Orders` associated with that `Customer`.  \n  \n```  \n[QueryInterceptor(\"Orders\")]  \npublic Expression<Func<Order, bool>> FilterOrders()   \n{  \n    return o => o.Customer.Name == /* Current principal name. */;  \n}   \n  \n// Insures that the user accessing the customer(s) has the appropriate  \n// rights as defined in the QueryRules object to access the customer  \n// resource(s).  \n  \n[QueryInterceptor (\"Customers\")]  \npublic Expression<Func<Customer, bool>> FilterCustomers()   \n{  \n  return c => c.Name == /* Current principal name. */ &&  \n              this.CurrentDataSource.QueryRules.Contains(  \n                rule => rule.Name == c.Name &&  \n                        rule.CustomerAllowedToQuery == true  \n              );  \n}  \n  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]

      public sealed class QueryInterceptorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Services.QueryInterceptorAttribute&quot;> </xref> 엔터티 집합에 지정 된 내용에 대 한 클래스는 <code> entitySetName </code> 매개 변수입니다."
  syntax:
    content: public QueryInterceptorAttribute (string entitySetName);
    parameters:
    - id: entitySetName
      type: System.String
      description: "인터셉터가 적용 되는 엔터티가 포함 된 엔터티 집합의 이름입니다."
  overload: System.Data.Services.QueryInterceptorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  id: EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "인터셉터가 적용 되는 엔터티를 포함 하는 엔터티 집합의 이름을 가져옵니다."
  syntax:
    content: public string EntitySetName { get; }
    return:
      type: System.String
      description: "인터셉터가 적용 되는 엔터티가 포함 된 엔터티 집합의 이름을 나타내는 문자열입니다."
  overload: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
