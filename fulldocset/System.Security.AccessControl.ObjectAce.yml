### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.ObjectAce
  id: ObjectAce
  children:
  - System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  - System.Security.AccessControl.ObjectAce.BinaryLength
  - System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  - System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  - System.Security.AccessControl.ObjectAce.ObjectAceFlags
  - System.Security.AccessControl.ObjectAce.ObjectAceType
  langs:
  - csharp
  name: ObjectAce
  nameWithType: ObjectAce
  fullName: System.Security.AccessControl.ObjectAce
  type: Class
  summary: "디렉터리 서비스 개체에 대 한 액세스 제어 합니다. 이 클래스는 항목 ACE (액세스 제어)에 연결 된 디렉터리 개체를 나타냅니다."
  syntax:
    content: 'public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  - System.Security.AccessControl.QualifiedAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])'
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 클래스입니다."
  syntax:
    content: public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);
    parameters:
    - id: aceFlags
      type: System.Security.AccessControl.AceFlags
      description: "상속, 상속 전파 및 감사 조건에는 새 항목 ACE (액세스 제어)."
    - id: qualifier
      type: System.Security.AccessControl.AceQualifier
      description: "새 ACE의 사용 방법입니다."
    - id: accessMask
      type: System.Int32
      description: "ACE에 대 한 액세스 마스크입니다."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "<xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 새 ACE와 관련 된 합니다."
    - id: flags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "여부는 `type` 및 `inheritedType` 매개 변수는 유효한 개체 Guid를 포함 합니다."
    - id: type
      type: System.Guid
      description: "새 ACE가 적용 되는 개체 형식을 식별 하는 GUID입니다."
    - id: inheritedType
      type: System.Guid
      description: "새 ACE를 상속할 수 있는 개체 형식을 식별 하는 GUID입니다."
    - id: isCallback
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 ACE 형식인 경우 콜백 ACE 합니다."
    - id: opaque
      type: System.Byte[]
      description: "새 ACE와 관련 된 불투명 데이터입니다. 이 콜백 ACE 형식에 대해서만 허용 됩니다. 이 배열의 길이 반환 값 보다 클 수 해야는 <xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*>메서드.</xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*>"
  overload: System.Security.AccessControl.ObjectAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "불투명 매개 변수 값의 길이의 반환 값 보다 큰 값 또는 한정자 매개 변수에 잘못 된 값이 포함 된 <xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*>메서드.</xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*>"
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
  fullName: System.Security.AccessControl.ObjectAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "바이트의 이진 표현 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체입니다. 이 길이 ACL 사용을 이진 배열로 마샬링하기 전에 사용 해야는 <xref:System.Security.AccessControl.ObjectAce.GetBinaryForm*>메서드.</xref:System.Security.AccessControl.ObjectAce.GetBinaryForm*>"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "현재의 이진 표현 길이 (바이트)를 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.ObjectAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "내용을 마샬링합니다는 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체에 지정된 된 오프셋에서 시작 하 여 지정 된 바이트 배열입니다."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "바이트 배열 내용의 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 마샬링됩니다."
    - id: offset
      type: System.Int32
      description: "마샬링을 시작할 오프셋입니다."
  overload: System.Security.AccessControl.ObjectAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 음수 이거나 너무 높아서 전체 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 복사할 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  id: InheritedObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "(ACE (액세스 제어 항목)를 상속할 수 있는 개체 유형의 GUID를 가져오거나 설정 합니다.이 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체가 나타내는입니다."
  remarks: "경우의 값은 <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A>매개 변수 값을 포함 하지 않는 <xref:System.Security.AccessControl.ObjectAceFlags>,이 속성이 무시 됩니다.</xref:System.Security.AccessControl.ObjectAceFlags> </xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A>"
  syntax:
    content: public Guid InheritedObjectAceType { get; set; }
    return:
      type: System.Guid
      description: "(ACE (액세스 제어 항목)를 상속할 수 있는 개체 유형의 GUID이 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체가 나타내는입니다."
  overload: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  id: MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: MaxOpaqueLength(Boolean)
  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "최대 허용 길이 콜백 (Ace) 액세스 제어 항목에 대 한 불투명 데이터 BLOB의 바이트에서를 반환 합니다."
  syntax:
    content: public static int MaxOpaqueLength (bool isCallback);
    parameters:
    - id: isCallback
      type: System.Boolean
      description: "True 이면은 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 콜백 ACE 형식입니다."
    return:
      type: System.Int32
      description: "콜백 (Ace) 액세스 제어 항목에 대 한 불투명 데이터 BLOB의 바이트 단위로 허용 되는 최대 길이입니다."
  overload: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  id: ObjectAceFlags
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "지정 하는 플래그를 가져오거나 설정 합니다. 여부는 <> </> *> 및 <> </> *> 속성에 유효한 개체 형식을 식별 하는 값입니다."
  syntax:
    content: public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }
    return:
      type: System.Security.AccessControl.ObjectAceFlags
      description: "하나 이상의 멤버가 <xref href=&quot;System.Security.AccessControl.ObjectAceFlags&quot;> </xref> 열거형 논리적 OR 연산으로 결합 합니다."
  overload: System.Security.AccessControl.ObjectAce.ObjectAceFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType
  id: ObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 개체 유형의 GUID를 가져오거나 설정 합니다. <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체입니다."
  remarks: "경우의 값은 <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A>매개 변수 값을 포함 하지 않는 <xref:System.Security.AccessControl.ObjectAceFlags>,이 속성이 무시 됩니다.</xref:System.Security.AccessControl.ObjectAceFlags> </xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A>"
  syntax:
    content: public Guid ObjectAceType { get; set; }
    return:
      type: System.Guid
      description: "이 관련 된 개체 유형의 GUID <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.ObjectAce.ObjectAceType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: System.Security.AccessControl.QualifiedAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.ObjectAce.BinaryLength
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
  fullName: System.Security.AccessControl.ObjectAce.BinaryLength
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: MaxOpaqueLength(Boolean)
  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType
- uid: System.Security.AccessControl.ObjectAce.#ctor*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAce
  nameWithType: ObjectAce.ObjectAce
- uid: System.Security.AccessControl.ObjectAce.BinaryLength*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: ObjectAce.GetBinaryForm
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: ObjectAce.MaxOpaqueLength
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
