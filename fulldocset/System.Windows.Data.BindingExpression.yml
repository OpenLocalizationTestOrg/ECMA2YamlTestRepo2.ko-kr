### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  id: BindingExpression
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.ResolvedSource
  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpression.UpdateSource
  - System.Windows.Data.BindingExpression.UpdateTarget
  langs:
  - csharp
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  summary: "단일 인스턴스에 대 한 정보를 포함 한 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Data.Binding>클래스는 바인딩 선언에 대 한 높은 수준의 클래스.</xref:System.Windows.Data.Binding> BindingExpression 클래스가 바인딩 소스에서 바인딩 대상 사이의 연결을 유지 관리 하는 기본 개체입니다. A <xref:System.Windows.Data.Binding>여러 BindingExpression 개체 간에 공유할 수 있는 모든 정보를 포함 합니다.</xref:System.Windows.Data.Binding> BindingExpression는 공유할 수 없는 있고 <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> 에 대 한 모든 인스턴스 정보를 포함 하는 인스턴스 식       예를 들어 다음을 있는 `myDataObject` 의 인스턴스가 `MyData` 클래스 `myBinding` 원본인 <xref:System.Windows.Data.Binding>개체를 및 `MyData` 클래스는 문자열 속성을 포함 하는 정의 된 클래스 `MyDataProperty`.</xref:System.Windows.Data.Binding> 텍스트 내용을 바인딩하는이 예제 `mytext`의 인스턴스인 <xref:System.Windows.Controls.TextBlock>을 `MyDataProperty`.</xref:System.Windows.Controls.TextBlock>       [!code-cs[CodeOnlyBinding&#1;](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)][!code-vb[CodeOnlyBinding&#1;](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1) ] 동일한를 사용할 수 있습니다 `myBinding` 다른 바인딩을 만들 수 있는 개체입니다.   예를 들어, 사용할 수는 `myBinding` 하려면 확인란의 텍스트 콘텐츠를 `MyDataProperty`합니다. 이 시나리오에서는 됩니다 BindingExpression의 공유 하는 두 인스턴스는 `myBinding` 개체입니다.       사용 하 여 된 BindingExpression 개체를 가져올 수 있습니다는 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>메서드 또는 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A>데이터 바인딩된 개체에서 메서드.</xref:System.Windows.FrameworkElement.GetBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>"
  syntax:
    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements:
  - System.Windows.IWeakEventListener
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.HasError
  - System.Windows.Data.BindingExpressionBase.HasValidationError
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationError
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "바인딩 소스 개체를 가져옵니다이 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 사용 합니다."
  remarks: ''
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "바인딩 소스 개체가 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 사용 합니다."
  overload: System.Windows.Data.BindingExpression.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "반환 된 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> 현재 개체 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.Data.Binding ParentBinding { get; }
    return:
      type: System.Windows.Data.Binding
      description: "<xref href=&quot;System.Windows.Data.Binding&quot;> </xref> 개체는 현재 바인딩 식입니다."
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  id: ResolvedSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "이 바인딩 소스 개체를 가져옵니다 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>합니다."
  syntax:
    content: public object ResolvedSource { get; }
    return:
      type: System.Object
      description: "이 바인딩 소스 개체 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingExpression.ResolvedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  id: ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "이 바인딩 소스 속성의 이름을 가져옵니다 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>합니다."
  syntax:
    content: public string ResolvedSourcePropertyName { get; }
    return:
      type: System.String
      description: "이 바인딩 소스 속성의 이름 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "이 멤버는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "종류는 <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> 이 메서드를 호출 합니다. 이 유형의 관리자 개체 인식 <xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>합니다."
    - id: sender
      type: System.Object
      description: "이벤트를 발생 시킨 개체입니다."
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수신기; 이벤트를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "바인딩 소스 속성에 현재 바인딩 대상 값을 보냅니다 <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> 또는 <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> 바인딩."
  remarks: "이 메서드는 아무 작업도 수행 때 <xref:System.Windows.Data.Binding.Mode%2A>바인딩의 <xref:System.Windows.Data.BindingMode>나 <xref:System.Windows.Data.BindingMode>.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> 아닙니다</xref:System.Windows.Data.Binding.Mode%2A>       경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>바인딩의 값으로 설정 됩니다 <xref:System.Windows.Data.UpdateSourceTrigger>, UpdateSource 메서드를 호출 해야 또는 소스에 변경 내용을 전파 하지 것입니다.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>"
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "바인딩이 해당 대상에서 분리 되었습니다."
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "강제로 바인딩 대상 속성에 바인딩 소스 속성에서 데이터 전송 합니다."
  remarks: "이 메서드를 사용 하면 대상 속성에 source 속성에서 데이터 전송을 강제로 수 있습니다. 소스 개체와 같은 적절 한 속성 변경 알림 메커니즘을 구현 하는 경우 <xref:System.ComponentModel.INotifyPropertyChanged>를 대상으로 업데이트는 자동으로 발생 합니다.</xref:System.ComponentModel.INotifyPropertyChanged> 그러나 소스 개체가 적절 한 속성 변경 알림을 제공 하지 않는 경우에 명시적으로 대상 속성을 업데이트 하려면이 방법을 사용 하려면 옵션도 있습니다. 응용 프로그램을 정기적으로 대상 속성을 업데이트 해야 하는 경우에이 메서드를 사용할 수 있습니다."
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateTarget*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "바인딩이 해당 대상에서 분리 되었습니다."
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.BindingExpression.DataItem
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingExpression.ParentBinding
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.BindingExpression.UpdateSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
- uid: System.Windows.Data.BindingExpression.DataItem*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.ResolvedSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
- uid: System.Windows.Data.BindingExpression.UpdateTarget*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: BindingExpression.UpdateTarget
