### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualFileBase
  id: VirtualFileBase
  children:
  - System.Web.Hosting.VirtualFileBase.#ctor
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.IsDirectory
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  langs:
  - csharp
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
  type: Class
  summary: "에 대 한 핵심 구현을 제공는 <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> 및 <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> 개체입니다. 추상 클래스를 인스턴스화할 수 없습니다."
  remarks: "VirtualFileBase 추상 클래스는 공용 메서드를 제공 하 고 속성 간에 공유는 <xref:System.Web.Hosting.VirtualFile>및 <xref:System.Web.Hosting.VirtualDirectory>개체.</xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile> 이러한 클래스의 구현 파일 및 컴파일에 사용 되는 경로에 액세스할 수 있는 ASP.NET 런타임을 제공 합니다. 가상 파일 및 경로 사용에 대 한 자세한 내용은 <xref:System.Web.Hosting.VirtualPathProvider>클래스</xref:System.Web.Hosting.VirtualPathProvider> 를 참조 하십시오."
  syntax:
    content: 'public abstract class VirtualFileBase : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "상속된 된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 된 클래스에 의해서만 호출 될 수 있습니다."
  remarks: "<xref:System.Web.Hosting.VirtualFileBase>클래스를 상속 하는 클래스의 생성자에서이 생성자를 호출할 수</xref:System.Web.Hosting.VirtualFileBase> 의 인스턴스를 직접 생성할 수 있지만"
  syntax:
    content: protected VirtualFileBase ();
    parameters: []
  overload: System.Web.Hosting.VirtualFileBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "제공 된 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> 임대가 만들어지는 것을 방지 하 여 무한 수명을 인스턴스."
  remarks: "이 메서드 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>기본 클래스의 메서드</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 를 재정의합니다 액세스할 수 있으려면 `null` 및 가상 파일 또는 디렉터리의 수명을 제한 하는 임대가 만들어지지 않도록 합니다."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "파생된 클래스에서 재정의 되 면 나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> 인스턴스 가상 파일 또는 가상 디렉터리를 나타냅니다."
  syntax:
    content: public abstract bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> 인스턴스가 가상 디렉터리, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> 인스턴스가 가상 파일입니다."
  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.Name
  id: Name
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "가상 리소스의 표시 이름을 가져옵니다."
  remarks: "Name 속성은 일반적으로 파일 이름과 리소스와 연결 된 확장 가상 리소스에 임의의 이름을 사용할 수 있지만 합니다."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "가상 파일의 표시 이름입니다."
  overload: System.Web.Hosting.VirtualFileBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  id: VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "가상 파일 경로를 가져옵니다."
  remarks: "VirtualPath 속성을 파일이 나이 개체가 나타내는 디렉터리 경로 반환 합니다."
  syntax:
    content: public string VirtualPath { get; }
    return:
      type: System.String
      description: "가상 파일 경로입니다."
  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
- uid: System.Web.Hosting.VirtualFileBase.#ctor*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase.VirtualFileBase
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualFileBase.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
- uid: System.Web.Hosting.VirtualFileBase.Name*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
