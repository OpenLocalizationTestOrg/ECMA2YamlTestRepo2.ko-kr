### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WorkflowServiceHost
  id: WorkflowServiceHost
  children:
  - System.ServiceModel.WorkflowServiceHost.#ctor
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.WorkflowServiceHost.OnClosing
  langs:
  - csharp
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost
  fullName: System.ServiceModel.WorkflowServiceHost
  type: Class
  summary: "워크플로 기반 서비스에 대 한 호스트를 제공합니다."
  remarks: "사용 되는 호스트를 구현 하는 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 서비스 모델 프로그래밍 모델입니다.       WorkflowServiceHost 클래스를 사용 하 여 구성 하 고 서비스 노출을 위해 인터넷 정보 서비스 (IIS) 또는 서비스 WAS (Windows Activation)를 사용 하지 않는 경우 클라이언트 응용 프로그램에서 워크플로 사용할 서비스로 노출 합니다. IIS와 WAS 모두 사용자 대신 WorkflowServiceHost 개체 상호 작용합니다.       호출자가 사용할 서비스로 워크플로 노출 하려면 WCF에 필요한 자세한 서비스 설명이 (나타내는 <xref:System.ServiceModel.Description.ServiceDescription>클래스).</xref:System.ServiceModel.Description.ServiceDescription> WorkflowServiceHost 클래스 만듭니다는 <xref:System.ServiceModel.Description.ServiceDescription>워크플로 서비스 형식 및 구성 정보에서 다음 해당 설명을 사용 하 여 만들 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>설명의 각 끝점에 대 한 개체입니다.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.Description.ServiceDescription>       WorkflowServiceHost 개체를 사용 하 여 워크플로 서비스를 로드, 끝점을 구성 하 고, 보안 설정을 적용 하 고 들어오는 요청을 처리 하는 수신기를 시작 합니다."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스입니다."
  syntax:
    content: protected WorkflowServiceHost ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스는 워크플로 정 및 지정 된 서비스의 기본 주소를 포함 하는 바이트 스트림을 사용 합니다."
  remarks: "워크플로 정의가 데이터베이스와 같은 보안된 저장소에 저장 된 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>워크플로 정의 포함 합니다.</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  id: '#ctor(System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스는 워크플로 정 및 지정 된 서비스의 기본 주소에 대 한 경로 사용 합니다."
  remarks: "워크플로 정의 windows 파일의 형태로 표현 하는 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "워크플로 정의 파일의 경로를 포함 하는 문자열입니다."
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스 워크플로 유형 및 지정 된 서비스의 기본 주소를 사용 합니다."
  remarks: "워크플로가 컴파일된 형식으로 정의 하는 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (Type workflowType, Uri[] baseAddress);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>워크플로 인스턴스의.</xref:System.Type>"
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 워크플로 정의 포함 하는 바이트 스트림, 워크플로 포함 하는 바이트 스트림을 사용 하 여 클래스 정 및 지정 된 서비스의 기본 주소를 규칙입니다."
  remarks: "워크플로 정 및 규칙 정의가 데이터베이스와 같은 보안된 저장소에 저장 된 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>워크플로 정의 포함 합니다.</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>워크플로 규칙 정의 들어 있는입니다.</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  id: '#ctor(System.String,System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스는 워크플로 정의에 대 한 경로, 워크플로 규칙 정 및 지정 된 서비스의 기본 주소에 대 한 경로 사용 합니다."
  remarks: "워크플로 정 및 규칙 정의가 windows 파일 형식의 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "워크플로 정의 파일의 경로를 포함 하는 문자열입니다."
    - id: ruleDefinitionPath
      type: System.String
      description: "워크플로 규칙 정의 파일의 경로를 포함 하는 문자열입니다."
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 워크플로 정의 포함 하는 바이트 스트림, 워크플로 포함 하는 바이트 스트림을 사용 하 여 클래스 정의 사용자 지정 동작 형식의 형식 공급자 및 지정 된 서비스의 기본 주소를 규칙입니다."
  remarks: "컴파일된 워크플로에서 별도 어셈블리에 정의 된 사용자 지정 형식을 참조 하는 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>워크플로 정의 포함 합니다.</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>워크플로 규칙 정의 들어 있는입니다.</xref:System.IO.Stream>"
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "구현 하는 형식 공급자는 <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref> 인터페이스입니다."
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> 클래스는 워크플로 정의에 대 한 경로, 워크플로 규칙 정의 사용자 지정 동작 형식의 형식 공급자 및 지정 된 서비스의 기본 주소에 대 한 경로 사용 합니다."
  remarks: "워크플로 마크업 파일 (.xoml)에 정의 된 워크플로에서 별도 어셈블리에 정의 된 사용자 지정 형식을 참조 하는 경우이 오버 로드를 사용 합니다."
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "워크플로 정의 파일의 경로를 포함 하는 문자열입니다."
    - id: ruleDefinitionPath
      type: System.String
      description: "워크플로 규칙 정의 파일의 경로를 포함 하는 문자열입니다."
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "구현 하는 형식 공급자는 <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref> 인터페이스입니다."
    - id: baseAddress
      type: System.Uri[]
      description: "형식의 배열 <xref:System.Uri>호스팅된 서비스에 대 한 기본 주소를 포함 하는.</xref:System.Uri>"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소를 사용 하 여 워크플로 서비스에 대 한 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "추가 된 끝점의 주소입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>워크플로 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "워크플로 서비스를 구현 하지 않습니다 <code> implementedContract </code>합니다."
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩 및 끝점 주소를 포함 하는 URI와 워크플로 서비스에 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>워크플로 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "워크플로 서비스를 구현 하지 않습니다 <code> implementedContract </code>합니다."
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점 주소 및 서비스가 수신 대기 URI로 워크플로 서비스에 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.String
      description: "서비스에 대 한 끝점 주소입니다."
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>에 서비스 끝점이 수신 대기할 수 있습니다.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>워크플로 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>에 대해 지정 되지 <code> implementedContract </code>합니다.</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "지정 된 계약, 바인딩, 끝점 주소를 포함 하는 URI 및 서비스가 수신 대기 URI로 워크플로 서비스에 서비스 끝점을 추가 합니다."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>추가 된 끝점에 대 한 계약의.</xref:System.Type>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>추가 된 끝점에 대 한.</xref:System.ServiceModel.Channels.Binding>"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>추가 된 끝점 주소가 포함 된.</xref:System.Uri>"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>에 서비스 끝점이 수신 대기할 수 있습니다.</xref:System.Uri>"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>워크플로 서비스에 추가 합니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>에 대해 지정 되지 <code> implementedContract </code>합니다.</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "워크플로 서비스에 대 한 설명을 만듭니다."
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "이 메서드가 반환 될 때는 &lt;xref:System.Collections.Generic.IDictionary%602&gt; 키 계약 호스팅된 서비스의 구현 된 개체에 포함 되어 있습니다."
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref> 워크플로 서비스의 합니다."
  overload: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  id: OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "하기 전에이 메서드는 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> closing 상태로 전환 됩니다."
  remarks: "기본 구현 <xref:System.ServiceModel.WorkflowServiceHost> <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>.</xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName> 를 호출 하기 전에</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 호출</xref:System.ServiceModel.WorkflowServiceHost> 즉, 워크플로 런타임은 서비스 호스트가 닫히기 전에 종료 됩니다."
  syntax:
    content: protected override void OnClosing ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.OnClosing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
- uid: System.Workflow.ComponentModel.Compiler.ITypeProvider
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: ITypeProvider
  nameWithType: ITypeProvider
  fullName: System.Workflow.ComponentModel.Compiler.ITypeProvider
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost.WorkflowServiceHost
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: WorkflowServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: WorkflowServiceHost.CreateDescription
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing
  nameWithType: WorkflowServiceHost.OnClosing
