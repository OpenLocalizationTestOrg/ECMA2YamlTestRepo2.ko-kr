### YamlMime:ManagedReference
items:
- uid: System.Data.DataView
  id: DataView
  children:
  - System.Data.DataView.#ctor
  - System.Data.DataView.#ctor(System.Data.DataTable)
  - System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  - System.Data.DataView.AddNew
  - System.Data.DataView.AllowDelete
  - System.Data.DataView.AllowEdit
  - System.Data.DataView.AllowNew
  - System.Data.DataView.ApplyDefaultSort
  - System.Data.DataView.BeginInit
  - System.Data.DataView.Close
  - System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataView.CopyTo(System.Array,System.Int32)
  - System.Data.DataView.Count
  - System.Data.DataView.DataViewManager
  - System.Data.DataView.Delete(System.Int32)
  - System.Data.DataView.Dispose(System.Boolean)
  - System.Data.DataView.EndInit
  - System.Data.DataView.Equals(System.Data.DataView)
  - System.Data.DataView.Find(System.Object)
  - System.Data.DataView.Find(System.Object[])
  - System.Data.DataView.FindRows(System.Object)
  - System.Data.DataView.FindRows(System.Object[])
  - System.Data.DataView.GetEnumerator
  - System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  - System.Data.DataView.Initialized
  - System.Data.DataView.IsInitialized
  - System.Data.DataView.IsOpen
  - System.Data.DataView.Item(System.Int32)
  - System.Data.DataView.ListChanged
  - System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  - System.Data.DataView.Open
  - System.Data.DataView.Reset
  - System.Data.DataView.RowFilter
  - System.Data.DataView.RowStateFilter
  - System.Data.DataView.Sort
  - System.Data.DataView.System#Collections#ICollection#IsSynchronized
  - System.Data.DataView.System#Collections#ICollection#SyncRoot
  - System.Data.DataView.System#Collections#IList#Add(System.Object)
  - System.Data.DataView.System#Collections#IList#Clear
  - System.Data.DataView.System#Collections#IList#Contains(System.Object)
  - System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  - System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Data.DataView.System#Collections#IList#IsFixedSize
  - System.Data.DataView.System#Collections#IList#IsReadOnly
  - System.Data.DataView.System#Collections#IList#Item(System.Int32)
  - System.Data.DataView.System#Collections#IList#Remove(System.Object)
  - System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  - System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  - System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  - System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  - System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  - System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  - System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  - System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  - System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  - System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  - System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  - System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  - System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Data.DataView.Table
  - System.Data.DataView.ToTable
  - System.Data.DataView.ToTable(System.String)
  - System.Data.DataView.ToTable(System.Boolean,System.String[])
  - System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  - System.Data.DataView.UpdateIndex
  - System.Data.DataView.UpdateIndex(System.Boolean)
  langs:
  - csharp
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
  type: Class
  summary: "데이터 바인딩할 수, 사용자 지정된 뷰를 나타냅니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 정렬, 필터링, 검색, 편집 및 탐색에 대 한 합니다. DataView 데이터를 저장 하지 않지만, 대신 해당 연결된 된 뷰를 나타내는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다. DataView의 데이터에 대 한 변경 내용이 영향을 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다. 변경 된 <xref href=&quot;System.Data.DataTable&quot;> </xref>의 데이터에는 연결 된 모든 데이터 보기에 영향을 줍니다."
  remarks: "DataView의 주요 기능은 Windows Forms 및 Web Forms에 데이터 바인딩을 허용 것입니다.       또한 DataView 사용자 지정할 수 있는 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 에서 데이터의 하위 집합을 표시 하도록 이 기능을 사용 하면 동일한에 바인딩된 두 컨트롤 <xref:System.Data.DataTable>는 없지만 다른 버전의 데이터를 표시 합니다.</xref:System.Data.DataTable> 예를 들어 테이블의 모든 행을 보여 주는 DataView에 바인딩하여 한 컨트롤 및 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 삭제 된 행만 표시 하도록 두 번째를 구성할 수 있습니다. <xref:System.Data.DataTable>역시는 <xref:System.Data.DataTable.DefaultView%2A>속성.</xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataTable> 테이블에 대 한 기본 DataView를 반환합니다. 예를 들어 테이블에 사용자 지정 보기를 만들려는 경우는 설정 <xref:System.Data.DataView.RowFilter%2A>에 <xref:System.Data.DataTable.DefaultView%2A>.</xref:System.Data.DataTable.DefaultView%2A> 반환 DataView에</xref:System.Data.DataView.RowFilter%2A>       데이터의 필터링 및 정렬 된 뷰를 만들려면 설정는 <xref:System.Data.DataView.RowFilter%2A>및 <xref:System.Data.DataView.Sort%2A>속성.</xref:System.Data.DataView.Sort%2A> </xref:System.Data.DataView.RowFilter%2A> 그런 다음 <xref:System.Data.DataView.Item%2A>단일 <xref:System.Data.DataRowView>.</xref:System.Data.DataRowView> 반환 하는 속성</xref:System.Data.DataView.Item%2A> 을 사용 하 여       추가 하 고 사용 하 여 행 집합에서 삭제할 수도 있습니다는 <xref:System.Data.DataView.AddNew%2A>및 <xref:System.Data.DataView.Delete%2A>메서드.</xref:System.Data.DataView.Delete%2A> </xref:System.Data.DataView.AddNew%2A> 이러한 메서드를 사용 하는 경우는 <xref:System.Data.DataView.RowStateFilter%2A>속성으로는 DataView에서 삭제 된 행 이나 새 행만 표시 되도록 지정 설정할.</xref:System.Data.DataView.RowStateFilter%2A>      > [!NOTE] >에 대 한 정렬 조건을 명시적으로 지정 하지 않으면 `DataView`, `DataRowView` 개체 `DataView` DataView의 해당 인덱스에 따라 정렬 됩니다 `DataRow` 에 `DataTable.Rows``DataRowCollection`합니다.       [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)]개발자가 복잡 하 고 강력한 쿼리를 통해 만들 수 있습니다는 <xref:System.Data.DataSet>를 사용 하 여 [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)].</xref:System.Data.DataSet> 그러나 A [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] 의 열거형을 반환 하는 쿼리 <xref:System.Data.DataRow>하는 개체를 쉽게 바인딩 시나리오에 사용 되지 않습니다.</xref:System.Data.DataRow> DataView에서 만들 수 있습니다는 [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] 쿼리하고 필터링 및 정렬 해당 쿼리의 특성을 수행 합니다. [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)]DataView의 기능을 제공 하 여 확장 [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] 식 기반 필터링 및 정렬을 훨씬 더 복잡 하 고 강력한 필터링 및 정렬 문자열 기반 필터링 및 정렬 작업에 대 한 수 있습니다. 참조 [데이터 바인딩 및 LINQ to DataSet](~/add/includes/ajax-current-ext-md.md) 자세한 정보에 대 한 합니다."
  example:
  - "The following example creates a single <xref:System.Data.DataTable> with one column and five rows. Two DataView objects are created and the <xref:System.Data.DataView.RowStateFilter%2A> is set on each to show different views of the table data. The values are then printed.  \n  \n [!code-cs[Classic WebData DataView Example#1](~/add/codesnippet/csharp/t-system.data.dataview_1.cs)]\n [!code-vb[Classic WebData DataView Example#1](~/add/codesnippet/visualbasic/t-system.data.dataview_1.vb)]  \n  \n The following example creates a DataView of online orders ordered by total due from a [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] query:  \n  \n [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/add/codesnippet/visualbasic/DataViewSamplesVB/Form1.vb#createldvfromquery1)]\n [!code-cs[DP DataView Samples#CreateLDVFromQuery1](~/add/codesnippet/csharp/DataViewSamples/Form1.cs#createldvfromquery1)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PositionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.DataViewDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataSourceEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class DataView : System.ComponentModel.MarshalByValueComponent, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList
  inheritance:
  - System.Object
  - System.ComponentModel.MarshalByValueComponent
  implements:
  - System.Collections.IList
  - System.ComponentModel.IBindingListView
  - System.ComponentModel.ISupportInitializeNotification
  - System.ComponentModel.ITypedList
  inheritedMembers:
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.Site
  - System.ComponentModel.MarshalByValueComponent.ToString
  platform:
  - net462
- uid: System.Data.DataView.#ctor
  id: '#ctor'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView()
  nameWithType: DataView.DataView()
  fullName: System.Data.DataView.DataView()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataView&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.DataView Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.s_1_1.vb)]\n [!code-cs[Classic WebData DataView.DataView Example#1](~/add/codesnippet/csharp/m-system.data.dataview.s_1_1.cs)]"
  syntax:
    content: public DataView ();
    parameters: []
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView(DataTable)
  nameWithType: DataView.DataView(DataTable)
  fullName: System.Data.DataView.DataView(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataView&quot;> </xref> 지정된 된 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView> with the specified <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataView.DataView1 Example#1](~/add/codesnippet/csharp/m-system.data.dataview.s_0_1.cs)]\n [!code-vb[Classic WebData DataView.DataView1 Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.s_0_1.vb)]"
  syntax:
    content: public DataView (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> to add to the <xref href=&quot;System.Data.DataView&quot;></xref>."
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  id: '#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView(DataTable,String,String,DataViewRowState)
  nameWithType: DataView.DataView(DataTable,String,String,DataViewRowState)
  fullName: System.Data.DataView.DataView(DataTable,String,String,DataViewRowState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataView&quot;> </xref> 지정된 된 <xref href=&quot;System.Data.DataTable&quot;> </xref>, <> </> *>, <> </> *>, 및 <xref href=&quot;System.Data.DataViewRowState&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView> with the specified <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataView.DataView2 Example#1](~/add/codesnippet/csharp/e4f882a2-017f-4107-962a-_1.cs)]\n [!code-vb[Classic WebData DataView.DataView2 Example#1](~/add/codesnippet/visualbasic/e4f882a2-017f-4107-962a-_1.vb)]"
  syntax:
    content: public DataView (System.Data.DataTable table, string RowFilter, string Sort, System.Data.DataViewRowState RowState);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> to add to the <xref href=&quot;System.Data.DataView&quot;></xref>."
    - id: RowFilter
      type: System.String
      description: "A <xref:System.Data.DataView.RowFilter*>에 적용할는 <xref href=&quot;System.Data.DataView&quot;> </xref>.</xref:System.Data.DataView.RowFilter*>"
    - id: Sort
      type: System.String
      description: "A <xref:System.Data.DataView.Sort*>에 적용할는 <xref href=&quot;System.Data.DataView&quot;> </xref>.</xref:System.Data.DataView.Sort*>"
    - id: RowState
      type: System.Data.DataViewRowState
      description: "A <xref href=&quot;System.Data.DataViewRowState&quot;></xref> to apply to the <xref href=&quot;System.Data.DataView&quot;></xref>."
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AddNew
  id: AddNew
  parent: System.Data.DataView
  langs:
  - csharp
  name: AddNew()
  nameWithType: DataView.AddNew()
  fullName: System.Data.DataView.AddNew()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 행을 추가 하는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example uses the AddNew method to return a new <xref:System.Data.DataRowView> that has been added to the <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataView.AddNew Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.a_1.vb)]\n [!code-cs[Classic WebData DataView.AddNew Example#1](~/add/codesnippet/csharp/m-system.data.dataview.a_1.cs)]"
  syntax:
    content: public virtual System.Data.DataRowView AddNew ();
    parameters: []
    return:
      type: System.Data.DataRowView
      description: "새 <xref href=&quot;System.Data.DataRowView&quot;> </xref> 개체입니다."
  overload: System.Data.DataView.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowDelete
  id: AllowDelete
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowDelete
  nameWithType: DataView.AllowDelete
  fullName: System.Data.DataView.AllowDelete
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "삭제가 허용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example checks the AllowDelete property before deleting a <xref:System.Data.DataRow> from a <xref:System.Data.DataView>.  \n  \n [!code-cs[Classic WebData DataView.AllowDelete Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_1_1.cs)]\n [!code-vb[Classic WebData DataView.AllowDelete Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_1_1.vb)]"
  syntax:
    content: public bool AllowDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 삭제가 허용 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.AllowDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowEdit
  id: AllowEdit
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowEdit
  nameWithType: DataView.AllowEdit
  fullName: System.Data.DataView.AllowEdit
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example invokes the AllowEdit method before editing a row in a <xref:System.Data.DataView>.  \n  \n [!code-cs[Classic WebData DataView.AllowEdit Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_2_1.cs)]\n [!code-vb[Classic WebData DataView.AllowEdit Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_2_1.vb)]"
  syntax:
    content: public bool AllowEdit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>편집이 허용 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowNew
  id: AllowNew
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowNew
  nameWithType: DataView.AllowNew
  fullName: System.Data.DataView.AllowNew
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "사용 하 여 새 행을 추가할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Data.DataView.AddNew*>메서드.</xref:System.Data.DataView.AddNew*>"
  remarks: ''
  example:
  - "The following example sets the AllowNew property to true before adding a new row with the <xref:System.Data.DataView.AddNew%2A> method.  \n  \n [!code-vb[Classic WebData DataView.AllowNew Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_0_1.vb)]\n [!code-cs[Classic WebData DataView.AllowNew Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_0_1.cs)]"
  syntax:
    content: public bool AllowNew { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 행을 추가할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ApplyDefaultSort
  id: ApplyDefaultSort
  parent: System.Data.DataView
  langs:
  - csharp
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
  fullName: System.Data.DataView.ApplyDefaultSort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "기본 정렬을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다. 기본 정렬 됩니다 (오름차순) <xref:System.Data.DataTable.PrimaryKey*>.</xref:System.Data.DataTable.PrimaryKey*> 에 지정 된 대로 모든 기본 키에"
  syntax:
    content: public bool ApplyDefaultSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 기본 정렬이 사용 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.ApplyDefaultSort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.BeginInit
  id: BeginInit
  parent: System.Data.DataView
  langs:
  - csharp
  name: BeginInit()
  nameWithType: DataView.BeginInit()
  fullName: System.Data.DataView.BeginInit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "초기화를 시작는 <xref href=&quot;System.Data.DataView&quot;> </xref> 폼에 사용 되거나 다른 구성 요소에서 사용 하 합니다. 초기화는 런타임에 발생합니다."
  remarks: "Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 시작 합니다. <xref:System.Data.DataView.EndInit%2A>메서드 초기화를 끝냅니다.</xref:System.Data.DataView.EndInit%2A> 사용 하는 `BeginInit` 및 `EndInit` 메서드는 컨트롤이 완전히 초기화 되기 전에 사용 되지 않습니다."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Data.DataView.BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Close
  id: Close
  parent: System.Data.DataView
  langs:
  - csharp
  name: Close()
  nameWithType: DataView.Close()
  fullName: System.Data.DataView.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "닫습니다는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "메서드가 수동으로 닫을 수 있습니다는 <xref:System.Data.DataView>파생 클래스에서.</xref:System.Data.DataView> 해당 <xref:System.Data.DataView.Open%2A> <xref:System.Data.DataView>.</xref:System.Data.DataView> 여 메서드를</xref:System.Data.DataView.Open%2A> 사용 하 여       이 속성은 내부 전용 위한 것입니다."
  syntax:
    content: protected void Close ();
    parameters: []
  overload: System.Data.DataView.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  id: ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  nameWithType: DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  fullName: System.Data.DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "다음에 발생 한 <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref> 성공적으로 변경 되었습니다."
  syntax:
    content: protected virtual void ColumnCollectionChanged (object sender, System.ComponentModel.CollectionChangeEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Data.DataView.ColumnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataView.CopyTo(Array,Int32)
  fullName: System.Data.DataView.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "배열에 항목을 복사 합니다. Web Forms 인터페이스에 대해서만 합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "복사할 대상 배열입니다."
    - id: index
      type: System.Int32
      description: "시작 인덱스입니다."
  overload: System.Data.DataView.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Count
  id: Count
  parent: System.Data.DataView
  langs:
  - csharp
  name: Count
  nameWithType: DataView.Count
  fullName: System.Data.DataView.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "에 있는 레코드의 수를 가져옵니다는 <xref href=&quot;System.Data.DataView&quot;> </xref> 후 <> </> *> 및 <> </> *> 적용 되었습니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "에 있는 레코드의 수는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  overload: System.Data.DataView.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.DataViewManager
  id: DataViewManager
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataViewManager
  nameWithType: DataView.DataViewManager
  fullName: System.Data.DataView.DataViewManager
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataViewManager&quot;> </xref> 이 보기에 연결 된 합니다."
  syntax:
    content: public System.Data.DataViewManager DataViewManager { get; }
    return:
      type: System.Data.DataViewManager
      description: "<xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> 이 보기를 만든입니다. 이것이 기본 설정 하는 경우 <xref href=&quot;System.Data.DataView&quot;> </xref> 에 대 한는 <xref href=&quot;System.Data.DataTable&quot;> </xref>, <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> 속성은 기본 반환 <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> 에 대 한는 <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref>합니다. 그렇지 않은 경우, 고 <xref uid=&quot;langword_csharp_DataView&quot; name=&quot;DataView&quot; href=&quot;&quot;> </xref> 없이 만든는 <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref>,이 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.DataViewManager*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Delete(System.Int32)
  id: Delete(System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Delete(Int32)
  nameWithType: DataView.Delete(Int32)
  fullName: System.Data.DataView.Delete(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정된 된 인덱스에서 행을 삭제합니다."
  remarks: "삭제 한 후 한 <xref:System.Data.DataRow>, 상태 변경 `DataViewRowState.Deleted`.</xref:System.Data.DataRow> 롤백할 수 있습니다 삭제 <xref:System.Data.DataTable.RejectChanges%2A> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 에서</xref:System.Data.DataTable.RejectChanges%2A> 호출 하 여"
  example:
  - "The following example uses the Delete method to delete a row.  \n  \n [!code-vb[Classic WebData DataView.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.d_1.vb)]"
  syntax:
    content: public void Delete (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "삭제할 행의 인덱스입니다."
  overload: System.Data.DataView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataView.Dispose(Boolean)
  fullName: System.Data.DataView.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "사용 하는 리소스 (메모리 제외) 삭제는 <xref href=&quot;System.Data.DataView&quot;> </xref> 개체입니다."
  remarks: "속성 변경 알림을 사이 <xref:System.Data.DataView>와 기본 <xref:System.Data.DataTable>이 메서드가 호출 된 후 중지 합니다.</xref:System.Data.DataTable> </xref:System.Data.DataView> 모든에 대해 dispose를 호출 해야 <xref:System.Data.DataView>개체입니다.</xref:System.Data.DataView>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Data.DataView.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.EndInit
  id: EndInit
  parent: System.Data.DataView
  langs:
  - csharp
  name: EndInit()
  nameWithType: DataView.EndInit()
  fullName: System.Data.DataView.EndInit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "초기화를 종료 한 <xref href=&quot;System.Data.DataView&quot;> </xref> 폼에 사용 되거나 다른 구성 요소에서 사용 하 합니다. 초기화는 런타임에 발생합니다."
  remarks: "Visual Studio 디자인 환경이이 메서드를 사용 하 여 폼에 사용 되거나 다른 구성 요소에서 사용 하는 구성 요소 초기화를 끝냅니다. <xref:System.Data.DataView.BeginInit%2A>메서드 초기화를 시작 합니다.</xref:System.Data.DataView.BeginInit%2A> 사용 하는 `BeginInit` 및 `EndInit` 메서드는 컨트롤이 완전히 초기화 되기 전에 사용 되지 않습니다."
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Data.DataView.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Equals(System.Data.DataView)
  id: Equals(System.Data.DataView)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Equals(DataView)
  nameWithType: DataView.Equals(DataView)
  fullName: System.Data.DataView.Equals(DataView)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "결정 하는지 여부를 지정 된 <xref href=&quot;System.Data.DataView&quot;> </xref> 인스턴스 같은 것으로 간주 됩니다."
  syntax:
    content: public virtual bool Equals (System.Data.DataView view);
    parameters:
    - id: view
      type: System.Data.DataView
      description: "<xref href=&quot;System.Data.DataView&quot;> </xref> 비교 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 두 <xref href=&quot;System.Data.DataView&quot;> </xref> 같고, 그렇지 않으면 인스턴스는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Find(System.Object)
  id: Find(System.Object)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Find(Object)
  nameWithType: DataView.Find(Object)
  fullName: System.Data.DataView.Find(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행을 찾습니다는 <xref href=&quot;System.Data.DataView&quot;> </xref> 지정 된 정렬 키 값으로."
  remarks: ''
  example:
  - "The following Visual Basic example uses the Find method to return the index of the row that contains the value in the sort key column that you want.  \n  \n [!code-vb[Classic WebData DataView.Find Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.f_0_1.vb)]"
  syntax:
    content: public int Find (object key);
    parameters:
    - id: key
      type: System.Object
      description: "검색할 개체입니다."
    return:
      type: System.Int32
      description: "행의 인덱스는 <xref href=&quot;System.Data.DataView&quot;> </xref> 지정 된 정렬 키 값이 포함 된; 그렇지 않으면-1에서 정렬 키 값이 없으면 존재 하지 않습니다."
  overload: System.Data.DataView.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Find(System.Object[])
  id: Find(System.Object[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: Find(Object[])
  nameWithType: DataView.Find(Object[])
  fullName: System.Data.DataView.Find(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행을 찾습니다는 <xref href=&quot;System.Data.DataView&quot;> </xref> 지정 된 정렬 키 값에 의해 합니다."
  remarks: ''
  example:
  - "The following Visual Basic example uses the <xref:System.Data.DataView.Find%2A> method to return the index of a row that contains specified values in its sort key columns.  \n  \n [!code-vb[Classic WebData DataView.Find1 Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.f_1_1.vb)]"
  syntax:
    content: public int Find (object[] key);
    parameters:
    - id: key
      type: System.Object[]
      description: "<xref:System.Object>.</xref:System.Object> 로 형식화 된 값의 배열"
    return:
      type: System.Int32
      description: "첫 번째 행 위치의 인덱스는 <xref href=&quot;System.Data.DataView&quot;> </xref> 없으면 일치 하는 정렬 키 값이 고, 그렇지 않으면 지정 된 정렬 키 값을 일치 하는 합니다."
  overload: System.Data.DataView.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.FindRows(System.Object)
  id: FindRows(System.Object)
  parent: System.Data.DataView
  langs:
  - csharp
  name: FindRows(Object)
  nameWithType: DataView.FindRows(Object)
  fullName: System.Data.DataView.FindRows(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "배열을 반환 <xref href=&quot;System.Data.DataRowView&quot;> </xref> 키 값 열에 지정된 된 정렬과 일치 합니다."
  syntax:
    content: public System.Data.DataRowView[] FindRows (object key);
    parameters:
    - id: key
      type: System.Object
      description: "<xref:System.Object>검색</xref:System.Object> 로 형식화 된 열 값"
    return:
      type: System.Data.DataRowView[]
      description: "배열을 <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> 키 값 열과 지정된 된 정렬 일치 행이 없는 빈 지정 된 정렬 키 값을 포함 하는 경우 또는 <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> 배열입니다."
  overload: System.Data.DataView.FindRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.FindRows(System.Object[])
  id: FindRows(System.Object[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: FindRows(Object[])
  nameWithType: DataView.FindRows(Object[])
  fullName: System.Data.DataView.FindRows(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "배열을 반환 <xref href=&quot;System.Data.DataRowView&quot;> </xref> 키 값 열에 지정된 된 정렬과 일치 합니다."
  syntax:
    content: public System.Data.DataRowView[] FindRows (object[] key);
    parameters:
    - id: key
      type: System.Object[]
      description: "<xref:System.Object>검색</xref:System.Object> 로 형식화 되는 열 값의 배열"
    return:
      type: System.Data.DataRowView[]
      description: "배열을 <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> 키 값 열과 지정된 된 정렬 일치 행이 없는 빈 지정 된 정렬 키 값을 포함 하는 경우 또는 <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> 배열입니다."
  overload: System.Data.DataView.FindRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataView
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataView.GetEnumerator()
  fullName: System.Data.DataView.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 대 한 열거자를 가져옵니다 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>목록 전체를 탐색 하는 것에 대 한.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataView.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  id: IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: IndexListChanged(Object,ListChangedEventArgs)
  nameWithType: DataView.IndexListChanged(Object,ListChangedEventArgs)
  fullName: System.Data.DataView.IndexListChanged(Object,ListChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "다음에 발생 한 <xref href=&quot;System.Data.DataView&quot;> </xref> 성공적으로 변경 되었습니다."
  syntax:
    content: protected virtual void IndexListChanged (object sender, System.ComponentModel.ListChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.ComponentModel.ListChangedEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Data.DataView.IndexListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Initialized
  id: Initialized
  parent: System.Data.DataView
  langs:
  - csharp
  name: Initialized
  nameWithType: DataView.Initialized
  fullName: System.Data.DataView.Initialized
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "발생 경우의 초기화는 <xref href=&quot;System.Data.DataView&quot;> </xref> 완료 합니다."
  syntax:
    content: public event EventHandler Initialized;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IsInitialized
  id: IsInitialized
  parent: System.Data.DataView
  langs:
  - csharp
  name: IsInitialized
  nameWithType: DataView.IsInitialized
  fullName: System.Data.DataView.IsInitialized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "구성 요소가 초기화 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsInitialized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>초기화가 완료를 나타내는 구성 요소 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.IsInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IsOpen
  id: IsOpen
  parent: System.Data.DataView
  langs:
  - csharp
  name: IsOpen
  nameWithType: DataView.IsOpen
  fullName: System.Data.DataView.IsOpen
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 원본이 현재 열려 있고 데이터 보기에 인지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  remarks: "A <xref:System.Data.DataView>&quot;view&quot; 켜져는 <xref:System.Data.DataTable>사용자 지정 정렬 및 데이터의 필터링을 제공 하기 때문에.</xref:System.Data.DataTable> </xref:System.Data.DataView> IsOpen 속성 수를 쿼리하여 확인할 수 있는지는 <xref:System.Data.DataView>를 사용 하 여 열린는 <xref:System.Data.DataView.Open%2A>메서드.</xref:System.Data.DataView.Open%2A> </xref:System.Data.DataView>       이 속성은 내부 전용 위한 것입니다."
  syntax:
    content: protected bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>원본이 열려 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataView.IsOpen*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataView.Item(Int32)
  fullName: System.Data.DataView.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정된 된 테이블에서 데이터의 행을 가져옵니다."
  syntax:
    content: public System.Data.DataRowView this[int recordIndex] { get; }
    parameters:
    - id: recordIndex
      type: System.Int32
      description: "에 있는 레코드의 인덱스는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    return:
      type: System.Data.DataRowView
      description: "A <xref href=&quot;System.Data.DataRowView&quot;> </xref> 원하는 행의 합니다."
  overload: System.Data.DataView.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ListChanged
  id: ListChanged
  parent: System.Data.DataView
  langs:
  - csharp
  name: ListChanged
  nameWithType: DataView.ListChanged
  fullName: System.Data.DataView.ListChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "목록에서 관리 하는 경우에 발생는 <xref href=&quot;System.Data.DataView&quot;> </xref> 변경 합니다."
  remarks: ''
  example:
  - "The following example adds a handler for the ListChanged event of a <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.ListChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.dataview.l_1.vb)]\n [!code-cs[Classic WebData DataView.ListChanged Example#1](~/add/codesnippet/csharp/e-system.data.dataview.l_1.cs)]"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  id: OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: DataView.OnListChanged(ListChangedEventArgs)
  fullName: System.Data.DataView.OnListChanged(ListChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "발생 된 <xref href=&quot;System.Data.DataView.ListChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.ListChangedEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Data.DataView.OnListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Open
  id: Open
  parent: System.Data.DataView
  langs:
  - csharp
  name: Open()
  nameWithType: DataView.Open()
  fullName: System.Data.DataView.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opens a <xref href=&quot;System.Data.DataView&quot;></xref>."
  remarks: "메서드를 사용 하면 수동으로 열고는 <xref:System.Data.DataView>파생 클래스에서.</xref:System.Data.DataView> 해당 하는 <xref:System.Data.DataView.Close%2A>메서드를 닫습니다 <xref:System.Data.DataView>.</xref:System.Data.DataView> 를</xref:System.Data.DataView.Close%2A> 사용 하 여       이 속성은 내부 전용 위한 것입니다."
  syntax:
    content: protected void Open ();
    parameters: []
  overload: System.Data.DataView.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Reset
  id: Reset
  parent: System.Data.DataView
  langs:
  - csharp
  name: Reset()
  nameWithType: DataView.Reset()
  fullName: System.Data.DataView.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 속성은 내부 전용으로 예약되어 있으므로"
  syntax:
    content: protected void Reset ();
    parameters: []
  overload: System.Data.DataView.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.RowFilter
  id: RowFilter
  parent: System.Data.DataView
  langs:
  - csharp
  name: RowFilter
  nameWithType: DataView.RowFilter
  fullName: System.Data.DataView.RowFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "필터링에 표시할 행을 하는 데 사용 되는 식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "RowFilter 값을 구성 하려면 다음 연산자와 값을 필터링 할 열의 이름을 지정 합니다. 값은 따옴표로 이어야 합니다. 예: &quot;LastName &quot;Smith&quot; =&quot; 참조는 <xref:System.Data.DataColumn.Expression%2A>의 속성은 <xref:System.Data.DataColumn>클래스에 대 한 자세한 내용은.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.Expression%2A>       Null 값을 가진 열만을 반환 하려면 다음 식을 사용 하 여: &quot;Isnull (Col1, &quot;Null 열&quot;) = &quot;Null 열&quot;&quot;"
  example:
  - "The following example creates a <xref:System.Data.DataView> and sets its RowFilter property.  \n  \n [!code-cs[Classic WebData DataView.RowFilter Example#1](~/add/codesnippet/csharp/p-system.data.dataview.r_1_1.cs)]\n [!code-vb[Classic WebData DataView.RowFilter Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.r_1_1.vb)]"
  syntax:
    content: public virtual string RowFilter { get; set; }
    return:
      type: System.String
      description: "행을 필터링 할 방법을 지정 하는 문자열입니다. 자세한 내용은 설명 섹션을 참조 합니다."
  overload: System.Data.DataView.RowFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.RowStateFilter
  id: RowStateFilter
  parent: System.Data.DataView
  langs:
  - csharp
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
  fullName: System.Data.DataView.RowStateFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "사용 되는 행 상태 필터를 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "사용 하 여 삭제 된 행만는 <xref:System.Data.DataView.Delete%2A>메서드 RowStateFilter 값으로 설정 되어 해당 갖습니다 `Deleted`.</xref:System.Data.DataView.Delete%2A> 사용 하 여 추가 된 행은 <xref:System.Data.DataView.AddNew%2A>메서드 속성 집합을 갖습니다 마찬가지로 `Added`.</xref:System.Data.DataView.AddNew%2A>      > [!NOTE] >를 사용 하 여는 <xref:System.Data.DataRowCollection.Remove%2A>의 메서드는 <xref:System.Data.DataRowCollection>클래스 하더라도 행으로 표시 되지는 `Deleted`.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> 사용 하 여 <xref:System.Data.DataView.Delete%2A>메서드 대신 되도록 이러한 행에서에서 볼 수 있는 <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView.Delete%2A>       새 행도 표시 됩니다는 RowStateFilter로 설정 된 경우 `ModifiedCurrent` 또는 `CurrentRows`합니다.       삭제 된 행도 표시 됩니다는 RowStateFilter로 설정 된 경우 `ModifiedOriginal` 및 `OriginalRows`합니다."
  example:
  - "The following example creates a <xref:System.Data.DataTable> with a single column, and then changes the data and sets the RowStateFilter of the <xref:System.Data.DataView> to display different row sets, depending on the <xref:System.Data.DataViewRowState>.  \n  \n [!code-vb[Classic WebData DataView.RowStateFilter Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.r_0_1.vb)]\n [!code-cs[Classic WebData DataView.RowStateFilter Example#1](~/add/codesnippet/csharp/p-system.data.dataview.r_0_1.cs)]"
  syntax:
    content: public System.Data.DataViewRowState RowStateFilter { get; set; }
    return:
      type: System.Data.DataViewRowState
      description: "중 하나는 <xref href=&quot;System.Data.DataViewRowState&quot;> </xref> 값입니다."
  overload: System.Data.DataView.RowStateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Sort
  id: Sort
  parent: System.Data.DataView
  langs:
  - csharp
  name: Sort
  nameWithType: DataView.Sort
  fullName: System.Data.DataView.Sort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "열 또는 열 및 정렬 순서를 가져오거나 설정의 정렬 된 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "에 대 한 정렬 조건을 명시적으로 지정 하지 않으면 `DataView`, `DataRowView` 개체 `DataView` 해당 인덱스에 따라 정렬 됩니다 `DataRow` 에 `DataTable.Rows``DataRowCollection`합니다.       자세한 내용은 참조 [데이터 보기](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example instructs the <xref:System.Data.DataView> to sort the table by two columns.  \n  \n [!code-cs[Classic WebData DataView.Sort Example#1](~/add/codesnippet/csharp/p-system.data.dataview.s_1.cs)]\n [!code-vb[Classic WebData DataView.Sort Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.s_1.vb)]"
  syntax:
    content: public string Sort { get; set; }
    return:
      type: System.String
      description: "뒤에 &quot;ASC&quot; (오름차순) 또는 &quot;DESC&quot; (내림차순) 열 이름을 포함 하는 문자열입니다. 열은 기본적으로 오름차순으로 정렬 됩니다. 여러 열을 쉼표로 구분할 수 있습니다."
  overload: System.Data.DataView.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.DataView.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
  fullName: System.Data.DataView.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Data.DataView>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DataView.System.Collections.IList.Add(Object)
  fullName: System.Data.DataView.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>값.</xref:System.Object>"
    return:
      type: System.Int32
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DataView.System.Collections.IList.Clear()
  fullName: System.Data.DataView.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 이 멤버의 사용은 지원 되지 않으며 <xref:System.ArgumentException>.</xref:System.ArgumentException> 하면 대신, Clear 메서드를 사용 하 여 <xref:System.Data.DataRowCollection> <xref:System.Data.DataTable.Rows%2A>.</xref:System.Data.DataTable.Rows%2A> 에서 반환 된 개체</xref:System.Data.DataRowCollection> 에서"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Data.DataView.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataView.System.Collections.IList.Contains(Object)
  fullName: System.Data.DataView.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>값.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataView.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.DataView.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>값.</xref:System.Object>"
    return:
      type: System.Int32
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataView.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.DataView.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A <xref:System.Int32>값.</xref:System.Int32>"
    - id: value
      type: System.Object
      description: "A <xref:System.Object>값을 삽입할 수 있습니다.</xref:System.Object>"
  overload: System.Data.DataView.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
  fullName: System.Data.DataView.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
  fullName: System.Data.DataView.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataView.System.Collections.IList.Item(Int32)
  fullName: System.Data.DataView.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: object System.Collections.IList.Item[int recordIndex] { get; set; }
    parameters:
    - id: recordIndex
      type: System.Int32
      description: "A <xref:System.Int32>값.</xref:System.Int32>"
    return:
      type: System.Object
      description: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataView.System.Collections.IList.Remove(Object)
  fullName: System.Data.DataView.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>값.</xref:System.Object>"
  overload: System.Data.DataView.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataView.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Data.DataView.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A <xref:System.Int32>값.</xref:System.Int32>"
  overload: System.Data.DataView.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AddIndex%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  id: System#ComponentModel#IBindingList#AddNew
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AddNew()
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: object IBindingList.AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "항목 목록에 추가 됩니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  id: System#ComponentModel#IBindingList#AllowEdit
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowEdit%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowEdit { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowEdit%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  id: System#ComponentModel#IBindingList#AllowNew
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowNew { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  id: System#ComponentModel#IBindingList#AllowRemove
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowRemove { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.ApplySort%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDirection&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  nameWithType: DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: int IBindingList.Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
    - id: key
      type: System.Object
      description: "A <xref:System.Object>값.</xref:System.Object>"
    return:
      type: System.Int32
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  id: System#ComponentModel#IBindingList#IsSorted
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.IsSorted%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.IsSorted { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.IsSorted%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.RemoveIndex%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  id: System#ComponentModel#IBindingList#RemoveSort
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.RemoveSort()
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.RemoveSort ();
    parameters: []
  overload: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  id: System#ComponentModel#IBindingList#SortDirection
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  id: System#ComponentModel#IBindingList#SortProperty
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  id: System#ComponentModel#IBindingList#SupportsChangeNotification
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  id: System#ComponentModel#IBindingList#SupportsSearching
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  id: System#ComponentModel#IBindingList#SupportsSorting
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingList>인터페이스.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  id: System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.ApplySort%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingListView.ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);
    parameters:
    - id: sorts
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDescriptionCollection&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  id: System#ComponentModel#IBindingListView#Filter
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.Filter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.Filter%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: string System.ComponentModel.IBindingListView.Filter { get; set; }
    return:
      type: System.String
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.Filter%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  id: System#ComponentModel#IBindingListView#RemoveFilter
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.RemoveFilter()
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingListView.RemoveFilter ();
    parameters: []
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  id: System#ComponentModel#IBindingListView#SortDescriptions
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SortDescriptions
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 이 멤버의 사용은 지원 되지 않으며 <xref:System.ArgumentException>.</xref:System.ArgumentException> 하면 대신, Clear 메서드를 사용 하 여 <xref:System.Data.DataRowCollection> <xref:System.Data.DataTable.Rows%2A>.</xref:System.Data.DataTable.Rows%2A> 에서 반환 된 개체</xref:System.Data.DataRowCollection> 에서"
  syntax:
    content: System.ComponentModel.ListSortDescriptionCollection System.ComponentModel.IBindingListView.SortDescriptions { get; }
    return:
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  id: System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SupportsAdvancedSorting%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingListView.SupportsAdvancedSorting { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SupportsAdvancedSorting%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  id: System#ComponentModel#IBindingListView#SupportsFiltering
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SupportsFiltering%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingListView.SupportsFiltering { get; }
    return:
      type: System.Boolean
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.IBindingListView.SupportsFiltering%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.ITypedList>인터페이스.</xref:System.ComponentModel.ITypedList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection ITypedList.GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "추가할 수 있습니다."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  id: System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.DataView>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.ITypedList>인터페이스.</xref:System.ComponentModel.ITypedList> </xref:System.Data.DataView>"
  syntax:
    content: string ITypedList.GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "배열을 <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> 개체입니다."
    return:
      type: System.String
      description: "이 멤버에 대 한 참조 &lt;xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName&gt;합니다."
  overload: System.Data.DataView.System#ComponentModel#ITypedList#GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Table
  id: Table
  parent: System.Data.DataView
  langs:
  - csharp
  name: Table
  nameWithType: DataView.Table
  fullName: System.Data.DataView.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "소스를 가져오거나 설정 합니다. <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  remarks: "<xref:System.Data.DataTable>역시는 <xref:System.Data.DataTable.DefaultView%2A>기본값을 반환 하는 속성 <xref:System.Data.DataView>테이블에 대 한.</xref:System.Data.DataView> </xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataTable> 예를 들어 테이블에 사용자 지정 보기를 만들려는 경우는 설정 <xref:System.Data.DataView.RowFilter%2A> <xref:System.Data.DataView>에 <xref:System.Data.DataTable.DefaultView%2A>.</xref:System.Data.DataTable.DefaultView%2A> 반환</xref:System.Data.DataView> 에</xref:System.Data.DataView.RowFilter%2A>       현재 값이 null에 테이블 속성을 설정할 수 있습니다."
  example:
  - "The following example gets the <xref:System.Data.DataTable> of the current <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.t_1.vb)]\n [!code-cs[Classic WebData DataView.Table Example#1](~/add/codesnippet/csharp/p-system.data.dataview.t_1.cs)]"
  syntax:
    content: public System.Data.DataTable Table { get; set; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 보기에 대 한 데이터를 제공 하는 합니다."
  overload: System.Data.DataView.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable
  id: ToTable
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable()
  nameWithType: DataView.ToTable()
  fullName: System.Data.DataView.ToTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 새 반환 <xref href=&quot;System.Data.DataTable&quot;> </xref> 가 기존 행에 따라 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "이 방법을 사용 하는 출력에 대 한 이름을 지정할 수 <xref:System.Data.DataTable>, 해당 이름은 원본 이름으로 동일 `DataTable`.</xref:System.Data.DataTable> 이 방법에서는 사용 가능한 열 하위 집합을 지정할 수 없습니다, 때문에, 출력 테이블을 동일한 입력된 테이블 열을 포함 합니다."
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable> with data, creates a filtered view based on the original data, and finally, creates a <xref:System.Data.DataTable> that contains the filtered rows.  \n  \n [!code-cs[DataWorks DataView.ToTableFiltered#1](~/add/codesnippet/csharp/m-system.data.dataview.t_2_1.cs)]\n [!code-vb[DataWorks DataView.ToTableFiltered#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_2_1.vb)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n  \nCurrent Values in View  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nTable created from filtered DataView  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nNew table name: NewTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "새 <xref href=&quot;System.Data.DataTable&quot;> </xref> 요청한 행과 열이 포함 된 인스턴스."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.String)
  id: ToTable(System.String)
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(String)
  nameWithType: DataView.ToTable(String)
  fullName: System.Data.DataView.ToTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 새 반환 <xref href=&quot;System.Data.DataTable&quot;> </xref> 가 기존 행에 따라 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "이 방법에서는 사용 가능한 열 하위 집합을 지정할 수 없습니다, 때문에, 출력 테이블을 동일한 입력된 테이블 열을 포함 합니다."
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the `DataTable` with data, creates a filtered view based on the original data, and finally creates a `DataTable` with a new name that contains the filtered rows.  \n  \n [!code-vb[DataWorks DataView.ToTableNewName#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_0_1.vb)]\n [!code-cs[DataWorks DataView.ToTableNewName#1](~/add/codesnippet/csharp/m-system.data.dataview.t_0_1.cs)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n  \nCurrent Values in View  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nTable created from filtered DataView  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nNew table name: FilteredTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "반환 된 이름 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    return:
      type: System.Data.DataTable
      description: "새 <xref href=&quot;System.Data.DataTable&quot;> </xref> 요청한 행과 열이 포함 된 인스턴스."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.Boolean,System.String[])
  id: ToTable(System.Boolean,System.String[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(Boolean,String[])
  nameWithType: DataView.ToTable(Boolean,String[])
  fullName: System.Data.DataView.ToTable(Boolean,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 새 반환 <xref href=&quot;System.Data.DataTable&quot;> </xref> 가 기존 행에 따라 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "출력 <xref:System.Data.DataTable> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 소스 이름과 해당 이름을</xref:System.Data.DataTable> 에 대 한 이름을 지정 하면이 메서드를 사용 하지 때문에"
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable>with data, sorts the <xref:System.Data.DataView>, and finally creates a <xref:System.Data.DataTable>with just two columns, limited to rows in which all values are unique.  \n  \n [!code-vb[DataWorks DataView.ToTableUniqueValues#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_1_1.vb)]\n [!code-cs[DataWorks DataView.ToTableUniqueValues#1](~/add/codesnippet/csharp/m-system.data.dataview.t_1_1.cs)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n6, Bread, Croissant, 23  \n  \nCurrent Values in View  \n3, Bread, Muffin, 23  \n6, Bread, Croissant, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n  \nTable created from sorted DataView  \nBread, 23  \nFish, 12  \nFish, 15  \nFruit, 14  \nFruit, 27  \n  \nNew table name: NewTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (bool distinct, string[] columnNames);
    parameters:
    - id: distinct
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 모든 열에 대 한 고유 값을 가진 행을 포함 합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: columnNames
      type: System.String[]
      description: "포함 될 이름을 지정 된 열의 목록을 포함 하는 문자열 배열에서 반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다. <xref href=&quot;System.Data.DataTable&quot;> </xref> 이이 배열 안에 표시 하는 순서로 지정 된 열이 포함 되어 있습니다."
    return:
      type: System.Data.DataTable
      description: "새 <xref href=&quot;System.Data.DataTable&quot;> </xref> 요청한 행과 열이 포함 된 인스턴스."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  id: ToTable(System.String,System.Boolean,System.String[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(String,Boolean,String[])
  nameWithType: DataView.ToTable(String,Boolean,String[])
  fullName: System.Data.DataView.ToTable(String,Boolean,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만들고 새 반환 <xref href=&quot;System.Data.DataTable&quot;> </xref> 가 기존 행에 따라 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  remarks: "이 오버 로드 된 버전의 <xref:System.Data.DataView.ToTable%2A>반환 된 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 에 대 한 새 이름을 지정 하는 사용 가능한 열의 하위 집합에 있는 고유한 값을 검색 하는 경우 메서드</xref:System.Data.DataView.ToTable%2A> 를 사용 하 여 별도 행 또는 열의 하위 집합만 필요 하지 않은 경우 <xref:System.Data.DataView.ToTable%2A>.</xref:System.Data.DataView.ToTable%2A> 참조"
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable> with data, sorts the <xref:System.Data.DataView>, and finally creates a <xref:System.Data.DataTable>with a new name that contains just two columns, limited to rows in which all values are unique.  \n  \n [!code-vb[DataWorks DataView.ToTableUniqueValuesName#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_3_1.vb)]\n [!code-cs[DataWorks DataView.ToTableUniqueValuesName#1](~/add/codesnippet/csharp/m-system.data.dataview.t_3_1.cs)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n6, Bread, Croissant, 23  \n  \nCurrent Values in View  \n3, Bread, Muffin, 23  \n6, Bread, Croissant, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n  \nTable created from sorted DataView  \nBread, 23  \nFish, 12  \nFish, 15  \nFruit, 14  \nFruit, 27  \n  \nNew table name: UniqueData  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (string tableName, bool distinct, string[] columnNames);
    parameters:
    - id: tableName
      type: System.String
      description: "반환 된 이름 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    - id: distinct
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 모든 열에 대 한 고유 값을 가진 행을 포함 합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: columnNames
      type: System.String[]
      description: "포함 될 이름을 지정 된 열의 목록을 포함 하는 문자열 배열에서 반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다. <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 이이 배열 안에 표시 하는 순서로 지정 된 열이 포함 되어 있습니다."
    return:
      type: System.Data.DataTable
      description: "새 <xref href=&quot;System.Data.DataTable&quot;> </xref> 요청한 행과 열이 포함 된 인스턴스."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.UpdateIndex
  id: UpdateIndex
  parent: System.Data.DataView
  langs:
  - csharp
  name: UpdateIndex()
  nameWithType: DataView.UpdateIndex()
  fullName: System.Data.DataView.UpdateIndex()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 속성은 내부 전용으로 예약되어 있으므로"
  syntax:
    content: protected void UpdateIndex ();
    parameters: []
  overload: System.Data.DataView.UpdateIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.UpdateIndex(System.Boolean)
  id: UpdateIndex(System.Boolean)
  parent: System.Data.DataView
  langs:
  - csharp
  name: UpdateIndex(Boolean)
  nameWithType: DataView.UpdateIndex(Boolean)
  fullName: System.Data.DataView.UpdateIndex(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 속성은 내부 전용으로 예약되어 있으므로"
  syntax:
    content: protected virtual void UpdateIndex (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "이 속성은 내부 전용으로 예약되어 있으므로"
  overload: System.Data.DataView.UpdateIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: System.ComponentModel.MarshalByValueComponent
- uid: System.Data.DataView.#ctor
  parent: System.Data.DataView
  isExternal: false
  name: DataView()
  nameWithType: DataView.DataView()
  fullName: System.Data.DataView.DataView()
- uid: System.Data.DataView.#ctor(System.Data.DataTable)
  parent: System.Data.DataView
  isExternal: false
  name: DataView(DataTable)
  nameWithType: DataView.DataView(DataTable)
  fullName: System.Data.DataView.DataView(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  parent: System.Data.DataView
  isExternal: false
  name: DataView(DataTable,String,String,DataViewRowState)
  nameWithType: DataView.DataView(DataTable,String,String,DataViewRowState)
  fullName: System.Data.DataView.DataView(DataTable,String,String,DataViewRowState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataViewRowState
  parent: System.Data
  isExternal: false
  name: DataViewRowState
  nameWithType: DataViewRowState
  fullName: System.Data.DataViewRowState
- uid: System.Data.DataView.AddNew
  parent: System.Data.DataView
  isExternal: false
  name: AddNew()
  nameWithType: DataView.AddNew()
  fullName: System.Data.DataView.AddNew()
- uid: System.Data.DataRowView
  parent: System.Data
  isExternal: false
  name: DataRowView
  nameWithType: DataRowView
  fullName: System.Data.DataRowView
- uid: System.Data.DataView.AllowDelete
  parent: System.Data.DataView
  isExternal: false
  name: AllowDelete
  nameWithType: DataView.AllowDelete
  fullName: System.Data.DataView.AllowDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataView.AllowEdit
  parent: System.Data.DataView
  isExternal: false
  name: AllowEdit
  nameWithType: DataView.AllowEdit
  fullName: System.Data.DataView.AllowEdit
- uid: System.Data.DataView.AllowNew
  parent: System.Data.DataView
  isExternal: false
  name: AllowNew
  nameWithType: DataView.AllowNew
  fullName: System.Data.DataView.AllowNew
- uid: System.Data.DataView.ApplyDefaultSort
  parent: System.Data.DataView
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
  fullName: System.Data.DataView.ApplyDefaultSort
- uid: System.Data.DataView.BeginInit
  parent: System.Data.DataView
  isExternal: false
  name: BeginInit()
  nameWithType: DataView.BeginInit()
  fullName: System.Data.DataView.BeginInit()
- uid: System.Data.DataView.Close
  parent: System.Data.DataView
  isExternal: false
  name: Close()
  nameWithType: DataView.Close()
  fullName: System.Data.DataView.Close()
- uid: System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  nameWithType: DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  fullName: System.Data.DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataView.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataView.CopyTo(Array,Int32)
  fullName: System.Data.DataView.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataView.Count
  parent: System.Data.DataView
  isExternal: false
  name: Count
  nameWithType: DataView.Count
  fullName: System.Data.DataView.Count
- uid: System.Data.DataView.DataViewManager
  parent: System.Data.DataView
  isExternal: false
  name: DataViewManager
  nameWithType: DataView.DataViewManager
  fullName: System.Data.DataView.DataViewManager
- uid: System.Data.DataViewManager
  parent: System.Data
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewManager
  fullName: System.Data.DataViewManager
- uid: System.Data.DataView.Delete(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: Delete(Int32)
  nameWithType: DataView.Delete(Int32)
  fullName: System.Data.DataView.Delete(Int32)
- uid: System.Data.DataView.Dispose(System.Boolean)
  parent: System.Data.DataView
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataView.Dispose(Boolean)
  fullName: System.Data.DataView.Dispose(Boolean)
- uid: System.Data.DataView.EndInit
  parent: System.Data.DataView
  isExternal: false
  name: EndInit()
  nameWithType: DataView.EndInit()
  fullName: System.Data.DataView.EndInit()
- uid: System.Data.DataView.Equals(System.Data.DataView)
  parent: System.Data.DataView
  isExternal: false
  name: Equals(DataView)
  nameWithType: DataView.Equals(DataView)
  fullName: System.Data.DataView.Equals(DataView)
- uid: System.Data.DataView
  parent: System.Data
  isExternal: false
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
- uid: System.Data.DataView.Find(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: Find(Object)
  nameWithType: DataView.Find(Object)
  fullName: System.Data.DataView.Find(Object)
- uid: System.Data.DataView.Find(System.Object[])
  parent: System.Data.DataView
  isExternal: false
  name: Find(Object[])
  nameWithType: DataView.Find(Object[])
  fullName: System.Data.DataView.Find(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.FindRows(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: FindRows(Object)
  nameWithType: DataView.FindRows(Object)
  fullName: System.Data.DataView.FindRows(Object)
- uid: System.Data.DataRowView[]
  parent: System.Data
  isExternal: false
  name: DataRowView
  nameWithType: DataRowView
  fullName: System.Data.DataRowView[]
  spec.csharp:
  - uid: System.Data.DataRowView
    name: DataRowView
    nameWithType: DataRowView
    fullName: DataRowView[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.FindRows(System.Object[])
  parent: System.Data.DataView
  isExternal: false
  name: FindRows(Object[])
  nameWithType: DataView.FindRows(Object[])
  fullName: System.Data.DataView.FindRows(Object[])
- uid: System.Data.DataView.GetEnumerator
  parent: System.Data.DataView
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataView.GetEnumerator()
  fullName: System.Data.DataView.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: IndexListChanged(Object,ListChangedEventArgs)
  nameWithType: DataView.IndexListChanged(Object,ListChangedEventArgs)
  fullName: System.Data.DataView.IndexListChanged(Object,ListChangedEventArgs)
- uid: System.ComponentModel.ListChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventArgs
  nameWithType: ListChangedEventArgs
  fullName: System.ComponentModel.ListChangedEventArgs
- uid: System.Data.DataView.Initialized
  parent: System.Data.DataView
  isExternal: false
  name: Initialized
  nameWithType: DataView.Initialized
  fullName: System.Data.DataView.Initialized
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Data.DataView.IsInitialized
  parent: System.Data.DataView
  isExternal: false
  name: IsInitialized
  nameWithType: DataView.IsInitialized
  fullName: System.Data.DataView.IsInitialized
- uid: System.Data.DataView.IsOpen
  parent: System.Data.DataView
  isExternal: false
  name: IsOpen
  nameWithType: DataView.IsOpen
  fullName: System.Data.DataView.IsOpen
- uid: System.Data.DataView.Item(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: Item(Int32)
  nameWithType: DataView.Item(Int32)
  fullName: System.Data.DataView.Item(Int32)
- uid: System.Data.DataView.ListChanged
  parent: System.Data.DataView
  isExternal: false
  name: ListChanged
  nameWithType: DataView.ListChanged
  fullName: System.Data.DataView.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: DataView.OnListChanged(ListChangedEventArgs)
  fullName: System.Data.DataView.OnListChanged(ListChangedEventArgs)
- uid: System.Data.DataView.Open
  parent: System.Data.DataView
  isExternal: false
  name: Open()
  nameWithType: DataView.Open()
  fullName: System.Data.DataView.Open()
- uid: System.Data.DataView.Reset
  parent: System.Data.DataView
  isExternal: false
  name: Reset()
  nameWithType: DataView.Reset()
  fullName: System.Data.DataView.Reset()
- uid: System.Data.DataView.RowFilter
  parent: System.Data.DataView
  isExternal: false
  name: RowFilter
  nameWithType: DataView.RowFilter
  fullName: System.Data.DataView.RowFilter
- uid: System.Data.DataView.RowStateFilter
  parent: System.Data.DataView
  isExternal: false
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
  fullName: System.Data.DataView.RowStateFilter
- uid: System.Data.DataView.Sort
  parent: System.Data.DataView
  isExternal: false
  name: Sort
  nameWithType: DataView.Sort
  fullName: System.Data.DataView.Sort
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.DataView.System.Collections.ICollection.IsSynchronized
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
  fullName: System.Data.DataView.System.Collections.ICollection.SyncRoot
- uid: System.Data.DataView.System#Collections#IList#Add(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DataView.System.Collections.IList.Add(Object)
  fullName: System.Data.DataView.System.Collections.IList.Add(Object)
- uid: System.Data.DataView.System#Collections#IList#Clear
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DataView.System.Collections.IList.Clear()
  fullName: System.Data.DataView.System.Collections.IList.Clear()
- uid: System.Data.DataView.System#Collections#IList#Contains(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataView.System.Collections.IList.Contains(Object)
  fullName: System.Data.DataView.System.Collections.IList.Contains(Object)
- uid: System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataView.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.DataView.System.Collections.IList.IndexOf(Object)
- uid: System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataView.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.DataView.System.Collections.IList.Insert(Int32,Object)
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
  fullName: System.Data.DataView.System.Collections.IList.IsFixedSize
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
  fullName: System.Data.DataView.System.Collections.IList.IsReadOnly
- uid: System.Data.DataView.System#Collections#IList#Item(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataView.System.Collections.IList.Item(Int32)
  fullName: System.Data.DataView.System.Collections.IList.Item(Int32)
- uid: System.Data.DataView.System#Collections#IList#Remove(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataView.System.Collections.IList.Remove(Object)
  fullName: System.Data.DataView.System.Collections.IList.Remove(Object)
- uid: System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataView.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Data.DataView.System.Collections.IList.RemoveAt(Int32)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddNew()
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddNew()
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowEdit
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowRemove
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  nameWithType: DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.IsSorted
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveSort()
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveSort()
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortProperty
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSearching
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
- uid: System.ComponentModel.ListSortDescriptionCollection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDescriptionCollection
  nameWithType: ListSortDescriptionCollection
  fullName: System.ComponentModel.ListSortDescriptionCollection
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.Filter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.RemoveFilter()
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.RemoveFilter()
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SortDescriptions
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsFiltering
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.Data.DataView.Table
  parent: System.Data.DataView
  isExternal: false
  name: Table
  nameWithType: DataView.Table
  fullName: System.Data.DataView.Table
- uid: System.Data.DataView.ToTable
  parent: System.Data.DataView
  isExternal: false
  name: ToTable()
  nameWithType: DataView.ToTable()
  fullName: System.Data.DataView.ToTable()
- uid: System.Data.DataView.ToTable(System.String)
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(String)
  nameWithType: DataView.ToTable(String)
  fullName: System.Data.DataView.ToTable(String)
- uid: System.Data.DataView.ToTable(System.Boolean,System.String[])
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(Boolean,String[])
  nameWithType: DataView.ToTable(Boolean,String[])
  fullName: System.Data.DataView.ToTable(Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(String,Boolean,String[])
  nameWithType: DataView.ToTable(String,Boolean,String[])
  fullName: System.Data.DataView.ToTable(String,Boolean,String[])
- uid: System.Data.DataView.UpdateIndex
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex()
  nameWithType: DataView.UpdateIndex()
  fullName: System.Data.DataView.UpdateIndex()
- uid: System.Data.DataView.UpdateIndex(System.Boolean)
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex(Boolean)
  nameWithType: DataView.UpdateIndex(Boolean)
  fullName: System.Data.DataView.UpdateIndex(Boolean)
- uid: System.Data.DataView.#ctor*
  parent: System.Data.DataView
  isExternal: false
  name: DataView
  nameWithType: DataView.DataView
- uid: System.Data.DataView.AddNew*
  parent: System.Data.DataView
  isExternal: false
  name: AddNew
  nameWithType: DataView.AddNew
- uid: System.Data.DataView.AllowDelete*
  parent: System.Data.DataView
  isExternal: false
  name: AllowDelete
  nameWithType: DataView.AllowDelete
- uid: System.Data.DataView.AllowEdit*
  parent: System.Data.DataView
  isExternal: false
  name: AllowEdit
  nameWithType: DataView.AllowEdit
- uid: System.Data.DataView.AllowNew*
  parent: System.Data.DataView
  isExternal: false
  name: AllowNew
  nameWithType: DataView.AllowNew
- uid: System.Data.DataView.ApplyDefaultSort*
  parent: System.Data.DataView
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
- uid: System.Data.DataView.BeginInit*
  parent: System.Data.DataView
  isExternal: false
  name: BeginInit
  nameWithType: DataView.BeginInit
- uid: System.Data.DataView.Close*
  parent: System.Data.DataView
  isExternal: false
  name: Close
  nameWithType: DataView.Close
- uid: System.Data.DataView.ColumnCollectionChanged*
  parent: System.Data.DataView
  isExternal: false
  name: ColumnCollectionChanged
  nameWithType: DataView.ColumnCollectionChanged
- uid: System.Data.DataView.CopyTo*
  parent: System.Data.DataView
  isExternal: false
  name: CopyTo
  nameWithType: DataView.CopyTo
- uid: System.Data.DataView.Count*
  parent: System.Data.DataView
  isExternal: false
  name: Count
  nameWithType: DataView.Count
- uid: System.Data.DataView.DataViewManager*
  parent: System.Data.DataView
  isExternal: false
  name: DataViewManager
  nameWithType: DataView.DataViewManager
- uid: System.Data.DataView.Delete*
  parent: System.Data.DataView
  isExternal: false
  name: Delete
  nameWithType: DataView.Delete
- uid: System.Data.DataView.Dispose*
  parent: System.Data.DataView
  isExternal: false
  name: Dispose
  nameWithType: DataView.Dispose
- uid: System.Data.DataView.EndInit*
  parent: System.Data.DataView
  isExternal: false
  name: EndInit
  nameWithType: DataView.EndInit
- uid: System.Data.DataView.Equals*
  parent: System.Data.DataView
  isExternal: false
  name: Equals
  nameWithType: DataView.Equals
- uid: System.Data.DataView.Find*
  parent: System.Data.DataView
  isExternal: false
  name: Find
  nameWithType: DataView.Find
- uid: System.Data.DataView.FindRows*
  parent: System.Data.DataView
  isExternal: false
  name: FindRows
  nameWithType: DataView.FindRows
- uid: System.Data.DataView.GetEnumerator*
  parent: System.Data.DataView
  isExternal: false
  name: GetEnumerator
  nameWithType: DataView.GetEnumerator
- uid: System.Data.DataView.IndexListChanged*
  parent: System.Data.DataView
  isExternal: false
  name: IndexListChanged
  nameWithType: DataView.IndexListChanged
- uid: System.Data.DataView.IsInitialized*
  parent: System.Data.DataView
  isExternal: false
  name: IsInitialized
  nameWithType: DataView.IsInitialized
- uid: System.Data.DataView.IsOpen*
  parent: System.Data.DataView
  isExternal: false
  name: IsOpen
  nameWithType: DataView.IsOpen
- uid: System.Data.DataView.Item*
  parent: System.Data.DataView
  isExternal: false
  name: Item
  nameWithType: DataView.Item
- uid: System.Data.DataView.OnListChanged*
  parent: System.Data.DataView
  isExternal: false
  name: OnListChanged
  nameWithType: DataView.OnListChanged
- uid: System.Data.DataView.Open*
  parent: System.Data.DataView
  isExternal: false
  name: Open
  nameWithType: DataView.Open
- uid: System.Data.DataView.Reset*
  parent: System.Data.DataView
  isExternal: false
  name: Reset
  nameWithType: DataView.Reset
- uid: System.Data.DataView.RowFilter*
  parent: System.Data.DataView
  isExternal: false
  name: RowFilter
  nameWithType: DataView.RowFilter
- uid: System.Data.DataView.RowStateFilter*
  parent: System.Data.DataView
  isExternal: false
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
- uid: System.Data.DataView.Sort*
  parent: System.Data.DataView
  isExternal: false
  name: Sort
  nameWithType: DataView.Sort
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
- uid: System.Data.DataView.System#Collections#IList#Add*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DataView.System.Collections.IList.Add
- uid: System.Data.DataView.System#Collections#IList#Clear*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DataView.System.Collections.IList.Clear
- uid: System.Data.DataView.System#Collections#IList#Contains*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DataView.System.Collections.IList.Contains
- uid: System.Data.DataView.System#Collections#IList#IndexOf*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DataView.System.Collections.IList.IndexOf
- uid: System.Data.DataView.System#Collections#IList#Insert*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DataView.System.Collections.IList.Insert
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
- uid: System.Data.DataView.System#Collections#IList#Item*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DataView.System.Collections.IList.Item
- uid: System.Data.DataView.System#Collections#IList#Remove*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DataView.System.Collections.IList.Remove
- uid: System.Data.DataView.System#Collections#IList#RemoveAt*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DataView.System.Collections.IList.RemoveAt
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.ApplySort
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.Find
  nameWithType: DataView.System.ComponentModel.IBindingList.Find
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveSort
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.ApplySort
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.RemoveFilter
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetItemProperties
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetListName
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName
- uid: System.Data.DataView.Table*
  parent: System.Data.DataView
  isExternal: false
  name: Table
  nameWithType: DataView.Table
- uid: System.Data.DataView.ToTable*
  parent: System.Data.DataView
  isExternal: false
  name: ToTable
  nameWithType: DataView.ToTable
- uid: System.Data.DataView.UpdateIndex*
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex
  nameWithType: DataView.UpdateIndex
