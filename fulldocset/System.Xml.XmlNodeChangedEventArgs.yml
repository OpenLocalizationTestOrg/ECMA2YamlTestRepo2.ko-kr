### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeChangedEventArgs
  id: XmlNodeChangedEventArgs
  children:
  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  - System.Xml.XmlNodeChangedEventArgs.Action
  - System.Xml.XmlNodeChangedEventArgs.NewParent
  - System.Xml.XmlNodeChangedEventArgs.NewValue
  - System.Xml.XmlNodeChangedEventArgs.Node
  - System.Xml.XmlNodeChangedEventArgs.OldParent
  - System.Xml.XmlNodeChangedEventArgs.OldValue
  langs:
  - csharp
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs
  fullName: System.Xml.XmlNodeChangedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserted&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserting&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeRemoved&quot;></xref> and <xref href=&quot;System.Xml.XmlDocument.NodeRemoving&quot;></xref> events."
  remarks: "다음 C# 코드에서는 이벤트 처리기를 사용 하는 방법을 보여 줍니다.      ```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(&quot;Node &quot; + args.Node.Name + &quot; inserted!!&quot;);   }   ```      > [!NOTE]> 여러 동작의 작업으로 구성 됩니다, 하는 경우 여러 이벤트가 발생 합니다. 예를 들어 한 <xref:System.Xml.XmlNode.AppendChild%2A>호출 이전 부모에서 추가 될 노드를 제거 해야 할 수 있습니다.</xref:System.Xml.XmlNode.AppendChild%2A> 이 경우에 표시 됩니다는 `NodeRemoved` 이벤트 다음에 `NodeInserted` 이벤트입니다."
  syntax:
    content: 'public class XmlNodeChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.XmlNodeChangedEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 이벤트를 생성 합니다."
    - id: oldParent
      type: System.Xml.XmlNode
      description: "이전 부모 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 의 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 이벤트를 생성 합니다."
    - id: newParent
      type: System.Xml.XmlNode
      description: "새 부모 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 의 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 이벤트를 생성 합니다."
    - id: oldValue
      type: System.String
      description: "이전 값은 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 이벤트를 생성 합니다."
    - id: newValue
      type: System.String
      description: "새 값은 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 이벤트를 생성 합니다."
    - id: action
      type: System.Xml.XmlNodeChangedAction
      description: "The <xref href=&quot;System.Xml.XmlNodeChangedAction&quot;></xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  id: Action
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "어떤 유형의 노드 변경 이벤트 발생을 나타내는 값을 가져옵니다."
  syntax:
    content: public System.Xml.XmlNodeChangedAction Action { get; }
    return:
      type: System.Xml.XmlNodeChangedAction
      description: "<xref uid=&quot;langword_csharp_XmlNodeChangedAction&quot; name=&quot;XmlNodeChangedAction&quot; href=&quot;&quot;> </xref> 값 노드를 설명 하는 변경 이벤트.       <table><thead><tr><th> XmlNodeChangedAction 값       </th><th> 설명       </th></tr></thead><tbody><tr><td> 삽입       </td><td> 노드 했거나 삽입 됩니다.       </td></tr><tr><td> 제거       </td><td> 노드 했거나 제거 됩니다.       </td></tr><tr><td> Change(영문)       </td><td> 노드 했거나 변경 됩니다.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    <xref uid=&quot;langword_csharp_Action&quot; name=&quot;Action&quot; href=&quot;&quot;> </xref> 값에서는 (앞 이나 뒤) 이벤트가 발생 하는 경우 구분 하지 않습니다. 인스턴스를 모두 처리할 별도 이벤트 처리기를 만들 수 있습니다.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  id: NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "값을 가져옵니다는 <xref:System.Xml.XmlNode.ParentNode*>작업이 완료 된 후.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode NewParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "값은 <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> 작업이 완료 됩니다. 이 속성은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 노드 제거 되 면 합니다.       <div class=&quot;alert NOTE&quot;>    특성 노드에 대 한이 속성은 <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*> 반환      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  id: NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 새 값을 가져옵니다."
  syntax:
    content: public string NewValue { get; }
    return:
      type: System.String
      description: "노드의 새 값입니다. 이 속성은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 노드는 특성이 나 텍스트 노드 또는 노드 제거 되 면 합니다.       호출 하는 경우는 <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> 이벤트 <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> 변경 성공적 이면 노드의 값을 반환 합니다. 호출 하는 경우는 <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> 이벤트 <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> 노드의 현재 값을 반환 합니다."
  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  id: Node
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 하는 추가, 제거 또는 변경 합니다."
  syntax:
    content: public System.Xml.XmlNode Node { get; }
    return:
      type: System.Xml.XmlNode
      description: "<xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> 하는 추가, 제거 또는 변경 된이 속성을 반환 하지 않습니다; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlNodeChangedEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  id: OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "값을 가져옵니다는 <xref:System.Xml.XmlNode.ParentNode*>작업을 시작 하기 전에.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode OldParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "값은 <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> 전에 작업을 시작 합니다. 이 속성은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 노드는 부모가 없는 경우.       <div class=&quot;alert NOTE&quot;>    특성 노드에 대 한이 속성은 <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*> 반환      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  id: OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 원래 값을 가져옵니다."
  syntax:
    content: public string OldValue { get; }
    return:
      type: System.String
      description: "노드의 원래 값입니다. 이 속성은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 노드는 특성이 나 텍스트 노드 또는 노드를 삽입 하는 경우.       호출 하는 경우는 <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> 이벤트 <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> 변경 내용이 성공적으로 교체 하는 노드의 현재 값을 반환 합니다. 호출 하는 경우는 <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> 이벤트 <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> 변경 전에 노드의 값을 반환 합니다."
  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeChangedAction
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedAction
  nameWithType: XmlNodeChangedAction
  fullName: System.Xml.XmlNodeChangedAction
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.Action*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
