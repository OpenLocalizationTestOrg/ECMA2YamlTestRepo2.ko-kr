### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "플랫폼을 사용 하 여 관리 되지 않는 코드에 전달 되는 리소스에 대 한 핸들을 보유 하는 관리 되는 개체 호출을 래핑합니다."
  remarks: "> [!IMPORTANT]>로 대체 되었습니다.NET Framework 2.0 HandleRef 클래스의 기능으로 시작 합니다.는 <xref:System.Runtime.InteropServices.SafeHandle>클래스와 해당 파생된 클래스에서도 <xref:System.Runtime.InteropServices.CriticalHandle>클래스</xref:System.Runtime.InteropServices.CriticalHandle> 것으로</xref:System.Runtime.InteropServices.SafeHandle>       플랫폼을 사용 하 여 관리 되는 개체를 호출 하려면 호출할 및 플랫폼 호출 후 개체가 다른 곳에서 참조 되지 않은, 가비지 수집기에서 관리 되는 개체를 종료할 수입니다. 이 작업은 리소스를 해제 하 고 핸들을 무효화 플랫폼 호출이 실패 하도록 합니다. 관리 되는 개체가 가비지 수집의 플랫폼 호출 될 때까지 완료 되지 임을 보장 HandleRef 된 핸들을 배치 합니다. 호출 서비스 플랫폼에 대 한 자세한 내용은 [관리 되지 않는 DLL 함수를 사용해](~/add/includes/ajax-current-ext-md.md)합니다.       HandleRef에는 값 형식, 같은 <xref:System.Runtime.InteropServices.GCHandle>는 interop 마샬러만에서 인식 하는 특수 한 형식입니다.</xref:System.Runtime.InteropServices.GCHandle> 일반, 일어나지 않도록된 <xref:System.Runtime.InteropServices.GCHandle>HandleRef 더 나은 성능을 제공 하면서 또한 가비지 컬렉션을 방지 합니다.</xref:System.Runtime.InteropServices.GCHandle> HandleRef를 사용 하 여 플랫폼의 기간에 대 한 개체를 활성 상태로 유지할지를 호출 하지만 호출 하는 것이 좋습니다, 사용할 수도 있습니다는 <xref:System.GC.KeepAlive%2A?displayProperty=fullName>메서드 같은 목적을 위해.</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       HandleRef 생성자는 두 개의 매개 변수:는 <xref:System.Object>래퍼를 나타내는 및 <xref:System.IntPtr>관리 되지 않는 핸들을 나타내는.</xref:System.IntPtr> </xref:System.Object> Interop 마샬러 비관리 코드에만 핸들을 전달 하 고 래퍼 보장 (생성자의 첫 번째 매개 변수로 전달 되는 `HandleRef`) 호출 기간 동안 활성 상태를 유지 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> 된 래핑할 개체 및 비관리 코드에 의해 사용 되는 리소스에 대 한 핸들입니다."
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "플랫폼 호출 될 때까지 종료 되지 해야 하는 관리 되는 개체를 반환 합니다."
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>리소스에 대 한 핸들을 나타내는입니다.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "리소스에 대 한 핸들을 가져옵니다."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "리소스에 대 한 핸들입니다."
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "추가할 수 있습니다."
    return:
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "내부 정수 표현을 반환는 <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> 개체입니다."
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> 내부 정수 표현에서 검색할 개체입니다."
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>을 나타내는 개체를 <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> 개체입니다.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "리소스에 핸들을 보유 하는 개체를 가져옵니다."
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "핸들 리소스를 보유 하는 개체입니다."
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
