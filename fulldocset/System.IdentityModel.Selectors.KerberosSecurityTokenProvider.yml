### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  id: KerberosSecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  - System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  langs:
  - csharp
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  type: Class
  summary: "제공 하는 보안 토큰 공급자를 나타냅니다. <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> SOAP에 대 한 보안 토큰 메시지 보낸 사람입니다."
  remarks: "대부분의 경우는 KerberosSecurityTokenProvider 클래스 필요가 직접 호출할 수는 클라이언트가 필요로 하는 SOAP 메시지를 보내면 호출 되기 때문에 <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> 클라이언트 보안 토큰 사용 하 여 필요한 형식을 지정 하는 구체적으로,는 <xref:System.ServiceModel.Description.ClientCredentials>클래스 및 <xref:System.ServiceModel.Description.ClientCredentials>호출 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드를 보안 토큰을 가져옵니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials> 필요한 보안 토큰의 경우는 <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>보안 토큰의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드 호출의 <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29>메서드.</xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%28System.TimeSpan%29> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>"
  syntax:
    content: 'public class KerberosSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenProvider
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> 클래스의 지정 된 서비스 사용자 이름을 사용 합니다."
  remarks: "이 생성자는 클라이언트가 <xref:System.Security.Principal.TokenImpersonationLevel>를 허용 되는 가장 수준을 설정 `Identification`합니다.</xref:System.Security.Principal.TokenImpersonationLevel> 호출 스레드가 현재 컨텍스트 (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) 클라이언트 id로 사용 됩니다.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "가져올 서비스 사용자 이름은 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 에 대 한 보안 토큰입니다."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> 지정 된 서비스 사용자 이름 및 클라이언트의 받는 사람을 허용할지 여부를 사용 하 여 클래스는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰을 클라이언트의 자격 증명을 가장할 합니다."
  remarks: "호출 스레드가 현재 컨텍스트 (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) 클라이언트 id로 사용 됩니다.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>"
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "가져올 서비스 사용자 이름은 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 에 대 한 보안 토큰입니다."
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>있는 정도를 지정 하는 받는 사람이 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰이 클라이언트를 대신할 수 있습니다.</xref:System.Security.Principal.TokenImpersonationLevel>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.KerberosSecurityTokenProvider&quot;> </xref> 지정 된 서비스 사용자 이름, 클라이언트 id를 사용 하 여 클래스 및 클라이언트의 받는 사람을 허용 하는지 여부는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰을 클라이언트의 자격 증명을 가장할 합니다."
  syntax:
    content: public KerberosSecurityTokenProvider (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "가져올 서비스 사용자 이름은 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 에 대 한 보안 토큰입니다."
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>있는 정도를 지정 하는 받는 사람이 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰에서 클라이언트 프로세스를 대신할 수 있습니다.</xref:System.Security.Principal.TokenImpersonationLevel>"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>의 id를 나타내는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>.</xref:System.Net.NetworkCredential>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Identification&quot; name=&quot;Identification&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "가져옵니다는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드는 <xref:System.ServiceModel.Description.ClientCredentials>클래스는 클라이언트가 보내는 SOAP 메시지 및 <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>보안 토큰이 필요한.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드 GetTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 가져올 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  id: NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "id를 가져옵니다는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "NetworkCredential 속성의 값이 `null` 및 <xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>메서드가 호출 되 면 호출 스레드의 현재 컨텍스트 (<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>) 클라이언트 id로 사용 됩니다.</xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> </xref:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore%2A>"
  syntax:
    content: public System.Net.NetworkCredential NetworkCredential { get; }
    return:
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>의 id를 나타내는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref>.</xref:System.Net.NetworkCredential>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "서비스 사용자 이름을 가져옵니다는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 가져올 보안 토큰을 합니다."
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "서비스 사용자 이름에서 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 가져올 보안 토큰을 합니다."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  id: TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  langs:
  - csharp
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "있는 정도를 지정 하는 값을 가져옵니다의 수신자는 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰이 클라이언트를 대신할 수 있습니다."
  remarks: "TokenImpersonationLevel 속성 중 하나 여야 합니다 `Identification` 또는 `Impersonation`합니다."
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "A <xref:System.Security.Principal.TokenImpersonationLevel>있는 정도를 지정 하는 받는 사람이 <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> 보안 토큰이 클라이언트를 대신할 수 있습니다.</xref:System.Security.Principal.TokenImpersonationLevel>"
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.KerberosSecurityTokenProvider(String,TokenImpersonationLevel,NetworkCredential)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: KerberosSecurityTokenProvider
  nameWithType: KerberosSecurityTokenProvider.KerberosSecurityTokenProvider
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: KerberosSecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: NetworkCredential
  nameWithType: KerberosSecurityTokenProvider.NetworkCredential
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosSecurityTokenProvider.ServicePrincipalName
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenProvider
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: KerberosSecurityTokenProvider.TokenImpersonationLevel
