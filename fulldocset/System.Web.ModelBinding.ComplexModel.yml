### YamlMime:ManagedReference
items:
- uid: System.Web.ModelBinding.ComplexModel
  id: ComplexModel
  children:
  - System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})
  - System.Web.ModelBinding.ComplexModel.ModelMetadata
  - System.Web.ModelBinding.ComplexModel.PropertyMetadata
  - System.Web.ModelBinding.ComplexModel.Results
  langs:
  - csharp
  name: ComplexModel
  nameWithType: ComplexModel
  fullName: System.Web.ModelBinding.ComplexModel
  type: Class
  summary: "개별 속성 대신 컬렉션을 사용 하 여 데이터 저장소로 복잡 한 모델을 설명 합니다."
  syntax:
    content: public class ComplexModel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})
  id: '#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})'
  parent: System.Web.ModelBinding.ComplexModel
  langs:
  - csharp
  name: ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
  nameWithType: ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
  fullName: System.Web.ModelBinding.ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.ModelBinding.ComplexModel&quot;> </xref> 클래스입니다."
  syntax:
    content: public ComplexModel (System.Web.ModelBinding.ModelMetadata modelMetadata, System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata> propertyMetadata);
    parameters:
    - id: modelMetadata
      type: System.Web.ModelBinding.ModelMetadata
      description: "모델에 대 한 메타 데이터입니다."
    - id: propertyMetadata
      type: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
      description: "모델의 속성에 대 한 메타 데이터입니다."
  overload: System.Web.ModelBinding.ComplexModel.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>modelMetadata</code> or <code>propertyMetadata</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata
  id: ModelMetadata
  parent: System.Web.ModelBinding.ComplexModel
  langs:
  - csharp
  name: ModelMetadata
  nameWithType: ComplexModel.ModelMetadata
  fullName: System.Web.ModelBinding.ComplexModel.ModelMetadata
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "모델에 대 한 메타 데이터를 가져옵니다."
  syntax:
    content: public System.Web.ModelBinding.ModelMetadata ModelMetadata { get; }
    return:
      type: System.Web.ModelBinding.ModelMetadata
      description: "모델에 대 한 메타 데이터입니다."
  overload: System.Web.ModelBinding.ComplexModel.ModelMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata
  id: PropertyMetadata
  parent: System.Web.ModelBinding.ComplexModel
  langs:
  - csharp
  name: PropertyMetadata
  nameWithType: ComplexModel.PropertyMetadata
  fullName: System.Web.ModelBinding.ComplexModel.PropertyMetadata
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "모델의 속성에 대 한 메타 데이터를 가져옵니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata> PropertyMetadata { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.ModelBinding.ModelMetadata}
      description: "모델의 속성에 대 한 메타 데이터입니다."
  overload: System.Web.ModelBinding.ComplexModel.PropertyMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ComplexModel.Results
  id: Results
  parent: System.Web.ModelBinding.ComplexModel
  langs:
  - csharp
  name: Results
  nameWithType: ComplexModel.Results
  fullName: System.Web.ModelBinding.ComplexModel.Results
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "바인딩 시도한 각 속성에 해당 하는 항목을 포함 하는 컬렉션을 가져옵니다."
  remarks: "항목의 값이 됩니다 속성에 대 한 바인딩이 실패 한 경우 `null`합니다. 속성에 대 한 바인딩은 시도 되지 경우 사전에는 해당 속성에 대 한 항목이 포함 되지 않습니다."
  syntax:
    content: public System.Collections.Generic.IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult> Results { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult}
      description: "모델에 대 한 바인딩 시도한 모델 속성에 대 한 메타 데이터입니다."
  overload: System.Web.ModelBinding.ComplexModel.Results*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ModelBinding.ComplexModel.#ctor(System.Web.ModelBinding.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata})
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
  nameWithType: ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
  fullName: System.Web.ModelBinding.ComplexModel.ComplexModel(ModelMetadata,IEnumerable<ModelMetadata>)
- uid: System.Web.ModelBinding.ModelMetadata
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelMetadata
  nameWithType: ModelMetadata
  fullName: System.Web.ModelBinding.ModelMetadata
- uid: System.Collections.Generic.IEnumerable{System.Web.ModelBinding.ModelMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelMetadata>
  nameWithType: IEnumerable<ModelMetadata>
  fullName: System.Collections.Generic.IEnumerable<System.Web.ModelBinding.ModelMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Web.ModelBinding.ModelMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: ModelMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: ModelMetadata
  nameWithType: ComplexModel.ModelMetadata
  fullName: System.Web.ModelBinding.ComplexModel.ModelMetadata
- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: PropertyMetadata
  nameWithType: ComplexModel.PropertyMetadata
  fullName: System.Web.ModelBinding.ComplexModel.PropertyMetadata
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.ModelBinding.ModelMetadata}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ModelMetadata>
  nameWithType: ReadOnlyCollection<ModelMetadata>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.ModelBinding.ModelMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: ModelMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ComplexModel.Results
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: Results
  nameWithType: ComplexModel.Results
  fullName: System.Web.ModelBinding.ComplexModel.Results
- uid: System.Collections.Generic.IDictionary{System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<ModelMetadata,ComplexModelResult>
  nameWithType: IDictionary<ModelMetadata,ComplexModelResult>
  fullName: System.Collections.Generic.IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Web.ModelBinding.ModelMetadata,System.Web.ModelBinding.ComplexModelResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.ModelMetadata
    name: ModelMetadata
    nameWithType: ModelMetadata
    fullName: ModelMetadata
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Web.ModelBinding.ComplexModelResult
    name: ComplexModelResult
    nameWithType: ComplexModelResult
    fullName: ComplexModelResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ComplexModel.#ctor*
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: ComplexModel
  nameWithType: ComplexModel.ComplexModel
- uid: System.Web.ModelBinding.ComplexModel.ModelMetadata*
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: ModelMetadata
  nameWithType: ComplexModel.ModelMetadata
- uid: System.Web.ModelBinding.ComplexModel.PropertyMetadata*
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: PropertyMetadata
  nameWithType: ComplexModel.PropertyMetadata
- uid: System.Web.ModelBinding.ComplexModel.Results*
  parent: System.Web.ModelBinding.ComplexModel
  isExternal: false
  name: Results
  nameWithType: ComplexModel.Results
