### YamlMime:ManagedReference
items:
- uid: System.Windows.Ink.GestureRecognizer
  id: GestureRecognizer
  children:
  - System.Windows.Ink.GestureRecognizer.#ctor
  - System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  - System.Windows.Ink.GestureRecognizer.Dispose
  - System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  - System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  - System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  - System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  langs:
  - csharp
  name: GestureRecognizer
  nameWithType: GestureRecognizer
  fullName: System.Windows.Ink.GestureRecognizer
  type: Class
  summary: "잉크 제스처를 인식 합니다."
  remarks: "GestureRecognizer 잉크 제스처를 식별합니다. 전체 또는 응용 프로그램 제스처의 하위 집합 인식 하도록 GestureRecognizer를 설정할 수 있습니다. 사용할 수 있는 제스처의 하위 집합을 인식 하도록 GestureRecognizer를 설정 하려면 전달는 <xref:System.Windows.Ink.ApplicationGesture>배열 생성자 나 사용에는 <xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A>메서드.</xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A> </xref:System.Windows.Ink.ApplicationGesture> 확인 하려면 여부는 <xref:System.Windows.Ink.StrokeCollection>는 제스처 호출 포함는 <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A>메서드.</xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> </xref:System.Windows.Ink.StrokeCollection>      <a name=&quot;xamlTextUsage_GestureRecognizer&quot;></a># #에서이 클래스를 사용할 수 없습니다 XAML 텍스트 사용 하면 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]합니다."
  example:
  - "The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> is a <xref:System.Windows.Ink.ApplicationGesture> gesture.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: 'public sealed class GestureRecognizer : System.Windows.DependencyObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.#ctor
  id: '#ctor'
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GestureRecognizer()
  nameWithType: GestureRecognizer.GestureRecognizer()
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 생성 될 때는 <xref:System.Windows.Ink.GestureRecognizer>모든 응용 프로그램 제스처를 인식 합니다.</xref:System.Windows.Ink.GestureRecognizer>"
  syntax:
    content: public GestureRecognizer ();
    parameters: []
  overload: System.Windows.Ink.GestureRecognizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})'
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GestureRecognizer(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 클래스입니다."
  remarks: "GestureRecognizer 생성자를 사용 하는 <xref:System.Windows.Ink.GestureRecognizer>응용 프로그램 제스처의 일부만 인식 하는.</xref:System.Windows.Ink.GestureRecognizer>"
  example:
  - "The following example demonstrates how to create a <xref:System.Windows.Ink.GestureRecognizer> that recognizes only the <xref:System.Windows.Ink.ApplicationGesture>, <xref:System.Windows.Ink.ApplicationGesture>, and <xref:System.Windows.Ink.ApplicationGesture> gestures.  \n  \n [!code-vb[GestureControl#4](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#4)]\n [!code-cs[GestureControl#4](~/add/codesnippet/csharp/GestureControl/Gesture.cs#4)]"
  syntax:
    content: public GestureRecognizer (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> enabledApplicationGestures);
    parameters:
    - id: enabledApplicationGestures
      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
      description: "형식의 배열 <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> 응용 프로그램 제스처를 지정 하는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식 하 게 됩니다."
  overload: System.Windows.Ink.GestureRecognizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.Dispose
  id: Dispose
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: Dispose()
  nameWithType: GestureRecognizer.Dispose()
  fullName: System.Windows.Ink.GestureRecognizer.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Ink.GestureRecognizer>.</xref:System.Windows.Ink.GestureRecognizer> 를 사용 하 여 완료 하면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Windows.Ink.GestureRecognizer>불안정 한 상태가.</xref:System.Windows.Ink.GestureRecognizer> 따라서 Dispose를 호출한 후 해제 해야에 대 한 모든 참조는 <xref:System.Windows.Ink.GestureRecognizer>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Ink.GestureRecognizer>차지한.</xref:System.Windows.Ink.GestureRecognizer> </xref:System.Windows.Ink.GestureRecognizer>      > [!NOTE] > <xref:System.Windows.Ink.GestureRecognizer>.</xref:System.Windows.Ink.GestureRecognizer> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Windows.Ink.GestureRecognizer>개체의 `Finalize` 메서드.</xref:System.Windows.Ink.GestureRecognizer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Ink.GestureRecognizer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  id: GetEnabledGestures
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GetEnabledGestures()
  nameWithType: GestureRecognizer.GetEnabledGestures()
  fullName: System.Windows.Ink.GestureRecognizer.GetEnabledGestures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "제스처를 가져옵니다는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식 합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to get the application gestures that a <xref:System.Windows.Ink.GestureRecognizer> recognizes.  \n  \n [!code-vb[GestureControl#6](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#6)]\n [!code-cs[GestureControl#6](~/add/codesnippet/csharp/GestureControl/Gesture.cs#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture> GetEnabledGestures ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
      description: "형식의 배열 <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> 제스처를 포함 하는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식으로 설정 됩니다."
  overload: System.Windows.Ink.GestureRecognizer.GetEnabledGestures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  id: IsRecognizerAvailable
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
  fullName: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "제스처 인식기를 사용자의 시스템에서 사용할 수 있는지 여부를 나타내는 부울 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates how to determine whether the gesture recognizer is available before calling the <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> method.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: public bool IsRecognizerAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인식 구성 요소를 사용할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  id: Recognize(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: Recognize(StrokeCollection)
  nameWithType: GestureRecognizer.Recognize(StrokeCollection)
  fullName: System.Windows.Ink.GestureRecognizer.Recognize(StrokeCollection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "지정 된 제스처를 찾습니다 <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref>합니다."
  remarks: "인식 메서드에 의해 반환 된 배열 정렬 기준으로 <xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=fullName>속성.</xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=fullName> 예를 들어 인식 다음 값을 갖는 <xref:System.Windows.Ink.GestureRecognitionResult>배열을 반환할 수 있습니다. | 인덱스 | ApplicationGesture | RecognitionConfidence |   |-----------|------------------------|---------------------------|   |&0; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&1; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&2; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&3; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|       즉는 <xref:System.Windows.Ink.GestureRecognizer>가능성이 매우 임을 인식 하는 <xref:System.Windows.Ink.Stroke>비교적 가능성이 확인 표시 하는 <xref:System.Windows.Ink.Stroke>하지 제스처 및 일 가능성이 전혀 하는 <xref:System.Windows.Ink.Stroke>소용돌이 또는 이중 소용돌이.</xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.GestureRecognizer> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.GestureRecognitionResult>      > [!NOTE] > 메서드는 인식 된 배열을 반환할 수 있습니다 <xref:System.Windows.Ink.ApplicationGesture>높여서 <xref:System.Windows.Ink.RecognitionConfidence>다른 응용 프로그램 제스처 보다.</xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> 따라서 가능성이 하는 <xref:System.Windows.Ink.Stroke>낮은 <xref:System.Windows.Ink.RecognitionConfidence>.</xref:System.Windows.Ink.RecognitionConfidence> 있는 제스처와 달리를 제스처 하지</xref:System.Windows.Ink.Stroke>"
  example:
  - "The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> is a <xref:System.Windows.Ink.ApplicationGesture> gesture.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult> Recognize (System.Windows.Ink.StrokeCollection strokes);
    parameters:
    - id: strokes
      type: System.Windows.Ink.StrokeCollection
      description: "<xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref> 제스처를 검색할 수 있습니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}
      description: "형식의 배열 <xref href=&quot;System.Windows.Ink.GestureRecognitionResult&quot;> </xref> 응용 프로그램을 포함 하 되는 제스처는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식 합니다."
  overload: System.Windows.Ink.GestureRecognizer.Recognize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  id: SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "응용 프로그램 제스처를 설정의 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식 합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to create a <xref:System.Windows.Ink.GestureRecognizer> that recognizes only the <xref:System.Windows.Ink.ApplicationGesture>, <xref:System.Windows.Ink.ApplicationGesture>, and <xref:System.Windows.Ink.ApplicationGesture> gestures.  \n  \n [!code-vb[GestureControl#5](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#5)]\n [!code-cs[GestureControl#5](~/add/codesnippet/csharp/GestureControl/Gesture.cs#5)]"
  syntax:
    content: public void SetEnabledGestures (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> applicationGestures);
    parameters:
    - id: applicationGestures
      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
      description: "형식의 배열 <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> 응용 프로그램 제스처를 지정 하는 <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> 인식 하도록 합니다."
  overload: System.Windows.Ink.GestureRecognizer.SetEnabledGestures*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.Ink.GestureRecognizer.#ctor
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer()
  nameWithType: GestureRecognizer.GestureRecognizer()
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer()
- uid: System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ApplicationGesture>
  nameWithType: IEnumerable<ApplicationGesture>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.GestureRecognizer.Dispose
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Dispose()
  nameWithType: GestureRecognizer.Dispose()
  fullName: System.Windows.Ink.GestureRecognizer.Dispose()
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GetEnabledGestures()
  nameWithType: GestureRecognizer.GetEnabledGestures()
  fullName: System.Windows.Ink.GestureRecognizer.GetEnabledGestures()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ApplicationGesture>
  nameWithType: ReadOnlyCollection<ApplicationGesture>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
  fullName: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Recognize(StrokeCollection)
  nameWithType: GestureRecognizer.Recognize(StrokeCollection)
  fullName: System.Windows.Ink.GestureRecognizer.Recognize(StrokeCollection)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<GestureRecognitionResult>
  nameWithType: ReadOnlyCollection<GestureRecognitionResult>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.GestureRecognitionResult
    name: GestureRecognitionResult
    nameWithType: GestureRecognitionResult
    fullName: GestureRecognitionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.StrokeCollection
  parent: System.Windows.Ink
  isExternal: false
  name: StrokeCollection
  nameWithType: StrokeCollection
  fullName: System.Windows.Ink.StrokeCollection
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
- uid: System.Windows.Ink.GestureRecognizer.#ctor*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer
  nameWithType: GestureRecognizer.GestureRecognizer
- uid: System.Windows.Ink.GestureRecognizer.Dispose*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Dispose
  nameWithType: GestureRecognizer.Dispose
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GetEnabledGestures
  nameWithType: GestureRecognizer.GetEnabledGestures
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
- uid: System.Windows.Ink.GestureRecognizer.Recognize*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Recognize
  nameWithType: GestureRecognizer.Recognize
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: SetEnabledGestures
  nameWithType: GestureRecognizer.SetEnabledGestures
