### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.IsByValue
  id: IsByValue
  children: []
  langs:
  - csharp
  name: IsByValue
  nameWithType: IsByValue
  fullName: System.Runtime.CompilerServices.IsByValue
  type: Class
  summary: "수정 된 메서드 인수 개체 값으로 전달 된 의미를 갖는 것으로 해석 되어야 함을 나타냅니다. 이 한정자는 참조 형식에 적용 됩니다.  이 클래스는 상속 될 수 없습니다."
  remarks: "IsByValue 클래스는 메서드 매개 변수를 나타내는 값을 반환 하도록 의미를 갖는 값으로 전달 된 개체에 대 한 c + + 규칙에 따라 Microsoft c + + 컴파일러에 의해 사용 됩니다.       컴파일러는 적시에 (JIT) 컴파일러가 기본 동작은 적절 하지 않은 경우 값을 처리 하는 방식을 변경 하려면 메타 데이터 내에서 사용자 지정 한정자를 내보냅니다.  JIT 컴파일러는 사용자 지정 한정자를 발견 하면는 한정자 지정 하는 방식으로 값을 처리 합니다.  컴파일러는 메서드 매개 변수를 사용자 지정 한정자를 적용 하 고 값을 반환할 수 있습니다.  JIT 컴파일러는 필수 한정자에 응답 해야 하지만 선택적 한정자를 무시할 수 있습니다.       다음 방법 중 하나를 사용 하는 메타 데이터를 사용자 지정 한정자를 내보낼 수 있습니다:-에서 메서드를 사용 하는 <xref:System.Reflection.Emit.TypeBuilder>같은 <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, 및 <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder>      --호출을 포함 하는 Microsoft MSIL (intermediate language) 명령 파일을 생성 하는 중 `modopt` 및 `modreq`, 하 고 사용 하 여 파일을 어셈블할는 [Ilasm.exe (IL 어셈블러)](~/add/includes/ajax-current-ext-md.md)합니다.      -관리 되지 않는 리플렉션 API를 사용 합니다."
  example:
  - "The following example demonstrates how to emit an IsByValue object into an assembly using reflection.  \n  \n [!code-cpp[Runtime.CompilerServices.IsByValue#1](~/add/codesnippet/cpp/t-system.runtime.compile_7_1.cpp)]"
  syntax:
    content: public static class IsByValue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
