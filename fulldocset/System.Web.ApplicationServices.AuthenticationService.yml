### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "ASP.NET 폼 인증을 웹 서비스로 액세스할 수 있도록 합니다."
  remarks: "AuthenticationService 개체를 사용 하면를 통해 사용자를 인증 하는 [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] 서비스입니다. 웹 응용 프로그램 외부의 사용자 자격 증명을 저장 하는 응용 프로그램에서 ASP.NET 멤버 자격을 통해 사용자를 인증 해야 할 때 WCF 인증 서비스를 사용 합니다. 응용 프로그램을 보내고 SOAP 형식의 메시지를에서 사용할 수 있어야 합니다. AuthenticationService 클래스를 통해 사용자가 로그인, 사용자가 로그 아웃, 자격 증명 유효성 검사, 인증 상태를 확인, 인증, 사용자 지정 하 고 설정할 수 인증 쿠키입니다.       AuthenticationService 클래스는 WCF 서비스를 사용할 때만 액세스 해야 하는 네 가지 메서드가 포함 되어:는 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, 및 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>메서드.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> 이러한 메서드를 호출 하려면 웹 서버에서 인증 서비스를 활성화 고 WCF 호환 클라이언트 응용 프로그램 웹 서비스를 연결 합니다. 인증 서비스를 구성 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: WCF 인증 서비스를 활성화](~/add/includes/ajax-current-ext-md.md)합니다.       사용자가 로그온 하려면 사용자 자격 증명을 전달는 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>메서드.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> 자격 증명이 유효 AuthenticationService 클래스는 인증 쿠키를 만듭니다. 인증 쿠키가 만료 되지 않은 경우 사용자의 자격 증명이 인증 및 자격 증명의 유효성을 다시 검사할 필요가 없습니다 알고 있습니다. (쿠키 없는 인증은 AuthenticationService 클래스를 통해 제공 됩니다.)       두 개의 이벤트를 발생 시킬 수는 AuthenticationService: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>및 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>이 이벤트는 사용자 자격 증명의 유효성을 검사할 때 발생 합니다.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 에 대 한 이벤트 처리기를 만들고는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>사용자 자격 증명의 유효성을 검사 하는 방법을 사용자 지정 하는 이벤트입니다.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>이벤트 사용자 자격 증명 유효성 검사가 완료 후 인증 쿠키를 설정할 때 발생 합니다.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 에 대 한 이벤트 처리기를 만들고는 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>인증 쿠키를 사용자 지정 하는 이벤트입니다.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>메서드 인증을 위해 사용자 자격 증명을 확인 하지만 인증 티켓을 반환 하지는 않습니다.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 사용 하 여 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>때 사용자가 이전에 로그인 하 고 새 응용 프로그램 세션의 시작 부분에 자격 증명이 여전히 유효한 지 확인 해야 합니다.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       콘솔 응용 프로그램에서 WCF 인증 서비스를 사용 하 여 예제를 보려면 [연습: ASP.NET 응용 프로그램 서비스를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> 클래스입니다."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "사용자 자격 증명의 유효성을 검사할 때 발생 합니다."
  remarks: "인증 이벤트는 사용자 자격 증명의 유효성을 검사할 때 발생 합니다. 사용자 자격 증명의 유효성을 검사 하는 방법을 사용자 지정 하는 인증 이벤트에 대 한 이벤트 처리기를 만듭니다."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "인증 쿠키를 설정할 때 발생 합니다."
  remarks: "CreatingCookie 이벤트 후 사용자 자격 증명이 확인 되는 인증 쿠키 설정 되 면 발생 합니다. 인증 쿠키를 사용자 지정 하려면 CreatingCookie 이벤트에 대 한 이벤트 처리기를 만듭니다."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "현재 사용자의 인증 여부를 결정 합니다."
  remarks: "IsLoggedIn 메서드를 확인 하 여 현재 사용자가 인증 여부를 확인는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>지 원하는.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 IsLoggedIn 메서드를 호출 하지 마세요. WCF 서비스의 일부로 IsLoggedIn 메서드를 호출 합니다."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 인증 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "사용자 자격 증명 하 고 자격 증명이 유효 하는 경우 인증 티켓 (쿠키)를 생성 합니다. 확인 합니다."
  remarks: "로그인 방법이 멤버 자격 공급자를 통해 사용자 자격 증명의 유효성을 검사 합니다. 기본 멤버 자격 공급자를 사용 하거나 런타임에 사용자 지정 멤버 자격 공급자를 지정할 수 있습니다. <xref:System.Web.ApplicationServices.AuthenticationService>전달 클래스 `userName` 및 `password` 멤버 자격 공급자에 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>메서드, 하지만 통과 하지 못하면 `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> 경우 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>반환 `true`, <xref:System.Web.ApplicationServices.AuthenticationService>쿠키로 인증 티켓을 만듭니다.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 설정의 `isPersistent` 매개 변수를 `true` 는 현재 세션이 지속 되는 인증 티켓을 만들 수 있습니다.      > [!NOTE] > 항상 secure sockets layer (SSL, HTTPS를 사용 하 여)와 함께 인증 서비스를 사용 하 여 중요 한 데이터를 보호 합니다.       로그인 메서드는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>이벤트 및 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>이벤트.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 에 대 한 이벤트 처리기를 만들고 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>인증 값을 확인 하는 등 사용자 지정 하려면 `customCredential` 또는 기본이 아닌 멤버 자격 공급자를 통해 자격 증명 유효성 검사.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 값 `customCredential` 기본 멤버 자격 공급자의 유효성이 검사 되지 않습니다. 인증 쿠키를 사용자 지정 하려면 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 에 대 한 이벤트 처리기 만들기      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 로그인 메서드를 호출 하지 마세요. WCF 서비스의 일부로 로그인 메서드를 호출 합니다. 자세한 내용은 참조 [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "유효성을 검사할 사용자 이름입니다."
    - id: password
      type: System.String
      description: "지정된 된 사용자에 대 한 암호입니다."
    - id: customCredential
      type: System.String
      description: "하나 이상의 외에 유효성을 검사 하는 값 `userName` 및 `password`있는 경우."
    - id: isPersistent
      type: System.Boolean
      description: "인증 티켓 세션 전반에 걸쳐 유효한 계속 표시할지 여부를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 자격 증명이 잘못 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "브라우저에서 인증 티켓 (쿠키)를 지웁니다."
  remarks: "로그 아웃 메서드는 브라우저의 쿠키 컬렉션에서 인증 쿠키를 지웁니다. 사용자 로그인 해야 다시 인증 받아야 합니다.       <xref:System.Web.ApplicationServices.AuthenticationService>클래스는 인증에 대 한 티켓 선택이 취소 된 서버에서 정보를 저장 하지 않습니다.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 로그 아웃 메서드를 호출 하지 마세요. WCF 서비스의 일부로 로그 아웃 메서드를 호출 합니다. 자세한 내용은 참조 [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "인증 티켓을 발급 하지 않고 사용자 자격 증명을 인증 합니다."
  remarks: "ValidateUser 메서드 사용자 자격 증명을 인증 하지만 인증 쿠키를 설정 하지 않습니다. 인증 쿠키를 하지 않고 사용자는 로깅되지 않습니다 자격 증명이 유효 하는 경우에 합니다.       사용자의 자격 증명 인증 쿠키를 받지 않고 유효한 지 여부를 검사 해야 할 경우 ValidateUser 메서드를 사용 합니다. 예를 들어 인증 쿠키는 클라이언트 응용 프로그램에 이미 저장 되어 있지만 새 세션이 시작할 때 사용자의 자격 증명이 여전히 유효한 지 확인 하려면이 수행할 수 있습니다.       TheValidateUser 메서드는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>이벤트, 하지만 발생 하지 않습니다는 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>이벤트.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 ValidateUser 메서드를 호출 하지 마세요. WCF 서비스의 일부로 ValidateUser 메서드를 호출 합니다. 자세한 내용은 참조 [ASP.NET 인증](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "유효성을 검사할 사용자 이름입니다."
    - id: password
      type: System.String
      description: "지정된 된 사용자에 대 한 암호입니다."
    - id: customCredential
      type: System.String
      description: "하나 이상의 외에 유효성을 검사 하는 값 `userName` 및 `password`있는 경우."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 자격 증명이 잘못 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
