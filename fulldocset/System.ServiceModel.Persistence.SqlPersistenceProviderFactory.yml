### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  id: SqlPersistenceProviderFactory
  children:
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  langs:
  - csharp
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  type: Class
  summary: "시스템 제공 <xref href=&quot;System.ServiceModel.Persistence.PersistenceProviderFactory&quot;> </xref> 를 만드는 데 사용 되는 구현 된 <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> 지속된 서비스 상태 데이터를 저장할 SQL 데이터베이스를 사용 하는 인스턴스."
  remarks: "SqlPersistenceProviderFactory 클래스를 제대로 작동 하는 영 속 서비스 지 속성 공급자에 대 한 팩터리 클래스를 나타냅니다. 이 시스템에서 제공한 공급자를 사용 하 여 유지 하 고 영 속에 대 한 상태 정보를 검색할 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 서비스입니다.       지 속성, 추상 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>클래스</xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 에서 상속 하 여 서비스 상태 데이터 레코드 잠금을 SqlPersistenceProviderFactory 클래스 구현을 통해 만든 공급자 뿐만 아니라  지속 된 데이터와 상호 작용 하는 메서드 (예: <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>또는 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) 선택적 매개 변수 (`lockInstance`) 문제의 데이터에 대 한 잠금을 해제할지 아니면 유지 여부를 정의 하는.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A> </xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>      > [!NOTE] > <xref:System.ServiceModel.Persistence.PersistenceException>SqlPersistenceProviderFactory에서 throw 된 예외는 기본적으로 숨겨져 예외 세부 정보를 갖지 않는.</xref:System.ServiceModel.Persistence.PersistenceException> 보안 문제를 방지 하기 위해 이러한 세부 정보 숨길 수를 설정 하 여 <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>를 `false`.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>      > [!NOTE] > SQL 지 속성 공급자는 저장 하 고 SQL Server 데이터베이스에서 데이터를 검색 합니다. 호스트 응용 프로그램과 데이터베이스 간 통신이 나 데이터베이스에 인스턴스 상태에 대 한 읽기/쓰기 액세스 권한을 얻으려는 공격자 로부터 보호 하기 위해 보안 SQL Server 환경을 만들어야 합니다."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProviderFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> 클래스를 지정 된 매개 변수 컬렉션을 사용 하 여 구성 합니다."
  remarks: "이 생성자를 사용 하 여를 임의로 지정할 수 있습니다 `lockTimeout`, `connectionString`, 및 `serializeAsText` 다른 생성자에 필요한 다른 매개 변수를 지정 하지 않고 (예: 지정할 수는 `connectionString` 및 `lockTimeout` 매개 변수를 지정 하지 않고는 `serializeAsText` 매개 변수.)"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \n  \n [!code-cs[SqlPersistenceProviderFactory#3](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#3)]"
  syntax:
    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "새 지 속성 제공자 팩터리에서 사용 된 매개 변수 컬렉션입니다. 올바른 매개 변수로 <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> 클래스를 지정된 된 연결 문자열을 사용 하 여 구성 합니다."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \n  \n [!code-cs[SqlPersistenceProviderFactory#2](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#2)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "새 지 속성 공급자 인스턴스의 연결 매개 변수입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> 클래스, 지정된 된 연결 문자열을 사용 하 여 구성 및 <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref> 매개 변수입니다."
  remarks: "에 대 한 기본값 `serializeAsText` 은 `false`를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#1](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#1)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);
    parameters:
    - id: connectionString
      type: System.String
      description: "새 지 속성 공급자 인스턴스의 연결 매개 변수입니다."
    - id: serializeAsText
      type: System.Boolean
      description: "이진이 아닌 텍스트로 데이터를 serialize 하는지 여부를 지정 합니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> 클래스, 지정 된 연결 문자열을 사용 하 여 구성 <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref> 매개 변수입니다."
  remarks: "에 대 한 기본값 `serializeAsText` 은 `false`를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다.       에 대 한 기본값 `lockTimeout` 은 `TimeSpan.Zero`, 해당 잠금 나타냅니다는 사용 되지 않습니다. 경우 `TimeSpan.MaxValue` 사용 하는 잠금 무기한으로 유지 됩니다."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#0](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#0)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);
    parameters:
    - id: connectionString
      type: System.String
      description: "새 지 속성 공급자 팩터리 인스턴스의 연결 매개 변수입니다."
    - id: serializeAsText
      type: System.Boolean
      description: "이진이 아닌 텍스트로 데이터를 serialize 하는지 여부를 지정 합니다."
    - id: lockTimeout
      type: System.TimeSpan
      description: "잠금 소유권의 시간 제한입니다. 이 시간이 지나면 잠긴된 인스턴스가 자동으로 잠금 해제 됩니다. 시간 제한 <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> 잠금 사용 되도록 지정 합니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  id: ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "이 팩터리로 만든 지 속성 공급자 인스턴스의 연결 매개 변수를 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to set and access the `ConnectionString` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#4](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#4)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "이 팩터리로 만든 지 속성 공급자 인스턴스의 연결 매개 변수입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  id: CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "새 초기화 <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> 를 지 속성 저장소로 SQL 데이터베이스를 사용 하는 인스턴스."
  remarks: "초기화 된 지 속성 공급자가 만드는 팩터리의 현재 매개 변수를 사용 (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, 및 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>) 지 속성 공급자가 생성 한 후에 팩터리의 매개 변수를 변경 하는 경우에.</xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>"
  example:
  - "The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \n  \n [!code-cs[SqlPersistenceProviderFactory#7](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#7)]"
  syntax:
    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "생성 되 고 지 속성 공급자의 고유 식별자입니다."
    return:
      type: System.ServiceModel.Persistence.PersistenceProvider
      description: "새로 만든 <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref>합니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "이 팩터리로 만든 지 속성 제공자를 닫을 때 사용 되는 기본 시간 제한 값을 가져옵니다."
  remarks: "닫기 시간 제한의 기본값은 15 초입니다."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 제한 시간 값입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "지 속성 제공자를 열 때 사용 되는 기본 시간 제한 값을 가져옵니다."
  remarks: "열기 시간 제한의 기본값은 15 초입니다."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "기본 제한 시간 값입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  id: LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "이 인스턴스로 만든 지 속성 제공자 인스턴스에서 사용 되는 잠금 소유권의 시간 제한입니다. 이 시간이 지나면 잠긴된 인스턴스가 자동으로 잠금 해제 됩니다."
  remarks: "시간 제한 `TimeSpan.Zero` 잠금 사용 되도록 지정 합니다."
  example:
  - "The following code example shows how to access the `LockTimeout` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#5](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#5)]"
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "잠금 소유권의 시간 제한 값입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Abort 단계를 나타냅니다."
  remarks: '`OnAbort`서비스 호스트 갑자기 종료 될 때 발생 하 고 현재 처리 중인 활성 명령의 닫힙니다.'
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Close 단계의 시작을 나타냅니다."
  remarks: "Close 단계는 서비스가 닫힐 때 발생 합니다."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간을 지 속성 공급자는이 시도 중단입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다."
    return:
      type: System.IAsyncResult
      description: "OnBeginClose 비동기 메서드 호출의 상태입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Open 단계의 시작을 나타냅니다."
  remarks: "Open 단계는 서비스가 열릴 때 발생 합니다."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간을 지 속성 공급자는이 시도 중단입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출 될 메서드."
    - id: state
      type: System.Object
      description: "이 특정 비동기 작업을 다른 작업과 구별 하는 사용자 제공 개체입니다."
    return:
      type: System.IAsyncResult
      description: "OnBeginOpen 비동기 메서드 호출의 상태입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Close 단계를 나타냅니다."
  remarks: "Close 단계는 서비스가 닫힐 때 발생 합니다."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간을 지 속성 공급자는이 시도 중단입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Close 단계의 끝을 나타냅니다."
  remarks: "Close 단계는 서비스가 닫힐 때 발생 합니다."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "작업의 결과에 대 한 참조입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Open 단계의 끝을 나타냅니다."
  remarks: "Open 단계는 서비스가 열릴 때 발생 합니다."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "작업의 결과에 대 한 참조입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Open 단계를 나타냅니다."
  remarks: "Open 단계는 서비스가 열릴 때 발생 합니다."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "기간을 지 속성 공급자는이 시도 중단입니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  id: SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "이 팩터리로 만든 지 속성 공급자에서 이진이 아닌 텍스트로 데이터를 serialize 하는지 여부를 지정 합니다."
  remarks: "에 대 한 기본값 `serializeAsText` 은 `false`를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다."
  example:
  - "The following code example shows how to access the `SerializeAsText` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#6](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#6)]"
  syntax:
    content: public bool SerializeAsText { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>텍스트; 서비스 정보를 serialize 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProviderFactory
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider
  nameWithType: SqlPersistenceProviderFactory.CreateProvider
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort
  nameWithType: SqlPersistenceProviderFactory.OnAbort
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose
  nameWithType: SqlPersistenceProviderFactory.OnClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose
  nameWithType: SqlPersistenceProviderFactory.OnEndClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen
  nameWithType: SqlPersistenceProviderFactory.OnOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
