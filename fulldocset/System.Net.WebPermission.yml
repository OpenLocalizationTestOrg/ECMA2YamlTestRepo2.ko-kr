### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "HTTP 인터넷 리소스에 액세스할 수 권한을 제어 합니다."
  remarks: "WebPermission은 메서드 및 인터넷 리소스에 대 한 액세스를 제어 하는 속성 집합을 제공 합니다. 한 WebPermission를 사용 하 여 제한 또는 무제한 액세스 기반으로 하 여 리소스를 제공 하는 <xref:System.Security.Permissions.PermissionState>는 WebPermission 만들어질 때 설정 된.</xref:System.Security.Permissions.PermissionState>       다음 매개 변수 중 하나를 사용 하는 생성자를 호출 하 여 WebPermission 인스턴스를 만들고:-매개 변수가 없습니다. 기본값은 <xref:System.Security.Permissions.PermissionState>은 <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> 지정 <xref:System.Security.Permissions.PermissionState>모든 URI를 대상 클래스에서 사용할 수 있도록 또는 <xref:System.Security.Permissions.PermissionState>을 사용 하 여 지정 된 Uri에만 액세스할 수 있도록는 <xref:System.Net.WebPermission.AddPermission%2A>메서드.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>값 및 URI 문자열.</xref:System.Net.NetworkAccess> 지정된 된 URI에 의해 부여 된 권한에 <xref:System.Net.NetworkAccess>값.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>지정자와 URI 정규식.</xref:System.Net.NetworkAccess>       <xref:System.Net.WebPermission.ConnectList%2A>및 <xref:System.Net.WebPermission.AcceptList%2A>uri 액세스 권한을 부여 합니다.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> URI에 이러한 목록 중 하나를 추가 하려면 <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> 사용 전달 하는 경우 <xref:System.Net.NetworkAccess>로 <xref:System.Net.NetworkAccess>매개 변수를 URI <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> 에 추가할</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission을 사용 하면 Uri가 있는 대상 클래스에 대 한 연결 <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> 일치      > [!CAUTION] > 인터넷 리소스에 대 한 액세스를 거부 하려면 해당 리소스의 가능한 모든 경로에 대 한 액세스를 거부 해야 합니다. 그러려면, <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>state 매개 변수를 <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> 인</xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> 호출 특정 리소스에 대 한 액세스를 허용 하는 것이 좋습니다. 이 주제에 대 한 자세한 내용은 참조는 [NIB: Deny 메서드를 사용 하 여](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) 항목입니다.      > [!NOTE] >만 리소스 정식 경로 사용 하 여 액세스를 거부 해야 합니다. 모든 경로 구문 변형을 사용할 필요가 없습니다 있습니다.      > [!NOTE] >에서 사용자 이름 및 기본 포트 정보를 제거할지는 <xref:System.Uri>에 제공 된 정규식 인수과의 비교 하기 전에 <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>생성자.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> 정규식 포함 되어 있으면 사용자 정보 또는 해당 기본 포트 번호를 사용 하 여 들어오는 모든 <xref:System.Uri>가 정규식과 일치 하지 않게 됩니다.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Net.WebPermission>클래스</xref:System.Net.WebPermission> 의 새 인스턴스를 만듭니다. 이 생성자에 대 한 어떠한 권리도 부여 하지 않는 빈 사용 권한을 만듭니다."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 클래스 모두 통과 하는 요청을 허용 하거나 모든 요청을 거부 합니다."
  remarks: "값은 `state` 매개 변수가 <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>또는 <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>각각 완벽 하 게 제한 되거나 완전 무제한 액세스를 모든 보안 변수 차이 계산 합니다.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>다음 <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> 를 사용 하 여 개별 Uri에 대 한 액세스를 제공할 수 있습니다,</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> 지정 하는 경우"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 클래스 지정된 된 URI에 대 한 지정 된 액세스 권한 사용 합니다."
  remarks: "이 생성자는 <xref:System.Net.WebPermission>원격 호스트 연결 하거나에서 설명 하는 URI를 사용 하 여 원격 호스트 연결을 적용 하는 대상 사용 권한을 부여 하 고는 `uriString` 매개 변수.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "지정된 된 URI에 권한을 부여 하는 액세스의 종류를 나타내는 NetworkAccess 값입니다. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>로컬 리소스에는 인터넷에서 연결을 허용 하도록 응용 프로그램 수 있음을 나타냅니다. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>응용 프로그램을 특정 인터넷 리소스에 연결할 수 있음을 나타냅니다."
    - id: uriString
      type: System.String
      description: "액세스 권한이 부여 되는 URI 문자열입니다."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 클래스 지정 된 URI 정규식에 대 한 지정 된 액세스 권한 사용 합니다."
  remarks: "이 생성자는 <xref:System.Net.WebPermission>원격 호스트 연결 하거나에서 설명 하는 URI를 사용 하 여 원격 호스트 연결을 적용 하는 대상 사용 권한을 부여 하 고는 `uriRegex`매개 변수.</xref:System.Net.WebPermission>      > [!NOTE] > 만드는 것이 좋습니다. `uriRegex` 를 사용 하는 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, 및 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>플래그.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > 후보 URI 문자열 관련 정규식의 목록은 대해 확인 됩니다 (<xref:System.Net.WebPermission.AcceptList%2A> 또는 <xref:System.Net.WebPermission.ConnectList%2A>) 두 가지 방법으로.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 첫째, 후보 URI 문자열은 목록에서 확인 적절 한; 그런 다음 일치 하는 후보 URI 문자열으로 변환 되는 <xref:System.Uri>적절 한 목록에 대해 확인 하 고.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> 지정된 된 URI에 권한을 부여 하는 액세스의 종류를 나타내는 값입니다. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>로컬 리소스에는 인터넷에서 연결을 허용 하도록 응용 프로그램 수 있음을 나타냅니다. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>응용 프로그램을 특정 인터넷 리소스에 연결할 수 있음을 나타냅니다."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "액세스를 부여할을 URI를 설명 하는 정규식입니다."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "이 속성은 단일 열거를 반환 합니다.이 소유한 권한을 그대로 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다. 반환된 된 열거형에 포함 된 형식은 가능한 개체 <xref:System.String>및 &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "이 속성에는이 <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> 에서 허용 하는 로컬 리소스의 목록을 가져옵니다. 적용 한 클래스 <xref:System.Net.WebPermission>이 목록에 있는 로컬 리소스에 대 한 들어오는 연결을 수신 하도록 사용 권한을 갖습니다.</xref:System.Net.WebPermission>      > [!NOTE] > Uri <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> 를 사용 하 여이 목록에 추가할 수 있습니다      > [!NOTE] > 후보 URI 문자열 관련 정규식의 목록은 대해 확인 됩니다 (AcceptList 또는 <xref:System.Net.WebPermission.ConnectList%2A>) 두 가지 방법으로.</xref:System.Net.WebPermission.ConnectList%2A> 첫째, 후보 URI 문자열은 목록에서 확인 적절 한; 그런 다음 일치 하는 후보 URI 문자열으로 변환 되는 <xref:System.Uri>적절 한 목록에 대해 확인 하 고.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>인터페이스 포함 된 사용 권한을 허용 합니다.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "현재 지정 된 액세스 권한으로 지정 된 URI 문자열을 추가 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  remarks: "지정한 경우 <xref:System.Security.Permissions.PermissionState>로 <xref:System.Security.Permissions.PermissionState>의 사용을 허가 AddPermission를 사용 하 여 `uriString` 대상 클래스에</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 방식으로 `uriString` 수 있습니다. 대상으로 하 여 클래스를 지정 `access`합니다. 지정 <xref:System.Net.NetworkAccess>으로 변수로 지정 된 URI에 추가할 액세스 매개 변수는 `uriString` URI 목록에 매개 변수 문자열을 수락 하거나 지정 <xref:System.Net.NetworkAccess>액세스 매개 변수 목록에 추가 하려면 URI는 URI의 연결 문자열.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] >에 대 한 호출 AddPermission <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>모든 Uri에 권한이 부여 되므로 아무런 효과가 없으며, 갖습니다.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > 후보 URI 문자열 관련 정규식의 목록은 대해 확인 됩니다 (<xref:System.Net.WebPermission.AcceptList%2A> 또는 <xref:System.Net.WebPermission.ConnectList%2A>) 두 가지 방법으로.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 첫째, 후보 URI 문자열은 목록에서 확인 적절 한; 그런 다음 일치 하는 후보 URI 문자열으로 변환 되는 <xref:System.Uri>적절 한 목록에 대해 확인 하 고.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> URI에 부여 된 액세스 권한을 지정 하는 합니다."
    - id: uriString
      type: System.String
      description: "액세스 권한이 부여 되는 URI를 설명 하는 문자열입니다."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "현재 지정 된 액세스 권한 사용 하는 지정 된 URI를 추가 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  remarks: "지정한 경우 <xref:System.Security.Permissions.PermissionState>로 <xref:System.Security.Permissions.PermissionState>를 사용 하 여 <xref:System.Net.WebPermission.AddPermission%2A>의 사용을 허용 하도록 `uriRegex` 대상 클래스에</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> 지정 <xref:System.Net.NetworkAccess>로 `access` 변수로 지정 된 URI에 추가할 매개 변수는 `uriRegex` URI 목록에 매개 변수 문자열을 수락 하거나 지정 <xref:System.Net.NetworkAccess>액세스 매개 변수 목록에 추가 하려면 URI는 URI의 연결 문자열.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > 호출 <xref:System.Net.WebPermission.AddPermission%2A>에 <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>인스턴스 모든 Uri에 권한이 부여 되었는지으로 영향을 미치지 것입니다.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > 만드는 것이 좋습니다. `uriRegex` 를 사용 하는 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, 및 <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>플래그.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > 후보 URI 문자열 관련 정규식의 목록은 대해 확인 됩니다 (<xref:System.Net.WebPermission.AcceptList%2A> 또는 <xref:System.Net.WebPermission.ConnectList%2A>) 두 가지 방법으로.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> 첫째, 후보 URI 문자열은 목록에서 확인 적절 한; 그런 다음 일치 하는 후보 URI 문자열으로 변환 되는 <xref:System.Uri>적절 한 목록에 대해 확인 하 고.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "URI에 부여 된 액세스 권한을 지정 하는 NetworkAccess 합니다."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "액세스 권한이 부여 되는 Uri의 집합을 설명 하는 정규식입니다."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "이 속성은 단일 열거를 반환 합니다. 연결할 수 있는 권한을이 소유한 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다. 반환된 된 열거형에 포함 된 형식은 가능한 개체 <xref:System.String>및 &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "이 속성에는이 <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> 허용 되는 원격 리소스의 목록을 가져옵니다. 적용 한 클래스 <xref:System.Net.WebPermission>사용 리소스를이 목록에 검색을 사용 하 여 연결할 권한을 갖습니다.</xref:System.Net.WebPermission>      > [!NOTE] > Uri <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> 를 사용 하 여이 목록에 추가할 수 있습니다      > [!NOTE] > 후보 URI 문자열 관련 정규식의 목록은 대해 확인 됩니다 (<xref:System.Net.WebPermission.AcceptList%2A> 또는 ConnectList) 두 가지 방법으로.</xref:System.Net.WebPermission.AcceptList%2A> 첫째, 후보 URI 문자열은 목록에서 확인 적절 한; 그런 다음 일치 하는 후보 URI 문자열으로 변환 되는 <xref:System.Uri>적절 한 목록에 대해 확인 하 고.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>포함 된 인터페이스에 대 한 연결.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "복사본을 만듭니다는 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  remarks: "<xref:System.Security.IPermission>원래 <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> 와 리소스에 액세스 하는 동일한이 메서드 나타냅니다 반환</xref:System.Security.IPermission> 이 메서드를 재정의 <xref:System.Security.CodeAccessPermission.Copy%2A>지원 하기 위해 구현 하 고는 <xref:System.Security.IPermission>인터페이스.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "새 인스턴스는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 원본과 같은 값을 포함 하는 클래스입니다."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "다시 생성 한 <xref href=&quot;System.Net.WebPermission&quot;> </xref> XML 인코딩에서 합니다."
  remarks: "FromXml 메서드 <xref:System.Net.WebPermission>XML 인코딩에서 정의 된 <xref:System.Security.SecurityElement>클래스</xref:System.Security.SecurityElement> 에서</xref:System.Net.WebPermission> 다시 만듭니다.       사용 하 여는 <xref:System.Net.WebPermission.ToXml%2A>메서드를 XML로 인코딩하는 <xref:System.Net.WebPermission>, 상태 정보를 포함 합니다.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "다시 구성할 수 있는 XML 인코딩을 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code> 매개 변수는<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>이 형식에 대 한 사용 권한 요소가 않습니다."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "두 개의 논리적 교집합을 반환 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 인스턴스."
  remarks: "반환 교차 한 <xref:System.Net.WebPermission>모두에 공통 되는 사용 권한을 포함 하는 `target` 변수와 현재 인스턴스에.</xref:System.Net.WebPermission>       이 메서드를 재정의 <xref:System.Security.CodeAccessPermission.Intersect%2A>지원 하기 위해 구현 하 고는 <xref:System.Security.IPermission>인터페이스.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> 현재 인스턴스와 비교 합니다."
    return:
      type: System.Security.IPermission
      description: "새 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 현재 인스턴스의 교집합을 나타내는 및 <code> target </code> 매개 변수입니다. 메서드가 반환 하는 경우의 교집합에 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 형식의<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "결정 여부 현재 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 지정된 된 개체의 하위 집합입니다."
  remarks: "하는 경우 현재 <xref:System.Net.WebPermission>하 여 완전히 포함 된 연결 된 리소스 집합을 지정는 `target` 매개 변수를 다음 현재 <xref:System.Net.WebPermission>의 하위 집합인 `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> IsSubsetOf를 재정의 하 고 지원 하기 위해 구현 하는이 메서드는 <xref:System.Security.IPermission>인터페이스.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> 현재 비교할 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 인스턴스가의 하위 집합인 경우는 <code> target </code> 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 대상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 무제한 되지 않은 빈 현재 사용 권한에 대 한 및 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 그렇지 않은 경우."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "대상 매개 변수가의 인스턴스가 아닌 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "현재 인스턴스의 Regex로 인코딩된 권한이 있으며 정확히 동일한 권한이 대상 인스턴스에 있습니다."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "전체 사용 권한 상태 확인는 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  remarks: "경우 <xref:System.Net.WebPermission>은 <xref:System.Security.Permissions.PermissionState>, 대상 클래스에서 모든 Uri를 사용할 수 있습니다.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> 그렇지 않은 경우 대상 클래스와 함께 사용 하려는 모든 URI에 대 한 특정 권한을 부여 해야 합니다.      > [!NOTE] > 사용 <xref:System.Net.WebPermission.AddPermission%2A>URI를 추가 하려면 해당 사용 권한을 지정 하십시오.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "XML 인코딩을 만듭니다는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 및 현재 상태에 있습니다."
  remarks: "<xref:System.Net.WebPermission.FromXml%2A> <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> 상태 정보를 복원 하는 메서드</xref:System.Net.WebPermission.FromXml%2A> 를 사용 하 여"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 는 XML로 인코딩된 표현을 포함 하는 <xref href=&quot;System.Net.WebPermission&quot;> </xref>, 상태 정보를 포함 합니다."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "두 인스턴스 간에 논리적 합집합을 반환 합니다.는 <xref href=&quot;System.Net.WebPermission&quot;> </xref> 클래스입니다."
  remarks: "Union 반환는 <xref:System.Net.WebPermission>둘 다의 모든 사용 권한을 포함 하는 `target` 변수와 현재 인스턴스에.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> 와 현재 결합할 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> 현재 인스턴스의 합집합을 나타내는 및 <code> target </code> 매개 변수입니다. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. 대상이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 현재의 복사본을 반환 하는 메서드가 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "대상이 아닙니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 형식의 <xref href=&quot;System.Net.WebPermission&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
