### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  id: SecurityContextSecurityToken
  children:
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo
  langs:
  - csharp
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  type: Class
  summary: "Ws-secureconversation 사양에 정의 된 토큰을 나타냅니다."
  remarks: "이 클래스의 인스턴스는 클라이언트를 나타내는 인증 정보와 키 자료를 포함 합니다. 사용자를 사용 하도록 특정 암호화 알고리즘을 선택 합니다."
  syntax:
    content: 'public class SecurityContextSecurityToken : System.IdentityModel.Tokens.SecurityToken, IDisposable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  id: '#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)'
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref> 클래스입니다."
  remarks: "`contextId` 서비스에서 발급 한 모든 보안 컨텍스트 토큰 중에서 고유 해야 합니다."
  syntax:
    content: public SecurityContextSecurityToken (System.Xml.UniqueId contextId, byte[] key, DateTime validFrom, DateTime validTo);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)'
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref> 클래스입니다."
  remarks: "`contextId` 서비스에서 발급 한 모든 보안 컨텍스트 토큰 중에서 고유 해야 합니다."
  syntax:
    content: public SecurityContextSecurityToken (System.Xml.UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: id
      type: System.String
      description: "토큰 id입니다."
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref> 클래스입니다."
  remarks: "`contextId` 서비스에서 발급 한 모든 보안 컨텍스트 토큰 중에서 고유 해야 합니다."
  syntax:
    content: public SecurityContextSecurityToken (System.Xml.UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: id
      type: System.String
      description: "토큰 id입니다."
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 토큰이 발급 될 파티를 나타내는 인스턴스입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref> 클래스입니다."
  remarks: "`contextId` 서비스에서 발급 한 모든 보안 컨텍스트 토큰 중에서 고유 해야 합니다."
  syntax:
    content: public SecurityContextSecurityToken (System.Xml.UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, System.Xml.UniqueId keyGeneration, DateTime keyEffectiveTime, DateTime keyExpirationTime, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: id
      type: System.String
      description: "토큰 id입니다."
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "A <xref:System.Xml.UniqueId>키 생성을 나타내는입니다.</xref:System.Xml.UniqueId>"
    - id: keyEffectiveTime
      type: System.DateTime
      description: "키 유효 시작 시간입니다."
    - id: keyExpirationTime
      type: System.DateTime
      description: "키 만료 시간입니다."
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 토큰이 발급 될 파티를 나타내는 인스턴스입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  id: AuthorizationPolicies
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: AuthorizationPolicies
  nameWithType: SecurityContextSecurityToken.AuthorizationPolicies
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰 인증 정책의 읽기 전용 컬렉션을 가져옵니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> AuthorizationPolicies { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 인스턴스."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  id: BootstrapMessageProperty
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: BootstrapMessageProperty
  nameWithType: SecurityContextSecurityToken.BootstrapMessageProperty
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "가져오거나는 <xref href=&quot;System.ServiceModel.Security.SecurityMessageProperty&quot;> </xref> 부트스트랩 메시지에서 추출 합니다."
  syntax:
    content: public System.ServiceModel.Security.SecurityMessageProperty BootstrapMessageProperty { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityMessageProperty
      description: "보안 메시지 속성입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityContextSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId
  id: ContextId
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: ContextId
  nameWithType: SecurityContextSecurityToken.ContextId
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "컨텍스트 id를 가져옵니다."
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  id: CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  nameWithType: SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "보안 컨텍스트 토큰 쿠키를 만듭니다."
  syntax:
    content: public static System.ServiceModel.Security.Tokens.SecurityContextSecurityToken CreateCookieSecurityContextToken (System.Xml.UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies, System.ServiceModel.Security.SecurityStateEncoder securityStateEncoder);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: id
      type: System.String
      description: "토큰 id입니다."
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 인스턴스."
    - id: securityStateEncoder
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "보안 상태 인코더입니다."
    return:
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "보안 컨텍스트 토큰 쿠키입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  id: CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  nameWithType: SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "보안 컨텍스트 토큰 쿠키를 만듭니다."
  syntax:
    content: public static System.ServiceModel.Security.Tokens.SecurityContextSecurityToken CreateCookieSecurityContextToken (System.Xml.UniqueId contextId, string id, byte[] key, DateTime validFrom, DateTime validTo, System.Xml.UniqueId keyGeneration, DateTime keyEffectiveTime, DateTime keyExpirationTime, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies, System.ServiceModel.Security.SecurityStateEncoder securityStateEncoder);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "<xref:System.Xml.UniqueId>나타내는 컨텍스트 id입니다.</xref:System.Xml.UniqueId>"
    - id: id
      type: System.String
      description: "토큰 id입니다."
    - id: key
      type: System.Byte[]
      description: "키를 나타내는 바이트 배열입니다."
    - id: validFrom
      type: System.DateTime
      description: "유효 시작 시간입니다."
    - id: validTo
      type: System.DateTime
      description: "만료 시간입니다."
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "A <xref:System.Xml.UniqueId>키 생성을 나타내는입니다.</xref:System.Xml.UniqueId>"
    - id: keyEffectiveTime
      type: System.DateTime
      description: "키 유효 시작 시간입니다."
    - id: keyExpirationTime
      type: System.DateTime
      description: "키 만료 시간입니다."
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 인스턴스."
    - id: securityStateEncoder
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "보안 상태 인코더입니다."
    return:
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "보안 컨텍스트 토큰 쿠키입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityContextSecurityToken.CreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose
  id: Dispose
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityContextSecurityToken.Dispose()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "이 개체의이 인스턴스에서 사용 하는 관리 되지 않는 리소스를 해제 합니다."
  remarks: "이 메서드를 사용 하 여를 닫거나 파일, 스트림,이 인터페이스를 구현 하는 클래스의 인스턴스에서 보유 하는 핸들 등의 관리 되지 않는 리소스를 해제 합니다. 개체에서 보유 하는 리소스와 관련 된 모든 작업에 사용 되는 규칙에 따라이 메서드는 하거나 다시 사용할 수 있도록 준비 하는 개체입니다.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.IDisposable.Dispose%2A>.</xref:System.IDisposable.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id
  id: Id
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SecurityContextSecurityToken.Id
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰 id를 가져옵니다."
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "토큰 id입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  id: IsCookieMode
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: IsCookieMode
  nameWithType: SecurityContextSecurityToken.IsCookieMode
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "쿠키를 처리 하는 방법을 지정 하는 모드 설정 사용 하 여 보안 컨텍스트 토큰 (SCT)을 읽는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsCookieMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>쿠키 모드 SCT;에서 읽기 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: KeyEffectiveTime
  nameWithType: SecurityContextSecurityToken.KeyEffectiveTime
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "키 유효 시작 시간을 가져옵니다."
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>키 유효 시작 시간을 나타내는입니다.</xref:System.DateTime>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: KeyExpirationTime
  nameWithType: SecurityContextSecurityToken.KeyExpirationTime
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "키 만료 시간을 가져옵니다."
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>키 만료 시간을 나타내는입니다.</xref:System.DateTime>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SecurityContextSecurityToken.KeyGeneration
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "키 생성을 가져옵니다."
  remarks: "부터는 [!INCLUDE[netfx35_short](~/add/includes/netfx35-short-md.md)], 유선으로이 속성은 내보낸는 `sc:Instance`> 요소입니다. 이전 버전의 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]로 생성 된는 `sc:Generation`> 요소입니다."
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "A <xref:System.Xml.UniqueId>키 생성을 나타내는입니다.</xref:System.Xml.UniqueId>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityContextSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "현재 토큰의 키 식별자 절에 지정 된 키 식별자 절 일치 하는지 여부를 나타냅니다."
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "지정 된 키 식별자 절입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 토큰의 키 식별자 절을 지정 된 키 식별자 절이 없습니다; 일치 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SecurityContextSecurityToken.SecurityKeys
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "보안 키의 읽기 전용 컬렉션을 가져옵니다."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "읽기 전용 컬렉션을 <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 인스턴스."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString
  id: ToString
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityContextSecurityToken.ToString()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "이 개체의 현재 인스턴스의 텍스트 표현을 생성합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 개체의 현재 인스턴스의 텍스트 표현입니다."
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SecurityContextSecurityToken.ValidFrom
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰 유효 시작 시간을 가져옵니다."
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>토큰 유효 시작 시간을 나타내는입니다.</xref:System.DateTime>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo
  id: ValidTo
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SecurityContextSecurityToken.ValidTo
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "토큰 만료 시간을 가져옵니다."
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>토큰 만료 시간을 나타내는입니다.</xref:System.DateTime>"
  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.Byte[],System.DateTime,System.DateTime)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,Byte[],DateTime,DateTime)
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityContextSecurityToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>)
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: SecurityContextSecurityToken.AuthorizationPolicies
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: BootstrapMessageProperty
  nameWithType: SecurityContextSecurityToken.BootstrapMessageProperty
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty
- uid: System.ServiceModel.Security.SecurityMessageProperty
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: System.ServiceModel.Security.SecurityMessageProperty
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityContextSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SecurityContextSecurityToken.ContextId
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  nameWithType: SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(System.Xml.UniqueId,System.String,System.Byte[],System.DateTime,System.DateTime,System.Xml.UniqueId,System.DateTime,System.DateTime,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.ServiceModel.Security.SecurityStateEncoder)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  nameWithType: SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken(UniqueId,String,Byte[],DateTime,DateTime,UniqueId,DateTime,DateTime,ReadOnlyCollection<IAuthorizationPolicy>,SecurityStateEncoder)
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityContextSecurityToken.CreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: Dispose()
  nameWithType: SecurityContextSecurityToken.Dispose()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose()
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityContextSecurityToken.Id
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: IsCookieMode
  nameWithType: SecurityContextSecurityToken.IsCookieMode
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SecurityContextSecurityToken.KeyEffectiveTime
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SecurityContextSecurityToken.KeyExpirationTime
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SecurityContextSecurityToken.KeyGeneration
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityContextSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityContextSecurityToken.SecurityKeys
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ToString()
  nameWithType: SecurityContextSecurityToken.ToString()
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString()
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityContextSecurityToken.ValidFrom
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityContextSecurityToken.ValidTo
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.#ctor*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken.SecurityContextSecurityToken
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.AuthorizationPolicies*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: SecurityContextSecurityToken.AuthorizationPolicies
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.BootstrapMessageProperty*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: BootstrapMessageProperty
  nameWithType: SecurityContextSecurityToken.BootstrapMessageProperty
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: SecurityContextSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ContextId*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SecurityContextSecurityToken.ContextId
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateCookieSecurityContextToken*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CreateCookieSecurityContextToken
  nameWithType: SecurityContextSecurityToken.CreateCookieSecurityContextToken
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: SecurityContextSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Dispose*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: Dispose
  nameWithType: SecurityContextSecurityToken.Dispose
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.Id*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityContextSecurityToken.Id
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.IsCookieMode*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: IsCookieMode
  nameWithType: SecurityContextSecurityToken.IsCookieMode
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyEffectiveTime*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SecurityContextSecurityToken.KeyEffectiveTime
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyExpirationTime*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SecurityContextSecurityToken.KeyExpirationTime
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.KeyGeneration*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SecurityContextSecurityToken.KeyGeneration
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.MatchesKeyIdentifierClause*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityContextSecurityToken.MatchesKeyIdentifierClause
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.SecurityKeys*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityContextSecurityToken.SecurityKeys
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ToString*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ToString
  nameWithType: SecurityContextSecurityToken.ToString
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidFrom*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityContextSecurityToken.ValidFrom
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken.ValidTo*
  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityContextSecurityToken.ValidTo
