### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlPipe
  id: SqlPipe
  children:
  - Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  - Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  - Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  - Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  - Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  langs:
  - csharp
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
  type: Class
  summary: "호출자에 게 결과 반환 하는 SQL Server 데이터베이스에 관리 되는 저장된 프로시저 실행 중인 프로세스를 허용 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스의 인스턴스 <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> <xref:Microsoft.SqlServer.Server.SqlContext>클래스</xref:Microsoft.SqlServer.Server.SqlContext> 의 속성</xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> 을 통해 관리 되는 저장된 프로시저를 사용할 수"
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a SqlPipe to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_10_1.cs)]\n [!code-vb[DataWorks SqlPipe#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_10_1.vb)]"
  syntax:
    content: public sealed class SqlPipe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  id: ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "매개 변수로 전달 된 명령을 실행 하 고 클라이언트에 결과 보냅니다."
  remarks: "실제 결과 외에도 다른 메시지와 오류도 클라이언트에 직접 전송 됩니다.       출력 매개 변수 및 반환 값 클라이언트로 전송 되지 않습니다. 이들은 명령 개체의 매개 변수 컬렉션을 통해 호출자에 게 사용할 수 있습니다.       이 명령은 프로세스에서 연결에 바인딩되지 않은 경우는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> 이 메서드는 작업 중이 아닌 연결에 바인딩된 명령에 지원 되지 않습니다.       에 오류가 있는 경우는 <xref:System.Data.SqlClient.SqlCommand>개체 전송 된 예외는 파이프로 보내지만 호출 관리 코드에도 복사본을 보냅니다.</xref:System.Data.SqlClient.SqlCommand> 호출 코드에서 예외를 catch 하지 않습니다 Transact SQL 코드를 스택으로 전파 되며 출력에 두 번 표시 합니다. 호출 코드에서 예외를 catch 하는 경우 파이프 소비자는 오류를 표시 되지만 중복 오류 수 없습니다."
  example:
  - "The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure. The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.  \n  \n [!code-cs[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/csharp/8520fc47-4500-47d0-87b3-_1.cs)]\n [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/add/codesnippet/visualbasic/8520fc47-4500-47d0-87b3-_1.vb)]"
  syntax:
    content: public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> 실행할 개체입니다."
  overload: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>command</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 메서드는 작업 중이 아닌 연결에 바인딩된 명령에 지원 되지 않습니다."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  id: IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> 단일 결과 집합을 클라이언트로 다시 보내는 모드로 설정 됩니다. 이 속성은 읽기 전용입니다."
  syntax:
    content: public bool IsSendingResults { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>메서드 호출 및 <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> 단일 결과 집합을 클라이언트로 다시 보내는 모드가 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  id: Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "클라이언트 또는 현재 출력 소비자에 게 직접 설정 하는 단일 행 결과 보냅니다."
  syntax:
    content: public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: '클라이언트에 전송 하는 단일 행 결과 집합:는 <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> 개체입니다.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  id: Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "클라이언트 또는 현재 출력 소비자에 게 직접 설정 다중 행 결과 보냅니다."
  remarks: "경우는 <xref:System.Data.SqlClient.SqlDataReader>매개 변수 열을 숨겨진에 전달 된 개체, 열 클라이언트에 전송 하는 결과 집합에 전파 되지 않습니다.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public void Send (System.Data.SqlClient.SqlDataReader reader);
    parameters:
    - id: reader
      type: System.Data.SqlClient.SqlDataReader
      description: '다중 행 결과를 클라이언트에 보내도록 설정:는 <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> 개체입니다.'
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  id: Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "클라이언트 또는 현재 출력 소비자에 게 직접 문자열 메시지를 보냅니다."
  remarks: "메시지 문자열은 클라이언트에 대 한 정보 메시지로 전송 됩니다. 클라이언트 응용 프로그램의 데이터 액세스 응용 프로그래밍 인터페이스 (API)를 사용 하는 따라 서로 다른 메커니즘을 통해 메시지를 수신할 수 있습니다. 예를 들어 클라이언트가 ADO.NET을 사용 하는 경우 메시지를 전송 통해는 <xref:System.Data.SqlClient.SqlConnection.InfoMessage>이벤트.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>"
  example:
  - "The following example uses the Send method to send a message string directly to the client.  \n  \n [!code-vb[DataWorks SqlPipe.Send#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_4_1.vb)]\n [!code-cs[DataWorks SqlPipe.Send#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_4_1.cs)]"
  syntax:
    content: public void Send (string message);
    parameters:
    - id: message
      type: System.String
      description: "클라이언트에 보낼 메시지 문자열입니다."
  overload: Microsoft.SqlServer.Server.SqlPipe.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> message </code> 4, 000 자 보다 큽니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  id: SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "결과 집합의 끝을 표시 하 고 반환 된 <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> 인스턴스를 초기 상태로 다시 합니다."
  remarks: "관리 되는 저장된 프로시저에 <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 를 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다. 이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>및 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, 저장된 프로시저를 사용자 지정 결과 집합을 클라이언트로 보낼 수 있도록 합니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the SendResultsEnd method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_3_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsEnd#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_3_1.cs)]"
  syntax:
    content: public void SendResultsEnd ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>메서드가 이전에 호출 되지 않았습니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "데이터의 단일 행을 클라이언트로 다시 보냅니다."
  remarks: "관리 되는 저장된 프로시저에 <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 를 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다. 이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>및 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, 저장된 프로시저를 사용자 지정 결과 집합을 클라이언트로 보낼 수 있습니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>       SendResultsRow 메서드는 클라이언트에 데이터의 단일 행을 보냅니다. 이후에 행 SendResultsRow, 전송 되는 각 행에 대해 한 번 호출 하 여 호출자에 게 반환할 수 있습니다. 모든 행을 보낸 후에 대 한 호출에서 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>메서드는 결과 집합의 끝을 표시 하는 데 필요 합니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the SendResultsRow method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/ddfb48e8-078f-4be8-b690-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/ddfb48e8-078f-4be8-b690-_1.cs)]"
  syntax:
    content: public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> 클라이언트에 보낼 행에 대 한 열 값이 있는 개체입니다. 레코드에 대 한 스키마의 메타 데이터에서 설명 하는 스키마와 일치 해야 합니다는 <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> 에 전달 되는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>메서드.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>메서드가 이전에 호출 되지 않았습니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*>"
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  id: SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  langs:
  - csharp
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "결과 집합을 클라이언트로 다시 보낼 수의 시작을 표시 하 고 레코드 매개 변수를 사용 하 여 결과 집합을 설명 하는 메타 데이터를 만듭니다."
  remarks: "관리 되는 저장된 프로시저에 <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> 를 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다. 이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>및 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, 저장된 프로시저를 사용자 지정 결과 집합을 클라이언트로 보낼 수 있도록 합니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       SendResultsStart 메서드는 결과 집합의 시작을 표시 하며 레코드 매개 변수를 사용 하 여 결과 집합을 설명 하는 메타 데이터를 만듭니다. 사용 하 여 보낸 모든 후속 행을는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>메서드, 메타 데이터 정의와 일치 해야 합니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>       SendResultsStart만 호출 후 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>및 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>호출할 수 있습니다.</xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> </xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> <xref:Microsoft.SqlServer.Server.SqlPipe> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> Throw</xref:Microsoft.SqlServer.Server.SqlPipe> 의 동일한 인스턴스에 있는 다른 모든 메서드 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>설정 <xref:Microsoft.SqlServer.Server.SqlPipe>를 초기 상태로 다른 메서드를 호출할 수 있습니다.</xref:Microsoft.SqlServer.Server.SqlPipe></xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>       CLR 실행에서 TRANSACT-SQL로 컨트롤이 반환 된 후 CLR 메모리에 초기화 된 정적 또는 지역 변수를 사용 하지 마십시오. 예를 들어, 진행 중인 인스턴스의 클래스를 저장 하지 `SQLDataRecord`, CLR에서 컨트롤이 반환 후 사용 될입니다. 한 가지 예외는는 `SQLMetaData` 프로세스 클래스에 있습니다."
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the SendResultsStart method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/visualbasic/7934d20a-2ed7-4876-a001-_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsStart#1](~/add/codesnippet/csharp/7934d20a-2ed7-4876-a001-_1.cs)]"
  syntax:
    content: public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);
    parameters:
    - id: record
      type: Microsoft.SqlServer.Server.SqlDataRecord
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.SqlDataRecord&quot;> </xref> 개체 메타 데이터는 추출와 결과 집합을 설명 하는 데 사용 합니다."
  overload: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>record</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> record </code> 에 열이 없거나 초기화 되지 않았습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이외의 다른 방법 <> </> *> 또는 <> </> *> SendResultsStart 메서드 다음에 호출 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend(SqlCommand)
  nameWithType: SqlPipe.ExecuteAndSend(SqlCommand)
  fullName: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
  fullName: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataRecord)
  nameWithType: SqlPipe.Send(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlDataRecord
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlDataRecord
  nameWithType: SqlDataRecord
  fullName: Microsoft.SqlServer.Server.SqlDataRecord
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(SqlDataReader)
  nameWithType: SqlPipe.Send(SqlDataReader)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(SqlDataReader)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: Microsoft.SqlServer.Server.SqlPipe.Send(System.String)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send(String)
  nameWithType: SqlPipe.Send(String)
  fullName: Microsoft.SqlServer.Server.SqlPipe.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd()
  nameWithType: SqlPipe.SendResultsEnd()
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd()
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsRow(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart(SqlDataRecord)
  nameWithType: SqlPipe.SendResultsStart(SqlDataRecord)
  fullName: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(SqlDataRecord)
- uid: Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: ExecuteAndSend
  nameWithType: SqlPipe.ExecuteAndSend
- uid: Microsoft.SqlServer.Server.SqlPipe.IsSendingResults*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: IsSendingResults
  nameWithType: SqlPipe.IsSendingResults
- uid: Microsoft.SqlServer.Server.SqlPipe.Send*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: Send
  nameWithType: SqlPipe.Send
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsEnd
  nameWithType: SqlPipe.SendResultsEnd
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsRow*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsRow
  nameWithType: SqlPipe.SendResultsRow
- uid: Microsoft.SqlServer.Server.SqlPipe.SendResultsStart*
  parent: Microsoft.SqlServer.Server.SqlPipe
  isExternal: false
  name: SendResultsStart
  nameWithType: SqlPipe.SendResultsStart
