### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ReceiveActivity
  id: ReceiveActivity
  children:
  - System.Workflow.Activities.ReceiveActivity.#ctor
  - System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  - System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  - System.Workflow.Activities.ReceiveActivity.Context
  - System.Workflow.Activities.ReceiveActivity.ContextToken
  - System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  - System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.FaultMessage
  - System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  - System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  - System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.ReceiveActivity.InitializeProperties
  - System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.OperationValidation
  - System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  - System.Workflow.Activities.ReceiveActivity.ParameterBindings
  - System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  - System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  langs:
  - csharp
  name: ReceiveActivity
  nameWithType: ReceiveActivity
  fullName: System.Workflow.Activities.ReceiveActivity
  type: Class
  summary: "정의 된 작업을 구현 하는 서비스 활동은 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 서비스 계약입니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]ReceiveActivity 작업은 워크플로에 정의 된 작업을 구현 하는 때 사용 된 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 서비스 계약입니다. ReceiveActivity 이미 정의 된 서비스 계약에서 작업을 구현 하거나 서비스 계약 및 작업 워크플로 자체 내에서 정의할 수 있습니다. 후자 라고 워크플로 중심 계약 합니다.       ReceiveActivity 활동에서는 미리 정의 된 메시지 교환 패턴을 지원 합니다. 이러한 패턴: 단방향-메시지 서비스는 응답을 보낼 필요 하지 않은 보내는 클라이언트를 수신 합니다. 계약 작업에는 void 반환 형식이 있어야 합니다.      -요청 받기-송신 메시지를 받고 응답 ReceiveActivity 활동에 의해 처리 된 후 응답을 클라이언트로 다시 전송 됩니다. 계약 작업의 반환 형식이 void, 승인은 보내기 활동으로 다시 보내집니다.      -요청 수신-송신 오류 메시지를 받은 응답이 나 오류 ReceiveActivity 활동에서 처리 한 후 다시 클라이언트에 전송 됩니다.      > [!NOTE] > 지 속성을 제대로 수행 되 고 임시 메시지가 유지 되지 않습니다을 보장 하려면 ReceiveActivity의 자식 활동을 단독으로 저장 하지 않고 있는지 확인 합니다. 자식 활동이 유휴 상태일 때 사용 하 여 지 속성 공급자를 만든 경우 발생할 수 있습니다이 `UnloadOnIdle` 로 설정 `true`예를 들어 있습니다.      > [!NOTE] >이 활동의 일부인 [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]합니다. 에 해당 하는 동작에 대 한 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], <xref:System.ServiceModel.Activities.Receive>.</xref:System.ServiceModel.Activities.Receive> 를 참조 하세요."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))]

      public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity>생성자는 일반적으로 워크플로 디자이너에서 만든 코드 병행 파일에서 호출 됩니다.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#11](~/add/codesnippet/csharp/receiveactivity/snippets.cs#11)]"
  syntax:
    content: public ReceiveActivity ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 클래스를 초기화 하는 <xref:System.Workflow.ComponentModel.Activity.Name*>속성.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity>생성자는 일반적으로 워크플로 디자이너에서 만든 코드 병행 파일에서 호출 됩니다.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  \n  \n [!code-cs[ReceiveActivity#12](~/add/codesnippet/csharp/receiveactivity/snippets.cs#12)]"
  syntax:
    content: public ReceiveActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "활동 인스턴스에 할당할 이름입니다."
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  id: CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "작업의 결과로 새 워크플로 서비스 인스턴스를 만들 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "A <xref:System.Workflow.Activities.ReceiveActivity>CanCreateInstance로 설정 된 활동 `true` 서비스 작업을 나타내며는 대화의 일부는 없지만 서비스 클라이언트에서 호출 되 면 서비스 워크플로를 만들 수의 새 인스턴스를 사용 하면.</xref:System.Workflow.Activities.ReceiveActivity>       가 없는 워크플로 서비스는 <xref:System.Workflow.Activities.ReceiveActivity>CanCreateInstance와 관련 된 활동으로 설정 `true` 서비스 작업 호출을 사용 하 여 클라이언트에서 인스턴스화할 수 없습니다.</xref:System.Workflow.Activities.ReceiveActivity> 사용 하 여 이러한 워크플로 만들 수 있습니다는 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>메서드는 연관 된 <xref:System.Workflow.Runtime.WorkflowRuntime>개체입니다.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       이 속성에 대 한 기본값은 `false`합니다."
  example:
  - "The following example shows how to set the `CanCreateInstance` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#0](~/add/codesnippet/csharp/receiveactivity/snippets.cs#0)]"
  syntax:
    content: public bool CanCreateInstance { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 워크플로 인스턴스가 만들어지면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Context
  id: Context
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "이 활동에 대 한 컨텍스트 정보를 가져옵니다."
  remarks: "컨텍스트 정보는 클라이언트와 통신 하 고 상관 관계 식별 정보 등을 포함 하 여 서비스 간의 통신에 사용 됩니다."
  example:
  - "The following example shows how to access the `Context` property.  \n  \n [!code-cs[ReceiveActivity#17](~/add/codesnippet/csharp/receiveactivity/snippets.cs#17)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A &lt;xref:System.Collections.Generic.IDictionary%602&gt; 이 활동에 대 한 컨텍스트 정보를 포함 하는 개체입니다."
  overload: System.Workflow.Activities.ReceiveActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  id: ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "간의 교환을 상호 연결 하는 데 사용 해야 하는 컨텍스트를 지정 하는 데 사용할 수 있는 토큰을 나타내는 한 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동 및 활동와 통신 하는 클라이언트입니다."
  remarks: "각 ContextToken 소유자 활동의 범위 내에서 정의 됩니다. 사용자와 이름은 같지만 소유자 범위가 다른 두 개의 다른 컨텍스트 토큰을 모델링할 수 있습니다. 이러한 컨텍스트 토큰과 연결 된 컨텍스트의 값은 런타임에 달라 집니다.       기본적으로 각 워크플로에 암시적인 루트 컨텍스트 토큰을 루트 활동 수준에서 범위가 지정 합니다. 루트 컨텍스트 토큰의 이름은 &quot;(RootContext)&quot; 및 <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A>은 `null`.</xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> 경우는 <xref:System.Workflow.Activities.ReceiveActivity>활동에는 연결 된 ContextToken, 루트 컨텍스트 토큰이 사용 됩니다.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following code example shows how to access the `ContextToken` property. This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#1](~/add/codesnippet/csharp/receiveactivity/snippets.cs#1)]"
  syntax:
    content: public System.Workflow.Activities.ContextToken ContextToken { get; set; }
    return:
      type: System.Workflow.Activities.ContextToken
      description: "A <xref href=&quot;System.Workflow.Activities.ContextToken&quot;> </xref> 상관 관계에 사용할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.ContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  id: FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Receive 활동 실행이 완료 될 때 반환 되는 예외입니다."
  remarks: "형식의 인스턴스로 FaultMessage 속성이 설정 되어 있는지 <xref:System.ServiceModel.FaultException>, 오류 완료 되 면 클라이언트에 반환 됩니다.</xref:System.ServiceModel.FaultException>       활동 실행 중 예외가 FaultMessage 속성을 설정 하는 경우 지정된 된 오류는 클라이언트에 반환 됩니다. 활동 실행 중 예외가 FaultMessage 속성을 설정 하 고 연결 된 작업에는 <xref:System.ServiceModel.FaultContractAttribute>하는 오류 형식을 지정 하는 특성의 아키텍처와 일치 FaultMessage 속성 다음 채널에 오류가 발생 하지는 및 클라이언트 서버 통신할 수 있습니다.</xref:System.ServiceModel.FaultContractAttribute> FaultMessage 속성을 설정 하지 않으면 경우에 클라이언트에 throw 되는 예외를 오류로 반환 됩니다."
  example:
  - "The following code sample shows how to access the `FaultMessage` property.  \n  \n [!code-cs[ReceiveActivity#2](~/add/codesnippet/csharp/receiveactivity/snippets.cs#2)]"
  syntax:
    content: public System.ServiceModel.FaultException FaultMessage { get; set; }
    return:
      type: System.ServiceModel.FaultException
      description: "A <xref:System.ServiceModel.FaultException>오류 메시지 텍스트와 세부 정보를 포함 하는 개체입니다.</xref:System.ServiceModel.FaultException>"
  overload: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  id: FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>속성.</xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>"
  remarks: "Receive 활동 간의 바인딩을 설정 하려면이 종속성 속성을 사용할 수 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>속성과 형식의 워크플로 public 속성/필드 <xref:System.ServiceModel.FaultException>또는 다른 활동의 public 속성/필드는 같은 유형의.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       이 종속성 속성에 연결 된 값을 설정 하려면 사용할 수도 있습니다는 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>속성은 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       와 연결 된 값 또는이 종속성 속성을 사용 하 여 바인딩을 가져올 수도 있습니다는 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>의 속성은 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "활동 인스턴스 및 컨텍스트 토큰을 지정 된 컨텍스트 정보를 반환 하는 정적 메서드."
  remarks: "컨텍스트 정보는 클라이언트와 통신 하 고 상관 관계 식별 정보 등을 포함 하 여 서비스 간의 통신에 사용 됩니다."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#13](~/add/codesnippet/csharp/receiveactivity/snippets.cs#13)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "컨텍스트 정보가 요청 된 작업 인스턴스입니다."
    - id: contextToken
      type: System.Workflow.Activities.ContextToken
      description: "활동에 의해 사용 되는 컨텍스트 토큰입니다."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "포함 하는 사전 기반 컬렉션 <xref:System.Xml.XmlQualifiedName>키 및 관련 된 <xref:System.String>값.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "활동 인스턴스 및 컨텍스트 토큰을 지정 된 컨텍스트 정보를 반환 하는 정적 메서드."
  remarks: "컨텍스트 정보는 클라이언트와 통신 하 고 상관 관계 식별 정보 등을 포함 하 여 서비스 간의 통신에 사용 됩니다."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#15](~/add/codesnippet/csharp/receiveactivity/snippets.cs#15)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "컨텍스트 정보가 요청 된 작업 인스턴스입니다."
    - id: contextName
      type: System.String
      description: "활동에 의해 사용 되는 컨텍스트 토큰의 이름입니다."
    - id: ownerActivityName
      type: System.String
      description: "소유자 활동 이름이의 이름입니다."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "포함 하는 사전 기반 컬렉션 <xref:System.Xml.XmlQualifiedName>키 및 관련 된 <xref:System.String>값.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  id: GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "지정 된 작업 인스턴스와 연결 된 루트 컨텍스트에 대 한 컨텍스트 정보를 반환 하는 정적 메서드. 컨텍스트 정보는 워크플로 서비스와 호스트 응용 프로그램 간의 통신에 사용 됩니다."
  remarks: "컨텍스트 정보는 클라이언트와 통신 하 고 상관 관계 식별 정보 등을 포함 하 여 서비스 간의 통신에 사용 됩니다."
  example:
  - "The following example shows how to use the `GetRootContext` method.  \n  \n [!code-cs[ReceiveActivity#16](~/add/codesnippet/csharp/receiveactivity/snippets.cs#16)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetRootContext (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "자식 활동 인스턴스입니다."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "포함 하는 사전 기반 컬렉션 <xref:System.Xml.XmlQualifiedName>키 및 관련 된 <xref:System.String>루트 컨텍스트에 대 한 컨텍스트 정보를 표시 하는 값입니다.</xref:System.String> </xref:System.Xml.XmlQualifiedName> 사용자 지정 인스턴스 생성 논리를 방지 하기 새 인스턴스를 만드는 과정을 트리거하는 메시지는 루트 컨텍스트에서 수신 됩니다."
  overload: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  id: GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "반환 된 <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> 으로 구현 된 서비스에 대 한 특성의 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동입니다. 이러한 특성에 같은 항목이 포함 된 <> </> *>, <> </> *>, <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>에서 반환 되는 모든 오류에 예외 정보를 포함할지 여부와 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>"
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>속성은 연결 된 종속성 속성에 정의 된는 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 이 종속성 속성이 포함 된 루트 워크플로에 연결 된는 <xref:System.Workflow.Activities.ReceiveActivity>사용 하 여 활동에서 <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>디자인 타임에 메서드 호출.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>속성은 시작 될 때 워크플로 서비스에 적용 되는 서비스 수준 동작 특성을 정의 하기 위한 사용 됩니다.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 런타임 시 이러한를 수정할 수 없습니다.      > [!NOTE] > 현재 워크플로 사용 하 여 다른 워크플로 시작 하는 경우는 <xref:System.Workflow.Activities.InvokeWorkflowActivity>호출 된 워크플로 활동을 호출 하는 워크플로의 서비스 특성을 상속 하지 않습니다.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > 서비스 특성이 사용자 지정 활동에 대해 설정 된 경우 해당 활동이 워크플로에 포함 되어 해당 서비스 특성이 사용 됩니다. 서비스 특성이 사용자 지정 활동 자체가 워크플로로 실행 되는 경우에 사용자 지정 활동에 사용 됩니다."
  example:
  - "The following example shows how to use the `GetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#5](~/add/codesnippet/csharp/receiveactivity/snippets.cs#5)]"
  syntax:
    content: public static object GetWorkflowServiceAttributes (object dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "서비스 특성을 검색 하는 개체입니다."
    return:
      type: System.Object
      description: "A <xref:System.Object>나타내는 <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> 서비스 특성 데이터가 포함 된 개체입니다.</xref:System.Object>"
  overload: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    - id: exception
      type: System.Exception
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.HandleFault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  id: OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "메시지를 수신 하는 작업에 대 한 유효성 검사를 수행 하는 경우 발생 합니다."
  remarks: "이것은 때 발생 하는 선택적 이벤트 처리기는 <xref:System.Workflow.Activities.ReceiveActivity>활동은 메시지를 수신 하려고 합니다.</xref:System.Workflow.Activities.ReceiveActivity> 구현 되는 서비스 작업의 클라이언트 호출 권한을 부여 하면 ClaimSet 기반 보안 검사를 수행 하는 연결 된 처리기를 사용할 수는 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity>       설정 <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>를 `false` 처리기 서비스 작업 호출을 거부 하는 이벤트 하 고 클라이언트가 수신에 <xref:System.ServiceModel.FaultException>.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> 경우 <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>로 설정 된 `true`, 서비스 작업 호출에 성공 하면 다음 및 <xref:System.Workflow.Activities.ReceiveActivity>활동 수신 하 고 메시지를 처리 합니다.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the `OperationValidation` event.  \n  \n [!code-cs[ReceiveActivity#7](~/add/codesnippet/csharp/receiveactivity/snippets.cs#7)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.OperationValidationEventArgs> OperationValidation;
    return:
      type: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  id: OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity.OperationValidation&quot;> </xref> 이벤트입니다."
  remarks: "Receive 작업의 <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>이벤트를 워크플로 클래스의 공용 이벤트 처리기를</xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> 바인딩할이 종속성 이벤트 속성을 사용할 수 있습니다."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "서비스의 형식 매개 변수 목록에 있는 바인딩 가능한 매개 변수의 컬렉션을 가져옵니다."
  remarks: "ParameterBindings public 필드/속성 워크플로 포함 하는 서비스 작업 매개 변수 사이의 바인딩을 지정 하려면 사용할 수는 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> 클라이언트에서 작업을 호출 하는 경우 해당 매개 변수 값 수신 작업이 실행 되는 동안 바인딩된 워크플로 속성에 기록 됩니다.       ParameterBindings 받기 활동의 자식 활동에 의해 클라이언트 호출에 의해 전달 된 매개 변수 값을 읽을 사용할 수도 있습니다. 자식 활동을 부모의 반환 값을 설정 하려면 ParameterBindings 컬렉션을 사용할 수 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity>       에 포함 되어야 하는 서비스 계약의 모든 매개 변수는 `ParameterBindings` 속성입니다. 바인딩되지 않은 매개 변수는 컴파일할 때 컴파일러 경고를 생성 하 고 예외가 발생할 수 있습니다 때는 <xref:System.Workflow.Activities.ReceiveActivity>다시 클라이언트에이 메시지를 반환 합니다.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#3](~/add/codesnippet/csharp/receiveactivity/snippets.cs#3)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "<xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> 바인딩할 매개 변수입니다."
  overload: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "계약 및 서비스 작업을 정의 하는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동 구현 합니다."
  remarks: "형식이 <xref:System.Workflow.Activities.TypedOperationInfo>나 <xref:System.Workflow.Activities.OperationInfo>.</xref:System.Workflow.Activities.OperationInfo> </xref:System.Workflow.Activities.TypedOperationInfo> 인스턴스에 ServiceOperationInfo 속성을 설정할 수 있습니다. <xref:System.Workflow.Activities.TypedOperationInfo>기존를 사용 하 여 수신 작업을 구성 하는 데 사용할 수 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 서비스 계약입니다.</xref:System.Workflow.Activities.TypedOperationInfo>       인스턴스 <xref:System.Workflow.Activities.OperationInfo>워크플로 중심 계약 시나리오에 대 한 받기 동작 구성에 사용할 수 있습니다.</xref:System.Workflow.Activities.OperationInfo>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#4](~/add/codesnippet/csharp/receiveactivity/snippets.cs#4)]"
  syntax:
    content: public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.OperationInfoBase
      description: "<xref href=&quot;System.Workflow.Activities.OperationInfoBase&quot;> </xref> 계약 이름, 계약 형식, 작업을 포함 하는 개체 이름, (수 다를 있는 메서드 이름), 작업이 단방향 작업 및 작업에 대 한 매개 변수를 포함 하는 메서드 정보 인지 합니다."
  overload: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  id: SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "구현 하는 서비스에 대 한 특성을 설정는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동입니다. 이러한 특성에 같은 항목이 포함 된 <> </> *>, <> </> *>에서 반환 되는 모든 오류에 예외 정보를 포함할지 여부와 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동입니다."
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>속성은 연결 된 종속성 속성에 정의 된는 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 이 종속성 속성이 포함 된 루트 워크플로에 연결 된는 <xref:System.Workflow.Activities.ReceiveActivity>SetWorkflowServiceAttributes 메서드를 사용 하 여 활동 디자인 타임에 호출 됩니다.</xref:System.Workflow.Activities.ReceiveActivity>       <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>속성은 시작 될 때 워크플로 서비스에 적용 되는 서비스 수준 동작 특성을 정의 하기 위한 사용 됩니다.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 런타임 시 이러한를 수정할 수 없습니다.      > [!NOTE] > 현재 워크플로 사용 하 여 다른 워크플로 시작 하는 경우는 <xref:System.Workflow.Activities.InvokeWorkflowActivity>호출 된 워크플로 활동을 호출 하는 워크플로의 서비스 특성을 상속 하지 않습니다.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > 서비스 특성이 사용자 지정 활동에 대해 설정 된 경우 해당 활동이 워크플로에 포함 되어 해당 서비스 특성이 사용 되지 않습니다. 서비스 특성이 사용자 지정 활동 자체가 워크플로로 실행 되는 경우에 사용자 지정 활동에 사용 됩니다."
  example:
  - "The following example shows how to use the `SetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#6](~/add/codesnippet/csharp/receiveactivity/snippets.cs#6)]"
  syntax:
    content: public static void SetWorkflowServiceAttributes (object dependencyObject, object value);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "서비스 특성을 적용 하는 개체입니다."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> 적용할 서비스 특성 데이터가 포함 된 개체입니다."
  overload: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "이름을 가져옵니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "이름에서 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "구독을 만듭니다는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 이벤트에는 활동입니다."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> 활동입니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>이벤트를 처리 하는.</xref:System.EventHandler> 이 이벤트 처리기는 부모 활동에 의해 소유 됩니다."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "구독을 취소 한 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 활동입니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>이벤트를 처리 하는.</xref:System.EventHandler> 이 이벤트 처리기는 부모 활동에 의해 소유 됩니다."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "추가할 수 있습니다."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  id: WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>속성.</xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>"
  remarks: "WorkflowServiceAttributesProperty 속성은 연결 된 종속성 속성에 정의 된는 <xref:System.Workflow.Activities.ReceiveActivity>활동.</xref:System.Workflow.Activities.ReceiveActivity> 이 종속성 속성이 포함 된 루트 워크플로에 연결 된는 <xref:System.Workflow.Activities.ReceiveActivity>사용 하 여 활동에서 <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>디자인 타임에 메서드 호출.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       WorkflowServiceAttributesProperty 속성은 시작 될 때 워크플로 서비스에 적용 되는 서비스 수준 동작 특성을 정의 하기 위한 사용 됩니다. 런타임 시 이러한를 수정할 수 없습니다."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.ReceiveActivity.Context
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ContextToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ContextToken
  nameWithType: ContextToken
  fullName: System.Workflow.Activities.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: true
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
- uid: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<OperationValidationEventArgs>
  nameWithType: EventHandler<OperationValidationEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.OperationValidationEventArgs
    name: OperationValidationEventArgs
    nameWithType: OperationValidationEventArgs
    fullName: OperationValidationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.OperationInfoBase
  parent: System.Workflow.Activities
  isExternal: false
  name: OperationInfoBase
  nameWithType: OperationInfoBase
  fullName: System.Workflow.Activities.OperationInfoBase
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
- uid: System.Workflow.Activities.ReceiveActivity.#ctor*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity
  nameWithType: ReceiveActivity.ReceiveActivity
- uid: System.Workflow.Activities.ReceiveActivity.Cancel*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel
  nameWithType: ReceiveActivity.Cancel
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
- uid: System.Workflow.Activities.ReceiveActivity.Context*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose
  nameWithType: ReceiveActivity.Dispose
- uid: System.Workflow.Activities.ReceiveActivity.Execute*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute
  nameWithType: ReceiveActivity.Execute
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
- uid: System.Workflow.Activities.ReceiveActivity.GetContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext
  nameWithType: ReceiveActivity.GetContext
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext
  nameWithType: ReceiveActivity.GetRootContext
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault
  nameWithType: ReceiveActivity.HandleFault
- uid: System.Workflow.Activities.ReceiveActivity.Initialize*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize
  nameWithType: ReceiveActivity.Initialize
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: ReceiveActivity.InitializeProperties
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete
  nameWithType: ReceiveActivity.OnSequenceComplete
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
