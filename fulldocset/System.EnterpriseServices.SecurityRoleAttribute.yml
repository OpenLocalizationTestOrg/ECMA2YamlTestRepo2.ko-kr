### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.SecurityRoleAttribute
  id: SecurityRoleAttribute
  children:
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  - System.EnterpriseServices.SecurityRoleAttribute.Description
  - System.EnterpriseServices.SecurityRoleAttribute.Role
  - System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  langs:
  - csharp
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute
  fullName: System.EnterpriseServices.SecurityRoleAttribute
  type: Class
  summary: "응용 프로그램 또는 구성에 대 한 역할을 구성합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "응용 프로그램에 역할을 추가 하 고 구성 요소와 연결할는 SecurityRoleAttribute를 사용할 수 있습니다. SecurityRoleAttribute 전체적으로 어셈블리에 적용 되 면 역할 (COM + 카탈로그) 응용 프로그램 구성에 있는지 확인 합니다. COM + 탐색기를 사용 하 여 역할의 멤버를 추가할 수 있습니다.       구성 요소에 적용 되는 경우는 SecurityRoleAttribute 역할 응용 프로그램 구성에 있으며 대상 구성 요소는 역할과 연결을 확인 합니다.       기본적으로 만든된 역할에 멤버가 없는 합니다. 경우는 <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A>속성이 `true`, 모든 사용자 역할에 사용자 그룹이 자동으로 추가 됩니다.</xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> 이 시스템에 대 한 최소한의 제어 권한이 부여 된 모든 액세스 유형 역할에 적합 합니다.       인터페이스 및 메서드는 구성 요소 수준에서 보안 역할을 지정할 수 있습니다. 다른 메서드 특성에서와 마찬가지로 보안 구성은 현재 간에 공유 되지 않는 인터페이스 정 및 메서드 구현 합니다."
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/t-system.enterpriseservi_22_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/t-system.enterpriseservi_22_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/t-system.enterpriseservi_22_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityRoleAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref> 클래스 및 집합은 <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>속성.</xref:System.EnterpriseServices.SecurityRoleAttribute.Role*>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/m-system.enterpriseservi_5_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/m-system.enterpriseservi_5_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_5_1.vb)]"
  syntax:
    content: public SecurityRoleAttribute (string role);
    parameters:
    - id: role
      type: System.String
      description: "응용 프로그램, 구성 요소, 인터페이스 또는 메서드에 대 한 보안 역할입니다."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;> </xref> 클래스 및 집합은 <> </> *> 및 <> </> *> 속성."
  syntax:
    content: public SecurityRoleAttribute (string role, bool everyone);
    parameters:
    - id: role
      type: System.String
      description: "응용 프로그램, 구성 요소, 인터페이스 또는 메서드에 대 한 보안 역할입니다."
    - id: everyone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새로 만든된 role Everyone에 포함 하려면; 사용자로 사용자 그룹 추가 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  id: Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "역할 설명을 가져오거나 설정 합니다."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "역할에 대 한 설명입니다."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Description*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  id: Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "보안 역할을 가져오거나 설정 합니다."
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "응용 프로그램, 구성 요소, 인터페이스, 또는 메서드에 적용 된 보안 역할입니다."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Role*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  id: SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "사용자로 Everyone 추가할 것인지를 나타내는 값을 사용자 그룹을 설정 합니다."
  remarks: "이 속성을 설정 `false` 를 추가 하는 모든 사용자를 표시 하지 않는 사용자와 그룹을 사용자를 새로 만든된 역할입니다. 속성을 설정 `true` 새로 만든된 역할을 추가 하는 모든 사용자에 포함 하려면. 응용 프로그램에 이미 존재 하는 역할을 수정 되지 않습니다."
  syntax:
    content: public bool SetEveryoneAccess { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새로 만든된 role Everyone에 포함 하려면 사용자 그룹을 추가 (응용 프로그램에 이미 존재 하는 역할은 수정 되지 않습니다.); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Everyone 추가 표시 하지 않으려면 사용자 사용자로 그룹화 합니다."
  overload: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
