### YamlMime:ManagedReference
items:
- uid: System.Windows.SourceChangedEventHandler
  id: SourceChangedEventHandler
  langs:
  - csharp
  name: SourceChangedEventHandler
  nameWithType: SourceChangedEventHandler
  fullName: System.Windows.SourceChangedEventHandler
  type: Delegate
  summary: "특정 수신기 요소의 &quot;SourceChanged&quot; 이벤트를 처리 하는 메서드를 나타냅니다."
  remarks: "이 대리자에 대 한 처리기를 나타내는 &quot;SourceChanged&quot; 이벤트 공용으로 노출 되지 않으므로 [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] 이벤트를 경우 가장 라우트된 이벤트와 마찬가지로 합니다. 대신 &quot;SourceChanged&quot;는 에게만 라우트된 이벤트의 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 인프라 및 직접 라우팅됩니다. 이기 때문에 직접 라우팅되면 `sender` 및 <xref:System.Windows.RoutedEventArgs.Source%2A>이벤트 데이터는 항상 동일한 개체입니다.</xref:System.Windows.RoutedEventArgs.Source%2A> 추가 하 고 공용 메서드 <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>및 <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A> </xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A> 사용 하 여 이벤트 자체의 전용 액세스 수준 불구 하 고이 이벤트에 처리기를 제거할 수 있습니다.       `sender` 이벤트의 <xref:System.Windows.PresentationSource>안내 하십시오.</xref:System.Windows.PresentationSource> 파생된 클래스가 됩니다"
  syntax:
    content: public delegate void SourceChangedEventHandler(object sender, SourceChangedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
