### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MemberDescriptor
  id: MemberDescriptor
  children:
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.MemberDescriptor.#ctor(System.String)
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  langs:
  - csharp
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
  type: Class
  summary: "속성 또는 이벤트와 같은 클래스 멤버를 나타냅니다. 이 클래스는 추상 기본 클래스입니다."
  remarks: "MemberDescriptor는에 대 한 기본 클래스는 <xref:System.ComponentModel.EventDescriptor>및 <xref:System.ComponentModel.PropertyDescriptor>클래스.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor> <xref:System.ComponentModel.EventDescriptor>클래스는 이벤트에 대 한 설명을 제공 및 <xref:System.ComponentModel.PropertyDescriptor>클래스 속성에 대 한 설명을 제공 합니다.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>       이 클래스는 저장 된 특성에 액세스 하는 메서드와 속성을 정의 합니다. <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>속성 특성의 컬렉션을 가져옵니다.</xref:System.ComponentModel.MemberDescriptor.Attributes%2A> <xref:System.ComponentModel.MemberDescriptor.Category%2A>, <xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A>, <xref:System.ComponentModel.MemberDescriptor.Description%2A>, 및 <xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A>속성 특정 한 특성의 값을 검색 합니다.</xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A> </xref:System.ComponentModel.MemberDescriptor.Description%2A> </xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A> </xref:System.ComponentModel.MemberDescriptor.Category%2A> <xref:System.ComponentModel.MemberDescriptor.Name%2A>및 <xref:System.ComponentModel.MemberDescriptor.DisplayName%2A>속성 멤버의 이름을 제공 합니다.</xref:System.ComponentModel.MemberDescriptor.DisplayName%2A> </xref:System.ComponentModel.MemberDescriptor.Name%2A>       MemberDescriptor도 정의 <xref:System.ComponentModel.MemberDescriptor.Equals%2A>간에이 MemberDescriptor에서는.</xref:System.ComponentModel.MemberDescriptor.Equals%2A>      > [!NOTE] >에서 상속 하는 일반적으로 <xref:System.ComponentModel.EventDescriptor>및 <xref:System.ComponentModel.PropertyDescriptor>클래스,이 클래스에서가 아니라</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>"
  example:
  - Since most of the usage of this class will fall on the inherited classes <xref:System.ComponentModel.EventDescriptor> and <xref:System.ComponentModel.PropertyDescriptor>, refer to the examples in these classes.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MemberDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 지정된 된 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>합니다."
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 멤버와 해당 특성의 이름을 포함 하 합니다."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 지정한 이름 가진 멤버의 클래스입니다."
  syntax:
    content: protected MemberDescriptor (string name);
    parameters:
    - id: name
      type: System.String
      description: "멤버의 이름입니다."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이름은 빈 문자열 (&quot;&quot;) 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 클래스에 지정 된 이름의 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 모두 기존의 특성과 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 및 <xref:System.Attribute>배열.</xref:System.Attribute>"
  remarks: "이 생성자는 <xref:System.Attribute>배열의 <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> 이전에 특성의</xref:System.Attribute> 에서 특성 추가"
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes);
    parameters:
    - id: oldMemberDescriptor
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 멤버와 해당 특성의 이름입니다."
    - id: newAttributes
      type: System.Attribute[]
      description: "배열을 <xref:System.Attribute>멤버에 추가 하려는 특성을 가진 개체입니다.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 클래스 지정 된 이름의 멤버와 특성으로 이루어진 배열입니다."
  syntax:
    content: protected MemberDescriptor (string name, Attribute[] attributes);
    parameters:
    - id: name
      type: System.String
      description: "멤버의 이름입니다."
    - id: attributes
      type: System.Attribute[]
      description: "형식의 배열 <xref:System.Attribute>멤버 특성이 들어 있는.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이름은 빈 문자열 (&quot;&quot;) 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  id: AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "특성의 배열을 가져오거나 설정 합니다."
  remarks: "파생된 클래스에서 사용 되는 특성의 기본 집합을 사용 하면이 멤버에 액세스 하는 <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>메서드.</xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>"
  syntax:
    content: protected virtual Attribute[] AttributeArray { get; set; }
    return:
      type: System.Attribute[]
      description: "형식의 배열 <xref:System.Attribute>이 멤버의 특성을 포함 하는.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.AttributeArray*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 멤버에 대 한 특성의 컬렉션을 가져옵니다."
  remarks: "없을 경우 없습니다 <xref:System.ComponentModel.AttributeCollection>이 멤버에이 속성의 호출에 <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>만드는 새 메서드를 <xref:System.ComponentModel.AttributeCollection>의 배열을 사용 하 여 <xref:System.Attribute>개체 생성자에 전달 합니다.</xref:System.Attribute> </xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A> </xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*> 특성이 없는 경우이 멤버 또는 빈 컬렉션에 대 한 특성을 제공 하는"
  overload: System.ComponentModel.MemberDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Category
  id: Category
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "멤버가 속한 범주의 이름을 가져옵니다에 지정 된 대로 <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>합니다."
  remarks: "비주얼 디자이너 범주에 멤버를 표시이 속성 값을 사용할 수 있습니다."
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "멤버가 속한 범주의 이름입니다. 없는 경우 없는 <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, 기본 범주에 범주 이름이 설정 되어 <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.MemberDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  id: CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "특성 생성자에 전달 된 배열을 사용 하 여 특성의 컬렉션을 만듭니다."
  remarks: "이 메서드는 <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>속성이 없는 경우 없는 <xref:System.ComponentModel.AttributeCollection>이 멤버에 대 한.</xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.Attributes%2A> <xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>이 메서드는 빈 <xref:System.ComponentModel.AttributeCollection>.</xref:System.ComponentModel.AttributeCollection> 반환,</xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A> 특성이 없는 경우"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection CreateAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "새 <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> 를 포함 하는 <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>특성.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>"
  overload: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Description
  id: Description
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "에 지정 된 멤버에 대 한 설명을 가져옵니다는 <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>합니다."
  remarks: "비주얼 디자이너가이 설명을 사용 하 여이 멤버에 대 한 정보를 표시할 수 있습니다."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "멤버의 설명입니다. 없는 경우 없는 <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, 속성 값이 빈 문자열인 기본값으로 설정 (&quot;&quot;)."
  overload: System.ComponentModel.MemberDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 멤버에 지정 된 대로 디자인 타임에만 설정 해야 하는지 여부를 가져옵니다는 <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>합니다."
  remarks: "없는 경우 없는 <xref:System.ComponentModel.DesignOnlyAttribute>, 반환 값이 기본값 즉 `false`.</xref:System.ComponentModel.DesignOnlyAttribute>"
  syntax:
    content: public virtual bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 멤버는 디자인 타임에만 설정 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 멤버는 런타임에 설정할 수 있는 경우."
  overload: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "속성 창 등의 창에 표시 될 수 있는 이름을 가져옵니다."
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "멤버에 대해 표시할 이름입니다."
  overload: System.ComponentModel.MemberDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 인스턴스와 동일한 지 확인 하려면 지정된 된 개체를 비교 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>해당 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.MemberDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 지정 된 부모 클래스에 있는 특성 목록에 상속 하는 클래스의 특성을 추가 합니다."
  remarks: "중복 된 특성에 대 한 마지막 목록에 추가 유지 합니다.       <xref:System.Collections.IList>특성으로는 한 번 생성 합니다.</xref:System.Collections.IList> 목록에 중복 된 특성이 있는 경우 첫 번째 인스턴스만 저장 됩니다. 모든 후속 중복 된 특성 목록에서 제거 됩니다."
  syntax:
    content: protected virtual void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>부모 클래스의 특성을 나열 하는</xref:System.Collections.IList> 처음에이 비어 있습니다."
  overload: System.ComponentModel.MemberDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "공용 방법에 대 한 리플렉션을 통해 지정된 된 메서드를 찾습니다."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType);
    parameters:
    - id: componentClass
      type: System.Type
      description: "메서드를 포함 하는 구성 요소입니다."
    - id: name
      type: System.String
      description: "찾을 메서드의 이름입니다."
    - id: args
      type: System.Type[]
      description: "오버 로드 된 메서드 중에서 선택 하는 데 사용 하는 메서드의 매개 변수 배열입니다."
    - id: returnType
      type: System.Type
      description: "메서드에 대 한 반환 형식입니다."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>메서드를 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 메서드가 없는 경우.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "공용 메서드만 검색 하는 옵션과 함께 리플렉션을 통해 지정된 된 메서드를 찾습니다."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType, bool publicOnly);
    parameters:
    - id: componentClass
      type: System.Type
      description: "메서드를 포함 하는 구성 요소입니다."
    - id: name
      type: System.String
      description: "찾을 메서드의 이름입니다."
    - id: args
      type: System.Type[]
      description: "오버 로드 된 메서드 중에서 선택 하는 데 사용 하는 메서드의 매개 변수 배열입니다."
    - id: returnType
      type: System.Type
      description: "메서드에 대 한 반환 형식입니다."
    - id: publicOnly
      type: System.Boolean
      description: "Public 메서드를 다음 기간 에서만 검색 여부를 나타냅니다."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>메서드를 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 메서드가 없는 경우.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>합니다."
  overload: System.ComponentModel.MemberDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "멤버 호출 하는 동안 사용 해야 하는 개체를 검색 합니다."
  remarks: "일반적으로 반환 값은 같을 `instance` 매개 변수입니다. 이 인스턴스와 연결 된 다른 개체 또는 인스턴스가 있는 경우 사용자 지정 형식 설명자 GetInvocationTarget 메서드는 다른 값을 반환할 수 있습니다."
  syntax:
    content: protected virtual object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>호출 대상의.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "잠재적인 호출 대상입니다."
    return:
      type: System.Object
      description: "멤버 호출 시 사용할 개체입니다."
  overload: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>instance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  id: GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "메서드를 호출 하는 대상 구성 요소를 가져옵니다."
  syntax:
    content: protected static object GetInvokee (Type componentClass, object component);
    parameters:
    - id: componentClass
      type: System.Type
      description: "A <xref:System.Type>이 구성 요소의 형식을 나타내는 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 에 바인딩됩니다.</xref:System.Type> 예를 들어이 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 속성을 설명 합니다.이 매개 변수 속성에 선언 된 클래스 여야 합니다."
    - id: component
      type: System.Object
      description: "호출할 개체의 인스턴스입니다."
    return:
      type: System.Object
      description: "호출 하는 구성 요소의 인스턴스입니다. 이 메서드는 속성이 비주얼 디자이너에 연결 된 비주얼 디자이너를 반환 합니다."
  overload: System.ComponentModel.MemberDescriptor.GetInvokee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentClass</code>or <code>component</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  id: GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 구성 요소에 대 한 구성 요소 사이트를 가져옵니다."
  syntax:
    content: protected static System.ComponentModel.ISite GetSite (object component);
    parameters:
    - id: component
      type: System.Object
      description: "사이트를 찾으려면 하려는 구성 요소입니다."
    return:
      type: System.ComponentModel.ISite
      description: "구성 요소를 사이트 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 사이트 존재 하지 않는 경우."
  overload: System.ComponentModel.MemberDescriptor.GetSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "멤버에 지정 된 검색 가능한 인지를 나타내는 값을 가져옵니다는 <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>합니다."
  remarks: "비주얼 디자이너는 일반적으로 속성 창에서 찾아볼 수 있는 멤버를 표시 합니다."
  syntax:
    content: public virtual bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이면 멤버를 탐색할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 없는 경우 없는 <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>, 속성 값이 기본값 즉에 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.MemberDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Name
  id: Name
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "멤버의 이름을 가져옵니다."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "멤버의 이름입니다."
  overload: System.ComponentModel.MemberDescriptor.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  id: NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "<xref:System.String.GetHashCode*>.</xref:System.String.GetHashCode*> 에 지정 된 멤버의 이름에 대 한 해시 코드를 가져옵니다."
  syntax:
    content: protected virtual int NameHashCode { get; }
    return:
      type: System.Int32
      description: "멤버의 이름에 대 한 해시 코드입니다."
  overload: System.ComponentModel.MemberDescriptor.NameHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.#ctor*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection
  nameWithType: MemberDescriptor.CreateAttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Description*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals
  nameWithType: MemberDescriptor.Equals
- uid: System.ComponentModel.MemberDescriptor.FillAttributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: MemberDescriptor.FillAttributes
- uid: System.ComponentModel.MemberDescriptor.FindMethod*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod
  nameWithType: MemberDescriptor.FindMethod
- uid: System.ComponentModel.MemberDescriptor.GetHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: MemberDescriptor.GetHashCode
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: MemberDescriptor.GetInvocationTarget
- uid: System.ComponentModel.MemberDescriptor.GetInvokee*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee
  nameWithType: MemberDescriptor.GetInvokee
- uid: System.ComponentModel.MemberDescriptor.GetSite*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite
  nameWithType: MemberDescriptor.GetSite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
