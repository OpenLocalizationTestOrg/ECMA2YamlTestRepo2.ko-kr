### YamlMime:ManagedReference
items:
- uid: System.Data.TypedDataSetGeneratorException
  id: TypedDataSetGeneratorException
  children:
  - System.Data.TypedDataSetGeneratorException.#ctor
  - System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)
  - System.Data.TypedDataSetGeneratorException.#ctor(System.String)
  - System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)
  - System.Data.TypedDataSetGeneratorException.ErrorList
  - System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: TypedDataSetGeneratorException
  nameWithType: TypedDataSetGeneratorException
  fullName: System.Data.TypedDataSetGeneratorException
  type: Class
  summary: "강력한 형식의 생성 하는 동안 이름 충돌이 발생할 때 throw 되는 예외 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  remarks: "TypedDataSetGeneratorException 클래스 하지 독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용이 됩니다."
  syntax:
    content: 'public class TypedDataSetGeneratorException : System.Data.DataException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Data.DataException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.#ctor
  id: '#ctor'
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: TypedDataSetGeneratorException()
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException()
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public TypedDataSetGeneratorException ();
    parameters: []
  overload: System.Data.TypedDataSetGeneratorException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)
  id: '#ctor(System.Collections.ArrayList)'
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: TypedDataSetGeneratorException(ArrayList)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(ArrayList)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(ArrayList)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public TypedDataSetGeneratorException (System.Collections.ArrayList list);
    parameters:
    - id: list
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;></xref>동적 예외 목록을 포함 하는 개체입니다."
  overload: System.Data.TypedDataSetGeneratorException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: TypedDataSetGeneratorException(String)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(String)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 지정 된 문자열을 사용 합니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public TypedDataSetGeneratorException (string message);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 된 경우 표시할 문자열입니다."
  overload: System.Data.TypedDataSetGeneratorException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 클래스 스트리밍 컨텍스트 및 지정 된 serialization 정보를 사용 하 여 합니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: protected TypedDataSetGeneratorException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> object."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>구조.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.TypedDataSetGeneratorException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: TypedDataSetGeneratorException(String,Exception)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(String,Exception)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 지정한 문자열 및 내부 예외를 사용 하 여 클래스입니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public TypedDataSetGeneratorException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외가 throw 된 경우 표시할 문자열입니다."
    - id: innerException
      type: System.Exception
      description: "내부 예외에 대 한 참조입니다."
  overload: System.Data.TypedDataSetGeneratorException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.ErrorList
  id: ErrorList
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: ErrorList
  nameWithType: TypedDataSetGeneratorException.ErrorList
  fullName: System.Data.TypedDataSetGeneratorException.ErrorList
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "생성 되는 오류의 동적 목록을 가져옵니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public System.Collections.ArrayList ErrorList { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;></xref>개체입니다."
  overload: System.Data.TypedDataSetGeneratorException.ErrorList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.TypedDataSetGeneratorException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TypedDataSetGeneratorException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.TypedDataSetGeneratorException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "구현 하는 <xref uid=&quot;langword_csharp_ISerializable&quot; name=&quot;ISerializable&quot; href=&quot;&quot;> </xref> 인터페이스를 serialize 하는 데 필요한 데이터를 반환 된 <xref href=&quot;System.Data.TypedDataSetGeneratorException&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Data.TypedDataSetGeneratorException>독립 실행형 구성 요소로 않고 다른 클래스의 표준 기능을 파생 시키는 원본 클래스로 사용 하기 위해 클래스는 없습니다.</xref:System.Data.TypedDataSetGeneratorException>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> object."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>구조.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.TypedDataSetGeneratorException.GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.DataException
  isExternal: false
  name: System.Data.DataException
- uid: System.Data.TypedDataSetGeneratorException.#ctor
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException()
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException()
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException()
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException(ArrayList)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(ArrayList)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.String)
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException(String)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(String)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException(String,Exception)
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException(String,Exception)
  fullName: System.Data.TypedDataSetGeneratorException.TypedDataSetGeneratorException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.TypedDataSetGeneratorException.ErrorList
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: ErrorList
  nameWithType: TypedDataSetGeneratorException.ErrorList
  fullName: System.Data.TypedDataSetGeneratorException.ErrorList
- uid: System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: TypedDataSetGeneratorException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.TypedDataSetGeneratorException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Data.TypedDataSetGeneratorException.#ctor*
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: TypedDataSetGeneratorException
  nameWithType: TypedDataSetGeneratorException.TypedDataSetGeneratorException
- uid: System.Data.TypedDataSetGeneratorException.ErrorList*
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: ErrorList
  nameWithType: TypedDataSetGeneratorException.ErrorList
- uid: System.Data.TypedDataSetGeneratorException.GetObjectData*
  parent: System.Data.TypedDataSetGeneratorException
  isExternal: false
  name: GetObjectData
  nameWithType: TypedDataSetGeneratorException.GetObjectData
