### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IMenuCommandService
  id: IMenuCommandService
  children:
  - System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  - System.ComponentModel.Design.IMenuCommandService.Verbs
  langs:
  - csharp
  name: IMenuCommandService
  nameWithType: IMenuCommandService
  fullName: System.ComponentModel.Design.IMenuCommandService
  type: Interface
  summary: "전역 디자이너 동사 및 디자인 모드에서 사용할 수 있는 메뉴 명령을 관리 하 고 일부 유형의 바로 가기 메뉴를 표시 하는 방법을 제공 합니다."
  remarks: "이 인터페이스 메서드를 제공 합니다.-찾기, 호출, 추가 및 전역 디자이너 동사 명령을 제거 합니다.      -찾기, 호출, 추가 및 표준 메뉴 명령을 제거 합니다.      -표준 메뉴 명령과 연결 된 이벤트 처리기를 변경 합니다.      -연결 된 메뉴 <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> 표준 명령의 바로 가기 메뉴를 표시 합니다.       디자이너 동사 디자인 모드에서 바로 가기 메뉴에 나열 된 사용자 정의 명령을 나타냅니다. 디자이너 동사는 지정 된 텍스트 레이블을 제공할 수 있습니다. 각각의 디자이너 동사에 고유한 <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> 를 자동으로 할당 되며 디자이너를 통해 디자이너 동사를 제공할 수는 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>속성이 아니라 이러한는 사용할 수 있는 경우에 디자이너의 구성 요소가 현재 선택 합니다.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 전역 디자이너 동사는 선택된 된 구성 요소에 관계 없이 디자인 모드 바로 가기 메뉴에서 액세스할 수 있는 디자이너 동사 명령입니다. 이 인터페이스를 사용 하면 디자인 모드에서 사용할 수 있는 전역 디자이너 동사 집합을 관리할 수 있습니다.       사용 하 여 전역 디자이너 동사를 추가할 수는 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>메서드를 사용 하 여 전역 디자이너 동사를 제거할 수는 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 사용 하 여 디자이너 동사를 호출할 수 있습니다는 <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>알고 있는 경우 메서드는 <xref:System.ComponentModel.Design.CommandID>동사의.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>이 인터페이스의 속성 바로 가기 메뉴에 표시할 디자이너 동사 명령의 현재 집합을 포함 합니다.</xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> 이 디자이너 동사 명령이 집합이 모든 글로벌 디자이너 동사 및 현재 선택 된 구성 요소 디자이너가 제공 하는 디자이너 동사 구성 됩니다. 이 동사 집합에는 디자이너 동사 명령을 제공 하는 디자이너와 구성 요소가 선택 되거나 선택이 취소 될 때마다 업데이트 됩니다.       메뉴 명령을 미리 정의 된 표준 명령 집합으로 제한 됩니다. 에 정의 된 대부분의 미리 정의 된 표준 명령은 <xref:System.ComponentModel.Design.StandardCommands>및 <xref:System.Windows.Forms.Design.MenuCommands>열거형.</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands> 추가할 수 있습니다, 제거 및 메뉴 명령, 호출 하 고이 인터페이스의 메서드를 사용 하 여 메뉴에 추가 된 메뉴 명령에 대 한 검색.       사용 하 여 표준 메뉴 명령을 추가할 수는 <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>메서드를 사용 하 여 표준 메뉴 명령을 제거는 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 에 대 한 문서에서 설명한 절차에 따라 이벤트 처리기에는 미리 정의 된 표준 메뉴 명령에 연결할 수 있습니다는 <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> 메뉴 명령으로 검색할 수 있습니다 <xref:System.ComponentModel.Design.CommandID>사용 하 여 메뉴에 추가 된 경우는 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> </xref:System.ComponentModel.Design.CommandID> 메뉴 명령이 나 디자이너 동사 명령으로 호출할 수 있습니다 <xref:System.ComponentModel.Design.CommandID>를 사용 하는 <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> </xref:System.ComponentModel.Design.CommandID>      > [!NOTE] > <xref:System.ComponentModel.Design.CommandID> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 을 throw 합니다</xref:System.ComponentModel.Design.CommandID> 는 이미 기존으로 메뉴 명령을 추가 하려는 시도 메뉴 명령에 추가할 때는 반드시 확인 아닌지 이미 사용 하 여 메뉴에는 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>메서드 또는 사용 하 여 예외를 신중 하 게 처리 합니다.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>      > [!NOTE] > 메뉴 명령을 메뉴에 추가할 수 있으며 해당 <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>또는 <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>속성으로 설정 `false`.</xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Visible%2A> 메뉴 명령을 메뉴에 추가 된 찾을 수 없습니다, 이러한 속성 중 하나 있습니다 설정한 `false`합니다.       사용 하 여 지정 된 위치에서 메뉴 명령을 포함 하는 특정 표준 바로 가기 메뉴를 표시할 수 있습니다는 <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> 이 메서드에 대 한 설명서는 유효한 메뉴 표시를 지정 하는 명령 Id를 나열 하는 테이블을 포함 합니다."
  example:
  - "This example demonstrates using the IMenuCommandService to add a <xref:System.ComponentModel.Design.MenuCommand>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/t-system.componentmodel._76_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/t-system.componentmodel._76_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IMenuCommandService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  id: AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정한 표준 메뉴 명령을 메뉴에 추가합니다."
  remarks: "<xref:System.Windows.Forms.Design.MenuCommands>및 <xref:System.ComponentModel.Design.StandardCommands>열거형에 포함 <xref:System.ComponentModel.Design.CommandID>특정 메뉴의 위치와 연결 표준 명령 및 메뉴 명령은 이미 있는 미리 정의 대 한 식별자.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.StandardCommands> </xref:System.Windows.Forms.Design.MenuCommands>      > [!NOTE] > <xref:System.ComponentModel.Design.CommandID> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 을 throw 합니다</xref:System.ComponentModel.Design.CommandID> 는 이미 기존으로 메뉴 명령을 추가 하려는 시도 메뉴 명령에 추가할 때는 반드시 확인 아닌지 이미 사용 하 여 메뉴에는 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>메서드 또는 사용 하 여 예외를 신중 하 게 처리 합니다.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>       다음 절차를 미리 정의 된 메뉴 명령에는 이벤트 처리기를 결합할 수 있습니다: 1.  이벤트 처리기와 연결할 메뉴 명령을 메뉴에 추가 되었습니다 또는 있는 경우는 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>메서드를 나중에이 메뉴 명령이 복원 하려는 여부 및 새 이벤트 처리기에서 현재 이벤트 처리기를 호출 하는 것이 좋습니다.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> 메뉴 명령 또는 이벤트 처리기 호출을 연결할 코드 복원 될 수 있습니다, 메뉴 명령에 대 한 참조를 저장 해야 합니다.      2.  동일한 기존 메뉴 명령을 확인 <xref:System.ComponentModel.Design.CommandID>사용 하 여 메뉴에서 제거 되었습니다는 <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.CommandID>      3.  새 <xref:System.ComponentModel.Design.MenuCommand> <xref:System.ComponentModel.Design.CommandID>명령을 추가할 나타내는</xref:System.ComponentModel.Design.CommandID> 함께 생성자에서 이벤트 처리기를 지정 하 고</xref:System.ComponentModel.Design.MenuCommand> 만들기 각 표준 메뉴 명령에 추가 되는 미리 정의 된 메뉴 위치와 연결 됩니다. 에 정의 된 지원 되는 명령 Id는 <xref:System.ComponentModel.Design.StandardCommands>및 <xref:System.Windows.Forms.Design.MenuCommands>열거형.</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands>      4.  메뉴 명령에 대 한 모든 기존 이벤트 처리기를 호출 하려면 호출할는 <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>메서드 메뉴의 명령 메뉴에서 메뉴 명령을 호출 이벤트를 처리 하는 이벤트 처리기에서 대체.</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      5.  이벤트 처리기는 대체 하는 기존 메뉴 명령을 복원 하려는 경우 저장 된 추가, 대체 메뉴 명령을 만든를 제거한 후 메뉴 명령을 기존 합니다. 이 동작을 추가할 수 있습니다는 `Dispose` 유형에 대 한 메서드."
  syntax:
    content: public void AddCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "The <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> 는 지정 된 <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> 메뉴에 이미 있습니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  id: AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "전역 디자이너 동사 집합에 지정된 된 디자이너 동사를 추가합니다."
  remarks: "디자이너의 디자이너 동사를 제공 하는 구성 요소는 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>이 메서드를 호출 하지 않고 디자이너의 속성입니다.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> 이 메서드는 현재 선택한 구성 요소에 관계 없이 디자인 모드에서 오른쪽 클릭 바로 가기 메뉴에서 액세스할 수 있는 전역 디자이너 동사를 추가 합니다."
  syntax:
    content: public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "The <xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  id: FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정된 된 명령 ID를 검색 하 고 연결 된 메뉴 명령을 반환 합니다."
  syntax:
    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> 을 찾으려고 합니다."
    return:
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> 명령 ID와 연결 된 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 명령이 발견 되는 경우."
  overload: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  id: GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정 된 명령 id입니다. 일치 하는 메뉴 또는 디자이너 동사 명령을 호출합니다"
  remarks: "이 메서드 검색 메뉴 명령 또는 <xref:System.ComponentModel.Design.CommandID>지정 된 <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> 일치</xref:System.ComponentModel.Design.CommandID> 하는 디자이너 동사 이 메서드는 먼저 전역 및 활성 디자이너 제공 동사 글로벌 환경 명령 서비스를 통해 필요한 경우 검색을 계속 하기 전에 구성 된 디자이너 동사 컬렉션 내에서 검색 합니다. 일치 하는 메뉴 명령이 나 디자이너 동사를 찾게 되 면 명령이 호출 됩니다."
  syntax:
    content: public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> 명령을 검색 하 고 실행 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 명령은 찾아 성공적으로 실행 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정한 표준 메뉴 명령을 메뉴에서 제거합니다."
  remarks: "이 메서드는 지정 된 제거 <xref:System.ComponentModel.Design.MenuCommand>있을 경우.</xref:System.ComponentModel.Design.MenuCommand> 이 메서드 예외가 발생 하지 않거나 값을 반환 하는 경우 지정 된 <xref:System.ComponentModel.Design.MenuCommand>찾을 수 없습니다.</xref:System.ComponentModel.Design.MenuCommand> 사용 하 여는 <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>확인할 수 있는 방법은 여부는 <xref:System.ComponentModel.Design.MenuCommand>일치 하는 지정 된 <xref:System.ComponentModel.Design.CommandID>메뉴에 있는.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.MenuCommand> </xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>"
  syntax:
    content: public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "<xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> 를 제거 합니다."
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "전역 디자이너 동사 컬렉션에서 지정된 된 디자이너 동사를 제거합니다."
  remarks: "이 메서드는 전역 디자이너 동사 컬렉션 내에 있는 경우 지정된 된 전역 디자이너 동사를 제거 합니다. 디자이너 동사를 사용 하 여 전역 디자이너 동사 컬렉션에 추가할 수 있습니다는 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>메서드.</xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>"
  syntax:
    content: public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;> </xref> 를 제거 합니다."
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "지정된 된 위치에 지정 된 바로 가기 메뉴를 보여 줍니다."
  remarks: "ShowContextMenu 메서드에 지정된 된 지점에 메뉴 명령을 포함 하는 다음 Visual Studio 바로 가기 메뉴를 표시할 수 있습니다. | 메뉴 | CommandID |   |----------|---------------|   | 컨테이너에 대해 표시 되는 바로 가기 메뉴 | <xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|   | 에 대 한 구성 요소 트레이에 표시 되는 바로 가기 메뉴 | <xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|   | 선택 영역에 표시 되는 바로 가기 메뉴 | <xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|   | 트레이 선택에 대 한 표시 되는 바로 가기 메뉴 | <xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|       이 방법을 다른 등록 된 바로 가기 메뉴를 표시할 수도 있습니다.</xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu> </xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>"
  syntax:
    content: public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);
    parameters:
    - id: menuID
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> 바로 가기 메뉴를 표시 합니다."
    - id: x
      type: System.Int32
      description: "화면 좌표에서 메뉴를 표시 하는 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "화면 좌표로 메뉴를 표시할 위치의 y 좌표입니다."
  overload: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  id: Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "현재 사용할 수 있는 디자이너 동사 컬렉션을 가져옵니다."
  remarks: "현재 사용 가능한 디자이너 동사 집합은 모든 전역 디자이너 동사에 의해 추가 된 구성는 <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>이 인터페이스를 제공 하는 개별 디자이너 동사에서 메서드는 <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>개별 디자이너의 속성입니다.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> 전역 동사의 이름이 디자이너 동사의 이름으로 충돌을 디자이너에서 제공 된 디자이너 동사 우선적으로 적용 합니다."
  syntax:
    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }
    return:
      type: System.ComponentModel.Design.DesignerVerbCollection
      description: "A <xref href=&quot;System.ComponentModel.Design.DesignerVerbCollection&quot;> </xref> 현재 사용할 수 있는 디자이너 동사를 포함 하 합니다."
  overload: System.ComponentModel.Design.IMenuCommandService.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
- uid: System.ComponentModel.Design.MenuCommand
  parent: System.ComponentModel.Design
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
- uid: System.ComponentModel.Design.DesignerVerb
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerb
  nameWithType: DesignerVerb
  fullName: System.ComponentModel.Design.DesignerVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
- uid: System.ComponentModel.Design.DesignerVerbCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerbCollection
  nameWithType: DesignerVerbCollection
  fullName: System.ComponentModel.Design.DesignerVerbCollection
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand
  nameWithType: IMenuCommandService.AddCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb
  nameWithType: IMenuCommandService.AddVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand
  nameWithType: IMenuCommandService.FindCommand
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke
  nameWithType: IMenuCommandService.GlobalInvoke
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand
  nameWithType: IMenuCommandService.RemoveCommand
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb
  nameWithType: IMenuCommandService.RemoveVerb
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu
  nameWithType: IMenuCommandService.ShowContextMenu
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
