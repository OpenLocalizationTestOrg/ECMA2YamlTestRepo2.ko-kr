### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleCommand
  id: OracleCommand
  children:
  - System.Data.OracleClient.OracleCommand.#ctor
  - System.Data.OracleClient.OracleCommand.#ctor(System.String)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  - System.Data.OracleClient.OracleCommand.Cancel
  - System.Data.OracleClient.OracleCommand.Clone
  - System.Data.OracleClient.OracleCommand.CommandText
  - System.Data.OracleClient.OracleCommand.CommandTimeout
  - System.Data.OracleClient.OracleCommand.CommandType
  - System.Data.OracleClient.OracleCommand.Connection
  - System.Data.OracleClient.OracleCommand.CreateDbParameter
  - System.Data.OracleClient.OracleCommand.CreateParameter
  - System.Data.OracleClient.OracleCommand.DbConnection
  - System.Data.OracleClient.OracleCommand.DbParameterCollection
  - System.Data.OracleClient.OracleCommand.DbTransaction
  - System.Data.OracleClient.OracleCommand.DesignTimeVisible
  - System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  - System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  - System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  - System.Data.OracleClient.OracleCommand.ExecuteReader
  - System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteScalar
  - System.Data.OracleClient.OracleCommand.Parameters
  - System.Data.OracleClient.OracleCommand.Prepare
  - System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  - System.Data.OracleClient.OracleCommand.Transaction
  - System.Data.OracleClient.OracleCommand.UpdatedRowSource
  langs:
  - csharp
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
  type: Class
  summary: "SQL 문 또는 데이터베이스에 대해 실행할 저장된 프로시저를 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다. 자세한 내용은 참조 [Oracle 및 ADO.NET](~/add/includes/ajax-current-ext-md.md)합니다.       데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 하는 OracleCommand 클래스: | 항목 | 설명 |   |----------|-----------------|   | <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>| 행을 반환 하는 명령을 실행 합니다. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>| <xref:System.Data.OracleClient.OracleCommand.Connection%2A>에 대해 SQL 문을 실행 하 고 영향을 받는 행의 수를 반환 합니다. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>| SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행 합니다. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>| .NET Framework 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 합니다. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>| Oracle 고유 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 합니다. |       다시 설정할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>속성 및 OracleCommand 개체 다시 사용 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       명령 실행으로 인해 심각한 경우 <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection>닫힐 수 있습니다.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleException> 그러나 사용자는 다시 연결 하 고 계속할 수 있습니다.      > [!NOTE] > 달리는 **명령** 개체가 지원 하지 않는 OracleCommand 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체는 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>속성.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 명령 제한 시간 설정 아무 효과가 없으며 반환 되는 값은 항상&0;입니다."
  example:
  - "The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of OracleCommand, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.  \n  \n [!code-cs[Classic WebData OracleCommand#1](~/add/codesnippet/csharp/t-system.data.oracleclie_7_1.cs)]\n [!code-vb[Classic WebData OracleCommand#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      [System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>합니다."
  remarks: "기본 생성자는 모든 필드를를 기본값으로 초기화합니다. 다음 표에서 <xref:System.Data.OracleClient.OracleCommand>안내 하십시오.</xref:System.Data.OracleClient.OracleCommand> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>| 빈 문자열 (&quot;&quot;) |   | <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|</xref:System.Data.OracleClient.OracleCommand.Connection%2A></xref:System.Data.OracleClient.OracleCommand.CommandType%2A></xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/csharp/m-system.data.oracleclie_12_1.cs)]\n [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_12_1.vb)]"
  syntax:
    content: public OracleCommand ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스입니다."
  syntax:
    content: public OracleCommand (string commandText);
    parameters:
    - id: commandText
      type: System.String
      description: "쿼리 텍스트입니다."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스 및 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/visualbasic/24f167a1-f345-47a8-a620-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/csharp/24f167a1-f345-47a8-a620-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: commandText
      type: System.String
      description: "쿼리 텍스트입니다."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 데이터베이스에 연결을 나타내는 개체입니다."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 쿼리 텍스트와 함께 클래스는 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 개체 및 <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref>합니다."
  remarks: "다음 표에서 <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand> 이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OracleClient.OracleCommand.Connection%2A>| 새 <xref:System.Data.OracleClient.OracleConnection>하는 값에 대 한는 `connection` 매개 변수입니다. |       관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/visualbasic/c02f7271-efcb-41b3-bc5c-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/csharp/c02f7271-efcb-41b3-bc5c-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);
    parameters:
    - id: commandText
      type: System.String
      description: "쿼리 텍스트입니다."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 데이터베이스에 연결을 나타내는 개체입니다."
    - id: tx
      type: System.Data.OracleClient.OracleTransaction
      description: "<xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref> 는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 실행 합니다."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Cancel
  id: Cancel
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "실행을 취소 하려고 한 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>합니다."
  remarks: "가 취소할 경우 아무 작업도 수행 합니다. 그러나 처리 중인 명령을 취소 동작이 실패 하는 경우 예외가 생성 되지 않습니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.  \n  \n [!code-vb[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_6_1.vb)]\n [!code-cs[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.oracleclie_6_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 파일의 복사본을 만듭니다 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 개체입니다."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "새 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 개체는 모든 속성 값은 원래와 동일 합니다."
  overload: System.Data.OracleClient.OracleCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandText
  id: CommandText
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "SQL 문 또는 데이터베이스에 대해 실행할 저장된 프로시저를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>속성이로 설정 되어 `StoredProcedure`, 저장된 프로시저의 이름으로 CommandText 속성을 설정 해야 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.       .NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> 이 경우 명명 된 매개 변수를 사용 해야 합니다. 예를 들어: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</xref:System.Data.OracleClient.OracleCommand> 그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter>개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A>속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/csharp/p-system.data.oracleclie_14_1.cs)]\n [!code-vb[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_14_1.vb)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL 문 또는 저장된 프로시저를 실행 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "명령을 실행 하는 시도 종료 하 고 오류를 생성 하기 전 대기 시간을 가져오거나 설정 합니다."
  remarks: "<xref:System.ArgumentException>할당 된 CommandTimeout 속성 값이 0 보다 작은 경우 생성 됩니다.</xref:System.ArgumentException>"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "시간 (초) 명령이 실행 될 때까지 기다려야 합니다. 기본값은 30 초입니다."
  overload: System.Data.OracleClient.OracleCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandType
  id: CommandType
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "나타내는 값을 가져오거나 방법을 <xref:System.Data.OracleClient.OracleCommand.CommandText*>속성을 해석 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandText*>"
  remarks: "에서는 CommandType 속성이로 설정 된 경우 `StoredProcedure`를 설정 해야는 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>속성을 전체 Oracle 호출 구문.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>또는 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, CommandType 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A>       .NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> 이 경우 명명 된 매개 변수를 사용 해야 합니다. 예를 들어: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</xref:System.Data.OracleClient.OracleCommand> 그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter>개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A>속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다."
  example:
  - "The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_2_1.vb)]\n [!code-cs[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/csharp/p-system.data.oracleclie_2_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "중 하나는 <xref href=&quot;System.Data.CommandType&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "값이 유효한 <xref href=&quot;System.Data.CommandType&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "가져오거나는 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 의이 인스턴스에서 사용 되는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>합니다."
  remarks: "연결을 설정할 수 없습니다 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A>       트랜잭션을 진행 중인 동안 연결을 설정 하는 경우와 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>속성이 null이 아니면는 <xref:System.InvalidOperationException>생성 됩니다.</xref:System.InvalidOperationException> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 트랜잭션이 커밋 또는 롤백 후 연결을 설정 하는 경우 및 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>속성이 null이 아니면는 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>속성은 null 값으로 설정 됩니다.</xref:System.Data.OracleClient.OracleCommand.Transaction%2A> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/csharp/p-system.data.oracleclie_11_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_11_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; set; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "데이터 원본에 연결 합니다. 기본값은 null 값입니다."
  overload: System.Data.OracleClient.OracleCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "트랜잭션을 진행 중인 동안 연결 속성이 변경 되었습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.OracleClient.OracleParameter&quot;> </xref> 개체입니다."
  remarks: "CreateParameter 메서드는 <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A> 의 강력한 형식의 버전"
  syntax:
    content: public System.Data.OracleClient.OracleParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleParameter
      description: "<xref href=&quot;System.Data.OracleClient.OracleParameter&quot;> </xref> 개체입니다."
  overload: System.Data.OracleClient.OracleCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  id: DbConnection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "명령 개체를 사용자 지정 된 인터페이스 컨트롤에 표시 되어야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 명령 개체를 컨트롤;에 표시 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "에 대해 SQL 문을 실행은 <xref:System.Data.OracleClient.OracleCommand.Connection*>영향을 받는 행 수를 반환 합니다.</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "ExecuteNonQuery를 사용 하 여 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하려면 또는 사용 하지 않고 데이터베이스에 데이터를 변경 하는 <xref:System.Data.DataSet>를 실행 하는 UPDATE, INSERT 또는 DELETE 문에.</xref:System.Data.DataSet>       ExecuteNonQuery 모든 행을 반환 하지 않는 있지만 모든 출력 매개 변수 또는 반환 값 매개 변수에 매핑된 데이터로 채워집니다.       UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다. CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다. 문의 다른 모든 형식에 대 한 반환 값은-1입니다. 롤백이 발생 하는 경우 반환 값-1 이기도 합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using ExecuteNonQuery. The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.oracleclie_8_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_8_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다. CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다. 문의 다른 모든 형식에 대 한 반환 값은-1입니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 존재 하지 않습니다.       -또는-는 연결이 열려 있지 않습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  id: ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "에 대해 SQL 문을 실행은 <xref:System.Data.OracleClient.OracleCommand.Connection*>영향을 받는 행 수를 반환 합니다.</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "ExecuteOracleNonQuery을 사용 하 여 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업 수행 또는 사용 하지 않고 데이터베이스에 데이터를 변경 하는 <xref:System.Data.DataSet>를 실행 하는 UPDATE, INSERT 또는 DELETE 문에.</xref:System.Data.DataSet>       와 다른 ExecuteOracleNonQuery <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>반환 한다는 점에서 `rowid` 정확히 하나의 행에 영향을 주는 INSERT, DELETE 또는 UPDATE 문을 실행 하는 경우 출력 매개 변수로.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 그러면 후속 관련된 쿼리에에서 성능을 향상 시킬 수 있도록 하는 Oracle 데이터베이스에서 행을 고유 하 게 식별 하는 있습니다.       하지만 ExecuteOracleNonQuery 모든 행을 반환 하지 않는 모든 출력 매개 변수 또는 반환 값 매개 변수로 매핑될 데이터로 채워집니다."
  syntax:
    content: public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);
    parameters:
    - id: rowid
      type: System.Data.OracleClient.OracleString
      description: "서버에 있는 실제 행 ID의 base64 문자열 표현입니다."
    return:
      type: System.Int32
      description: "UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다. CREATE TABLE 및 DROP TABLE 문에 대 한 반환 값은 0입니다. 문의 다른 모든 형식에 대 한 반환 값은-1입니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 존재 하지 않습니다.       -또는-는 연결이 열려 있지 않습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  id: ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "쿼리를 실행 하 고 관련 Oracle 데이터 형식으로 쿼리에서 반환한 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다. 추가 열 이나 행은 무시 됩니다."
  remarks: "ExecuteOracleScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다. 이렇게 하려면 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> 에서 반환 된 다음 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 사용 하 여 보다 적은 코드가 필요       다음 C# 예제와 같이 일반적인 ExecuteOracleScalar 쿼리 서식을 지정할 수 있습니다.```   command.CommandText = &quot;SELECT COUNT(*) AS NumberOfRegions FROM Region&quot;;   count = command.ExecuteOracleScalar();   ```"
  syntax:
    content: public object ExecuteOracleScalar ();
    parameters: []
    return:
      type: System.Object
      description: "결과 경우는 Oracle 고유 데이터 형식 또는 null 참조로 설정 되는 결과의 첫 번째 행의 첫 번째 열을 <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "보냅니다는 <> </> *>에 <> </> *>와 빌드는 <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 다음 명령은 ExecuteReader를 호출 하는 경우이 저장된 프로시저를 실행 합니다.       둘 이상의 <xref:System.Data.OracleClient.OracleDataReader>어느 시점에서 열 수 있습니다.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_10_1.vb)]\n [!code-cs[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_10_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "보냅니다는 <> </> *>에 <> </> *>, 및 빌드는 <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> 중 하나를 사용 하는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  remarks: "SQL 문의 단일 행만 반환 될 경우 지정 `SingleRow` 로 <xref:System.Data.CommandBehavior>값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.</xref:System.Data.CommandBehavior>       경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 를 호출할 때 다음이 저장된 프로시저를 실행 명령       <xref:System.Data.OracleClient.OracleDataReader>크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</xref:System.Data.OracleClient.OracleDataReader> 자세한 내용은 참조는 `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> 에 대 한 설정       둘 이상의 <xref:System.Data.OracleClient.OracleDataReader>어느 시점에서 열 수 있습니다.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database. <xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/csharp/db42fed5-256c-4ac8-928b-_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/db42fed5-256c-4ac8-928b-_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "쿼리를 실행 하 고.NET Framework 데이터 형식으로 쿼리에서 반환한 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다. 추가 열 이나 행은 무시 됩니다."
  remarks: "ExecuteScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다. 이렇게 하려면 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> 에서 반환 된 다음 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 사용 하 여 보다 적은 코드가 필요       다음 C# 예제와 같이 일반적인 ExecuteScalar 쿼리 서식을 지정할 수 있습니다.```   CommandText = &quot;SELECT COUNT(*) FROM Region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oracleclie_1_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_1_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: ".NET Framework 데이터 형식으로 결과의 첫 번째 행의 첫 번째 열 집합 또는 결과 집합이 비어 있으면 null 참조 또는 결과 <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Parameters
  id: Parameters
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the <xref href=&quot;System.Data.OracleClient.OracleParameterCollection&quot;></xref>."
  remarks: "경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.       .NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> 이 경우 명명 된 매개 변수를 사용 해야 합니다. 예를 들어: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand>의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</xref:System.Data.OracleClient.OracleCommand> 그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter>매개 변수 속성에는 개체), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</xref:System.Data.OracleClient.OracleParameter> .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.  \n  \n [!code-cs[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/csharp/p-system.data.oracleclie_6_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_6_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleParameterCollection Parameters { get; }
    return:
      type: System.Data.OracleClient.OracleParameterCollection
      description: "SQL 문 또는 저장된 프로시저의 매개 변수입니다. 기본값은 빈 컬렉션입니다."
  overload: System.Data.OracleClient.OracleCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Prepare
  id: Prepare
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "데이터 원본에 명령의 준비 된 (또는 컴파일된) 버전을 만듭니다."
  remarks: "준비를 호출 하기 전에 준비 해야 할 문의 각 매개 변수의 데이터 형식을 지정 합니다."
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 설정 되지 않았습니다.       -or-       The <>*> is not <xref:System.Data.OracleClient.OracleConnection.Open*>.</xref:System.Data.OracleClient.OracleConnection.Open*>"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "다시 설정 된 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>속성의 기본값을.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>"
  remarks: "기본값은 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>30 초입니다.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Transaction
  id: Transaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "가져오거나는 <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref> 는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 실행 합니다."
  remarks: "특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 트랜잭션 속성을 설정할 수 없습니다. 트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.OracleClient.OracleTransaction>동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.OracleClient.OracleConnection>로 <xref:System.Data.OracleClient.OracleCommand>개체 다음에 문을 실행 하려고 하면 예외가 throw 됩니다.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleTransaction>"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction Transaction { get; set; }
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "An <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>. 기본값은 null 값입니다."
  overload: System.Data.OracleClient.OracleCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "지정 하는 값을 가져오거나 설정 합니다. 방법을 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 메서드는 명령 결과를 적용 해야는 <xref href=&quot;System.Data.DataRow&quot;> </xref>합니다."
  remarks: "기본 <xref:System.Data.UpdateRowSource>값은 `Both` 명령이 자동으로 생성 하지 않는 한 (의 경우로 <xref:System.Data.OracleClient.OracleCommandBuilder>),이 경우 기본값은 `None`.</xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.UpdateRowSource>       사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.UpdateRowSource>속성 참조 [DataAdapter 매개 변수](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.UpdateRowSource>"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "중 하나는 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> 값입니다."
  overload: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "입력 한 값 중 하나 였습니다는 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> 값입니다."
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OracleClient.OracleCommand.#ctor
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleCommand.Cancel
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
- uid: System.Data.OracleClient.OracleCommand.Clone
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleCommand.CommandText
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleCommand.CommandType
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
- uid: System.Data.OracleClient.OracleParameter
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameter
  nameWithType: OracleParameter
  fullName: System.Data.OracleClient.OracleParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
- uid: System.Data.OracleClient.OracleDataReader
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
- uid: System.Data.OracleClient.OracleCommand.Parameters
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleParameterCollection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameterCollection
  nameWithType: OracleParameterCollection
  fullName: System.Data.OracleClient.OracleParameterCollection
- uid: System.Data.OracleClient.OracleCommand.Prepare
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
- uid: System.Data.OracleClient.OracleCommand.Transaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OracleClient.OracleCommand.#ctor*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand.OracleCommand
- uid: System.Data.OracleClient.OracleCommand.Cancel*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel
  nameWithType: OracleCommand.Cancel
- uid: System.Data.OracleClient.OracleCommand.Clone*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone
  nameWithType: OracleCommand.Clone
- uid: System.Data.OracleClient.OracleCommand.CommandText*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
- uid: System.Data.OracleClient.OracleCommand.CommandType*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OracleCommand.CreateDbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OracleCommand.CreateParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OracleCommand.ExecuteDbDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OracleCommand.ExecuteNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery
  nameWithType: OracleCommand.ExecuteOracleNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar
  nameWithType: OracleCommand.ExecuteOracleScalar
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OracleCommand.ExecuteReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OracleCommand.ExecuteScalar
- uid: System.Data.OracleClient.OracleCommand.Parameters*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleCommand.Prepare*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare
  nameWithType: OracleCommand.Prepare
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OracleCommand.ResetCommandTimeout
- uid: System.Data.OracleClient.OracleCommand.Transaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
