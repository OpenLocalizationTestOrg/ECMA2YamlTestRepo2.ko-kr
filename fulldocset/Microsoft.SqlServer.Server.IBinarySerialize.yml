### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.IBinarySerialize
  id: IBinarySerialize
  children:
  - Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  - Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  langs:
  - csharp
  name: IBinarySerialize
  nameWithType: IBinarySerialize
  fullName: Microsoft.SqlServer.Server.IBinarySerialize
  type: Interface
  summary: "사용자 정의 형식 (UDT) 및 사용자 정의 집계 serialization 및 deserialization에 대 한 사용자 지정 구현을 제공합니다."
  remarks: "사용자 정의 형식 (Udt) 및 사용자 정의 집계 일 수 있는 저장소 형식으로 정의 하는 데는 <xref:Microsoft.SqlServer.Server.Format>.`Native` </xref:Microsoft.SqlServer.Server.Format> or <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</xref:Microsoft.SqlServer.Server.Format>       <xref:Microsoft.SqlServer.Server.Format>.`Native`</xref:Microsoft.SqlServer.Server.Format> 하면 SQL Server에서 처리 serialization과 deserialization 시 자동으로 했으나 형식을 처리할 수 있는 형식의 종류에 제한이 있습니다. <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</xref:Microsoft.SqlServer.Server.Format> 사용자 정의 형식 및 집계의 자체 직렬화를 처리 하도록 허용 합니다. 사용자 정의 형식 및 집계로 표시 되어야 <xref:Microsoft.SqlServer.Server.Format>.`UserDefined` </xref:Microsoft.SqlServer.Server.Format> 에 `SqlUserDefinedType` 또는 `SqlUserDefinedAggregate` 특성과 IBinarySerialize 인터페이스를 구현 해야 합니다.       Note 사용자 지정 직렬화 된 경우에 한도 넘지 허용 되는 최대 각 인스턴스의 총 크기는 이어야 합니다."
  syntax:
    content: public interface IBinarySerialize
  implements: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  id: Read(System.IO.BinaryReader)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  langs:
  - csharp
  name: Read(BinaryReader)
  nameWithType: IBinarySerialize.Read(BinaryReader)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Read(BinaryReader)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "이진 형식에서 사용자 정의 형식 (UDT) 또는 사용자 정의 집계를 생성합니다."
  remarks: "Read 메서드가 기록한 정보를 사용 하 여 개체를 다시 구성 해야 합니다는 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>메서드.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>"
  example:
  - "The following example shows the implementation of the Read method of a UDT, which uses a <xref:System.IO.BinaryReader> to de-serialize a previously persisted UDT. This example assumes that the UDT has two data properties: `StringValue` and `DoubleValue`.  \n  \n [!code-cs[DataWorks IBinarySerialize Samples#1](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_1_1.cs)]\n [!code-vb[DataWorks IBinarySerialize Samples#1](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_1_1.vb)]"
  syntax:
    content: public void Read (System.IO.BinaryReader r);
    parameters:
    - id: r
      type: System.IO.BinaryReader
      description: "<xref:System.IO.BinaryReader>개체가 역직렬화 되에서 스트리밍하도록.</xref:System.IO.BinaryReader>"
  overload: Microsoft.SqlServer.Server.IBinarySerialize.Read*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  id: Write(System.IO.BinaryWriter)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  langs:
  - csharp
  name: Write(BinaryWriter)
  nameWithType: IBinarySerialize.Write(BinaryWriter)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Write(BinaryWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "보관 될 수 있도록 이진 파일 형식으로 사용자 정의 형식 (UDT) 또는 사용자 정의 집계를 변환 합니다."
  remarks: "이진 스트림으로 수 있도록 충분 한 정보를 기록는 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>UDT 또는 사용자 정의 집계를 다시 구성 하기 위해 메서드.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>"
  example:
  - "The following example shows the implementation of the Writemethod of a UDT, which uses a <xref:System.IO.BinaryWriter> to serialize the UDT in the user-defined binary format. The purpose of the null character padding is to ensure that the string value is completely separated from the double value, so that one UDT is compared to another in Transact-SQL code, string bytes are compared to string bytes and double bytes are compared to double bytes.  \n  \n [!code-cs[DataWorks IBinarySerialize Samples#2](~/add/codesnippet/csharp/m-microsoft.sqlserver.se_0_1.cs)]\n [!code-vb[DataWorks IBinarySerialize Samples#2](~/add/codesnippet/visualbasic/m-microsoft.sqlserver.se_0_1.vb)]"
  syntax:
    content: public void Write (System.IO.BinaryWriter w);
    parameters:
    - id: w
      type: System.IO.BinaryWriter
      description: "<xref:System.IO.BinaryWriter>스트림 UDT 또는 사용자 정의 집계 serialize 됩니다.</xref:System.IO.BinaryWriter>"
  overload: Microsoft.SqlServer.Server.IBinarySerialize.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Read(BinaryReader)
  nameWithType: IBinarySerialize.Read(BinaryReader)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Read(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Write(BinaryWriter)
  nameWithType: IBinarySerialize.Write(BinaryWriter)
  fullName: Microsoft.SqlServer.Server.IBinarySerialize.Write(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Read*
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Read
  nameWithType: IBinarySerialize.Read
- uid: Microsoft.SqlServer.Server.IBinarySerialize.Write*
  parent: Microsoft.SqlServer.Server.IBinarySerialize
  isExternal: false
  name: Write
  nameWithType: IBinarySerialize.Write
