### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.Providers.ClientRoleProvider
  id: ClientRoleProvider
  children:
  - System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  - System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  - System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  - System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  langs:
  - csharp
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider
  type: Class
  summary: "Windows 기반 응용 프로그램에 대 한 역할 정보를 가져옵니다는 [!INCLUDE[ajax_current_short](~/add/includes/ajax-current-short-md.md)] 역할 서비스입니다."
  remarks: "ClientRoleProvider 클래스를 사용 하도록 응용 프로그램을 구성 하 여 기존 역할 서비스에서 역할 정보를 검색 하려면 클라이언트 응용 프로그램 서비스를 사용할 수 있습니다. 을 구성한 후 확인할 수 있습니다를 호출 하 여 인증된 된 사용자가 특정 역할에 있는지 여부를 <xref:System.Security.Principal.IPrincipal.IsInRole%2A>의 메서드는 <xref:System.Security.Principal.IPrincipal>에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>속성.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> 이 속성은 응용 프로그램의 클라이언트 응용 프로그램 서비스를 사용 하도록 구성 된 경우에 <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> 반환 이 클래스를 구현 하기 때문에 <xref:System.Security.Principal.IPrincipal>인터페이스를 필요가 없습니다 명시적으로 참조할 수 있습니다.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>메서드를 내부적으로 호출 된 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName>메서드.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName> </xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>       ClientRoleProvider 클래스는 읽기 전용 역할 멤버 자격 공급자에 표시 된 역할 서비스에서 인증 된 사용자에 대 한 역할 정보를 검색 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>속성.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 값은 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>속성은 일반적으로 다른 구성 값과 함께 응용 프로그램 구성 파일에서 검색 됩니다.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 자세한 내용은 참조 [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/add/includes/ajax-current-ext-md.md)합니다.       통해 현재 ClientRoleProvider 인스턴스를 검색할 수 있습니다는 `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>속성.</xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>       ClientRoleProvider 클래스만 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>및 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> <xref:System.Web.Security.RoleProvider>추상 클래스</xref:System.Web.Security.RoleProvider> 의 메서드</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 를 지원합니다. 특정 사용자에 대 한 이러한 방법 중 하나를 호출 하는 경우 서비스 공급자는 먼저 역할 정보에 대 한 로컬 데이터 캐시를 검사 합니다. 캐시 역할 정보를 포함 하지 않는 또는 캐시 만료 된 경우 서비스 공급자 역할 서비스에서 역할 정보를 검색 하 고 캐시에 추가 합니다.       클라이언트 응용 프로그램 서비스를 구성 하는 경우 역할 캐시에 대 한 제한 시간을 지정할 수 있습니다. 강제로 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>로컬 캐시를 호출 하는 대신 서비스에서 역할 데이터를 검색 하는 메서드는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>메서드 첫 번째.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       만들거나 역할을 삭제 하거나 사용자의 역할 멤버 자격을 수정 하려면 ClientRoleProvider 클래스를 사용할 수 없습니다. 를 만들거나 역할 정보를 수정 하려면 서버에 역할 서비스의 구성을 변경 해야 합니다."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: 'public class ClientRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> 클래스입니다."
  syntax:
    content: public ClientRoleProvider ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "사용되지 않습니다."
    - id: roleNames
      type: System.String[]
      description: "사용되지 않습니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 속성은이 클래스에서 사용 되지 않습니다."
  remarks: "이 속성을 설정 하는 것은 효과가 없습니다."
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "공급자에 대 한 응용 프로그램의 이름입니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "사용되지 않습니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "사용되지 않습니다."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "사용되지 않습니다."
    return:
      type: System.Boolean
      description: "해당 없음. 이 메서드는 항상 예외를 throw 합니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "사용되지 않습니다."
    - id: usernameToMatch
      type: System.String
      description: "사용되지 않습니다."
    return:
      type: System.String[]
      description: "해당 없음. 이 메서드는 항상 예외를 throw 합니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "해당 없음. 이 메서드는 항상 예외를 throw 합니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "지정된 된 사용자가 속한 역할의 이름을 가져옵니다."
  remarks: "지정 해야 하는 현재, 인증 된 사용자에 대 한 역할 정보를 검색 하는 GetRolesForUser 메서드는 `username` 매개 변수입니다. 통해 사용자 이름을 가져올 수 있습니다는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>속성을 다음과 같이: `Thread.CurrentPrincipal.Identity.Name`.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       서비스 공급자는 불필요 한 서비스 호출을 방지 하기 위해 로컬 파일 시스템에 대 한 역할 정보를 캐시 합니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>클래스 개요.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to use this method to determine whether the user login has expired before testing role membership. This code assumes that all valid users are associated with one or more roles. In this case, the GetRolesForUser method will not return any roles for a previously-authenticated user whose login has expired. If the user login has expired, this code displays the login dialog box. Otherwise, it calls the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> method to determine whether the user is in the \"manager\" role. The restricted code is in a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "에 대 한 역할을 검색할 사용자의 이름입니다."
    return:
      type: System.String[]
      description: "역할 이름 <code> username </code> 속한 또는 사용자가 인증 되지 않은 경우 빈 배열입니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>username</code> 현재 인증 된 사용자의 사용자 이름이 아닙니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "사용되지 않습니다."
    return:
      type: System.String[]
      description: "해당 없음. 이 메서드는 항상 예외를 throw 합니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "공급자를 초기화합니다."
  remarks: "[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] 초기화 하려면 Initialize 메서드를 호출 하는 확장성 모델의 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>정보를 사용 하 여 응용 프로그램 구성 파일에.</xref:System.Web.ClientServices.Providers.ClientRoleProvider> 이 메서드는 다음 역할 서비스 구성 특성을 인식:- `name`       -    `description`       -    `cacheTimeout`       -    `connectionStringName`       -    `serviceUri`       -    `honorCookieExpiry` 이러한 특성에 대 한 자세한 내용은 참조 [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "공급자의 이름입니다."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "이 공급자에 대 한 구성에 지정 된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>config</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>가 비어 있습니다.       -또는- <code>config</code> 인식할 수 없는 값을 포함 합니다. 자세한 내용은 설명 섹션을 참조 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> 이미 초기화 되었습니다."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>config</code>포함 된 `cacheTimeout` 변환 하기 위한 올바른 형식이 아닌 값은 <xref:System.Int32> 값입니다."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "<code>config</code>포함 한 `cacheTimeout` 숫자를 나타내는 값 보다 작은 <xref:System.Int32.MinValue> 보다 큰 <xref:System.Int32.MaxValue>합니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "지정된 된 역할에 지정된 된 사용자 인지를 나타내는 값을 가져옵니다."
  remarks: "호출 하 여 인증된 된 사용자가 특정 역할에 있는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A>의 메서드는 <xref:System.Security.Principal.IPrincipal>에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>속성.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> 이 속성은 응용 프로그램의 클라이언트 응용 프로그램 서비스를 사용 하도록 구성 된 경우에 <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> 반환 이 클래스를 구현 하기 때문에 <xref:System.Security.Principal.IPrincipal>인터페이스를 필요가 없습니다 명시적으로 참조할 수 있습니다.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>메서드 IsUserInRole 메서드를 내부적으로 호출 합니다.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName> IsUserInRole 메서드에서 사용 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>사용자로 표시 여부를 결정 하는 메서드 `username` 표시 된 역할에 `roleName`.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       서비스 공급자는 불필요 한 서비스 호출을 방지 하기 위해 로컬 파일 시스템에 대 한 역할 정보를 캐시 합니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider>클래스 개요.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to access this method directly to determine whether the user is in a particular role. This code first tests whether the user login has expired. An explicit <xref:System.Web.ClientServices.Providers.ClientRoleProvider> reference is required to call the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> method, so the same reference is used to call the IsUserInRole method. If the user is in the \"manager\" role, this code calls a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "사용자의 이름입니다."
    - id: roleName
      type: System.String
      description: "역할의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 사용자가 지정된 된 역할의 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 지정된 된 사용자가 인증 되지 않았거나 지정된 된 역할에 없는 경우."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>username</code> 현재 인증 된 사용자의 사용자 이름이 아닙니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "사용자가 더 이상 인증 합니다.       -또는-역할 서비스를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "사용되지 않습니다."
    - id: roleNames
      type: System.String[]
      description: "사용되지 않습니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  id: ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "캐시 된 역할 정보를 삭제 하 고 캐시 제한 시간을 다시 설정 합니다."
  remarks: "ResetCache 메서드는 로컬 캐시에서 모든 역할 정보를 제거 하 고 캐시가 만료 되도록 설정 합니다. 이 메서드를 호출 하면 후 다음 번에 호출 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>또는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>메서드 대신 로컬 캐시 구성 된 역할 서비스에서 역할 정보를 검색 합니다.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       사용자가 역할이 변경 했지만 캐시 아직 만료 되지 않은 경우에 역할 캐시를 새로 고칠 수 있도록이 메서드를 사용할 수 있습니다. 역할 캐시 시간 제한 간격을 설정 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example code demonstrates how to use this method to reset the local roles cache.  \n  \n [!code-vb[ClientApplicationServices#314](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#314)]\n [!code-cs[ClientApplicationServices#314](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#314)]"
  syntax:
    content: public void ResetCache ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "이 메서드는이 클래스에서 사용 되지 않습니다."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "사용되지 않습니다."
    return:
      type: System.Boolean
      description: "해당 없음. 이 메서드는 항상 예외를 throw 합니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "항상 throw 됩니다."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  id: ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "역할 서비스의 URI를 가져오거나 설정 합니다."
  remarks: "응용 프로그램 코드에서 ServiceUri 속성을 설정할 수 있지만 일반적으로 응용 프로그램 구성 파일에서 값을 설정 됩니다. 그러면 코드를 다시 컴파일하지 않고도 서비스 위치를 변경할 수 있습니다. 자세한 내용은 참조 [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/add/includes/ajax-current-ext-md.md)합니다.       서비스 위치를 프로그래밍 방식으로 설정 하는 경우 전체 서비스는 항상 &quot;Role_JSON_AppService.axd&quot; 끝나야 URI를 지정 해야 합니다."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: public string ServiceUri { get; set; }
    return:
      type: System.String
      description: "역할 서비스 URI입니다."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 속성을 가져올 때 서비스 URI가 찾을 수 없는 응용 프로그램 구성 파일에 하 고이 속성이 이전에 설정 되지 않았습니다."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider.ClientRoleProvider
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: ClientRoleProvider.AddUsersToRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: ClientRoleProvider.CreateRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: ClientRoleProvider.DeleteRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: ClientRoleProvider.FindUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: ClientRoleProvider.GetAllRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: ClientRoleProvider.GetRolesForUser
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: ClientRoleProvider.GetUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: ClientRoleProvider.Initialize
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: ClientRoleProvider.IsUserInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache
  nameWithType: ClientRoleProvider.ResetCache
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: ClientRoleProvider.RoleExists
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
