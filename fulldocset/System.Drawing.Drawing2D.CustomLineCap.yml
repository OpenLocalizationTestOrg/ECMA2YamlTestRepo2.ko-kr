### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.CustomLineCap
  id: CustomLineCap
  children:
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  - System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  - System.Drawing.Drawing2D.CustomLineCap.BaseCap
  - System.Drawing.Drawing2D.CustomLineCap.BaseInset
  - System.Drawing.Drawing2D.CustomLineCap.Clone
  - System.Drawing.Drawing2D.CustomLineCap.Dispose
  - System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  - System.Drawing.Drawing2D.CustomLineCap.Finalize
  - System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  - System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  - System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  - System.Drawing.Drawing2D.CustomLineCap.WidthScale
  langs:
  - csharp
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
  type: Class
  summary: "사용자 정의 사용자 지정 선 단면을 캡슐화합니다."
  remarks: "선 끝 시작과 끝의 선 또는 GDI +으로 그린 곡선 아래에서 사용 됩니다 <xref:System.Drawing.Pen>개체입니다.</xref:System.Drawing.Pen> GDI + 몇 가지 미리 정의 된 단면 스타일을 지원 하며 또한 자신의 단면 스타일을 정의 하는 사용자 수 있습니다. 이 클래스는 사용자 지정 단면 스타일을 만드는 데 사용 됩니다."
  example:
  - "The following example demonstrates how to use the CustomLineCap class. To run this example paste, the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/t-system.drawing.drawing_4_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/t-system.drawing.drawing_4_1.cs)]"
  syntax:
    content: 'public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 클래스 지정한 개요 및 채우기를 사용 합니다."
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>작업에 대해 지정 된 채우기 모드에 관계 없이 &quot;굴곡&quot;의 채우기 모드를 사용 합니다.</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath` 및 `strokePath` 매개 변수를 동시에 사용할 수 없습니다. 매개 변수 하나에 null 값을 전달 되어야 합니다. 두 매개 변수는 null 값이 전달 되 면 `fillPath` 무시 됩니다. 경우 `strokePath` 은 `null`, `fillPath` 음수 y를 차단 해야 합니다."
  example:
  - "The following example demonstrates how to use the CustomLineCap constructor. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/b65925ed-80d8-46c6-8585-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/b65925ed-80d8-46c6-8585-_1.cs)]"
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다."
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 클래스에서 지정 된 기존 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 열거형 지정한 개요 및 채우기를 사용 합니다."
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>작업에 대해 지정 된 채우기 모드에 관계 없이 &quot;굴곡&quot;의 채우기 모드를 사용 합니다.</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath` 및 `strokePath` 매개 변수를 동시에 사용할 수 없습니다. 매개 변수 하나에 null 값을 전달 되어야 합니다. 두 매개 변수는 null 값이 전달 되 면 `fillPath` 무시 됩니다. 경우 `strokePath` 은 `null`, `fillPath` 음수 y를 차단 해야 합니다."
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다."
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다."
    - id: baseCap
      type: System.Drawing.Drawing2D.LineCap
      description: "사용자 지정 단면을 만드는 데 사용할 선 단면입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  id: '#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)'
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 에서 지정 된 기존 클래스 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 지정한 개요, 채우기 및 삽입으로 열거 합니다."
  remarks: "<xref:System.Drawing.Drawing2D.CustomLineCap>작업에 대해 지정 된 채우기 모드에 관계 없이 &quot;굴곡&quot;의 채우기 모드를 사용 합니다.</xref:System.Drawing.Drawing2D.CustomLineCap>       `fillPath` 및 `strokePath` 매개 변수를 동시에 사용할 수 없습니다. 매개 변수 하나에 null 값을 전달 되어야 합니다. 두 매개 변수는 null 값이 전달 되 면 `fillPath` 무시 됩니다. 경우 `strokePath` 은 `null`, `fillPath` 음수 y를 차단 해야 합니다."
  syntax:
    content: public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);
    parameters:
    - id: fillPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 에 대 한 사용자 지정 단면 채우기를 정의 하는 개체입니다."
    - id: strokePath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "A <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> 사용자 지정 단면의 윤곽선을 정의 하는 개체입니다."
    - id: baseCap
      type: System.Drawing.Drawing2D.LineCap
      description: "사용자 지정 단면을 만드는 데 사용할 선 단면입니다."
    - id: baseInset
      type: System.Single
      description: "Cap과 줄 사이의 거리입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  id: BaseCap
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 열거형이 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 기반 합니다."
  syntax:
    content: public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 열거형이 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 기반 합니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.BaseCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  id: BaseInset
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cap와 줄 사이의 거리를 가져오거나 설정 합니다."
  syntax:
    content: public float BaseInset { get; set; }
    return:
      type: System.Single
      description: "Cap 시작과 줄의 끝 사이의 거리입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.BaseInset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Clone()
  nameWithType: CustomLineCap.Clone()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 항목의 정확한 복사본을 만듭니다 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.  \n  \n-   Creates a clone of `firstCap` by using the Clone method.  \n  \n-   Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.  \n  \n```vb#  \nPublic Sub CloneExample(e As PaintEventArgs)  \n Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  \n New Point(5, - 5)  \n Dim capPath As New GraphicsPath()  \n ' Create a Path and add two lines to it,  \n ' forming a custom line cap.  \n capPath.AddLines(points)  \n ' Create a CustomLineCap object.  \n Dim firstCap As New CustomLineCap(Nothing, capPath)  \n ' Create a copy of firstCap.  \n Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  \n CustomLineCap)  \n ' Create a Pen object.  \n Dim pen As New Pen(Color.Black, 3F)  \n 'Set up the line.  \n Dim point1 As New Point(20, 20)  \n Dim point2 As New Point(100, 100)  \n ' Set up the caps.  \n pen.CustomStartCap = firstCap  \n pen.CustomEndCap = secondCap  \n ' Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2)  \n End Sub  \n```  \n  \n```c#  \nprivate void CloneExample(PaintEventArgs e)  \n {  \n // Create a Path and add two lines to it,  \n // forming a custom line cap.  \n Point[] points =  \n {  \n new Point(-5, -5),  \n new Point(0, 0),  \n new Point(5, -5)  \n };  \n GraphicsPath capPath = new GraphicsPath();  \n capPath.AddLines(points);  \n // Create a CustomLineCap object.  \n CustomLineCap firstCap = new CustomLineCap(null, capPath);  \n // Create a copy of firstCap.  \n CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  \n // Create a Pen object.  \n Pen pen = new Pen(Color.Black, 3.0f);  \n // Set up the line.  \n Point point1 = new Point(20, 20);  \n Point point2 = new Point(100, 100);  \n // Set up the caps.  \n pen.CustomStartCap = firstCap;  \n pen.CustomEndCap = secondCap;  \n // Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2);  \n }  \n```"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 개체로 캐스팅,이 메서드를 만듭니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Dispose()
  nameWithType: CustomLineCap.Dispose()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 개체입니다."
  remarks: "호출 <xref:System.IDisposable.Dispose%2A>이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.CustomLineCap>개체 다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Drawing2D.CustomLineCap> </xref:System.IDisposable.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CustomLineCap.Dispose(Boolean)
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: Finalize()
  nameWithType: CustomLineCap.Finalize()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "허용 된 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 리소스를 해제 하 고 다른 정리 작업 하기 전에 수행할 하려고 하는 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 가비지 수집에서 회수 합니다."
  syntax:
    content: ~CustomLineCap ();
    parameters: []
  overload: System.Drawing.Drawing2D.CustomLineCap.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  id: GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: GetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "대문자로 시작 하는 데 및이 사용자 지정 단면을 구성 하는 끝 줄을 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates how to use the GetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/ecbd86d4-445b-4466-aba2-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/ecbd86d4-445b-4466-aba2-_1.cs)]"
  syntax:
    content: public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 이 cap 내에서 한 줄의 시작 부분에 사용 되는 열거형입니다."
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 이 cap 내에서 한 줄의 끝에 사용 되는 열거형입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  id: SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: SetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "대문자로 시작 하는 데 사용 하 고이 사용자 지정 단면을 구성 하는 끝 줄을 설정 합니다."
  remarks: ''
  example:
  - "The following example demonstrates how to use the SetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#1](~/add/codesnippet/visualbasic/fda6a751-fef5-4b7b-a5e4-_1.vb)]\n [!code-cs[System.Drawing.Misc3#1](~/add/codesnippet/csharp/fda6a751-fef5-4b7b-a5e4-_1.cs)]"
  syntax:
    content: public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 이 cap 내에서 한 줄의 시작 부분에 사용 되는 열거형입니다."
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 이 cap 내에서 한 줄의 끝에 사용 되는 열거형입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  id: StrokeJoin
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
  fullName: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref> 결정 하는 열거형 어떻게이 구성 하는 줄 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 개체를 조인 합니다."
  remarks: "이 속성은 지정 된 <xref:System.Drawing.Drawing2D.LineJoin>조인 선 및 곡선이 그리면된 경로 구성 하는 데 사용 되는 열거형 <xref:System.Drawing.Drawing2D.CustomLineCap>개체입니다.</xref:System.Drawing.Drawing2D.CustomLineCap> </xref:System.Drawing.Drawing2D.LineJoin>"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "<xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref> 열거형이 <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 개체가 조인 선으로 사용 합니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  id: WidthScale
  parent: System.Drawing.Drawing2D.CustomLineCap
  langs:
  - csharp
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
  fullName: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "이 크기를 조정 하는 기준인 크기를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 클래스 개체의 너비와 관련 하 여는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 개체입니다."
  remarks: "이 속성에는 사용자 지정 단면의 크기를 곱하는 펜 굵기의 배수 중에서 지정 합니다. 예를 들어이 속성은 1, 사용자 지정 단면 너비는 10, 사용자 지정 단면 높이 5, 및 3의 너비가 펜으로 선이 그려집니다, 하는 경우 cap은 그려지는 30 단위 너비와 15 높이 각각. 이 속성을 3로 설정가 그려지는 90 단위 너비 및 높이 각각 45 됩니다."
  syntax:
    content: public float WidthScale { get; set; }
    return:
      type: System.Single
      description: "Cap의 크기를 조정 하는 기준인 양입니다."
  overload: System.Drawing.Drawing2D.CustomLineCap.WidthScale*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap)
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  nameWithType: CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
  fullName: System.Drawing.Drawing2D.CustomLineCap.CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
  fullName: System.Drawing.Drawing2D.CustomLineCap.BaseInset
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Clone()
  nameWithType: CustomLineCap.Clone()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose()
  nameWithType: CustomLineCap.Dispose()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose()
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CustomLineCap.Dispose(Boolean)
  fullName: System.Drawing.Drawing2D.CustomLineCap.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Finalize()
  nameWithType: CustomLineCap.Finalize()
  fullName: System.Drawing.Drawing2D.CustomLineCap.Finalize()
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: GetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.GetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(LineCap,LineCap)
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: SetStrokeCaps(LineCap,LineCap)
  nameWithType: CustomLineCap.SetStrokeCaps(LineCap,LineCap)
  fullName: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(LineCap,LineCap)
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
  fullName: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
  fullName: System.Drawing.Drawing2D.CustomLineCap.WidthScale
- uid: System.Drawing.Drawing2D.CustomLineCap.#ctor*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap.CustomLineCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseCap*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseCap
  nameWithType: CustomLineCap.BaseCap
- uid: System.Drawing.Drawing2D.CustomLineCap.BaseInset*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: BaseInset
  nameWithType: CustomLineCap.BaseInset
- uid: System.Drawing.Drawing2D.CustomLineCap.Clone*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Clone
  nameWithType: CustomLineCap.Clone
- uid: System.Drawing.Drawing2D.CustomLineCap.Dispose*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Dispose
  nameWithType: CustomLineCap.Dispose
- uid: System.Drawing.Drawing2D.CustomLineCap.Finalize*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: Finalize
  nameWithType: CustomLineCap.Finalize
- uid: System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: GetStrokeCaps
  nameWithType: CustomLineCap.GetStrokeCaps
- uid: System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: SetStrokeCaps
  nameWithType: CustomLineCap.SetStrokeCaps
- uid: System.Drawing.Drawing2D.CustomLineCap.StrokeJoin*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: StrokeJoin
  nameWithType: CustomLineCap.StrokeJoin
- uid: System.Drawing.Drawing2D.CustomLineCap.WidthScale*
  parent: System.Drawing.Drawing2D.CustomLineCap
  isExternal: false
  name: WidthScale
  nameWithType: CustomLineCap.WidthScale
