### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.RangeHeaderValue
  id: RangeHeaderValue
  children:
  - System.Net.Http.Headers.RangeHeaderValue.#ctor
  - System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  - System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  - System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.RangeHeaderValue.Ranges
  - System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.RangeHeaderValue.ToString
  - System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  - System.Net.Http.Headers.RangeHeaderValue.Unit
  langs:
  - csharp
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: System.Net.Http.Headers.RangeHeaderValue
  type: Class
  summary: "범위 헤더 값을 나타냅니다."
  remarks: "The RangeHeaderValue class provides support for the Range header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.  \n  \n Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity. However, not all clients and servers need to support byte-range operations.  \n  \n The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity. Servers are not required to support Range header requests.  \n  \n An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \n  \n `Range: bytes=0-99\\r\\n\\r\\n`  \n  \n A HTTP server indicates support for Range headers with the Accept-Ranges header. An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:  \n  \n `Accept-Ranges: bytes\\r\\n\\r\\n`  \n  \n If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers. An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:  \n  \n `Accept-Ranges: none\\r\\n\\r\\n`"
  syntax:
    content: 'public class RangeHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: RangeHeaderValue()
  nameWithType: RangeHeaderValue.RangeHeaderValue()
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 클래스입니다."
  syntax:
    content: public RangeHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 바이트 범위를 사용 하 여 클래스입니다."
  remarks: "This  constructor initializes a new instance of the <xref:System.Net.Http.Headers.RangeHeaderValue> class with a Range header containing a specified byte range.  \n  \n An example of a Range header with a byte range in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \n  \n `Range: bytes=0-99\\r\\n\\r\\n`  \n  \n For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99."
  syntax:
    content: public RangeHeaderValue (Nullable<long> from, Nullable<long> to);
    parameters:
    - id: from
      type: System.Nullable{System.Int64}
      description: "데이터를 보내기 시작 하는 위치입니다."
    - id: to
      type: System.Nullable{System.Int64}
      description: "데이터 보내기를 중지 하는 위치입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>from</code>보다 큰 <code>to</code> -또는- <code>from</code> 또는 <code>to</code> 0 보다 작습니다."
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RangeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "확인 여부를 지정 된 <xref:System.Object>현재 같은지 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 개체와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref:System.Object>현재 개체와 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.RangeHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RangeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "에 대 한 해시 함수 역할을 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  remarks: "해시 코드에는 같음 테스트 하는 동안 개체를 식별 하는 데 사용 되는 숫자 값입니다. 컬렉션의 개체에 대 한 인덱스도는 사용할 수 있습니다.       GetHashCode 메서드는 해시 알고리즘 및 해시 테이블과 같은 데이터 구조에 사용 하기에 적합 합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 개체에 대 한 해시 코드입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: RangeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "문자열을 변환는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 인스턴스."
  syntax:
    content: public static System.Net.Http.Headers.RangeHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "범위 헤더 값 정보를 나타내는 문자열입니다."
    return:
      type: System.Net.Http.Headers.RangeHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 인스턴스."
  overload: System.Net.Http.Headers.RangeHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 참조 합니다."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>유효 범위 헤더 값 정보가 않습니다."
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges
  id: Ranges
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "지정 된 범위를 가져옵니다는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue> Ranges { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}
      description: "범위는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.Ranges*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: RangeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "현재 복사본 인 새 개체를 만듭니다. <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 인스턴스."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "현재 인스턴스의 복사본입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: RangeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "현재를 나타내는 문자열을 반환 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체를 나타내는 문자열입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: TryParse(String,RangeHeaderValue)
  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)
  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "문자열이 올바른지 여부를 결정 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 정보입니다."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.RangeHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "그 유효성을 검사 하는 문자열입니다."
    - id: parsedValue
      type: System.Net.Http.Headers.RangeHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 문자열의 버전입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.AuthenticationHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.RangeHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit
  id: Unit
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Unit
  nameWithType: RangeHeaderValue.Unit
  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "단위를 가져옵니다는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  syntax:
    content: public string Unit { get; set; }
    return:
      type: System.String
      description: "단위는 <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> 개체입니다."
  overload: System.Net.Http.Headers.RangeHeaderValue.Unit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue()
  nameWithType: RangeHeaderValue.RangeHeaderValue()
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: true
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: RangeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: RangeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: RangeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.RangeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: System.Net.Http.Headers.RangeHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<RangeItemHeaderValue>
  nameWithType: ICollection<RangeItemHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.RangeItemHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.RangeItemHeaderValue
    name: RangeItemHeaderValue
    nameWithType: RangeItemHeaderValue
    fullName: RangeItemHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: RangeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: RangeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: TryParse(String,RangeHeaderValue)
  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)
  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Unit
  nameWithType: RangeHeaderValue.Unit
  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue.RangeHeaderValue
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Equals
  nameWithType: RangeHeaderValue.Equals
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: RangeHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Parse
  nameWithType: RangeHeaderValue.Parse
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: RangeHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: ToString
  nameWithType: RangeHeaderValue.ToString
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: RangeHeaderValue.TryParse
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Unit
  nameWithType: RangeHeaderValue.Unit
