### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  id: SecurityAlgorithmSuite
  children:
  - System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  langs:
  - csharp
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
  type: Class
  summary: "알고리즘의 속성을 지정합니다. 이 한 <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> 클래스입니다."
  remarks: "이 클래스의 인스턴스는 메시지를 보호할 때 사용 되는 알고리즘의 암호화 특성을 지정 하는 데 사용 됩니다.       이 클래스를 보안 알고리즘 모음을 인스턴스화할 파생된 클래스에서 사용 하며 보안 알고리즘을 설명 하는 속성이 포함 되어 있습니다. 예를 들어는 `wsBasicHttp` 바인딩은 내부 파생된 클래스를 사용 하 여 보안 알고리즘의 속성을 지정 합니다."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))]

      public abstract class SecurityAlgorithmSuite
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> 클래스입니다."
  remarks: "이 클래스의 인스턴스 생성자는 모든 속성을 초기화 하지 않는 하므로 정적 속성 및 읽기 전용 속성으로 구성 됩니다."
  syntax:
    content: protected SecurityAlgorithmSuite ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  id: Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Basic128 알고리즘 모음을 가져옵니다."
  remarks: "기본적으로 aes-128 암호화 알고리즘으로 사용 됩니다."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "128 비트 Basic <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  id: Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  id: Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 128 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 128 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  id: Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 128 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  id: Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 192 비트 Basic을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "기본적으로 AES&192; 암호화 알고리즘으로 사용 됩니다."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 192 비트 Basic을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  id: Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "키 래핑 알고리즘으로 192 비트 Basic 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "키 래핑 알고리즘으로 192 비트 Basic 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  id: Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 192 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 192 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  id: Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 192 비트 Basic 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 192 비트 Basic 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  id: Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 256 비트 Basic을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "기본적으로 aes-256 암호화 알고리즘에 사용 됩니다."
  example:
  - "The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.se_4_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.se_4_1.cs)]"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 256 비트 Basic을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  id: Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  id: Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 256 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 256 비트 Basic 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  id: Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 서명 다이제스트에 s h a 256 및 256 비트 Basic 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  id: Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 메서드 뿐 아니라 기본 값을 지정 하는 속성을 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "기본 <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> 은 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>, 대칭 암호화 알고리즘으로 256 비트 AES 고급 암호화 표준 ()를 지정 하는.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  id: DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 비대칭 키 래핑 알고리즘을 문자열로 가져옵니다."
  remarks: "를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>메서드.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "기본 비대칭 키 래핑 알고리즘입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  id: DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 비대칭 서명 알고리즘을 문자열로 가져옵니다."
  remarks: "를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>메서드.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "기본 비대칭 서명 알고리즘인입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  id: DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 정형화 알고리즘을 문자열로 가져옵니다."
  remarks: "재정의 된 경우, <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A> 메서드에서 비교에 사용 됩니다 하는 문자열 값을 제공 합니다."
  syntax:
    content: public abstract string DefaultCanonicalizationAlgorithm { get; }
    return:
      type: System.String
      description: "기본 정형화 알고리즘입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  id: DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 다이제스트 알고리즘을 문자열로 가져옵니다."
  remarks: "를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>메서드.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultDigestAlgorithm { get; }
    return:
      type: System.String
      description: "기본 다이제스트 알고리즘인입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 암호화 알고리즘을 문자열로 가져옵니다."
  remarks: "를 재정의 하는 경우 비교에 사용할 문자열 값을 제공 된 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>메서드.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultEncryptionAlgorithm { get; }
    return:
      type: System.String
      description: "기본 암호화 알고리즘입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  id: DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "으로 기본 암호화 키 파생 길이 가져옵니다는 <xref:System.Int32>값.</xref:System.Int32>"
  remarks: "반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다. 에 대 한 `Basic256` 암호화의 경우 256을 반환 합니다."
  syntax:
    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "기본 암호화 키 파생 길이입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  id: DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "으로 기본 서명 키 파생 길이 가져옵니다는 <xref:System.Int32>값.</xref:System.Int32>"
  remarks: "반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다. 에 대 한 `Basic256` 암호화, 192을 반환 합니다."
  syntax:
    content: public abstract int DefaultSignatureKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "기본 서명 키 파생 길이입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  id: DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "으로 기본 대칭 키 길이 가져옵니다는 <xref:System.Int32>값.</xref:System.Int32>"
  remarks: "반환 되는 값은 구현 하는 서브 클래스에 따라 달라 집니다. 에 대 한 `Basic256` 암호화의 경우 256을 반환 합니다."
  syntax:
    content: public abstract int DefaultSymmetricKeyLength { get; }
    return:
      type: System.Int32
      description: "기본 대칭 키 길이입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  id: DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 대칭 키 래핑 알고리즘을 문자열로 가져옵니다."
  syntax:
    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "기본 대칭 키 래핑 알고리즘입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  id: DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "기본 대칭 서명 알고리즘을 문자열로 가져옵니다."
  syntax:
    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "기본 대칭 서명 알고리즘인입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  id: IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "특정 키 길이가 비대칭 알고리즘에서 지원 되는지 여부를 나타냅니다."
  remarks: "일반적인 키 길이 128, 192 및 256 비트는 합니다."
  syntax:
    content: public abstract bool IsAsymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "키 길이를 확인 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 길이가 비대칭 알고리즘;에서 지원 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "비대칭 키 래핑 알고리즘이 지원 되는지 여부를 나타냅니다."
  remarks: '`algorithm`<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A> 에서 반환 하는 문자열과 비교'
  syntax:
    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>비대칭 키 래핑 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  id: IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "비대칭 서명 알고리즘이 지원 되는지 여부를 나타냅니다."
  remarks: '`algorithm`<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A> 에서 반환 하는 문자열과 비교'
  syntax:
    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>비대칭 서명 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  id: IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "정형화 알고리즘이 지원 되는지 여부를 나타냅니다."
  remarks: '`algorithm`<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A> 에서 반환 하는 문자열과 비교'
  syntax:
    content: public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정형화 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  id: IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "다이제스트 알고리즘이 지원 되는지 여부를 나타냅니다."
  remarks: '`algorithm`<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A> 에서 반환 하는 문자열과 비교'
  syntax:
    content: public virtual bool IsDigestAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>다이제스트 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  id: IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "암호화 알고리즘이 지원 되는지 여부를 나타냅니다."
  remarks: '`algorithm`<xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A> 에서 반환 하는 문자열과 비교'
  syntax:
    content: public virtual bool IsEncryptionAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>암호화 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "암호화 키 파생 알고리즘이 지원 되는지 여부를 나타냅니다."
  syntax:
    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>암호화 키 파생 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "서명 키 파생 알고리즘이 지원 되는지 여부를 나타냅니다."
  syntax:
    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서명 키 파생 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  id: IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "파생된 클래스에서 재정의 되 면 특정 대칭 키 길이가 지원 되는지 여부를 나타냅니다."
  remarks: "`length` 하위 클래스에 따라 값의 범위와 비교 됩니다. 예를 들어는 `TripleDES` 이 메서드를 하위 클래스를 확인 하는 `length` 192와 256의 사이입니다."
  syntax:
    content: public abstract bool IsSymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "키 길이를 확인 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대칭 키 길이가 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "대칭 키 래핑 알고리즘이 지원 되는지 여부를 나타냅니다."
  syntax:
    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대칭 키 래핑 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  id: IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "대칭 서명 알고리즘이 지원 되는지 여부를 나타냅니다."
  syntax:
    content: public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "확인할 알고리즘 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대칭 서명 알고리즘이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  id: TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Triple 데이터 암호화 표준 (DES) 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Triple DES <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  id: TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "키 래핑 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "키 래핑 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 메시지 암호화 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  id: TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 서명 다이제스트에 s h a 256을 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  id: TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>는 내부 서브 기본값 뿐만 아니라 일부 메서드를 지정 하는 속성 중 일부를 재정의 하는 반환 된.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "메시지 암호화 알고리즘으로 192 비트 Triple DES 데이터 암호화 표준 () 및 서명 다이제스트에 s h a 256 키 래핑 알고리즘으로 r s a 15를 사용 하는 알고리즘 모음입니다."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
