### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DesignerRegionCollection
  id: DesignerRegionCollection
  children:
  - System.Web.UI.Design.DesignerRegionCollection.#ctor
  - System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  - System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.Clear
  - System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.Count
  - System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  - System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  - System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  - System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  - System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.Owner
  - System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: DesignerRegionCollection
  nameWithType: DesignerRegionCollection
  fullName: System.Web.UI.Design.DesignerRegionCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컨트롤 디자이너에 있는 개체입니다."
  remarks: "<xref:System.Web.UI.Design.ControlDesigner>클래스 및 파생된 클래스를 포함 하 고 디자인 호스트에서 컨트롤에 대 한 디자이너 영역을 같은 열거 DesignerRegionCollection 클래스를 사용 [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)].</xref:System.Web.UI.Design.ControlDesigner>       예를 들어는 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A?displayProperty=fullName>메서드를 사용 하 여 정의 하 고 영역을 컬렉션에 추가할 수 있습니다.</xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A>디자이너 영역의 컬렉션을 포함 하는 컨트롤 디자이너 개체를 액세스 하는 속성입니다.</xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A> DesignerRegionCollection 메서드 및 속성을 검토 하 고 유지 관리를 사용 하 여는 <xref:System.Web.UI.Design.DesignerRegion>컬렉션에 있는 개체입니다.</xref:System.Web.UI.Design.DesignerRegion>       컬렉션 개체를 추가할 때를 동적으로 증가 합니다. 이 컬렉션의 인덱스는&0;부터 시작 합니다. 사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>속성을 컬렉션에 있는 디자이너 영역의 수를 확인 합니다.</xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> DesignerRegionCollection 멤버를 사용 하 여 다음과 같은 기능을 제공 하도록:- <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>단일 디자이너 영역을 컬렉션에 추가 하는 방법을.</xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>컬렉션 내에서 특정 인덱스에서 디자이너 영역을 추가 하는 방법을.</xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A>디자이너 영역을 제거 하는 메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A>특정 인덱스에서 디자이너 영역을 제거 하는 메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.Contains%2A>메서드는 특정 디자이너 영역의 컬렉션에 이미 있는지 여부를 확인 하려면.</xref:System.Web.UI.Design.DesignerRegionCollection.Contains%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A>디자이너 영역의 컬렉션 내에서 인덱스를 검색 하는 메서드입니다.</xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.Item%2A>인덱서 가져오기 또는 배열 표기법을 사용 하 여 특정 인덱스에 디자이너 영역을 설정 합니다.</xref:System.Web.UI.Design.DesignerRegionCollection.Item%2A>      - <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>컬렉션에서 모든 디자이너 영역을 제거 하는 메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>"
  syntax:
    content: 'public class DesignerRegionCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: DesignerRegionCollection()
  nameWithType: DesignerRegionCollection.DesignerRegionCollection()
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 클래스입니다."
  remarks: "빈 컬렉션을 만드는 DesignerRegionCollection 생성자를 사용 합니다. 사용 하 여 컬렉션에 요소를 추가할 수는 <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>또는 <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> </xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>"
  syntax:
    content: public DesignerRegionCollection ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  id: '#ctor(System.Web.UI.Design.ControlDesigner)'
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: DesignerRegionCollection(ControlDesigner)
  nameWithType: DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 지정된 된 컨트롤 디자이너에 대 한 클래스입니다."
  remarks: "DesignerRegionCollection 생성자는 빈 컬렉션을 만듭니다 설정 하 고는 <xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A>속성을 지정 된 컨트롤 디자이너 개체입니다.</xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A> 비주얼 디자이너와 같은 [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], DesignerRegionCollection 생성자를 사용 하 여 특정 컨트롤 디자이너에 대 한 디자이너 영역의 컬렉션을 초기화 하 합니다.       사용 하 여 컬렉션에 요소를 추가할 수는 <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>또는 <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> </xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>"
  syntax:
    content: public DesignerRegionCollection (System.Web.UI.Design.ControlDesigner owner);
    parameters:
    - id: owner
      type: System.Web.UI.Design.ControlDesigner
      description: "컨트롤 디자이너에서 디자이너 영역의이 컬렉션을 소유한 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  id: Add(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Add(DesignerRegion)
  nameWithType: DesignerRegionCollection.Add(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Add(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 개체 컬렉션의 끝입니다."
  remarks: "Add 메서드를 지정 된 추가 <xref:System.Web.UI.Design.DesignerRegion>개체 컬렉션의 끝입니다.</xref:System.Web.UI.Design.DesignerRegion> 추가 하는 <xref:System.Web.UI.Design.DesignerRegion>개체를 사용 하 여 특정 인덱스 위치의 컬렉션에는 <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> </xref:System.Web.UI.Design.DesignerRegion>"
  syntax:
    content: public int Add (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에 추가 합니다."
    return:
      type: System.Int32
      description: "컬렉션에 추가 된 지역 위치의 인덱스입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear
  id: Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerRegionCollection.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "컬렉션에서 모든 영역을 제거합니다."
  remarks: "Clear 메서드를 사용 하 여 컬렉션에서 영역을 모두 제거 합니다. 컬렉션에서 특정 영역을 제거 하려면 사용 된 <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A> 특정 인덱스에서 영역을 제거 하려면 사용 된 <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  id: Contains(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Contains(DesignerRegion)
  nameWithType: DesignerRegionCollection.Contains(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Contains(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "지정된 된 지역 컬렉션에 포함 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "Contains 메서드를 사용 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A>에서 메서드는 <xref:System.Web.UI.Design.DesignerRegion>개체.</xref:System.Web.UI.Design.DesignerRegion> </xref:System.Object.Equals%2A>       선형 검색을 수행 하는 Contains 메서드 따라서 평균 실행 시간에 비례 하는 <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>속성.</xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> 템플릿 영역 컬렉션은 일반적으로 짧지만, 때문에 선형 검색 작업의 성능이 중요 하지 않은 합니다."
  syntax:
    content: public bool Contains (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 컬렉션에 영역이 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "컬렉션의 요소를 복사는 <xref:System.Array>특정에서 시작 하는 개체 <xref:System.Array>인덱스.</xref:System.Array> </xref:System.Array>"
  remarks: "사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>또는 <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A>디자인 영역을 추가 하는 메서드는 <xref:System.Web.UI.Design.DesignerRegionCollection>컬렉션.</xref:System.Web.UI.Design.DesignerRegionCollection> </xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> </xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>복사한 영역의 대상인.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Count
  id: Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Count
  nameWithType: DesignerRegionCollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.Count
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "개수를 가져옵니다 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "Count 속성은 컬렉션의 개체를 반복할 때 상위 경계 인덱스를 확인 하려면 일반적으로 사용 됩니다. 첫 번째 요소는 인덱스 컬렉션 인덱스가&0;부터 시작 하기 때문에 `0` 마지막 요소는 인덱스 및 `Count-1`합니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션의 개체입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DesignerRegionCollection.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  remarks: "사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>와 같은 속성과 함께 루프 생성 `while`, `for`, 또는 `foreach` 문, 열거 하는 <xref:System.Web.UI.Design.DesignerRegionCollection>개체입니다.</xref:System.Web.UI.Design.DesignerRegionCollection> </xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  id: IndexOf(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IndexOf(DesignerRegion)
  nameWithType: DesignerRegionCollection.IndexOf(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.IndexOf(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "지정 된 인덱스를 반환 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 개체입니다."
  remarks: "IndexOf 메서드를 사용 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A>에서 메서드는 <xref:System.Web.UI.Design.DesignerRegion>개체.</xref:System.Web.UI.Design.DesignerRegion> </xref:System.Object.Equals%2A>       IndexOf 메서드 선형 검색;를 수행합니다. 따라서 평균 실행 시간에 비례 하는 <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>속성.</xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> 템플릿 영역 컬렉션은 일반적으로 짧지만, 때문에 선형 검색 작업의 성능이 중요 하지 않은 합니다."
  syntax:
    content: public int IndexOf (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Int32
      description: "첫 번째로 나타나는 항목의&0;부터 시작 인덱스 <code> region </code> 컬렉션 내에서-1을 반환 하는 경우 <code> region </code> 컬렉션에 없는 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  id: Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Insert(Int32,DesignerRegion)
  nameWithType: DesignerRegionCollection.Insert(Int32,DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Insert(Int32,DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "삽입 한 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 지정된 된 인덱스에는 개체입니다."
  remarks: "Insert 메서드 추가 <xref:System.Web.UI.Design.DesignerRegion>개체 컬렉션의 특정 인덱스 위치에.</xref:System.Web.UI.Design.DesignerRegion> 단일을 추가 하려면 <xref:System.Web.UI.Design.DesignerRegion>컬렉션의 끝에 사용 된 <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> </xref:System.Web.UI.Design.DesignerRegion>      > [!NOTE] > 컬렉션에 항목을 삽입 하면 인덱스가 컬렉션의 다음 하위 항목에 대 한 변경입니다."
  syntax:
    content: public void Insert (int index, System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: index
      type: System.Int32
      description: "영역을 삽입할 컬렉션 내에서&0;부터 시작 하는 인덱스입니다."
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 를 컬렉션에 삽입 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 개체 크기가 고정된 되어 있습니다."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 추가 하거나 항목을 제거 하 여 컬렉션의 크기를 변경할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 개체가 읽기 전용입니다."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 컬렉션; 변경할 수 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 개체가 동기화 되었는지 (스레드로부터 안전함)."
  remarks: "컬렉션 전체를 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 컬렉션을 수정할 여전히 수 있습니다. 그러면 열거 하는 동안 예외.       사용 하 여 컬렉션을 잠글는 <xref:System.Web.UI.Design.DesignerRegionCollection.SyncRoot%2A>스레드로부터 안전을 보장 하려면 전체 열거 동안 메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 동기화 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DesignerRegionCollection.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "가져오거나는 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "컬렉션 내의 지정한 인덱스에 영역을 검색 하거나 영역을 컬렉션 내의 지정한 인덱스에 설정 항목 인덱서를 사용 합니다. 배열 표기법을 사용 하 여 컬렉션의 요소를 인덱싱할 수 있습니다. 예를 들어 인덱스에 있는 요소를 인덱싱할 수 있습니다 `i` 함께 표기법으로 `DesignerRegions(i)` Microsoft VisualBasic에 대 한 또는 `DesignerRegions[i]` C#에 대 한 합니다.       영역 개체에 대 한 참조를 컬렉션에서 개체의 인덱스가 필요한 경우 사용 된 <xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A>"
  syntax:
    content: public System.Web.UI.Design.DesignerRegion this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 를 컬렉션에서 가져오거나 설정 합니다."
    return:
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code> is less than zero.  \n  \n \\- or -  \n  \n <code>value</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner
  id: Owner
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
  fullName: System.Web.UI.Design.DesignerRegionCollection.Owner
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "디자이너 영역의 컬렉션을 소유 하는 컨트롤 디자이너를 가져옵니다."
  remarks: "Owner 속성 디자이너 영역의 컬렉션에 대 한 컨트롤 디자이너 개체를 액세스할 수 있는 편리한 방법을 제공 합니다. 예를 들어 컬렉션을 소유 하는 컨트롤 디자이너의 형식을 확인 하 고 컨트롤 디자이너의 메서드와 속성에 액세스 하는 Owner 속성을 사용할 수 있습니다."
  syntax:
    content: public System.Web.UI.Design.ControlDesigner Owner { get; }
    return:
      type: System.Web.UI.Design.ControlDesigner
      description: "A <xref href=&quot;System.Web.UI.Design.ControlDesigner&quot;> </xref> 소유 하는 컨트롤 디자이너 나타내는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  id: Remove(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Remove(DesignerRegion)
  nameWithType: DesignerRegionCollection.Remove(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Remove(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "Remove 메서드는 컬렉션에서 맨 처음 발견 되는 지정 된 영역을 제거합니다. 경우는 <xref:System.Web.UI.Design.DesignerRegionCollection>개체는 지정 된 포함 `region`, 컬렉션 그대로 유지 됩니다.</xref:System.Web.UI.Design.DesignerRegionCollection> 예외가 throw 되지 않습니다.       Remove 메서드를 사용 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A>에서 메서드는 <xref:System.Web.UI.Design.DesignerRegion>개체입니다.</xref:System.Web.UI.Design.DesignerRegion> </xref:System.Object.Equals%2A>       Remove 메서드 선형 검색;를 수행합니다. 따라서 평균 실행 시간에 비례 하는 <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A>속성.</xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> 템플릿 영역 컬렉션은 일반적으로 짧지만, 때문에 선형 검색 작업의 성능이 중요 하지 않은 합니다.       사용 하 여 특정 인덱스에서 영역을 컬렉션에서 제거 하려면는 <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A> 컬렉션에서 모든 영역을 제거 하려면 사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>      > [!NOTE] > 컬렉션의 다음 하위 항목의 인덱스가 변경 컬렉션에서 항목을 제거 합니다."
  syntax:
    content: public void Remove (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 는 컬렉션에서 제거할 수 있습니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "제거는 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션 내의 지정한 인덱스에는 개체입니다."
  remarks: "RemoveAt 메서드를 사용 하 여 컬렉션에서 특정 인덱스에서 영역을 제거 합니다. 컬렉션에서 지정된 된 영역을 제거 하려면 사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A> 컬렉션에서 모든 영역을 제거 하려면 사용 하 여는 <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>메서드.</xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A>      > [!NOTE] > 컬렉션의 다음 하위 항목의 인덱스가 변경 컬렉션에서 항목을 제거 합니다."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션 내에서&0;부터 시작 인덱스는 <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 를 제거 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref> 개체입니다."
  remarks: "컬렉션 전체를 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 컬렉션을 수정할 여전히 수 있습니다. 그러면 열거 하는 동안 예외.       스레드로부터 안전을 보장 하려면 전체 열거 동안 SyncRoot 메서드를 사용 하 여 컬렉션을 잠급니다. 스레드로부터 안전한 액세스에 대 한 잠금 컬렉션에 대 한 자세한 내용은 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>.</xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 <xref:System.Collections.ICollection.CopyTo*>.</xref:System.Collections.ICollection.CopyTo*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>복사한 영역의 대상인.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.Count%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 요소의 수입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 컬렉션에 대 한 액세스가 동기화 되어; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: int IList.Add (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에 추가할 항목입니다."
    return:
      type: System.Int32
      description: "컬렉션에 추가 된 항목 위치의 인덱스입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: bool IList.Contains (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 컬렉션에 영역이 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: int IList.IndexOf (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Int32
      description: "컬렉션에서 개체의 첫 번째 요소의&0;부터 시작 인덱스 그렇지 않으면-1 개체가 컬렉션에 없는 경우."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: void IList.Insert (int index, object o);
    parameters:
    - id: index
      type: System.Int32
      description: "개체를 삽입 하 고 컬렉션 내에서&0;부터 시작 하는 인덱스입니다."
    - id: o
      type: System.Object
      description: "컬렉션에 삽입할 개체입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>를 컬렉션의 크기가 새 개체를 추가할; 때 동적으로 증가 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "값은 <xref:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*>속성.</xref:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*>"
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 가져올 개체의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "컬렉션에서 지정된 된 인덱스에 사용 되는 개체입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: void IList.Remove (object o);
    parameters:
    - id: o
      type: System.Object
      description: "컬렉션에서 제거할 개체입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.Design.DesignerRegionCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Web.UI.Design.DesignerRegionCollection>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 제거할 개체의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection()
  nameWithType: DesignerRegionCollection.DesignerRegionCollection()
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection()
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection(ControlDesigner)
  nameWithType: DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
- uid: System.Web.UI.Design.ControlDesigner
  parent: System.Web.UI.Design
  isExternal: false
  name: ControlDesigner
  nameWithType: ControlDesigner
  fullName: System.Web.UI.Design.ControlDesigner
- uid: System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Add(DesignerRegion)
  nameWithType: DesignerRegionCollection.Add(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Add(DesignerRegion)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Design.DesignerRegion
  parent: System.Web.UI.Design
  isExternal: false
  name: DesignerRegion
  nameWithType: DesignerRegion
  fullName: System.Web.UI.Design.DesignerRegion
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Clear()
  nameWithType: DesignerRegionCollection.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.Clear()
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Contains(DesignerRegion)
  nameWithType: DesignerRegionCollection.Contains(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Contains(DesignerRegion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.Design.DesignerRegionCollection.Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Count
  nameWithType: DesignerRegionCollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DesignerRegionCollection.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IndexOf(DesignerRegion)
  nameWithType: DesignerRegionCollection.IndexOf(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.IndexOf(DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Insert(Int32,DesignerRegion)
  nameWithType: DesignerRegionCollection.Insert(Int32,DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Insert(Int32,DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DesignerRegionCollection.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Item(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
  fullName: System.Web.UI.Design.DesignerRegionCollection.Owner
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Remove(DesignerRegion)
  nameWithType: DesignerRegionCollection.Remove(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Remove(DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection
  nameWithType: DesignerRegionCollection.DesignerRegionCollection
- uid: System.Web.UI.Design.DesignerRegionCollection.Add*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Add
  nameWithType: DesignerRegionCollection.Add
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Clear
  nameWithType: DesignerRegionCollection.Clear
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Contains
  nameWithType: DesignerRegionCollection.Contains
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: CopyTo
  nameWithType: DesignerRegionCollection.CopyTo
- uid: System.Web.UI.Design.DesignerRegionCollection.Count*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Count
  nameWithType: DesignerRegionCollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DesignerRegionCollection.GetEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IndexOf
  nameWithType: DesignerRegionCollection.IndexOf
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Insert
  nameWithType: DesignerRegionCollection.Insert
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.Item*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Item
  nameWithType: DesignerRegionCollection.Item
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Remove
  nameWithType: DesignerRegionCollection.Remove
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DesignerRegionCollection.RemoveAt
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt
