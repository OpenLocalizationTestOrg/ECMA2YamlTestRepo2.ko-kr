### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Services.ModelService
  id: ModelService
  children:
  - System.Activities.Presentation.Services.ModelService.#ctor
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  - System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  - System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  - System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  - System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  - System.Activities.Presentation.Services.ModelService.ModelChanged
  - System.Activities.Presentation.Services.ModelService.Root
  langs:
  - csharp
  name: ModelService
  nameWithType: ModelService
  fullName: System.Activities.Presentation.Services.ModelService
  type: Class
  summary: "이 클래스는 디자이너가 모델과 상호 작용을 사용 하는 주 진입점입니다."
  remarks: "서비스에는 파생된 클래스를 만들 때 구현 해야 하는 메서드를 공용 및 보호 된 메서드가 나뉘어 있습니다. 공용 메서드는 누구나 호출할 수 있습니다. Protected 메서드는 모델에 의해 호출 됩니다."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public abstract class ModelService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "새 <xref href=&quot;System.Activities.Presentation.Services.ModelService&quot;> </xref>합니다."
  syntax:
    content: protected ModelService ();
    parameters: []
  overload: System.Activities.Presentation.Services.ModelService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  id: CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "기존 인스턴스를 사용 하 고 인스턴스의 전체 복제본 모델 항목을 만듭니다."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "복제 및 래핑될 항목입니다."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "새로 만든 반환 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 기존 항목의 복제본입니다."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  id: CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "만듭니다는 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 지정된 된 형식에 대 한 합니다. 이 메서드는 <xref href=&quot;System.Activities.Presentation.Model.ModelFactory&quot;> </xref> 사용자가을 새 항목을 만들려는 경우."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, object[] arguments);
    parameters:
    - id: itemType
      type: System.Type
      description: "만들 항목의 형식입니다."
    - id: options
      type: System.Activities.Presentation.Model.CreateOptions
      description: "생성 옵션입니다. 항목에 대 한 기본값으로 초기화할 것인지 여부를 지정할 수 있습니다."
    - id: arguments
      type: System.Object[]
      description: "항목의 생성자에 대 한 인수 배열입니다."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "새로 만든 반환 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>합니다."
  overload: System.Activities.Presentation.Services.ModelService.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  id: CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "지정된 된 클래스의 정적 멤버의 값을 나타내는 새 모델 항목을 만듭니다."
  remarks: "예를 들어에 대 한 참조를 추가 하려면 `Brushes.Red` 모델에이 메서드를 호출 `typeof(Brushes)` 나타내고 매개 변수는 문자열 &quot;Red&quot;입니다. 이 xaml로 serialize 할 `{x:Static Brushes.Red}`합니다."
  syntax:
    content: protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);
    parameters:
    - id: type
      type: System.Type
      description: "참조 되는 정적 멤버를 포함 하는 형식입니다."
    - id: memberName
      type: System.String
      description: "참조 되는 정적 멤버의 이름입니다."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "일치 하는 시작 지점부터를 지정 하는 모델 항목을 찾습니다."
  remarks: "모든 탐색은 재귀적입니다."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate<Type> match);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 검색을 시작할입니다. 이 항목 보다 위에 있는 항목은 무시 됩니다. 이 항목 및 그 아래의 계층의 모든 항목은 검색에 포함 됩니다. 이 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>대신 사용 됩니다.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: match
      type: System.Predicate{System.Type}
      description: "더 복잡 한 형식 비교를 사용할 수 있도록 하는 조건자입니다. 이 메서드는 지정 된 부모 범위 내에서 조건자와 일치 하는 모든 항목을 열거 합니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "반환 된 &lt;xref:System.Collections.Generic.IEnumerable%601&gt; 쿼리와 일치 하는 모든 모델 항목을 포함 합니다."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  id: Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "일치 하는 시작 지점부터를 지정 하는 모델 항목을 찾습니다."
  remarks: "모든 탐색은 재귀적입니다."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);
    parameters:
    - id: startingItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 검색을 시작할입니다. 이 항목 보다 위에 있는 항목은 무시 됩니다. 이 항목 및 그 아래의 계층의 모든 항목은 검색에 포함 됩니다. 이 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Activities.Presentation.Services.ModelService.Root*>대신 사용 됩니다.</xref:System.Activities.Presentation.Services.ModelService.Root*>"
    - id: type
      type: System.Type
      description: "<xref:System.Type>찾을 개체입니다.</xref:System.Type> 이 메서드는 요청 된 형식의 지정 된 부모 범위 내에서 모든 항목을 열거 합니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "반환 된 &lt;xref:System.Collections.Generic.IEnumerable%601&gt; 쿼리와 일치 하는 모든 모델 항목을 포함 합니다."
  overload: System.Activities.Presentation.Services.ModelService.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "찾습니다는 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 지정 된 이름의 지정된 된 범위에 있습니다."
  syntax:
    content: public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "선택적인 제공 범위입니다. 범위가 제공 되지 않은 경우 <xref:System.Activities.Presentation.Services.ModelService.Root*>범위로 사용 됩니다.</xref:System.Activities.Presentation.Services.ModelService.Root*> 가장 가까운 범위가 제공 되는 경우 <xref:System.Windows.Markup.INameScope>계층 구조에 사용할 항목을 찾습니다.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "찾을 이름입니다."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "반환 된 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 이름이 일치 <code> name </code>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  id: FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "찾습니다는 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 지정 된 이름의 지정된 된 범위에 있습니다."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);
    parameters:
    - id: scope
      type: System.Activities.Presentation.Model.ModelItem
      description: "선택적인 제공 범위입니다. 범위가 제공 되지 않은 경우 <xref:System.Activities.Presentation.Services.ModelService.Root*>범위로 사용 됩니다.</xref:System.Activities.Presentation.Services.ModelService.Root*> 가장 가까운 범위가 제공 되는 경우 <xref:System.Windows.Markup.INameScope>계층 구조에 사용할 항목을 찾습니다.</xref:System.Windows.Markup.INameScope>"
    - id: name
      type: System.String
      description: "찾을 이름입니다."
    - id: comparison
      type: System.StringComparison
      description: "이름의 비교 하는 방법을 결정 합니다. 기본값은 서 수로 비교 합니다."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "반환 된 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> 이름이 일치 <code> name </code>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 일치 항목이 없는 경우."
  overload: System.Activities.Presentation.Services.ModelService.FromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  id: ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "이 이벤트는 모델의 내용이 변경 될 때 발생 합니다."
  remarks: "이벤트 인수 이벤트에 사용할 수 변경 된 내용을 찾으려고 합니다."
  syntax:
    content: public abstract event EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs> ModelChanged;
    return:
      type: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Services.ModelService.Root
  id: Root
  parent: System.Activities.Presentation.Services.ModelService
  langs:
  - csharp
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Services
  summary: "개체 계층의 루트입니다."
  remarks: "선형 저장소에 대 한 루트 저장소에 첫 번째 개체입니다. 개체의 트리를 표현 하는 저장소를 트리의 최상위 노드를 반환 합니다."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "모델 계층으로의 제곱근을 반환 된 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>합니다."
  overload: System.Activities.Presentation.Services.ModelService.Root*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Services.ModelService.#ctor
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService()
  nameWithType: ModelService.ModelService()
  fullName: System.Activities.Presentation.Services.ModelService.ModelService()
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Object)
  nameWithType: ModelService.CreateItem(Object)
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem(Type,CreateOptions,Object[])
  nameWithType: ModelService.CreateItem(Type,CreateOptions,Object[])
  fullName: System.Activities.Presentation.Services.ModelService.CreateItem(Type,CreateOptions,Object[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.CreateOptions
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: System.Activities.Presentation.Model.CreateOptions
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem(Type,String)
  nameWithType: ModelService.CreateStaticMemberItem(Type,String)
  fullName: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Predicate<Type>)
  nameWithType: ModelService.Find(ModelItem,Predicate<Type>)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Predicate<Type>)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: true
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find(ModelItem,Type)
  nameWithType: ModelService.Find(ModelItem,Type)
  fullName: System.Activities.Presentation.Services.ModelService.Find(ModelItem,Type)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String)
  nameWithType: ModelService.FromName(ModelItem,String)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String)
- uid: System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName(ModelItem,String,StringComparison)
  nameWithType: ModelService.FromName(ModelItem,String,StringComparison)
  fullName: System.Activities.Presentation.Services.ModelService.FromName(ModelItem,String,StringComparison)
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Activities.Presentation.Services.ModelService.ModelChanged
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelChanged
  nameWithType: ModelService.ModelChanged
  fullName: System.Activities.Presentation.Services.ModelService.ModelChanged
- uid: System.EventHandler{System.Activities.Presentation.Services.ModelChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ModelChangedEventArgs>
  nameWithType: EventHandler<ModelChangedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Activities.Presentation.Services.ModelChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Services.ModelChangedEventArgs
    name: ModelChangedEventArgs
    nameWithType: ModelChangedEventArgs
    fullName: ModelChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Services.ModelService.Root
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
  fullName: System.Activities.Presentation.Services.ModelService.Root
- uid: System.Activities.Presentation.Services.ModelService.#ctor*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: ModelService
  nameWithType: ModelService.ModelService
- uid: System.Activities.Presentation.Services.ModelService.CreateItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateItem
  nameWithType: ModelService.CreateItem
- uid: System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: CreateStaticMemberItem
  nameWithType: ModelService.CreateStaticMemberItem
- uid: System.Activities.Presentation.Services.ModelService.Find*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Find
  nameWithType: ModelService.Find
- uid: System.Activities.Presentation.Services.ModelService.FromName*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: FromName
  nameWithType: ModelService.FromName
- uid: System.Activities.Presentation.Services.ModelService.Root*
  parent: System.Activities.Presentation.Services.ModelService
  isExternal: false
  name: Root
  nameWithType: ModelService.Root
