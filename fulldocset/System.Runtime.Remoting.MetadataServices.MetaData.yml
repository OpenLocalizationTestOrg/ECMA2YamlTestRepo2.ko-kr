### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.MetadataServices.MetaData
  id: MetaData
  children:
  - System.Runtime.Remoting.MetadataServices.MetaData.#ctor
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)
  - System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)
  - System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)
  langs:
  - csharp
  name: MetaData
  nameWithType: MetaData
  fullName: System.Runtime.Remoting.MetadataServices.MetaData
  type: Class
  summary: "XML 스키마로 작업할 수 있도록 하는 메서드를 제공 합니다."
  remarks: "형식 정보에서 WSDL 웹 서비스 설명 언어 ()를 생성할 수 있도록 하는 메서드를 코드 스트림으로 XML 스키마를 변환 하 고 코드 스트림을 어셈블리로 컴파일할 메타 데이터 클래스를 제공 합니다. 이 기능에도 제공 됩니다는 [Soapsuds 도구 (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)합니다."
  syntax:
    content: public class MetaData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: MetaData()
  nameWithType: MetaData.MetaData()
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.MetaData()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "인스턴스를 만들고 <xref href=&quot;System.Runtime.Remoting.MetadataServices.MetaData&quot;> </xref>합니다."
  syntax:
    content: public MetaData ();
    parameters: []
  overload: System.Runtime.Remoting.MetadataServices.MetaData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)
  id: ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertCodeSourceFileToAssemblyFile(String,String,String)
  nameWithType: MetaData.ConvertCodeSourceFileToAssemblyFile(String,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(String,String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "런타임 어셈블리 파일에 지정 된 코드 소스 파일을 컴파일합니다."
  remarks: "강력한 이름에 대 한 자세한 내용은 참조 하십시오. [강력한 이름의 어셈블리](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] >에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다."
  example:
  - "The following code example demonstrates the use of the ConvertCodeSourceFileToAssemblyFile method to write the schema definition of the specified types to a runtime assembly with the specified name. The `CsSource.cs` file converted here contains C# source code.  \n  \n [!code-cs[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/add/codesnippet/csharp/283dbafd-31c2-42c9-b42c-_1.cs)]\n [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/add/codesnippet/cpp/283dbafd-31c2-42c9-b42c-_1.cpp)]\n [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/add/codesnippet/visualbasic/283dbafd-31c2-42c9-b42c-_1.vb)]"
  syntax:
    content: public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);
    parameters:
    - id: codePath
      type: System.String
      description: "경로 소스 코드를 포함 하는 파일입니다."
    - id: assemblyPath
      type: System.String
      description: "여기서 새 런타임 어셈블리는 생성 된 위치입니다."
    - id: strongNameFilename
      type: System.String
      description: "강력한 이름으로 새 어셈블리로 컴파일합니다. 수 &lt;xref:System.String?displayProperty=fullName&gt;합니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)
  id: ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
  nameWithType: MetaData.ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "런타임에 어셈블리 파일에 코드 소스 스트림을 지정 하는 컴파일합니다."
  remarks: "강력한 이름에 대 한 자세한 내용은 참조 하십시오. [강력한 이름의 어셈블리](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] >에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다."
  syntax:
    content: public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);
    parameters:
    - id: outCodeStreamList
      type: System.Collections.ArrayList
      description: "A <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 소스 코드로 구성 된 스트림 합니다."
    - id: assemblyPath
      type: System.String
      description: "여기서 새 런타임 어셈블리는 생성 된 위치입니다."
    - id: strongNameFilename
      type: System.String
      description: "새 런타임 어셈블리로 컴파일하려면 강력한 이름입니다. 수 &lt;xref:System.String?displayProperty=fullName&gt;합니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)
  id: ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "C# 프록시 소스 코드에 지정된 된 스키마 정의 변환합니다."
  remarks: >-
    > [!NOTE]

    >  If files with the specified names already exist, they are overwritten.
  syntax:
    content: public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);
    parameters:
    - id: clientProxy
      type: System.Boolean
      description: "생성할 프록시의 유형을 나타냅니다. 경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다."
    - id: outputDirectory
      type: System.String
      description: "새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다."
    - id: inputStream
      type: System.IO.Stream
      description: "서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림."
    - id: outCodeStreamList
      type: System.Collections.ArrayList
      description: "생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다. <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*>메서드가 여러 소스 코드 스트림을 만들 수 있습니다.</xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*>"
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)
  id: ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정된 된 URL에 있는 원격 개체에 대 한 C# 프록시 소스 코드에 지정된 된 스키마 정의 변환 합니다."
  remarks: >-
    > [!NOTE]

    >  If files with the specified names already exist, they are overwritten.
  syntax:
    content: public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);
    parameters:
    - id: clientProxy
      type: System.Boolean
      description: "생성할 프록시의 유형을 나타냅니다. 경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다."
    - id: outputDirectory
      type: System.String
      description: "새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다."
    - id: inputStream
      type: System.IO.Stream
      description: "서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림."
    - id: outCodeStreamList
      type: System.Collections.ArrayList
      description: "생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다. <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*>메서드가 여러 소스 코드 스트림을 만들 수 있습니다.</xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*>"
    - id: proxyUrl
      type: System.String
      description: "새 프록시에 의해 표시 되는 대상 원격 개체 배치 될 위치는 URL입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)
  id: ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정된 된 URL에서 및 제공 된 클래스 네임 스페이스에 있는 원격 개체에 대 한 C# 프록시 소스 코드에 지정된 된 스키마 정의 변환 합니다."
  remarks: >-
    > [!NOTE]

    >  If files with the specified names already exist, they are overwritten.
  syntax:
    content: public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);
    parameters:
    - id: clientProxy
      type: System.Boolean
      description: "생성할 프록시의 유형을 나타냅니다. 경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다."
    - id: outputDirectory
      type: System.String
      description: "새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다."
    - id: inputStream
      type: System.IO.Stream
      description: "서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림."
    - id: outCodeStreamList
      type: System.Collections.ArrayList
      description: "생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다. ConvertSchemaStreamToCodeSourceStream 메서드 만들 수 여러 소스 코드 스트림 note 합니다."
    - id: proxyUrl
      type: System.String
      description: "새 프록시에 의해 표시 되는 대상 원격 개체 배치 될 위치는 URL입니다."
    - id: proxyNamespace
      type: System.String
      description: "새로 만든 프록시 네임 스페이스입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  id: ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
  nameWithType: MetaData.ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정한 서비스 형식을 XML 스키마로 변환 하는 이름으로 지정 하는 파일에 기록 합니다."
  remarks: "<xref:System.Runtime.Remoting.MetadataServices.ServiceType>인스턴스를 사용 하면 <xref:System.Type>.</xref:System.Type> 개체와 함께 URL을 연결할 수 있습니다</xref:System.Runtime.Remoting.MetadataServices.ServiceType>      > [!NOTE] >에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다."
  syntax:
    content: public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);
    parameters:
    - id: types
      type: System.Runtime.Remoting.MetadataServices.ServiceType[]
      description: "<xref href=&quot;System.Runtime.Remoting.MetadataServices.ServiceType&quot;> </xref> 인스턴스를 XML 스키마로 변환 합니다."
    - id: sdlType
      type: System.Runtime.Remoting.MetadataServices.SdlType
      description: "XML 스키마에 사용할 서비스 설명 언어의 형식입니다."
    - id: path
      type: System.String
      description: "XML 파일의 경로입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  id: ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertTypesToSchemaToFile(Type[],SdlType,String)
  nameWithType: MetaData.ConvertTypesToSchemaToFile(Type[],SdlType,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(Type[],SdlType,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정된 된 개체 형식을 XML 스키마로 변환 하 고 이름으로 지정 된 파일에 씁니다."
  remarks: >-
    > [!NOTE]

    >  If a file with the specified name already exists, it is overwritten.
  example:
  - "The following code example demonstrates the use of the ConvertTypesToSchemaToFile method to write the schema definition of the specified types to a file.  \n  \n [!code-cs[MetaData.ConvertTypesToSchemaToFile#1](~/add/codesnippet/csharp/7f092a79-b391-48e3-b89d-_1.cs)]\n [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/add/codesnippet/visualbasic/7f092a79-b391-48e3-b89d-_1.vb)]\n [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/add/codesnippet/cpp/7f092a79-b391-48e3-b89d-_1.cpp)]"
  syntax:
    content: public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);
    parameters:
    - id: types
      type: System.Type[]
      description: "XML 스키마로 변환할 개체 유형입니다."
    - id: sdlType
      type: System.Runtime.Remoting.MetadataServices.SdlType
      description: "XML 스키마에 사용할 서비스 설명 언어의 형식입니다."
    - id: path
      type: System.String
      description: "XML 파일의 경로입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  id: ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
  nameWithType: MetaData.ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정한 서비스 형식을 XML 스키마로 변환 하는 하 한을 지정 된 스트림에 씁니다."
  remarks: "<xref:System.Runtime.Remoting.MetadataServices.ServiceType>인스턴스를 사용 하면 <xref:System.Type>.</xref:System.Type> 개체와 함께 URL을 연결할 수 있습니다</xref:System.Runtime.Remoting.MetadataServices.ServiceType>"
  syntax:
    content: public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);
    parameters:
    - id: serviceTypes
      type: System.Runtime.Remoting.MetadataServices.ServiceType[]
      description: "<xref href=&quot;System.Runtime.Remoting.MetadataServices.ServiceType&quot;> </xref> 인스턴스를 XML 스키마로 변환 합니다."
    - id: sdlType
      type: System.Runtime.Remoting.MetadataServices.SdlType
      description: "XML 스키마에 사용할 서비스 설명 언어의 형식입니다."
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>스키마에 기록 됩니다.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  id: ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
  nameWithType: MetaData.ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "지정된 된 개체 형식을 XML 스키마로 변환 하 고 지정 된 스트림에 씁니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the ConvertTypesToSchemaToStream method to write the schema definition of the specified types to a stream.  \n  \n [!code-cs[MetaData.ConvertTypesToSchemaToStream#1](~/add/codesnippet/csharp/d77750d9-6c82-47f7-9590-_1.cs)]\n [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/add/codesnippet/visualbasic/d77750d9-6c82-47f7-9590-_1.vb)]\n [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/add/codesnippet/cpp/d77750d9-6c82-47f7-9590-_1.cpp)]"
  syntax:
    content: public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);
    parameters:
    - id: types
      type: System.Type[]
      description: "XML 스키마로 변환할 개체 유형입니다."
    - id: sdlType
      type: System.Runtime.Remoting.MetadataServices.SdlType
      description: "XML 스키마에 사용할 서비스 설명 언어의 형식입니다."
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>스키마에 기록 됩니다.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)
  id: RetrieveSchemaFromUrlToFile(System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: RetrieveSchemaFromUrlToFile(String,String)
  nameWithType: MetaData.RetrieveSchemaFromUrlToFile(String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "URL에서 XML 스키마를 다운로드 하 고 지정된 된 파일에 씁니다."
  remarks: >-
    > [!NOTE]

    >  If a file with the specified name already exists, it is overwritten.
  syntax:
    content: public static void RetrieveSchemaFromUrlToFile (string url, string path);
    parameters:
    - id: url
      type: System.String
      description: "XML 스키마가 있는 URL입니다."
    - id: path
      type: System.String
      description: "스키마에 기록 되는 파일의 경로입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)
  id: RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: RetrieveSchemaFromUrlToStream(String,Stream)
  nameWithType: MetaData.RetrieveSchemaFromUrlToStream(String,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(String,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "URL에서 XML 스키마를 다운로드 하 고 지정 된 스트림에 씁니다."
  syntax:
    content: public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);
    parameters:
    - id: url
      type: System.String
      description: "XML 스키마가 있는 URL입니다."
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>스키마에 기록 됩니다.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)
  id: SaveStreamToFile(System.IO.Stream,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  langs:
  - csharp
  name: SaveStreamToFile(Stream,String)
  nameWithType: MetaData.SaveStreamToFile(Stream,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(Stream,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.MetadataServices
  summary: "입력된 스트림을 지정 된 이름의 파일에 저장합니다."
  remarks: >-
    > [!NOTE]

    >  If a file with the specified name already exists, it is overwritten.
  syntax:
    content: public static void SaveStreamToFile (System.IO.Stream inputStream, string path);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "지정된 된 파일에 쓸 스트림입니다."
    - id: path
      type: System.String
      description: "입력된 스트림의에 기록 되는 파일입니다."
  overload: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.MetadataServices.MetaData.#ctor
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: MetaData()
  nameWithType: MetaData.MetaData()
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.MetaData()
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertCodeSourceFileToAssemblyFile(String,String,String)
  nameWithType: MetaData.ConvertCodeSourceFileToAssemblyFile(String,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
  nameWithType: MetaData.ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(ArrayList,String,String)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(Boolean,String,Stream,ArrayList,String,String)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
  nameWithType: MetaData.ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(ServiceType[],SdlType,String)
- uid: System.Runtime.Remoting.MetadataServices.ServiceType[]
  parent: System.Runtime.Remoting.MetadataServices
  isExternal: false
  name: ServiceType
  nameWithType: ServiceType
  fullName: System.Runtime.Remoting.MetadataServices.ServiceType[]
  spec.csharp:
  - uid: System.Runtime.Remoting.MetadataServices.ServiceType
    name: ServiceType
    nameWithType: ServiceType
    fullName: ServiceType[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.MetadataServices.SdlType
  parent: System.Runtime.Remoting.MetadataServices
  isExternal: false
  name: SdlType
  nameWithType: SdlType
  fullName: System.Runtime.Remoting.MetadataServices.SdlType
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToFile(Type[],SdlType,String)
  nameWithType: MetaData.ConvertTypesToSchemaToFile(Type[],SdlType,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(Type[],SdlType,String)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
  nameWithType: MetaData.ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(ServiceType[],SdlType,Stream)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
  nameWithType: MetaData.ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(Type[],SdlType,Stream)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: RetrieveSchemaFromUrlToFile(String,String)
  nameWithType: MetaData.RetrieveSchemaFromUrlToFile(String,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(String,String)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: RetrieveSchemaFromUrlToStream(String,Stream)
  nameWithType: MetaData.RetrieveSchemaFromUrlToStream(String,Stream)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(String,Stream)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: SaveStreamToFile(Stream,String)
  nameWithType: MetaData.SaveStreamToFile(Stream,String)
  fullName: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(Stream,String)
- uid: System.Runtime.Remoting.MetadataServices.MetaData.#ctor*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: MetaData
  nameWithType: MetaData.MetaData
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertCodeSourceFileToAssemblyFile
  nameWithType: MetaData.ConvertCodeSourceFileToAssemblyFile
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertCodeSourceStreamToAssemblyFile
  nameWithType: MetaData.ConvertCodeSourceStreamToAssemblyFile
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertSchemaStreamToCodeSourceStream
  nameWithType: MetaData.ConvertSchemaStreamToCodeSourceStream
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToFile
  nameWithType: MetaData.ConvertTypesToSchemaToFile
- uid: System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: ConvertTypesToSchemaToStream
  nameWithType: MetaData.ConvertTypesToSchemaToStream
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: RetrieveSchemaFromUrlToFile
  nameWithType: MetaData.RetrieveSchemaFromUrlToFile
- uid: System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: RetrieveSchemaFromUrlToStream
  nameWithType: MetaData.RetrieveSchemaFromUrlToStream
- uid: System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile*
  parent: System.Runtime.Remoting.MetadataServices.MetaData
  isExternal: false
  name: SaveStreamToFile
  nameWithType: MetaData.SaveStreamToFile
