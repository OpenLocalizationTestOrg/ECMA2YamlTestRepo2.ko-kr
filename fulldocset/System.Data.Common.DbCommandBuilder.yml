### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommandBuilder
  id: DbCommandBuilder
  children:
  - System.Data.Common.DbCommandBuilder.#ctor
  - System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.DataAdapter
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetInsertCommand
  - System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  - System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder
  fullName: System.Data.Common.DbCommandBuilder
  type: Class
  summary: "변경 내용을 조정 하는 데 사용 되는 단일 테이블 명령을 자동으로 생성 한 <xref href=&quot;System.Data.DataSet&quot;> </xref> 관련 데이터베이스입니다. 이 클래스는 추상 클래스 에서만 상속 될 수 있는 합니다."
  remarks: "DbCommandBuilder 클래스 자체 명령 작성기를 만드는 공급자 작성자의 편의 위해 제공 됩니다. 이 클래스에서 상속 하 여 개발자는 자신의 코드에 공급자 특정 동작을 구현할 수 있습니다.       <xref:System.Data.Common.DbDataAdapter>변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet>연결 된 데이터 원본과.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter> 그러나 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 의 속성</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 을 설정 하는 경우 단일 테이블 업데이트에 대 한 SQL 문을 자동으로 생성 하는 DbCommandBuilder 개체를 만들 수 있습니다. 그런 다음 설정 하지 않는 추가적인 모든 SQL 문은 DbCommandBuilder에 의해 생성 됩니다.       DbCommandBuilder 자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>설정할 때마다 이벤트는 <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>속성.</xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 만 연결할 수 있습니다 <xref:System.Data.Common.DbDataAdapter>또는 DbCommandBuilder 개체를 서로 한 번에.</xref:System.Data.Common.DbDataAdapter>       DbCommandBuilder 사용 하 여 INSERT, UPDATE 또는 DELETE 문을 생성 하려면는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>속성을 필수 메타 데이터 집합을 자동으로 검색 합니다.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 변경 하는 경우는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>호출 해야 (예를 들어 첫 번째 업데이트 후) 메타 데이터를 검색 한 후의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>메서드 메타 데이터를 업데이트 합니다.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>       `SelectCommand` 고유 열 이나 기본 키를 하나 이상 반환 해야 합니다. 항목이 없으면는 <xref:System.InvalidOperationException>예외가 생성 되 고 명령은 생성 되지 않습니다.</xref:System.InvalidOperationException>       DbCommandBuilder 또한 사용 하 여는 <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A> <xref:System.Data.Common.DbCommand.Transaction%2A>에 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> 참조 되는 속성</xref:System.Data.Common.DbCommand.Transaction%2A> 및</xref:System.Data.Common.DbCommand.CommandTimeout%2A> </xref:System.Data.Common.DbCommand.Connection%2A> 사용자를 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>이러한 속성을 수정 하거나는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>자체 대체 됩니다.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>속성 이전 값을 유지 합니다.</xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>       호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>는 DbCommandBuilder에서 분리는 <xref:System.Data.Common.DbDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</xref:System.Data.Common.DbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  syntax:
    content: 'public abstract class DbCommandBuilder : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "상속 되는 클래스의 새 인스턴스를 초기화는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DbCommandBuilder ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "공급자를 구현할 수는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 추가 매개 변수 속성을 처리 하는 클래스입니다."
  remarks: "이 방법을 사용 하면는 <xref:System.Data.Common.DbCommandBuilder>공급자 특정 매개 변수 속성을 처리 하는 클래스입니다.</xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "A <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 적용 되는 추가 수정 합니다."
    - id: row
      type: System.Data.DataRow
      description: "<xref href=&quot;System.Data.DataRow&quot;> </xref> <xref:System.Data.Common.DbDataReader.GetSchemaTable*>.</xref:System.Data.Common.DbDataReader.GetSchemaTable*> 에서 제공 하는 스키마 테이블에서"
    - id: statementType
      type: System.Data.StatementType
      description: "생성 중인 명령의 유형입니다 삽입, 업데이트 또는 삭제 합니다."
    - id: whereClause
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>매개 변수는 update 또는 delete의 WHERE 절의 일부인 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> insert 또는 update 값의 일부인 경우."
  overload: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "설정 하거나 가져옵니다는 <xref href=&quot;System.Data.Common.CatalogLocation&quot;> </xref> 인스턴스의 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 클래스입니다."
  syntax:
    content: public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "인스턴스는 카탈로그 구분 기호로 사용 되는 문자열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 클래스입니다."
  syntax:
    content: public virtual string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "인스턴스와 함께 사용 하 여 카탈로그 구분 기호를 나타내는 문자열의 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 클래스입니다."
  overload: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  id: ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 <xref href=&quot;System.Data.ConflictOption&quot;> </xref> 에서 사용 되는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>합니다."
  syntax:
    content: public virtual System.Data.ConflictOption ConflictOption { get; set; }
    return:
      type: System.Data.ConflictOption
      description: "중 하나를 반환 된 <xref href=&quot;System.Data.ConflictOption&quot;> </xref> 이 동작을 설명 하는 값 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommandBuilder.ConflictOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> 개체는 TRANSACT-SQL 문이 자동으로 생성 됩니다."
  remarks: "<xref:System.Data.Common.DbCommandBuilder>자체에 대 한 수신기로 등록 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>에서 생성 되는 이벤트는 <xref:System.Data.Common.DbDataAdapter>이 속성에 지정 된.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.Common.DbCommandBuilder>       새 인스턴스를 만들 때 <xref:System.Data.Common.DbCommandBuilder>, 모든 기존 <xref:System.Data.Common.DbCommandBuilder>이 연관 <xref:System.Data.Common.DbDataAdapter>해제 됩니다.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: public System.Data.Common.DbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Common.DbDataAdapter
      description: "A <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>메서드 및 `Finalize` 메서드.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>disposing 매개 변수 설정으로 보호 된 Dispose 메서드를 호출 `true`합니다.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> `Finalize`호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Data.Common.DbCommandBuilder>참조.</xref:System.Data.Common.DbCommandBuilder> 이 메서드 호출의 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>각 참조 된 개체의.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Data.Common.DbCommandBuilder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 데이터 소스에서 삭제를 수행 하는 데 필요한 개체입니다."
  remarks: "반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetDeleteCommand 방법을 사용할 수는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand>       또한 수정 된 명령 기반으로 GetDeleteCommand를 사용할 수 있습니다. 예를 들어 수 GetDeleteCommand 및 명령 텍스트를 수정한를 호출한 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetDeleteCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 삭제를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 필요에 따라 열을 사용 하 여 매개 변수 이름에 대 한 데이터 소스에서 삭제를 수행 하는 데 필요한 개체입니다."
  remarks: "응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 예를 들어 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>및 명령 텍스트를 수정 하 고 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 를</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> 호출할 수 있습니다.       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> SQL 문은 첫 번째 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 응용 프로그램을 호출할 때 생성       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 다음 조건에 해당 하는 경우에이 작업은 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 삭제를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 데이터 원본에 삽입 하는 데 필요 합니다."
  remarks: "텍스트를 반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetInsertCommand 방법을 사용할 수는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand>       또한 수정 된 명령 기반으로 GetInsertCommand를 사용할 수 있습니다. 예를 들어 수 GetInsertCommand 및 명령 텍스트를 수정한를 호출한 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetInsertCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 삽입 하는 데 필요 합니다."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 필요에 따라 열을 사용 하 여 매개 변수 이름에 대 한 데이터 소스에서 삽입 하는 데 필요 합니다."
  remarks: "응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>의 텍스트를 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 예를 들어 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>및 명령 텍스트를 수정 하 고 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 를</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> 호출할 수 있습니다.       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> SQL 문은 첫 번째 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 응용 프로그램을 호출할 때 생성       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 다음 조건에 해당 하는 경우에 열 이름을 기반으로 매개 변수를 생성할 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 삽입 하는 데 필요 합니다."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정된 된 매개 변수의 이름을 반환 하는 형식의 @p * # *합니다. 사용자 지정 명령 작성기를 만들 때 사용 합니다."
  syntax:
    content: protected abstract string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "매개 변수 이름의 일부로 포함 될 수..."
    return:
      type: System.String
      description: "지정 된 번호를 매개 변수 이름의 일부로 추가 매개 변수의 이름입니다."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "부분 매개 변수 이름이 지정 된 전체 매개 변수 이름을 반환 합니다."
  syntax:
    content: protected abstract string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "부분 이름 매개 변수입니다."
    return:
      type: System.String
      description: "요청한 부분 매개 변수 이름에 해당 하는 전체 매개 변수 이름입니다."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "연결 된 SQL 문의 매개 변수에 대 한 자리 표시자를 반환합니다."
  remarks: "이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다."
  syntax:
    content: protected abstract string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "매개 변수 이름의 일부로 포함 될 수입니다."
    return:
      type: System.String
      description: "지정 된 수 만큼 추가 매개 변수의 이름입니다."
  overload: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "에 대 한 스키마 테이블을 반환 된 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>합니다."
  remarks: "이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다."
  syntax:
    content: protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);
    parameters:
    - id: sourceCommand
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 를 해당 스키마 테이블을 검색 합니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 특정에 대 한 스키마를 나타내는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 데이터 원본에서 업데이트를 수행 하는 데 필요한 개체입니다."
  remarks: "반환 하기 때문에 응용 프로그램 문제 해결을 위해 GetUpdateCommand 방법을 사용할 수는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand>       또한 수정 된 명령 기반으로 GetUpdateCommand를 사용할 수 있습니다. 예를 들어 수 GetUpdateCommand 및 명령 텍스트를 수정한를 호출한 다음에 명시적으로 설정 하는 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetUpdateCommand 됩니다 여전히 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다. SQL 문은 첫 번째 응용 프로그램 호출 때 생성 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 업데이트를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 필요에 따라 열을 사용 하 여 매개 변수 이름에 대 한 데이터 원본에서 업데이트를 수행 하는 데 필요한 개체입니다."
  remarks: "응용 프로그램이 사용할 수는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Common.DbCommand>실행할 개체입니다.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 예를 들어 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>및 명령 텍스트를 수정 하 고 <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 를</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> 호출할 수 있습니다.       먼저 SQL 문의 생성 한 후 응용 프로그램이 명시적으로 호출 해야 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>정보 올바르지 않을 수 있는 이전 문의를 계속 사용 됩니다.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> SQL 문은 첫 번째 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 응용 프로그램을 호출할 때 생성       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 다음 조건에 해당 하는 경우에 열 이름을 기반으로 매개 변수를 생성할 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름이 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Common.DbCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 업데이트를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Resets the <>*>, <>*>, <xref:System.Data.Common.DbCommand.CommandType*>, and <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> properties on the <xref href=&quot;System.Data.Common.DbCommand&quot;></xref>.</xref:System.Data.Common.DbCommand.CommandType*>"
  remarks: "이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다."
  syntax:
    content: protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 명령 작성기에 사용할 해당 하는 삽입, 업데이트 또는 명령을 삭제 합니다."
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 각 insert, update 또는 delete 작업에 사용할 인스턴스. Null 값을 전달 하면 InitializeCommand 메서드를 만들기는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 와 관련 된 Select 명령에 따라 개체는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "제공 되는 올바른 카탈로그에서는 따옴표가 없는 식별자 올바른 반환 형식의 올바로 식별자에 포함 된 따옴표를 이스케이프를 포함 하 여 해당 식별자를 따옴표로 묶을 합니다."
  syntax:
    content: public virtual string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "원래 따옴표가 없는 식별자입니다."
    return:
      type: System.String
      description: "따옴표 붙은 식별자의 버전입니다. 식별자에 포함 된 따옴표가 이스케이프 제대로 됩니다."
  overload: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "시작 문자 또는 이름 공백 또는 예약 된 토큰과 같은 문자가 포함 된 데이터베이스 개체 (예: 테이블 또는 열)를 지정할 때 사용할 문자를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다. 이 기능을 사용 하 여는 QuotePrefix 및 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>왼쪽된 대괄호 문자와 오른쪽 대괄호를 개체 이름 캡슐화와 같은 구분 기호를 지정 하는 속성입니다.</xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>      > [!NOTE] >는 QuotePrefix 변경할 수 없지만 또는 <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>속성 삽입, 업데이트 또는 삭제 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 메서드</xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>"
  syntax:
    content: public virtual string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "시작 문자 또는 문자를 사용 합니다. 기본값은 빈 문자열입니다."
  overload: System.Data.Common.DbCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "삽입, 업데이트 또는 삭제 명령이 생성 한 후에이 속성을 변경할 수 없습니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "끝 문자 또는 이름 공백 또는 예약 된 토큰과 같은 문자가 포함 된 데이터베이스 개체 (예: 테이블 또는 열)를 지정할 때 사용할 문자를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "일부 데이터 원본에는 공백, 쉼표 및 세미콜론 등의 문자를 포함할 수 있는 개체 있을 수 있습니다. 이 기능을 사용 하 여는 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>및 QuoteSuffix 속성 왼쪽된 대괄호 문자와 오른쪽 대괄호를 캡슐화 개체 이름 같은 구분 기호를 지정 합니다.</xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>      > [!NOTE] >는 변경할 수 없지만 <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>QuoteSuffix 속성 삽입, 업데이트 또는 삭제 하거나 명령을 생성 한 후, 호출한 후 해당 설정을 변경할 수는 `Update` <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> 메서드</xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>"
  syntax:
    content: public virtual string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "끝 문자 (들) 사용 하도록 합니다. 기본값은 빈 문자열입니다."
  overload: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  id: RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이 연결 된 명령을 지웁니다 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>합니다."
  remarks: "모든 제거 메서드를 호출 하면 RefreshSchema 효과적으로 <xref:System.Data.Common.DbCommand>개체에서 참조 하는 <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, 및 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>속성.</xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand>"
  syntax:
    content: public virtual void RefreshSchema ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  id: RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이벤트 처리기에 대 한 추가 <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);
    parameters:
    - id: rowUpdatingEvent
      type: System.Data.Common.RowUpdatingEventArgs
      description: "A <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> 이벤트에 대 한 정보를 포함 하는 인스턴스."
  overload: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "스키마 식별자는 다른 식별자와 구분 기호에 사용할 문자를 가져오거나 설정 합니다."
  remarks: "일반적으로 데이터베이스 서버는 일부 문자로 식별자에서 스키마 이름을 구분 식별자에 대 한 스키마를 나타냅니다. 예를 들어 SQL Server 사용 콜론을 같은 완료 식별자를 만들어 **사람: CustomerName**, 여기서 스키마 이름인 &quot;Person&quot; 및 &quot;CustomerName&quot;는 식별자입니다. 이 속성을 설정 개발자가이 동작을 수정할 수 있습니다."
  syntax:
    content: public virtual string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "스키마 구분 기호로 사용할 문자입니다."
  overload: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  id: SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Update 문의 모든 열 값 변경된 된 유일한 또는 포함 되는지 여부를 지정 합니다."
  remarks: "에 의해 생성 된 UPDATE 문에 <xref:System.Data.Common.DbCommandBuilder>모든 열에 대 한 업데이트 정보를 포함할 수 또는 값이 변경 된 열에 대 한 정보를 포함할 수 있습니다.</xref:System.Data.Common.DbCommandBuilder> SetAllValues 속성을 설정 `true` 여부의 값이 변경 되었는지 여부를 때문에 생성 된 UPDATE 문이 열이 모두 포함 합니다."
  syntax:
    content: public bool SetAllValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>UPDATE 문에 의해 생성 된 경우는 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> ;는 모든 열 포함 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 포함 된 것만 열을 변경 합니다."
  overload: System.Data.Common.DbCommandBuilder.SetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "등록 된 <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> 처리 하는 <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> 에 대 한 이벤트는 <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>합니다."
  remarks: "이 메서드는 사용자 지정 명령 작성기를 만드는 공급자 작성자가 사용이 됩니다. 새 <xref:System.Data.Common.DbDataAdapter>에 추가 되 고 <xref:System.Data.Common.DbCommandBuilder>, DbDataAdapter의에 대 한 등록 **RowUpdating** 이벤트.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter> 이 메서드는 동일한로 다시 호출 되 면 <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder>해당 DbDataAdapter에 대 한 등록 되어 있지 않은 **RowUpdating** 이벤트.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "<xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> 업데이트에 사용할 합니다."
  overload: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "따옴표 붙은 식별자가 제공 따옴표가 없는 올바른 형식의 올바르게 이스케이프 해제를 포함 하 여 해당 식별자를 식별자에 포함 된 따옴표 반환 합니다."
  syntax:
    content: public virtual string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "포함 된 따옴표 제거 하는 식별자입니다."
    return:
      type: System.String
      description: "포함 된 따옴표가 이스케이프 해제 된 따옴표가 없는 식별자입니다."
  overload: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbCommandBuilder.#ctor
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
- uid: System.Data.ConflictOption
  parent: System.Data
  isExternal: false
  name: ConflictOption
  nameWithType: ConflictOption
  fullName: System.Data.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.#ctor*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder.DbCommandBuilder
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: DbCommandBuilder.ApplyParameterInfo
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
- uid: System.Data.Common.DbCommandBuilder.ConflictOption*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose
  nameWithType: DbCommandBuilder.Dispose
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: DbCommandBuilder.GetDeleteCommand
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: DbCommandBuilder.GetInsertCommand
- uid: System.Data.Common.DbCommandBuilder.GetParameterName*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: DbCommandBuilder.GetParameterName
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: DbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbCommandBuilder.GetSchemaTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: DbCommandBuilder.GetUpdateCommand
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: DbCommandBuilder.InitializeCommand
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: DbCommandBuilder.QuoteIdentifier
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema
  nameWithType: DbCommandBuilder.RefreshSchema
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler
  nameWithType: DbCommandBuilder.RowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: DbCommandBuilder.UnquoteIdentifier
