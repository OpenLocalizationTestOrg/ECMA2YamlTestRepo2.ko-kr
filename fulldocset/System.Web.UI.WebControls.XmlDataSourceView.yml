### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSourceView
  id: XmlDataSourceView
  children:
  - System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  - System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  langs:
  - csharp
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView
  fullName: System.Web.UI.WebControls.XmlDataSourceView
  type: Class
  summary: "에 대 한 XML 데이터에 테이블 형식 데이터 원본 뷰를 나타냅니다는 <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.XmlDataSource>컨트롤.를 바인딩하는 웹 서버 컨트롤에 테이블 및 계층 구조 형식으로 원본 데이터를 제공할 수 있습니다</xref:System.Web.UI.WebControls.XmlDataSource> 와 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>또는 <xref:System.Web.UI.WebControls.DropDownList>사용는 <xref:System.Web.UI.WebControls.XmlDataSource>컨트롤에서 파생 되는 동안 XML 데이터에 바인딩하고 목록 또는 테이블 형식에 있는 수는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>클래스 같은 <xref:System.Web.UI.WebControls.TreeView>, XML 데이터에 바인딩하고 계층적 폼에 표시 합니다.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.DropDownList> </xref:System.Web.UI.WebControls.GridView>       <xref:System.Web.UI.WebControls.XmlDataSource>서로 다른 코드 경로 통해 내부적으로 각 보기 유형을 만듭니다.</xref:System.Web.UI.WebControls.XmlDataSource> 경우 <xref:System.Web.UI.IDataSource.GetView%2A>에 <xref:System.Web.UI.WebControls.XmlDataSource>한 XmlDataSourceView에 <xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource> 만들어집니다</xref:System.Web.UI.WebControls.XmlDataSource> 메서드가 호출 됨</xref:System.Web.UI.IDataSource.GetView%2A> 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>메서드가 호출 되는 <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>만들어집니다.</xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> XmlDataSourceView 클래스에서 파생 되는 웹 서버 컨트롤에 대해 제공 됩니다 <xref:System.Web.UI.WebControls.DataBoundControl>및 목록 및 테이블 형식 데이터에 바인딩 동안는 <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>에서 파생 되는 웹 서버 컨트롤에 대 한 제공 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>계층적 데이터를 바인딩합니다.</xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> </xref:System.Web.UI.WebControls.DataBoundControl> 내부적으로, 모든 데이터 바인딩된 컨트롤 메서드 호출에서 `Select` 메서드를 모든 데이터 원본 뷰 개체 반환 됩니다.       모든 <xref:System.Web.UI.DataSourceView>도우미 개체는 XmlDataSourceView 원본 데이터와 데이터 소스 수행할 수 있는 작업을 정의 합니다.</xref:System.Web.UI.DataSourceView> XmlDataSourceView 클래스 재정의 하기 때문에 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>메서드, 연결 된 <xref:System.Web.UI.WebControls.XmlDataSource>컨트롤 업데이트를 지원 하지 않습니다, 삽입 또는 삭제 작업.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> XmlDataSourceView 클래스는 봉인 클래스,이 기능을 추가 하려면 XmlDataSourceView 클래스를 확장할 수 없지만 데이터 소스 제어에서 파생 될 수 있으므로 <xref:System.Web.UI.WebControls.XmlDataSource>와 보기에서 <xref:System.Web.UI.DataSourceView>추가 기능이 필요한 경우.</xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: 'public sealed class XmlDataSourceView : System.Web.UI.DataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  id: '#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)'
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새를 초기화의 명명 된 인스턴스는 <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> 클래스 하 고 지정 된 연결 <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> 함께 합니다."
  syntax:
    content: public XmlDataSourceView (System.Web.UI.WebControls.XmlDataSource owner, string name);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.XmlDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> 하는 <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> 연관 됩니다."
    - id: name
      type: System.String
      description: "보기의 이름입니다."
  overload: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "추가할 수 있습니다."
    return:
      type: System.Collections.IEnumerable
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "원본 XML에서 데이터 행의 목록을 검색합니다."
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 기본 데이터 검색 범위를 벗어난 데이터에 대 한 작업을 요청 하는 데 사용 되는 개체입니다."
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>데이터 항목의 컬렉션입니다.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.XmlDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView(XmlDataSource,String)
  nameWithType: XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.XmlDataSourceView(XmlDataSource,String)
- uid: System.Web.UI.WebControls.XmlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: XmlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.XmlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.XmlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: XmlDataSourceView
  nameWithType: XmlDataSourceView.XmlDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: XmlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.XmlDataSourceView.Select*
  parent: System.Web.UI.WebControls.XmlDataSourceView
  isExternal: false
  name: Select
  nameWithType: XmlDataSourceView.Select
