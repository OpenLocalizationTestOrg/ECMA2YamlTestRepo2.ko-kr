### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RC2CryptoServiceProvider
  id: RC2CryptoServiceProvider
  children:
  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  langs:
  - csharp
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider
  type: Class
  summary: "암호화 서비스 공급자 (CSP) 구현에 액세스 하는 래퍼 개체를 정의 고 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 알고리즘입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "RC2CryptoServiceProvider 구현은 8 비트 단위로 증가 40 비트 128 비트 키 길이 지원합니다.       RC2CryptoServiceProvider 개체를 암호화 하 고 8 바이트 블록에 데이터를 해독 하는 블록 암호입니다.  이 클래스는 8 바이트 보다 작은 경우 데이터의 마지막 블록을 채웁니다.  따라서 암호화 된 데이터의 길이 원래의 일반 텍스트로 보다 클 수 없습니다.       참고 RC2CryptoServiceProvider 개체 솔트를 사용 하지 않습니다.      > [!NOTE] > 표준 AES (고급 암호화), 최신 대칭 암호화 알고리즘은 사용할 수 있습니다. 를 사용 하는 <xref:System.Security.Cryptography.Aes>알고리즘 및 RC2CryptoServiceProvider 클래스 대신 파생된 클래스</xref:System.Security.Cryptography.Aes> 하는 것이 좋습니다. RC2CryptoServiceProvider 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 사용 합니다."
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_11_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_11_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.RC2
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.RC2.Create
  - System.Security.Cryptography.RC2.Create(System.String)
  - System.Security.Cryptography.RC2.EffectiveKeySizeValue
  - System.Security.Cryptography.RC2.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RC2CryptoServiceProvider&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_73_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_73_1.vb)]"
  syntax:
    content: public RC2CryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 서비스 공급자 (CSP)를 가져올 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호환 되지 않는 FIPS 알고리즘을 찾았습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 만듭니다 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 지정된 된 키와 암호 해독기 개체 (<>*>) 및 초기화 벡터 (<>*>)."
  remarks: "이 메서드를 사용 하 여를 사용 하 여 만든 암호화 된 메시지를 해독는 <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>동일한 매개 변수 오버 로드.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/6db44da5-ba5f-4459-90f5-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/6db44da5-ba5f-4459-90f5-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 암호 해독기 개체입니다."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 암호화 모드를 사용 했습니다.       -또는-A <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 8 비트가 아닌 피드백 크기와 암호화 모드를 사용 했습니다.       -또는-키 크기가 잘못 사용 했습니다.       -또는-알고리즘 키 크기를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 만듭니다 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 지정된 된 키와 암호기 개체 (<>*>) 및 초기화 벡터 (<>*>)."
  remarks: "사용 하 여 <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>이 메서드의 결과 암호를 해독 하려면 같은 매개 변수 오버 로드.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/78d990fe-60aa-40f6-ad5c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/78d990fe-60aa-40f6-ad5c-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 암호기 개체입니다."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 암호화 모드를 사용 했습니다.       -또는-A <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 8 비트가 아닌 피드백 크기와 암호화 모드를 사용 했습니다.       -또는-키 크기가 잘못 사용 했습니다.       -또는-알고리즘 키 크기를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  id: EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "사용 하는 비밀 키의 비트에서 유효 크기를 가져오거나는 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public override int EffectiveKeySize { get; set; }
    return:
      type: System.Int32
      description: "사용 하는 비트 유효 키 크기는 <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> 알고리즘입니다."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "EffectiveKeySize 속성이 아닌 다른 값으로 설정 된는 <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&quot;> </xref> 속성입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "임의 초기화 벡터를 생성 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) 알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "이 메서드를 사용 하 여 임의 생성 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>없음 지정 된 경우.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_28_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_28_1.vb)]"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "에서는 오류가 발생 하는 임의 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) 알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "이 메서드를 사용 하 여 지정 되지 않으면는 임의 키를 생성 합니다.       <xref:System.Security.Cryptography.RC2CryptoServiceProvider>구현 8 비트 단위로 증가 키 길이가 40 비트 128 비트를 지원 합니다.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_5_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_5_1.vb)]"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  id: UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "키를 11 바이트 길이의 0 값 솔트를 만들지 여부를 결정 하는 값을 가져오거나 설정 합니다."
  remarks: "UseSalt 속성을 사용 하면 11 바이트 길이의 0 값 솔트를 사용 하는 기존 응용 프로그램과 상호 작용할 수 있습니다.  대부분의 시나리오에 대 한 사용 하지 않아야 솔트를는 <xref:System.Security.Cryptography.RC2CryptoServiceProvider>키.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example sets the UseSalt property to `true`, and then encrypts and decrypts a value.  \n  \n [!code-cs[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/csharp/p-system.security.crypto_12_1.cs)]\n [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/visualbasic/p-system.security.crypto_12_1.vb)]\n [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/cpp/p-system.security.crypto_12_1.cpp)]"
  syntax:
    content: public bool UseSalt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>값 0, 11 바이트 길이의 솔트;를 사용 하 여 키를 만들어야 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RC2
  isExternal: false
  name: System.Security.Cryptography.RC2
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: RC2CryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: RC2CryptoServiceProvider.GenerateKey
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
