### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CharConverter
  id: CharConverter
  children:
  - System.ComponentModel.CharConverter.#ctor
  - System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: CharConverter
  nameWithType: CharConverter
  fullName: System.ComponentModel.CharConverter
  type: Class
  summary: "유니코드 문자 개체와 여러 가지 다른 표현을 상호에서 변환 하는 형식 변환기를 제공 합니다."
  remarks: "이 변환기 1, 길이의 문자열로 문자에서 변환만 수행할 수 있습니다.       형식 변환기에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.TypeConverter>기본 클래스 및 [하는 방법: 형식 변환기 구현](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] >는 CharConverter의 인스턴스를 만들지 마십시오. <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor>클래스</xref:System.ComponentModel.TypeDescriptor> 의 메서드</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 를 호출 하는 대신, 자세한 내용은 <xref:System.ComponentModel.TypeConverter>기본 클래스</xref:System.ComponentModel.TypeConverter> 에서 예제를 참조 하세요."
  example:
  - "The following code example converts a variable of type <xref:System.Char> to a string variable, and vice versa.  \n  \n [!code-cs[Converters#5](~/add/codesnippet/csharp/t-system.componentmodel._75_1.cs)]\n [!code-vb[Converters#5](~/add/codesnippet/visualbasic/t-system.componentmodel._75_1.vb)]\n [!code-cpp[Converters#5](~/add/codesnippet/cpp/t-system.componentmodel._75_1.cpp)]"
  syntax:
    content: 'public class CharConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: CharConverter()
  nameWithType: CharConverter.CharConverter()
  fullName: System.ComponentModel.CharConverter.CharConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.CharConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: public CharConverter ();
    parameters: []
  overload: System.ComponentModel.CharConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기가 지정 된 소스 형식의 개체를 지정된 된 컨텍스트를 사용 하 여 유니코드 문자 개체도 변환할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 변환기 1, 길이의 문자열로 문자에서 변환만 수행할 수 있습니다.       `context` 매개 변수를 사용 하 여이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출할 수 수 있습니다. 이 수 `null`, 있으므로 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>에서 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.CharConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 개체를 유니코드 문자 개체로 변환합니다."
  remarks: "이 변환기 1, 길이의 문자열로 문자에서 변환만 수행할 수 있습니다.       `context` 매개 변수를 사용 하 여이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출할 수 수 있습니다. 이 수 `null`, 있으므로 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "문화권 `value` 변환 됩니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 나타내는 <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.CharConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code>대상 형식에 대 한 유효한 값이 아닙니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "인수를 사용 하 여 유니코드 문자 개체에 지정된 된 값 개체를 변환 합니다."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "문화권 `value` 변환 됩니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>를 값으로 변환 해야 합니다.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.CharConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.CharConverter.#ctor
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CharConverter()
  nameWithType: CharConverter.CharConverter()
  fullName: System.ComponentModel.CharConverter.CharConverter()
- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.CharConverter.#ctor*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CharConverter
  nameWithType: CharConverter.CharConverter
- uid: System.ComponentModel.CharConverter.CanConvertFrom*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: CharConverter.CanConvertFrom
- uid: System.ComponentModel.CharConverter.ConvertFrom*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: CharConverter.ConvertFrom
- uid: System.ComponentModel.CharConverter.ConvertTo*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertTo
  nameWithType: CharConverter.ConvertTo
