### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs
  id: ListViewInsertedEventArgs
  children:
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode
  - System.Web.UI.WebControls.ListViewInsertedEventArgs.Values
  langs:
  - csharp
  name: ListViewInsertedEventArgs
  nameWithType: ListViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.ListView.ItemInserted&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.ListView>발생는 <xref:System.Web.UI.WebControls.ListView.ItemInserted>이벤트에 있는 삽입 단추는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>서식 파일을 클릭 하면 이후 및는 <xref:System.Web.UI.WebControls.ListView>데이터 소스에서 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.ListView.ItemInserted> </xref:System.Web.UI.WebControls.ListView> (삽입 단추는 단추 인 `CommandName` 속성을 &quot;삽입&quot;로 설정 합니다.) <xref:System.Web.UI.WebControls.ListView.ItemInserted>이벤트를 사용 하면 삽입된 된 항목에 대 한 데이터베이스에서 자동 생성 된 값을 검색 하는 등의 사용자 지정 작업을 수행할 수 있습니다.</xref:System.Web.UI.WebControls.ListView.ItemInserted>       ListViewInsertedEventArgs 개체는 삽입 된 항목 수를 확인할 수 있습니다 하는 이벤트 처리 메서드 및 발생할 수 있는 모든 예외에 전달 됩니다. 삽입 작업의 영향을 받는 항목의 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 사용 하 여 데이터 원본에 전송 된 삽입된 된 항목의 필드 값에 액세스 해야 할 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>속성.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>       기본적으로는 <xref:System.Web.UI.WebControls.ListView>지웁니다 제어는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>템플릿의 삽입 작업을 사용자가 새 항목을 삽입할 수에 대 한 값을 추가할 수 있습니다.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.ListView> 삽입 작업 중에 예외가 발생 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView>컨트롤을 삽입 모드로 설정 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.ListView> 이 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>값에 항목을 삽입할 이전 시도에서 템플릿.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>       목록이 ListViewInsertedEventArgs 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A>"
  example:
  - "The following example shows how to use the ListViewInsertedEventArgs object that is passed to the handler for the <xref:System.Web.UI.WebControls.ListView.ItemInserted> event.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_131_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemInserted#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_131_1.aspx)]"
  syntax:
    content: 'public class ListViewInsertedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: ListViewInsertedEventArgs(Int32,Exception)
  nameWithType: ListViewInsertedEventArgs.ListViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.ListViewInsertedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ListViewInsertedEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>클래스</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.      > [!NOTE] >이 생성자는 주로 컨트롤 개발자가 사용 이벤트를 발생 시킬 때.       다음 표에서 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>클래스</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>| 값은 `affectedRows` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>| 에 포함 된 <xref:System.Exception?displayProperty=fullName>개체는 `e` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>| 로 초기화 `false`. |   | <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>| 로 초기화 `false`. |</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>"
  syntax:
    content: public ListViewInsertedEventArgs (int affectedRows, Exception exception);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "삽입 작업에 영향을 받는 행의 수입니다."
    - id: exception
      type: System.Exception
      description: "있는 경우 삽입 작업을 수행할 때 발생 되는 예외입니다. 예외가 발생 하지를 사용 하 여 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 매개 변수에 대 한 합니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: ListViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업에 영향을 받은 행 수를 가져옵니다."
  remarks: "데이터 소스 제어에서 반환 된 삽입 작업에 의해 영향을 받는 레코드 수를 확인 하려면 받는 속성을 사용 합니다. 이 속성은 다음과 같은 시나리오에서 일반적으로 사용:-: 하나의 레코드만 삽입 되었는지 확인 합니다. 때로는 잘못 작성된 된 insert 문에 여러 레코드 삽입 수 있습니다.      대상 레코드 삽입 작업 중에 오류가 발생 했지만 예외가 발생 하지 때문에 삽입 되지 않았음을 확인 합니다.      -충돌 감지 (낙관적 동시성) 지 원하는 데이터 소스 컨트롤에는 레코드가 삽입 되었는지 확인 하려면 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>속성이로 설정 된 `ConflictOptions.CompareAllValues` 열거형 값입니다.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 이 속성을 지 원하는 컨트롤에 포함 된 <xref:System.Web.UI.WebControls.SqlDataSource>및 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 속성에이 값이 다른 사용자가 삽입 한 레코드와 같은 키 값을 설정한 경우 레코드를 삽입 하지 않을 수 있습니다."
  example:
  - "The following example shows how to use the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> object that is passed to a handler for the <xref:System.Web.UI.WebControls.ListView.ItemInserted> event to determine whether an exception was raised during the insert operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_155_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_155_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "삽입 작업에 영향을 받는 행의 수입니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ListViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "(있는 경우) 예외를 가져옵니다 삽입 작업 동안 예외가 발생 합니다."
  remarks: "예외가 발생 하 고 이벤트 처리기를 설정에 예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>속성을 `true`.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 그렇지 않은 경우는 <xref:System.Web.UI.WebControls.ListView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.ListView>"
  example:
  - "The following example shows how to use the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> object that is passed to a handler for the <xref:System.Web.UI.WebControls.ListView.ItemInserted> event to determine whether an exception was raised during the insert operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1303_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1303_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "삽입 작업 중에 발생 하는 예외 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 예외가 발생 합니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: ListViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "가져오거나 있는 삽입 작업 중에 발생 하는 예외 처리 되었는지 여부를 이벤트 처리기를 나타냅니다."
  remarks: "삽입 작업 중에 예외가 발생 한 경우, ExceptionHandled 속성 처리 되었는지 나타내는 예외 이벤트에 처리기를 사용 합니다. 이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 다시 throw 되지 않습니다. 이 속성은로 설정 하는 경우 `false`, <xref:System.Web.UI.WebControls.ListView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.ListView> 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>속성.</xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>"
  example:
  - "The following example shows how to use the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> object that is passed to the handler for the <xref:System.Web.UI.WebControls.ListView.ItemInserted> event to determine whether an exception was raised during the insert operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_621_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_621_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외 이벤트에 처리기; 처리 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode
  id: KeepInInsertMode
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: KeepInInsertMode
  nameWithType: ListViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "사용자는 내부 컨트롤에 대 한 값의 유지 입력 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate*>템플릿.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate*>"
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.ListView>컨트롤에서 컨트롤의 값이 다시 설정 된 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>삽입 작업 후 해당 기본값으로 템플릿.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.ListView> 그러면 사용자가 새 항목을 삽입할 수에 대 한 값을 추가할 수 있습니다. 삽입 작업 중에 예외가 발생 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView>컨트롤을 삽입 모드로 KeepInInsertMode 속성을 설정 하 여 `true`.</xref:System.Web.UI.WebControls.ListView> 내부 컨트롤에 대 한 항목을 삽입 하는 이전 시도에서 값이 유지 된 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>템플릿.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>"
  example:
  - "The following example shows how to use the KeepInInsertMode property to preserve the values entered by the user when an error occurs during the insert operation. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_794_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ListView.ItemInserted#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_794_1.aspx)]"
  syntax:
    content: public bool KeepInInsertMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.Web.UI.WebControls.ListView.InsertItemTemplate*>템플릿; 내부 컨트롤에 대 한 사용자의 입력된 값이 유지 되는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 값이 컨트롤에 대 한 기본 값으로 바뀌는 사용자의 입력.</xref:System.Web.UI.WebControls.ListView.InsertItemTemplate*> 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: ListViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삽입된 된 레코드에 대 한 필드 이름/값 쌍을 가져옵니다."
  remarks: "삽입된 된 레코드에 대 한 필드의 값에 액세스 하려면 값 속성을 사용 합니다. 예를 들어 삽입 된 레코드의 로그를 유지 하려면이 값을 사용할 수 있습니다.       값 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry>삽입된 된 레코드의 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=fullName> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=fullName>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=fullName>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>직접 값 필드에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 인덱서를 사용 하 여 장점은 필드 값이 직접 반환 된다는 것입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "삽입된 된 레코드에 대 한 필드 이름/값 쌍입니다."
  overload: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: ListViewInsertedEventArgs(Int32,Exception)
  nameWithType: ListViewInsertedEventArgs.ListViewInsertedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.ListViewInsertedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewInsertedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewInsertedEventArgs.Exception
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewInsertedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: ListViewInsertedEventArgs.KeepInInsertMode
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: ListViewInsertedEventArgs.Values
  fullName: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: ListViewInsertedEventArgs
  nameWithType: ListViewInsertedEventArgs.ListViewInsertedEventArgs
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ListViewInsertedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: Exception
  nameWithType: ListViewInsertedEventArgs.Exception
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ListViewInsertedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: KeepInInsertMode
  nameWithType: ListViewInsertedEventArgs.KeepInInsertMode
- uid: System.Web.UI.WebControls.ListViewInsertedEventArgs.Values*
  parent: System.Web.UI.WebControls.ListViewInsertedEventArgs
  isExternal: false
  name: Values
  nameWithType: ListViewInsertedEventArgs.Values
