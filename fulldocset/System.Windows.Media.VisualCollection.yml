### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "정렬된 된 컬렉션을 나타냅니다. <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 개체입니다."
  remarks: "VisualCollection 컨텍스트 선호도 암시적으로 있습니다. 프로시저를 소유 하 고 있는 컨텍스트와 다른 컨텍스트 VisualCollection 액세스 하려고 하는 경우 <xref:System.Windows.Media.ContainerVisual>, 예외가 throw 됩니다.</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "시각적 부모 개체 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 반환 됩니다."
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "추가 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 의 끝에는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "추가 <xref:System.Windows.Media.Visual>값인 `null` 은 허용 하며 예외가 발생 하지 않습니다.</xref:System.Windows.Media.Visual>       Add 메서드는 또한 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`.</xref:System.Windows.Media.VisualCollection>       사용자 지정 클래스의 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A>및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>메서드.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 사용자 지정 저장소 구현을 정의 해야 하 고 <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 사용 하지 않는 이러한 메서드를 사용 하는 경우"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에 추가 하는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "컬렉션에서 인덱스 <code> visual </code> 추가 되었습니다."
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.ArgumentException>경우 throw 되는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 는 루트 요소입니다.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "요소의 수를 가져오거나는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 포함 될 수 있습니다."
  remarks: "용량의 값은 요소의 수는는 <xref:System.Windows.Media.VisualCollection>저장할 수 있습니다.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>실제로 <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 되는 시각 효과의 수</xref:System.Windows.Media.VisualCollection.Count%2A> 용량은 항상 <xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> 보다 크거나 같은 경우 경우 <xref:System.Windows.Media.VisualCollection.Count%2A>요소의 용량을 추가 하는 동안 용량을 초과 <xref:System.Windows.Media.VisualCollection>증가.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> 기본적으로 용량은&0;입니다."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "요소의 수는는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 포함 될 수 있습니다."
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "용량이 <xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*> 보다 작은 값으로 설정 되어"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "모든 요소를 제거는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Media.VisualCollection.Count%2A>0으로 다시 설정 됩니다.</xref:System.Windows.Media.VisualCollection.Count%2A> 값은 <xref:System.Windows.Media.VisualCollection.Capacity%2A>변경 되지 않습니다.</xref:System.Windows.Media.VisualCollection.Capacity%2A> 용량을 다시 설정 하는 <xref:System.Windows.Media.VisualCollection>로 설정 된 <xref:System.Windows.Media.VisualCollection.Capacity%2A>속성을 원하는 크기로.</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "반환 된 <xref:System.Boolean>나타내는 값 있는지 여부를 지정 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 컬렉션에 포함.</xref:System.Boolean>"
  remarks: "이 함수의 런타임 최악의 시나리오는 `O(n)`여기서 `n` 은 <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 항목의 수"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 컬렉션에서 검색할 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> visual </code> 컬렉션에 포함 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "특정 배열 인덱스에서 시작 하 여 배열에 컬렉션의 항목을 복사 합니다."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>대상인 요소에서 복사 된는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "현재 컬렉션에 전달 된 복사 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 배열입니다."
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "배열을 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 개체 (0부터 시작 하는 인덱스가 있어야) 합니다."
    - id: index
      type: System.Int32
      description: "내에서 복사를 시작할 인덱스 `array`합니다."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "컬렉션의 요소 수를 가져옵니다."
  remarks: "Count가 실제로 있는 <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 에 있는 요소 수 <xref:System.Windows.Media.VisualCollection.Capacity%2A>요소의 수가 하는 <xref:System.Windows.Media.VisualCollection>저장할 수 있습니다.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       개수는 항상 <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> 보다 작거나 개수를 초과 하는 경우 <xref:System.Windows.Media.VisualCollection.Capacity%2A>요소를 추가 하는 동안 목록의 용량이 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 자동으로 다시 할당 하 여 두 배가 됩니다.</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "요소의 수는는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 포함 합니다."
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "반복할 수 있는 열거자를 검색 된 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "컬렉션을 반복 하는 데 사용할 수 있는 열거자입니다."
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "0부터 시작 하는 인덱스를 반환 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Windows.Media.Visual>에 속하지 않는 <xref:System.Windows.Media.VisualCollection>,-1이 반환 됩니다.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> 경우 `null` 을 가진 첫 번째 항목의 인덱스 메서드에 전달 되며 `null` 반환 됩니다. Null 항목이 없으면-1이 반환 됩니다."
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에서 찾으려고는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "요소를 삽입는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "경우 <xref:System.Windows.Media.VisualCollection.Count%2A>이미 <xref:System.Windows.Media.VisualCollection.Capacity%2A>의 용량이 <xref:System.Windows.Media.VisualCollection>전에 새 증가 <xref:System.Windows.Media.Visual>삽입 됩니다.</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> 경우 `index` 같으면 <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 의 끝에 추가</xref:System.Windows.Media.VisualCollection.Count%2A> 모든 기존 시각적 개체 보다 크거나 같은 `index` 새에 맞게을 향해 이동 <xref:System.Windows.Media.Visual>, 인덱스 값이 업데이트 됩니다.</xref:System.Windows.Media.Visual>       Insert 메서드 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`.</xref:System.Windows.Media.VisualCollection>       시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A>및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>메서드.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 사용자 고유의 저장소 구현을 정의 하며 사용 되지 않습니다. <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 하 이러한 메서드를 사용 하는 경우"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "값을 삽입할&0;부터 시작 하는 인덱스입니다."
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에 삽입 하는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작거나 보다 큰 <xref:System.Windows.Media.VisualCollection.Count*>합니다."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 읽기 전용입니다."
  remarks: "이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection>개체입니다.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "나타내는 값 여부는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 읽기 전용입니다."
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "나타내는 값을 가져옵니다에 액세스할 수 있는지 여부는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection>개체입니다.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "나타내는 값 여부는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 의&0;부터 시작 하는 인덱스에 저장 된는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "이 속성은 특정 액세스 하는 기능을 제공 <xref:System.Windows.Media.Visual>에 <xref:System.Windows.Media.VisualCollection>인덱스를 사용 하 여.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> 를 가져오거나 설정 하는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <code>index</code> 보다 크거나 같으면 <xref:System.Windows.Media.VisualCollection.Count*>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "새 자식 요소에 이미 부모가, 또는 지정된 된 인덱스에 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "지정 된 제거 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에서 개체는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다. 경우 `visual` 은 `null`, 첫 번째 `null` 항목이 제거 됩니다. 제거는 `null` 항목은 컬렉션의 크기에 비례 합니다.       Remove 메서드는 또한 소유자 인 부모 표시 간의 부모-자식 관계가 제거의 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`.</xref:System.Windows.Media.VisualCollection>       시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A>및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>메서드.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 사용자 고유의 저장소 구현을 정의 하며 사용 되지 않습니다. <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 하 이러한 메서드를 사용 하는 경우"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에서 제거 하 고 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "에 지정된 된 인덱스에 시각적 개체를 제거는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다.       RemoveAt 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`.</xref:System.Windows.Media.VisualCollection>       시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A>및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>메서드.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 사용자 고유의 저장소 구현을 정의 하며 사용 되지 않습니다. <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 하 이러한 메서드를 사용 하는 경우"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거 하려면 시각적 개체의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <code>index</code> 보다 크거나 같으면 <xref:System.Windows.Media.VisualCollection.Count*>합니다."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "시각적 개체의 범위를 제거는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  remarks: "제거 된 개체는 시각적 개체는 비워진된 위치를 사용 하도록 이동 하 고 인덱스 값 업데이트 됩니다.       RemoveRange 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <xref:System.Windows.Media.VisualCollection>, 및 시각적 자식 범위.</xref:System.Windows.Media.VisualCollection>       시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A>및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>메서드.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> 사용자 고유의 저장소 구현을 정의 하며 사용 되지 않습니다. <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> 하 이러한 메서드를 사용 하는 경우"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 요소 범위의&0;부터 시작 하는 인덱스입니다."
    - id: count
      type: System.Int32
      description: "제거할 요소의 수입니다."
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작은 또는 <code>count</code> 가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>및 <code>count</code> 에 있는 요소의 유효한 범위를 참조 하지 않는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object> 형식의 값"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "이 멤버는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다. 이 멤버에 대 한 참조 <xref:System.Collections.IEnumerable.GetEnumerator*>.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "컬렉션을 반복 하는 데 사용할 수 있는 개체입니다."
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
