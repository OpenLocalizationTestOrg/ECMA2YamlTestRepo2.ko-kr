### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormView
  id: FormView
  children:
  - System.Web.UI.WebControls.FormView.#ctor
  - System.Web.UI.WebControls.FormView.AllowPaging
  - System.Web.UI.WebControls.FormView.BackImageUrl
  - System.Web.UI.WebControls.FormView.BottomPagerRow
  - System.Web.UI.WebControls.FormView.Caption
  - System.Web.UI.WebControls.FormView.CaptionAlign
  - System.Web.UI.WebControls.FormView.CellPadding
  - System.Web.UI.WebControls.FormView.CellSpacing
  - System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  - System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.FormView.CreateControlStyle
  - System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.FormView.CreateTable
  - System.Web.UI.WebControls.FormView.CurrentMode
  - System.Web.UI.WebControls.FormView.DataBind
  - System.Web.UI.WebControls.FormView.DataItem
  - System.Web.UI.WebControls.FormView.DataItemCount
  - System.Web.UI.WebControls.FormView.DataItemIndex
  - System.Web.UI.WebControls.FormView.DataKey
  - System.Web.UI.WebControls.FormView.DataKeyNames
  - System.Web.UI.WebControls.FormView.DefaultMode
  - System.Web.UI.WebControls.FormView.DeleteItem
  - System.Web.UI.WebControls.FormView.DeleteMethod
  - System.Web.UI.WebControls.FormView.EditItemTemplate
  - System.Web.UI.WebControls.FormView.EditRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataTemplate
  - System.Web.UI.WebControls.FormView.EmptyDataText
  - System.Web.UI.WebControls.FormView.EnableModelValidation
  - System.Web.UI.WebControls.FormView.EnsureDataBound
  - System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  - System.Web.UI.WebControls.FormView.FooterRow
  - System.Web.UI.WebControls.FormView.FooterStyle
  - System.Web.UI.WebControls.FormView.FooterTemplate
  - System.Web.UI.WebControls.FormView.FooterText
  - System.Web.UI.WebControls.FormView.GridLines
  - System.Web.UI.WebControls.FormView.HeaderRow
  - System.Web.UI.WebControls.FormView.HeaderStyle
  - System.Web.UI.WebControls.FormView.HeaderTemplate
  - System.Web.UI.WebControls.FormView.HeaderText
  - System.Web.UI.WebControls.FormView.HorizontalAlign
  - System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  - System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.InsertItemTemplate
  - System.Web.UI.WebControls.FormView.InsertMethod
  - System.Web.UI.WebControls.FormView.InsertRowStyle
  - System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.FormView.ItemCommand
  - System.Web.UI.WebControls.FormView.ItemCreated
  - System.Web.UI.WebControls.FormView.ItemDeleted
  - System.Web.UI.WebControls.FormView.ItemDeleting
  - System.Web.UI.WebControls.FormView.ItemInserted
  - System.Web.UI.WebControls.FormView.ItemInserting
  - System.Web.UI.WebControls.FormView.ItemTemplate
  - System.Web.UI.WebControls.FormView.ItemUpdated
  - System.Web.UI.WebControls.FormView.ItemUpdating
  - System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.FormView.ModeChanged
  - System.Web.UI.WebControls.FormView.ModeChanging
  - System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  - System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  - System.Web.UI.WebControls.FormView.PageCount
  - System.Web.UI.WebControls.FormView.PageIndex
  - System.Web.UI.WebControls.FormView.PageIndexChanged
  - System.Web.UI.WebControls.FormView.PageIndexChanging
  - System.Web.UI.WebControls.FormView.PagerSettings
  - System.Web.UI.WebControls.FormView.PagerStyle
  - System.Web.UI.WebControls.FormView.PagerTemplate
  - System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  - System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.FormView.RenderOuterTable
  - System.Web.UI.WebControls.FormView.Row
  - System.Web.UI.WebControls.FormView.RowStyle
  - System.Web.UI.WebControls.FormView.SaveControlState
  - System.Web.UI.WebControls.FormView.SaveViewState
  - System.Web.UI.WebControls.FormView.SelectedValue
  - System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.FormView.TagKey
  - System.Web.UI.WebControls.FormView.TopPagerRow
  - System.Web.UI.WebControls.FormView.TrackViewState
  - System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.UpdateMethod
  langs:
  - csharp
  name: FormView
  nameWithType: FormView
  fullName: System.Web.UI.WebControls.FormView
  type: Class
  summary: "사용자 정의 템플릿을 사용 하 여 데이터 원본에서 단일 레코드의 값을 표시 합니다. FormView 컨트롤 편집, 삭제 및 레코드를 삽입할 수 있습니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [템플릿](#templates)      -   [데이터 바인딩](#binding_to_data)      -   [데이터 작업](#data_operations)      -   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)      -   [이벤트](#events)      -   [내게 필요한 옵션](#accessibility)      -   [CSS 스타일 적용](#applying_styles)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # 소개 The FormView 컨트롤은 데이터 원본에서 하나의 레코드를 표시 하는 데 사용 합니다.       비슷합니다는 <xref:System.Web.UI.WebControls.DetailsView>행 필드 대신 사용자 정의 템플릿을 표시를 제어 합니다.</xref:System.Web.UI.WebControls.DetailsView> 사용자 지정 템플릿을 만들어 보다 유연 하 게 제어 데이터가 표시 되는 방법을 제공 합니다. FormView 컨트롤 다음 기능을 지원 합니다.-등 <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 데이터 소스 컨트롤에 바인딩      -기본 제공 삽입 기능입니다.      -업데이트 및 삭제 기능 기본 제공 합니다.      -기본 제공 페이징 기능입니다.      동적으로 속성을 설정 하려면 FormView 개체 모델에 대 한 프로그래밍 액세스 이벤트를 처리 등에입니다.      사용자 정의 템플릿을, 테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.      <a name=&quot;templates&quot;></a># # The FormView에 대 한 템플릿 컨트롤 콘텐츠를 표시 하는 컨트롤의 다른 부분에 대 한 템플릿을 만들어야 합니다. 대부분의 서식 파일은 선택 사항입니다. 그러나 컨트롤은 구성 모드에 대 한 템플릿을 만들어야 합니다. 예를 들어,를 지 원하는 레코드 삽입 FormView 컨트롤에 정의 된 삽입 항목 템플릿이 있어야 합니다. 다음 표에서 다양 한 템플릿을 만들 수 있는 나열 합니다.      | 템플릿 형식 | 설명 |   |-------------------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>| FormView 컨트롤이 편집 모드일에서 경우 데이터 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 이 서식 파일은 일반적으로 입력된 컨트롤을 포함 하 고 사용자는 기존를 편집할 수 있는 명령 단추 기록 합니다. |   | <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>| FormView 컨트롤이 모든 레코드를 포함 하지 않는 데이터 소스에 바인딩된 경우에 표시 되는 빈 데이터 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 이 서식 파일에는 일반적으로 사용자에 게 경고할 데이터 소스에 레코드가 포함 되어 있지는 내용이 들어 있습니다. |   | <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>| 바닥글 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 이 템플릿에 일반적으로 바닥글 행에 표시 하려는 추가 콘텐츠를 포함 합니다. **참고:** 를 지정할 수 있습니다 단순히 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>속성을 설정 하 여 바닥글 행에 표시할 텍스트입니다. |   | <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>| 머리글 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> 이 템플릿에 일반적으로 머리글 행에 표시 하려는 추가 콘텐츠를 포함 합니다. **참고:** 를 지정할 수 있습니다 단순히 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>속성을 설정 하 여 머리글 행에 표시할 텍스트입니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>| FormView 컨트롤이 읽기 전용 모드인 경우 데이터 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 이 서식 파일에는 일반적으로 기존 레코드의 값을 표시 하는 내용이 들어 있습니다. |   | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>| FormView 컨트롤이 삽입 모드일에서 경우 데이터 행에 대 한 콘텐츠를 정의 합니다.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 이 템플릿에 입력 컨트롤과 명령 단추가 사용자 새 레코드를 추가할 수 있는 일반적으로 포함 합니다. |   | <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>| 페이징 기능을 활성화 하는 경우 표시 되는 호출기 행에 대 한 콘텐츠 정의 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이 `true`).</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 이 서식 파일에는 일반적으로 사용자 다른 레코드로 이동할 수 있는 컨트롤이 포함 됩니다. **참고:** FormView 컨트롤에는 기본 제공 호출기 행 UI (사용자 인터페이스). 사용자 고유의 사용자 지정 호출기 행을 만들려고 할 경우에 페이저 템플릿을 만들어야 합니다. |       항목 템플릿에 필드의 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 데이터 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터 바인딩 식 구문](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)합니다.       입력된 컨트롤 삽입 항목 템플릿을 확인 하 고 항목 템플릿 편집에서 양방향 바인딩 식을 사용 하 여 데이터 원본의 필드에 바인딩될 수 있습니다. 이 대 한 업데이트에 대 한 입력된 컨트롤의 값을 추출 하는 자동으로 또는 삽입 작업을 FormView 제어할을 수 있습니다. 양방향 바인딩 식에서 필드의 원래 값을 자동으로 표시 하려면 항목 템플릿을 편집할 입력된 컨트롤 할 수도 있습니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다.      <a name=&quot;binding_to_data&quot;></a># # 데이터 The FormView 컨트롤에 바인딩하는 데이터 소스 제어에 바인딩될 수 (같은 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, 또는 <xref:System.Web.UI.WebControls.AccessDataSource>) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스와 같은 <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, 또는 기타 컬렉션 형식.</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 다음 방법 중 하나를 사용 하 여 적절 한 데이터 원본 유형에 FormView 컨트롤을 바인딩할:-데이터 소스 컨트롤을 설정 하려면는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>FormView 컨트롤의 속성은 <xref:System.Web.UI.Control.ID%2A>데이터 소스 제어의 값입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> FormView 컨트롤의 지정 된 데이터 소스 제어에 자동으로 바인딩하고 활용할 수 데이터 소스 컨트롤의 기능을 삽입, 업데이트, 삭제 및 페이징 기능을 수행 합니다. 이것은 데이터에 바인딩하는 기본 방법입니다.      -을 구현 하는 데이터 소스를 바인딩할는 <xref:System.Collections.IEnumerable?displayProperty=fullName>인터페이스를 프로그래밍 방식으로 설정는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>FormView의 속성이 데이터 소스에 컨트롤을 다음 호출에서 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>메서드.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> 이 메서드를 사용 하면 기본 제공 삽입, 업데이트, 삭제 및 페이징 기능 FormView 컨트롤 제공 하지 않습니다. 적절 한 이벤트를 사용 하 여이 기능을 제공 해야 합니다.       데이터 바인딩에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.      > [!NOTE] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 가능 하면 항상 값은 HTML로 인코딩된 전에이 컨트롤에 표시 된 것이 좋습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다.      <a name=&quot;data_operations&quot;></a># # 데이터 작업 FormView 컨트롤 업데이트, 삭제, 삽입 및 컨트롤의 항목을 페이징 하는 데 사용할 수 있는 다양 한 기본 제공 기능을 제공 합니다. FormView 컨트롤 데이터 소스 제어에 바인딩되어 FormView 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트, 삭제, 삽입 및 페이징 기능을 제공 합니다.      > [!NOTE] > The FormView 컨트롤 update, delete, insert 및 다른 유형의 데이터 원본과 상호 페이징 작업에 대 한 지원을 제공할 수 있습니다; 그러나 이러한 작업에 대 한 구현으로 적절 한 이벤트 처리기를 제공 해야 합니다.       FormView 컨트롤 서식 파일을 사용 하므로 업데이트, 삭제 또는 삽입 작업을 수행 하는 명령 단추를 자동으로 생성 하는 방법을 제공 하지 않습니다. 적절 한 템플릿에 이러한 명령 단추를 직접 포함 해야 합니다. FormView 컨트롤이 인식 되어 있는 특정 단추 자신의 `CommandName` 속성이 특정 값으로 설정 합니다. 다음 표에서 FormView 컨트롤이 인식 하는 명령 단추를 나열 합니다.      | 단추 | CommandName 값 | 설명 |   |------------|-----------------------|-----------------|   | 취소 | &quot; 취소 &quot;| 작업을 취소 하 고 사용자가 입력 한 값을 취소할 수 업데이트 또는 삽입 작업에 사용 합니다. FormView 컨트롤 다음 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성에 지정 된 모드를 반환 합니다. |   | 삭제 | &quot; 삭제 &quot;| 데이터 소스에서 표시 된 레코드를 삭제 하려면 삭제 작업에 사용 합니다.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> <xref:System.Web.UI.WebControls.FormView.ItemDeleting>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleted>이벤트입니다. |   | 편집 | &quot; 편집 &quot;| FormView 컨트롤 편집 모드로 전환 하 여 업데이트 작업에 사용 합니다.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>속성에 지정 된 데이터 행에 대해 표시 됩니다. |   | 삽입 | &quot; 삽입 &quot;| 삽입 작업에는 사용자가 입력 한 값을 사용 하 여 데이터 원본에 새 레코드를 삽입 하려고 하는 데 사용 합니다.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.FormView.ItemInserting>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemInserted>이벤트입니다. |   | 새로 만들기 | &quot; 새 &quot;| FormView 컨트롤 삽입 모드로 전환할 삽입 작업에 사용 합니다.</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>속성에 지정 된 데이터 행에 대해 표시 됩니다. |   | 페이지 | &quot; 페이지 &quot;| 페이징 작업에서 페이징을 수행 하는 페이저 행에 있는 단추를 나타내는 데 사용 합니다.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 페이징 작업을 지정 하려면는 `CommandArgument` &quot;다음&quot;, &quot;이전&quot;, &quot;First&quot;, &quot;마지막&quot; 또는 탐색할 수 있는 페이지의 인덱스를 단추의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **참고:** 단추의이 유형은 호출기 서식 파일에만 일반적으로 사용 됩니다. |   | 업데이트 | &quot; 업데이트 &quot;| 사용자가 제공한 값이 포함 된 데이터 원본에 표시 된 레코드를 업데이트 하기 위해 업데이트 작업에 사용 합니다. <xref:System.Web.UI.WebControls.FormView.ItemUpdating>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdated>이벤트입니다. |       삭제와는 달리 단추 (하 여 표시 된 레코드를 즉시 삭제)를 편집 하거나 새로 만들기 단추를 클릭 하면 편집 컨트롤이 전환 FormView 또는 삽입 모드로 각각.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 에 포함 된 콘텐츠 편집 모드에는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>현재 데이터 항목에 대 한 속성이 표시 됩니다.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 일반적으로 편집 항목 템플릿은 편집 단추 아래 템플릿으로 바뀝니다 업데이트 및 &quot;취소&quot; 단추가 되도록 정의 됩니다. 입력 필드의 데이터 형식에 대 한 적절 한 컨트롤 (같은 <xref:System.Web.UI.WebControls.TextBox>또는 <xref:System.Web.UI.WebControls.CheckBox>제어)는 일반적으로 수정 하는 사용자에 대 한 필드의 값으로 표시 됩니다.</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> 업데이트 단추를 클릭 하면 모든 변경 사항이 취소 단추를 클릭 데이터 원본의 레코드를 업데이트 합니다.       에 포함 된 콘텐츠와 마찬가지로,는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>컨트롤이 삽입 모드일 때 데이터 항목에 대 한 속성이 표시 됩니다.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Insert 항목 템플릿은 새로 만들기 단추는 삽입 및 취소 단추 대체 되 고 새 레코드에 대 한 값을 입력 하려면 사용자에 대 한 빈 입력된 컨트롤이 표시 됩니다에 일반적으로 정의 됩니다. 취소 단추를 클릭 하면 모든 변경 사항이 데이터 원본의 레코드를 삽입 삽입 단추를 클릭 합니다.       FormView 컨트롤에 사용자를 다른 데이터 원본의 레코드를 탐색할 수 있는 페이징 기능을 제공 합니다. 사용 하도록 설정 하면 페이저 행 페이지 탐색 컨트롤을 포함 하는 FormView 컨트롤에 표시 됩니다. 페이징을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성을 `true`.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 에 포함 된 개체의 속성을 설정 하 여 호출기 행을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>및 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>속성.</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 기본 제공 호출기 행 UI를 사용 하는 대신 사용 하 여 UI를 직접 만들 수는 <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>속성.</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # 사용자 지정 사용자 인터페이스 사용자는 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 FormView 컨트롤의 모양을 사용자 지정할 수 있습니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>| FormView 컨트롤 중인 경우에 데이터 행에 대 한 스타일 설정을 편집 모드입니다. |   | <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>| 데이터 원본에는 레코드가 없으면 FormView 컨트롤에 표시 되는 빈 데이터 행에 대 한 스타일 설정을. |   | <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>| FormView 컨트롤의 바닥글 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>| FormView 컨트롤의 머리글 행에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>| FormView 컨트롤 중인 경우에 데이터 행에 대 한 스타일 설정을 삽입 모드. |   | <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>| 페이징 기능을 활성화 하는 경우 FormView 컨트롤에 표시 되는 호출기 행 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>| FormView 컨트롤이 읽기 전용 모드인 경우 데이터 행에 대 한 스타일 설정 합니다. |      <a name=&quot;events&quot;> </a> # # 이벤트는 FormView 컨트롤 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.FormView.RowStyle%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> </xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 그러면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서 FormView 컨트롤에서 지 원하는 이벤트를 나열 합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.ItemCommand>| FormView 컨트롤 내에서 단추를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.FormView.ItemCommand> 이 이벤트는 자주 컨트롤에서 단추를 클릭 하면 작업을 수행 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemCreated>| 결국 발생 <xref:System.Web.UI.WebControls.FormViewRow>FormView 컨트롤에 개체가 만들어집니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.ItemCreated> 이 이벤트는 자주 표시 되기 전에 레코드의 값을 수정 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemDeleted>| 삭제 단추 발생 (단추 해당 `CommandName` 속성이 &quot;Delete&quot;로 설정)를 클릭 하면 되지만 FormView 컨트롤이 데이터 원본에서 레코드를 삭제 한 후.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> 이 이벤트는 종종 삭제 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemDeleting>| FormView 하기 전에 컨트롤이 데이터 원본에서 레코드를 삭제 하지만 삭제 단추를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemInserted>| 삽입 단추 발생 (된 단추 해당 `CommandName` 속성이 &quot;Insert&quot;로 설정)를 클릭 하면 되지만 FormView 컨트롤이 레코드를 삽입 후.</xref:System.Web.UI.WebControls.FormView.ItemInserted> 이 이벤트는 자주 삽입 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemInserting>| 삽입 단추를 클릭 하면 되지만 FormView 하기 전에 레코드를 삽입 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.FormView.ItemInserting> 이 이벤트는 자주 삽입 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemUpdated>| 업데이트 단추 발생 (된 단추 해당 `CommandName` 속성이 &quot;업데이트&quot;로 설정)를 클릭 하면 되지만 FormView 컨트롤이 행을 업데이트 한 후.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이 이벤트는 자주 업데이트 작업의 결과 확인 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ItemUpdating>| 업데이트 단추를 클릭 하면 되지만 FormView 하기 전에 레코드를 업데이트 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanged>| FormView 컨트롤의 모드가 변경 후에 발생 (편집, 삽입 또는 읽기 전용 모드)에.</xref:System.Web.UI.WebControls.FormView.ModeChanged> 이 이벤트는 자주 FormView 컨트롤의 모드가 변경 하면 작업을 수행 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanging>| FormView 컨트롤의 모드가 변경 되기 전에 발생 (편집, 삽입 또는 읽기 전용 모드)에.</xref:System.Web.UI.WebControls.FormView.ModeChanging> 이 이벤트는 자주 모드 변경을 취소 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>| FormView 컨트롤 페이징 작업을 처리 한 후으 나 페이저 단추 중 하나를 클릭할 때 발생 합니다.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 레코드로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>| FormView 하기 전에 컨트롤 페이징 작업을 처리 하지만 페이저 단추 중 하나를 클릭 하는 경우에 발생 합니다.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |      <a name=&quot;accessibility&quot;> </a> # #에 대 한 내게 필요한 옵션에 대 한 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법 내용은 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 컨트롤 및 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;applying_styles&quot;></a># #-CSS 스타일의 FormView 제어를 적용 하는 중 태그의 CSS 스타일 규칙을 지정할 수 있습니다. FormView 컨트롤의 모양을 사용자 지정 하려면 서식 파일을 사용 하는 경우 서식 파일에 태그의 CSS 스타일을 지정할 수 있습니다. 이 경우에 없는 추가 외부 필드가 필요 합니다. 테이블을 설정 하 여 렌더링 되지 않도록 방지할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>속성을 `false`.</xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:FormView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       RenderTable=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertItemTemplate>               <!-- child controls -->           </InsertItemTemplate>           <InsertRowStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />   </asp:FormView>   ```"
  example:
  - "The following example demonstrates how to use a FormView control to display the values from a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[FormViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_1.aspx)]\n [!code-cs[FormViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_1.aspx)]  \n  \n The following example demonstrates how to use a FormView control to edit existing records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_2.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_2.aspx)]  \n  \n The following example demonstrates how to use a FormView control to insert new records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_3.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다. 동적으로 추가 <xref:System.Web.UI.WebControls.FormView>페이지에 컨트롤을 만드는 새 <xref:System.Web.UI.WebControls.FormView>개체 속성을 설정 하 고 다음 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> 같은 컨테이너 컨트롤의 컬렉션</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 에 추가</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 하려면"
  example:
  - "The following example demonstrates how to dynamically add a <xref:System.Web.UI.WebControls.FormView> control to a page.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_130_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public FormView ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤에 사용자가 데이터 원본에 다른 레코드로 이동 하도록 허용 하는 페이징 기능을 기본 제공 합니다.</xref:System.Web.UI.WebControls.FormView> 페이징 기능을 지 원하는 데이터 원본 개체에 사용할 수는 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스 또는 페이징 기능을 지 원하는 데이터 소스는.</xref:System.Collections.ICollection?displayProperty=fullName>       페이징 기능을 사용 하도록 설정 하려면 AllowPaging 속성을 설정 `true`합니다. 사용 하 여 데이터 원본에 있는 항목의 총 수를 확인할 수는 <xref:System.Web.UI.WebControls.FormView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageCount%2A> 현재 표시 된 항목의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       페이징이 활성화 된 경우 호출기 행 이라는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 호출기 행 페이지 탐색 컨트롤을 포함 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있습니다. 호출기 행에는&4; 개의 기본 제공 호출기 디스플레이 모드에 있습니다. 다음 표에서 네 가지 모드를 설명합니다.      | 모드 | 설명 |   |----------|-----------------|   | `PagerButton.NextPrevious`| 페이지 매김 구성 된 컨트롤의 이전 및 다음 단추 집합이. |   | `PagerButton.NextPreviousFirstLast`| A의 페이지 매김 구성 된 컨트롤의 이전, 다음으로, 첫 번째 및 마지막 단추 설정 합니다. |   | `PagerButton.Numeric`| 페이지 매김 구성 된 컨트롤의 집합이 액세스 페이지에 링크 단추를 직접 번호가 매겨집니다. 이 기본 모드. |   | `PagerButton.NumericFirstLast`| 번호 매기기 및 첫 번째 및 마지막 링크 단추로 구성 된 페이지 매김 컨트롤 집합입니다. |      > [!NOTE] >는 <xref:System.Web.UI.WebControls.FormView>데이터 원본에 레코드가 하나만 포함 되어 있으면 컨트롤의 호출기 행을 자동으로 숨깁니다.</xref:System.Web.UI.WebControls.FormView>       사용 하 여 호출기 행 (예: 페이저 디스플레이 모드, 페이저 컨트롤의 텍스트 레이블을 한 번에 표시할 페이지 링크의 수)의 설정을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>속성.</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 호출기 행 배경색 및 글꼴 색 등의 모양을 제어는 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> <xref:System.Web.UI.WebControls.FormView>제어 또한 호출기 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다.</xref:System.Web.UI.WebControls.FormView> 사용자 지정 호출기 행 템플릿을 만드는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 을 참조 하십시오.       <xref:System.Web.UI.WebControls.FormView>컨트롤은 페이징이 발생 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다.</xref:System.Web.UI.WebControls.FormView> 다음 표에서 사용할 수 있는 이벤트를 나열합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>| 페이저 단추 중 하나를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.FormView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 이 이벤트는 사용자가 컨트롤에서 다른 레코드로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>| 페이저 단추 중 하나를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.FormView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다. |      > [!NOTE] > 변경한 경우 이러한 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성 프로그래밍 방식으로.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the AllowPaging property to enable the paging feature in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_367_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_367_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 기능을 사용 하도록 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "URL의 배경에 표시할 이미지를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "BackImageUrl 속성을 사용 하 여의 배경에 표시할 이미지에 URL을 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.FormView>백그라운드에서 채울 컨트롤, 이미지를 바둑판식으로 표시 합니다.</xref:System.Web.UI.WebControls.FormView> 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다."
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_554_1.aspx)]\n [!code-vb[FormViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_554_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "배경에 표시할 이미지에 URL에서 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 맨 아래에 표시 되는 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이로 설정 되어 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 호출기 행 사용자가 다른 레코드로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 BottomPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewRow>의 아래쪽 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > The BottomPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 아래쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       예를 들어 사용자 지정 콘텐츠를 추가할 때 맨 아래 호출기 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. BottomPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.FormViewRow>그렇지 않으면 아래쪽 호출기 행을 나타내는 개체에 수행한는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 변경 내용을 덮어씁니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the pager row displayed at the bottom of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 의 맨 아래쪽 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "캡션 HTML 요소에 렌더링할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "Caption 속성을 사용 하 여 HTML 캡션 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 지정 하는 텍스트에는 보조 기술 장치가 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명을 제공 합니다.       에 대 한 추가적인 내게 필요한 옵션 지원은 <xref:System.Web.UI.WebControls.FormView>컨트롤에서 제공 되는 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>속성.</xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.FormView> 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>속성에 HTML 캡션 요소의 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1078_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1078_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "캡션 HTML 요소에 렌더링할 텍스트를 나타내는 문자열을 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.FormView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 또는 세로 위치에 HTML 캡션 요소의 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다. 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다."
  remarks: "CaptionAlign 속성을 사용 하 여에 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 속성은 컨트롤의 보조 기술 장치가 사용자에 게 더욱 쉽게 이용할 수 있도록 제공 됩니다.       이 속성의 하나를 사용 하는 <xref:System.Web.UI.WebControls.TableCaptionAlign>열거형 값입니다.</xref:System.Web.UI.WebControls.TableCaptionAlign> 다음 표에서 가능한 값을 나열합니다.      | 값 | 설명 |   |-----------|-----------------|   | `TableCaptionAlign.Bottom`| Caption 요소는 테이블의 아래쪽에 맞게 정렬 됩니다. |   | `TableCaptionAlign.Left`| Caption 요소는 테이블의 왼쪽에 맞춥니다. |   | `TableCaptionAlign.NotSet`| Caption 요소 맞춤 설정 되지 않았습니다. |   | `TableCaptionAlign.Right`| Caption 요소는 테이블의 오른쪽에 맞춥니다. |   | `TableCaptionAlign.Top`| Caption 요소는 테이블의 위쪽에 맞춰집니다. |      > [!NOTE] >로이 속성이 설정 된 경우 `TableCaptionAlign.NotSet`, 브라우저의 기본값이 사용 됩니다.       에 대 한 추가적인 내게 필요한 옵션 지원은 <xref:System.Web.UI.WebControls.FormView>컨트롤에서 제공 되는 <xref:System.Web.UI.WebControls.FormView.Caption%2A>속성.</xref:System.Web.UI.WebControls.FormView.Caption%2A> </xref:System.Web.UI.WebControls.FormView> 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.Caption%2A>속성 캡션 HTML 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.FormView> control should be rendered on the left side of the control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_449_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_449_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀의 내용을 셀 테두리 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellPadding 속성을 사용 하 여 셀의 내용과 셀 테두리 사이의 간격을 제어할 수 있습니다. 셀의 네 면에 지정 된 안쪽 여백이 추가 됩니다.       모든 셀의 같은 열에는 <xref:System.Web.UI.WebControls.FormView>컨트롤 너비를 같게 만들기가.</xref:System.Web.UI.WebControls.FormView> 안쪽 여백이 가장 넓은 셀에 적용 되 고 다른 열의 모든 셀에는 해당 셀 너비를 조정 됩니다. 마찬가지로, 동일한 행에 있는 모든 셀 높이 같게 만들기가 있어야 합니다. 여백은 행에서 가장 높은 셀에 적용 되 고 행의 다른 모든 셀은 해당 셀 높이. 개별 셀의 크기를 지정할 수 없습니다.       셀 사이의 간격을 조정 하려면는 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>속성.</xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>      > [!NOTE] > 브라우저의 기본 값이 사용이 속성을 설정 하지 않습니다."
  example:
  - "The following example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_693_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_693_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "셀의 내용을 셀 테두리 사이의 픽셀에서 공간의 양입니다. 기본값은-1로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀 사이의 간격을 가져오거나 설정 합니다."
  remarks: "CellSpacing 속성을 사용 하 여에 인접 한 셀 사이의 간격을 제어할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 세로 및 가로로이 간격이 적용 됩니다. 셀 간격은 일정의 전체 컨트롤에 대 한 합니다. 행 이나 열 사이의 개별 셀 간격을 지정할 수 없습니다.      > [!NOTE] > 0 보다 큰 값으로이 속성을 설정 하 고 다음을 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView.GridLines%2A>속성 셀 테두리를 표시 하는 값으로 인접 한 셀 테두리 사이의 간격이 생깁니다.</xref:System.Web.UI.WebControls.FormView.GridLines%2A> 이 경우 CellSpacing 속성 간격의 크기를 제어합니다.       셀의 내용을 셀 테두리 사이의 간격을 조정 하려면는 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>속성.</xref:System.Web.UI.WebControls.FormView.CellPadding%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "셀 사이 픽셀 단위로 공간의 양입니다. 기본값은 0입니다"
  overload: System.Web.UI.WebControls.FormView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  id: ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "스위치는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 지정 된 데이터 입력 모드를 제어 합니다."
  remarks: "ChangeMode 메서드를 사용 하 여 프로그래밍 방식으로 전환 된 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집, 삽입 및 읽기 전용 모드 간에.</xref:System.Web.UI.WebControls.FormView> 이 메서드는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>지정된 된 모드를 사용 하 여 속성.</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `FormViewMode.Edit`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `FormViewMode.Insert`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `FormView.ReadOnly`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |      > [!NOTE] >는 <xref:System.Web.UI.WebControls.FormView.ModeChanged>및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이 메서드가 호출 되 면 이벤트가 발생 하지 않습니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.FormView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[FormViewChangeMode#1](~/add/codesnippet/csharp/662370c4-5409-4672-aaf8-_1.aspx)]\n [!code-vb[FormViewChangeMode#1](~/add/codesnippet/visualbasic/662370c4-5409-4672-aaf8-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.FormViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> 열거형 값입니다."
  overload: System.Web.UI.WebControls.FormView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 하는 데 컨트롤 계층 구조를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 지정 된 데이터 원본과 제어 합니다."
  remarks: "CreateChildControls 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>의 컨트롤 계층 구조를 만들 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 경우는 `dataBinding` 매개 변수는 `true`, 컨트롤 계층 구조를 만들기 전에 데이터 바인딩이 수행 됩니다."
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>컨트롤 계층 구조를 만드는 데 데이터 소스를 나타내는입니다.</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 소스에서 직접 컨트롤 계층 구조로 만들어졌는지 나타내기 위해 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 뷰 상태에서 계층을 만들면 컨트롤을 나타냅니다."
    return:
      type: System.Int32
      description: "데이터 원본에서 생성 되는 항목의 수입니다."
  overload: System.Web.UI.WebControls.FormView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 의 <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> 입니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 바인딩되는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 기본 테이블 스타일 개체를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "CreateControlStyle 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>해당 기본 테이블 스타일 개체를 만들 수 있습니다.</xref:System.Web.UI.WebControls.FormView> 기본 스타일을 설정 하는 <xref:System.Web.UI.WebControls.TableStyle>이 메서드는 또한 설정 개체는 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>속성을 0.</xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.TableStyle>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 에 대 한 기본 테이블 스타일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 처리를 위해 데이터 원본에 전달 되는 인수를 포함 하는 개체입니다."
  remarks: "CreateDataSourceSelectArguments 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>만들 컨트롤을는 <xref:System.Web.UI.DataSourceSelectArguments>데이터 원본에 전달 된 인수를 포함 하는 개체입니다.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.FormView> 이 구현에서는 <xref:System.Web.UI.DataSourceSelectArguments>페이징 작업에 대 한 인수를 포함 하는 개체입니다.</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 데이터 원본에 전달 되는 인수를 포함 하 합니다."
  overload: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 지정 된 항목 인덱스, 행 형식 및 행 상태를 사용 하 여 개체입니다."
  remarks: "CreateRow 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>만들 컨트롤을 한 <xref:System.Web.UI.WebControls.FormViewRow>컨트롤 내에서 행을 표시 하는 데 사용 되는 개체입니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "표시할 데이터 항목의&0;부터 시작 하는 인덱스입니다."
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;> </xref> 열거형 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "비트 조합 된 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 열거형 값입니다."
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 된 지정 된 항목 인덱스, 행 형식 및 행 상태입니다."
  overload: System.Web.UI.WebControls.FormView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 포함 하는 테이블을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "CreateTable 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 컨트롤에 대 한 컨테이너 역할을 하는 테이블을 만듭니다.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "A <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 포함 하는 테이블에 대 한 나타내는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 데이터 입력 모드를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "CurrentMode 속성을 사용 하는지 여부를 <xref:System.Web.UI.WebControls.FormView>컨트롤이 편집, 삽입 또는 읽기 전용 모드입니다.</xref:System.Web.UI.WebControls.FormView> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `FormViewMode.Edit`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `FormViewMode.Insert`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `FormView.ReadOnly`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |       이 값은 일반적으로 자동으로 설정 된 <xref:System.Web.UI.WebControls.FormView>새로 만들기, 업데이트, 삽입, 삭제 또는 취소 명령 단추를 클릭할 때 제어 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 동작에 대 한 응답의 모드가 변경, 다음 표에 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.FormView> 이 이벤트가 발생할 때 해당 루틴을 수행 하는 사용자 지정 이벤트 처리기를 만들 수 있습니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.ModeChanged>| 발생 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드를 변경 하지만 모드가 변경 된 후.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 이 이벤트는 일반적으로 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드가 변경 될 때마다 작업을 수행 하는 데 사용 됩니다. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanging>| 발생 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드를 변경 하지만 모드가 변경 되기 전에.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> 이 이벤트는 일반적으로 모드 변경을 취소 하는 데 사용 됩니다. |       **참고** 를 사용 하 여 프로그래밍 방식으로 모드를 변경 하는 경우에 이러한 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>메서드.</xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>"
  example:
  - "The following example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.FormView> control is in edit, insert, or read-only mode. If the user attempts to navigate to another record while the <xref:System.Web.UI.WebControls.FormView> control is in edit more, the paging operation is canceled.  \n  \n [!code-cs[FormViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_817_1.aspx)]\n [!code-vb[FormViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_817_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.FormView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스를 바인딩합니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "DataBind 메서드를 사용 하 여 효율성을 데이터 원본에서 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 메서드는 컨트롤의 현재 서식 파일의 모든 데이터 바인딩 식을 확인합니다."
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 항목에 바인딩된 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "사용 하 여 데이터 항목을 액세스 하는 DataItem 속성에 바인딩된는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 데이터 항목이 현재 레코드의 필드 값에 직접 액세스를 주로 사용 됩니다. 종류는 <xref:System.Object>이 속성에서 반환 속성 데이터 소스에 따라 달라 집니다.</xref:System.Object> 예를 들어, 한 <xref:System.Web.UI.WebControls.SqlDataSource>컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.FormView>컨트롤은 <xref:System.Data.DataRowView>개체가 반환 됩니다.</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!NOTE] >이 속성은 데이터 바인딩을 발생 한 후에 사용할 수 있습니다. 발생 하기 전 까지의 데이터 바인딩,이 속성은 반환 `null`합니다. 이 속성은 또한 하지 적용 시기는 <xref:System.Web.UI.WebControls.FormView>컨트롤 삽입 모드에 있고 반환 `null`.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_191_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_191_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>나타내는 데이터 항목에 바인딩되어 있음을 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 데이터 항목의 수를 가져옵니다."
  remarks: "DataItemCount 속성을 사용 하 여 데이터 원본에 포함 된 데이터 항목 수를 결정 합니다. 과 동일한 값을 포함 하는이 속성은 <xref:System.Web.UI.WebControls.FormView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에서 데이터 항목의 수입니다."
  overload: System.Web.UI.WebControls.FormView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 항목의 인덱스에 바인딩된 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스에서 제어 합니다."
  remarks: "사용 된 데이터 항목의 인덱스를 확인 하려면 DataItemIndex 속성에 바인딩된는 <xref:System.Web.UI.WebControls.FormView>데이터 소스에서.</xref:System.Web.UI.WebControls.FormView> 과 동일한 값을 포함 하는이 속성은 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>      > [!NOTE] >이 속성은 적용 가능한 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드일 때 DataItemIndex 속성-1을 반환 합니다."
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "에 바인딩된 데이터 항목의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스에서 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 표시 된 레코드의 기본 키를 나타내는 개체입니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성이 설정 되어는 <xref:System.Web.UI.WebControls.FormView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>필드 또는 필드에 나열 된 키/값 쌍을 포함 하는 개체는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>현재 레코드에 대 한 속성.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 데이터 키 속성을 사용 하 여이 <xref:System.Web.UI.WebControls.DataKey>개체입니다.</xref:System.Web.UI.WebControls.DataKey> 이 속성은 키와 해당 값에 지정 된 필드에 대 한를 가져오는 데 일반적으로 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>      > [!NOTE] >를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>속성에 나열 된 첫 번째 키 필드의 값을 확인 하 고 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKey property to determine the value of the key field.  \n  \n [!code-cs[FormViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1171_1.aspx)]\n [!code-vb[FormViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1171_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> 표시 된 레코드의 기본 키를 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.FormView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에 대 한 키 필드의 이름을 포함 하는 배열을 가져오거나 설정 합니다."
  remarks: "DataKeyNames 속성을 사용 하 여 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록을 지정 하려면. DataKeyNames 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>현재 레코드에 대 한 DataKeyNames 속성에 나열 된 하나 이상의 필드의 키/값 쌍을 포함 하는 개체입니다.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.DataKey>개체에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormView.DataKey%2A>속성.</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > 기본 제공 업데이트, 삭제 및 삽입의 기능에 대 한 DataKeyNames 속성을 설정 해야는 <xref:System.Web.UI.WebControls.FormView>컨트롤에서 실행 되도록 합니다.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field for the data source bound to the <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "데이터 원본에 대 한 키 필드의 이름이 포함 된 배열입니다."
  overload: System.Web.UI.WebControls.FormView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 입력 모드를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 삽입, 업데이트, 다음 제어가 반환 또는 작업을 취소 합니다."
  remarks: "DefaultMode 속성을 사용 하 여 지정할 수 있는지 여부를 <xref:System.Web.UI.WebControls.FormView>제어가 반환 편집, 삽입 또는 읽기 전용 모드는 업데이트 이후 삽입 또는 취소 작업이 수행 됩니다.</xref:System.Web.UI.WebControls.FormView> 기본적으로는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 읽기 전용 모드로 돌아갑니다; 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView>편집에서 제어 하거나 적절 한 값으로이 속성을 설정 하면 삽입 모드.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 다음 표에서 서로 다른 모드 값을 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | `FormViewMode.Edit`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 사용자 레코드의 값을 업데이트할 수 있도록 편집 모드에 있습니다. |   | `FormViewMode.Insert`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 데이터 원본에 새 레코드를 추가 하려면 사용자 수 있도록 삽입 모드에 있습니다. |   | `FormViewMode.ReadOnly`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 일반적인 표시 모드는 읽기 전용 모드에 있습니다. |       이 속성은 일반적으로 때 사용 되는 <xref:System.Web.UI.WebControls.FormView>컨트롤은 단일 용도와 같은 하기만 하면 삽입 하거나 레코드를 편집 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DefaultMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode after an update operation.  \n  \n [!code-vb[FormViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_229_1.aspx)]\n [!code-cs[FormViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_229_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_FormViewMode.ReadOnly&quot; name=&quot;FormViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> 열거형 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 레코드를 삭제는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스에서 제어 합니다."
  remarks: "DeleteItem 메서드를 사용 하 여 프로그래밍 방식으로의 현재 레코드를 삭제 하는 <xref:System.Web.UI.WebControls.FormView>데이터 소스에서.</xref:System.Web.UI.WebControls.FormView> 외부에서 현재 레코드를 삭제 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.FormView> 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.FormView.ItemDeleted>및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteItem method to programmatically delete the current record in a <xref:System.Web.UI.WebControls.FormView> control from the data source.  \n  \n [!code-vb[FormViewDeleteItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[FormViewDeleteItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 삭제 작업을 수행 될 때 호출 되는 페이지에서 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤이 삭제 작업을 수행 될 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.FormView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집 모드에서 항목에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤이 렌더링 컨트롤의 현재 모드에 따라 데이터 행에 대해 다른 서식 파일 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>속성).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 다음 표에서 각 모드에 사용 되는 템플릿이 보여 줍니다.      | 모드 | 렌더링 되는 템플릿 |   |----------|-----------------------|   | 편집 | EditItemTemplate |   | 삽입 | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | 읽기 전용 | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       사용 하 여 EditItemTemplate 속성 데이터에 대 한 고유의 사용자 인터페이스 (UI)를 정의 하는 경우 행은 <xref:System.Web.UI.WebControls.FormView>컨트롤은 편집 모드에.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 항목 템플릿 편집은 일반적으로 레코드를 업데이트 하 고 업데이트 작업을 취소 하는 명령 단추 뿐만 아니라는 기존 레코드의 값을 업데이트 하는 사용자에 대 한 입력된 컨트롤을 포함 합니다.       사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<EditItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EditItemTemplate>` 태그입니다. 양방향 바인딩 식을 사용 하 여 필드를 입력 컨트롤과 연결할 수 있습니다. 이 통해는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집 모드로 연결된 된 입력된 컨트롤에 자동으로 원래 필드 값을 표시 합니다.</xref:System.Web.UI.WebControls.FormView> 기록이 업데이트 될 때는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 자동으로 연결된 된 입력된 컨트롤에서 업데이트 된 필드 값을 추출 합니다.</xref:System.Web.UI.WebControls.FormView> 양방향 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다. 기본 제공 취소 및 업데이트 작업을 수행 하는 명령 단추를 만들려면 명령 단추 컨트롤을 템플릿에 추가 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.      | 명령 단추 유형 | CommandName 값 |   |-------------------------|-----------------------|   | 취소 | &quot; 취소 &quot;|   | 업데이트 | &quot; 업데이트 &quot;|       항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_886_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_886_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 데이터에 대 한 사용자 지정 콘텐츠가 들어 있는 경우 행은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 편집 모드에 있습니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체 데이터의 모양을 설정 하는 사용할 수 있는 경우 행는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 편집 모드에 있습니다."
  remarks: "EditRowStyle 속성 데이터의 모양을 제어 하는 경우 행을 사용 하 여 한 <xref:System.Web.UI.WebControls.FormView>컨트롤은 편집 모드에 있습니다.</xref:System.Web.UI.WebControls.FormView> 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤 편집 모드에 있으면 데이터 행에 의해 지정 된 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>속성.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EditRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<EditRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the EditRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1022_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1022_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 를 나타내는 데이터의 스타일 경우 행는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 편집 모드에 있습니다."
  overload: System.Web.UI.WebControls.FormView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 소스에 바인딩된 경우 표시 되는 빈 데이터 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 레코드를 포함 하지 않습니다."
  remarks: "빈 데이터 행의 모양을 제어 EmptyDataRowStyle 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 빈 데이터 행에는 컨트롤에 바인딩되는 데이터 원본에 레코드가 없는 경우 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `EmptyDataRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<EmptyDataRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the EmptyDataRowStyle property to specify a custom style for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1010_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1010_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 을 빈 데이터 행의 표시 되는 모양을 설정할 수 있습니다."
  overload: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때 렌더링 되는 빈 데이터 행에 대 한 사용자 지정 콘텐츠를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.FormView> Emptydatatemplate이 속성을 사용 하 여 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. 빈 데이터 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<EmptyDataTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>및 emptydatatemplate이 속성이 설정 되어, emptydatatemplate이 속성이 우선 합니다.</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1213_1.aspx)]\n [!code-vb[FormViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1213_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 빈 데이터 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "때에 렌더링 되는 빈 데이터 행에 표시할 텍스트를 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다."
  remarks: "빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView>제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다.</xref:System.Web.UI.WebControls.FormView> EmptyDataText 속성을 사용 하 여 빈 데이터 행에 표시할 텍스트를 지정할 수 있습니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)을 설정 하 여 정의할 수 있습니다 또는 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>      > [!NOTE] > 경우는 모두 EmptyDataText 및 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>속성을 설정의 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1210_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1210_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유효성 검사 컨트롤이 업데이트 작업 또는 삽입 하는 동안 발생 하는 예외를 처리 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>유효성 검사기 컨트롤이 작업을 업데이트 또는 삽입 하는 동안 발생 하는 예외를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "통해는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 바인딩된 데이터에 올바르게 합니다."
  remarks: "EnsureDataBound 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.FormView>클래스 있는지 확인 하기는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 바인딩된 데이터에 올바르게.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> EnsureDataBound 메서드는 일반적으로 하는 동안 호출 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>데이터 바인딩된 컨트롤 아직 바인딩되어 있지 때 데이터 원본에 컨트롤을 바인딩할 메서드를 사용할 수 있지만 데이터 바인딩이 필요 합니다.</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> 데이터 바인딩 발생을 방지 하기 위해이 버전의 메서드 재정의 된 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 행 내에서 선언 된 각 필드의 값을 검색 하 고 지정 된 상태로 저장 <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 개체입니다."
  remarks: "ExtractRowValues 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>데이터 행 내에서 선언 된 각 필드의 값을 검색 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.FormView> 데이터 행에는 현재 모드에 따라 다른 템플릿을 표시 하기 때문에이 메서드는 현재 모드에 해당 하는 서식 파일에 선언 된 필드 값만 검색 합니다. 다음 표에서 사용 가능한 모드 및 해당 템플릿을 보여 줍니다.      | 모드 | 서식 파일 |   |----------|--------------|   | 삽입 | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | 편집 | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | 읽기 전용 | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       추출 된 값의 키 필드 또는 필드를 사용 하 여 포함 하는지 여부를 지정할 수는 `includeKeys` 매개 변수.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 현재 데이터 항목의 필드 값을 저장 하는 데 사용 합니다."
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 필드를 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 의 바닥글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 프로그래밍 방식으로 액세스할 FooterRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewRow>바닥글 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > The FooterRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. FooterRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 변경 내용을 덮어씁니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>       바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the FooterRow property to programmatically modify the properties of the footer row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_364_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_364_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 의 바닥글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 바닥글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> FooterStyle 속성을 사용 하 여의 바닥글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `FooterStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<FooterStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the FooterStyle property to specify a custom style for the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1350_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1350_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 바닥글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>먼저 속성이 설정 되었습니다.</xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> 먼저 속성을 사용 하 여 바닥글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. 바닥글 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<FooterTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<FooterTemplate>` 태그입니다. 바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 또는 단순히 텍스트 표시할 수 있습니다 바닥글 행에 설정 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.FooterText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>및 먼저 속성이 설정 되어, 먼저 속성이 우선 합니다.</xref:System.Web.UI.WebControls.FormView.FooterText%2A>"
  example:
  - "The following example demonstrates how to use the FooterTemplate property to define a custom template to render for the footer row.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1258_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1258_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 바닥글 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 행에 표시할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "바닥글 행의 맨 아래에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 FooterText 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 바닥글 행에 표시할 텍스트를 지정 하려면 FooterText 속성을 사용 합니다. 바닥글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 설정 하 여 바닥글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또한는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>      > [!NOTE] > 경우는 모두 FooterText 및 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성을 설정의 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성이 우선 합니다.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_904_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_904_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "바닥글 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모눈선 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "눈금선 속성을 사용 하 여 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 다음 표에서 사용 가능한 스타일을 보여 줍니다.      | 스타일 | 설명 |   |-----------|-----------------|   | `GridLines.None`| 눈금선이 없는 표시 됩니다. |   | `GridLines.Horizontal`| 가로 눈금선 표시 됩니다. |   | `GridLines.Vertical`| 세로 눈금선을 표시 합니다. |   | `GridLines.Both`| 가로 및 세로 눈금선을 표시 합니다. |"
  example:
  - "The following example demonstrates how to use the GridLines property to display both the vertical and horizontal gridlines.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_236_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_GridLines.None&quot; name=&quot;GridLines.None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 에 머리글 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행은 위쪽에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> 프로그래밍 방식으로 액세스할 HeaderRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewRow>머리글 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > The HeaderRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤에 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       이 속성은 사용자 지정 콘텐츠를 추가할 때 예를 들어 머리글 행을 프로그래밍 방식으로 조작 해야 할 때 일반적으로 사용 됩니다. HeaderRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 변경 내용을 덮어씁니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically modify the properties of the header row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_518_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_518_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 에 머리글 행을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 머리글 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행은 위쪽에 표시 되는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> HeaderStyle 속성을 사용 하 여에 머리글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `HeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<HeaderStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the HeaderStyle property to specify a custom style for the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1059_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1059_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 머리글 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행의 위쪽에 표시 된 <xref:System.Web.UI.WebControls.FormView>시점을 제어할는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>HeaderTemplate 속성이 설정 되었습니다.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> HeaderTemplate 속성을 사용 하 여 머리글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다. 머리글 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<HeaderTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<HeaderTemplate>` 태그입니다. 머리글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 또는 단순히 텍스트 표시할 수 있습니다 머리글 행에 설정 하 여는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>      > [!NOTE] > 둘 다는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>및 HeaderTemplate 속성 설정, HeaderTemplate 속성이 우선 합니다.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>"
  example:
  - "The following example demonstrates how to use the HeaderTemplate property to define a custom template to render for the header row.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1060_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1060_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 머리글 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 행에 표시할 텍스트를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "머리글 행의 맨 위에 있는 표시는 <xref:System.Web.UI.WebControls.FormView>시점을 제어할의 HeaderText 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView> HeaderText 속성을 사용 하 여 머리글 행에 표시할 텍스트를 지정할 수 있습니다. 머리글 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 설정 하 여 머리글 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또한는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>이 속성 대신.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>      > [!NOTE] > 경우 모두의 HeaderText 및 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성이 설정 되는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성이 우선.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1225_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1225_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "머리글 행에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가로 맞춤을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 페이지에서 제어 합니다."
  remarks: "HorizontalAlign 속성을 사용 하 여의 가로 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.FormView>페이지 내에서 컨트롤.</xref:System.Web.UI.WebControls.FormView> 다음 표에서 다양 한 가로 맞춤 스타일을 나열 합니다.      | HorizontalAlign 값 | 설명 |   |---------------------------|-----------------|   | `HorizontalAlign.NotSet`| <xref:System.Web.UI.WebControls.FormView>컨트롤의 가로 맞춤 설정 되지 않았습니다. |   | `HorizontalAlign.Left`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 페이지에 왼쪽 맞춤. |   | `HorizontalAlign.Center`| 가운데 <xref:System.Web.UI.WebControls.FormView>컨트롤이 페이지에 표시 됩니다. |   | `HorizontalAlign.Right`| <xref:System.Web.UI.WebControls.FormView>컨트롤은 페이지에서 오른쪽 정렬 합니다. |   | `HorizontalAlign.Justify`| <xref:System.Web.UI.WebControls.FormView>제어 페이지의 왼쪽 및 오른쪽 여백에 맞게 정렬 됩니다. |</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.FormView> control should be centered on the page.  \n  \n [!code-vb[FormViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1047_1.aspx)]\n [!code-cs[FormViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1047_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출기 행을 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "InitializePager 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>호출기 행을 만들고 컨트롤.</xref:System.Web.UI.WebControls.FormView> 생성 된 <xref:System.Web.UI.WebControls.TableCell>개체의 속성을 사용 하 여 탐색 컨트롤을 포함 하는 <xref:System.Web.UI.WebControls.PagedDataSource>에 포함 된 개체는 `pagedDataSource` 매개 변수.</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> 셀에서 지정한 행에 추가 됩니다는 `row` 매개 변수입니다."
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 호출기 행을 포함 하는 합니다."
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 현재 페이지에 대 한 데이터를 포함 하 합니다."
  overload: System.Web.UI.WebControls.FormView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  id: InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 개체입니다."
  remarks: "InitializeRow 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 지정 된 초기화 <xref:System.Web.UI.WebControls.FormViewRow>개체입니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormViewRow>개체가 초기화 행 형식 및 지정 된 행 상태에 따라 해당 <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A>및 <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> </xref:System.Web.UI.WebControls.FormViewRow> 에 해당 콘텐츠가 추가 되 고 <xref:System.Web.UI.WebControls.FormViewRow>개체입니다.</xref:System.Web.UI.WebControls.FormViewRow> 다음 표에서 각 행 형식이 초기화 되는 방법을 설명 합니다.      | 행 형식 | 설명 |   |--------------|-----------------|   | 데이터 행 | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>내용의 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, 또는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>속성의 값에 따라 <xref:System.Web.UI.WebControls.FormViewRow>개체에 추가 됩니다. |   | 빈 데이터 행 | 값은 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>속성 또는의 내용을 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>속성이에 추가 되는 <xref:System.Web.UI.WebControls.FormViewRow>개체에 따라 속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>  </xref:System.Web.UI.WebControls.FormViewRow></xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 두 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>속성이 사용 됩니다. |   | 바닥글 행 | 값은 <xref:System.Web.UI.WebControls.FormView.FooterText%2A>속성 또는의 내용을 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성이에 추가 되는 <xref:System.Web.UI.WebControls.FormViewRow>개체에 따라 속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 두 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>속성이 사용 됩니다. |   | 머리글 행 | 값은 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>속성 또는의 내용을 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성이에 추가 되는 <xref:System.Web.UI.WebControls.FormViewRow>개체에 따라 속성을 설정 합니다.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 두 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>속성이 사용 됩니다. |      > [!NOTE] >이 메서드는 호출기 행을 초기화 하지 않습니다.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 호출기 행을 만들려면 사용은 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A>메서드.</xref:System.Web.UI.WebControls.FormView.InitializePager%2A>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 를 초기화 합니다."
  overload: System.Web.UI.WebControls.FormView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스의 현재 레코드를 삽입합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드 이면 InsertItem 메서드를 사용 하 여 프로그래밍 방식으로 데이터 소스에서 현재 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView> 외부에서 현재 레코드를 삽입 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.FormView>이 메서드는 그렇지 않으면 호출 하는 경우 컨트롤이 삽입 모드에 있어야는 <xref:System.Web.HttpException>throw 됩니다.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       삽입 작업 전에 페이지의 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.FormView.ItemInserted>및 <xref:System.Web.UI.WebControls.FormView.ItemInserting>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted>"
  example:
  - "The following example demonstrates how to use the InsertItem method to programmatically insert the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-cs[FormViewInsertItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_157_1.aspx)]\n [!code-vb[FormViewInsertItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_157_1.aspx)]"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 호출 될 때 페이지 유효성 검사를 수행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤 삽입 모드에 있지 않습니다.       -또는- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 연관 된 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 null입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입 모드에서 항목에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤이 렌더링 컨트롤의 현재 모드에 따라 데이터 행에 대해 다른 서식 파일 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>속성).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 다음 표에서 각 모드에 사용 되는 템플릿이 보여 줍니다.      | 모드 | 렌더링 되는 템플릿 |   |----------|-----------------------|   | 편집 | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | 삽입 | InsertItemTemplate |   | 읽기 전용 | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       사용 하 여 데이터에 대 한 고유의 사용자 인터페이스 (UI)를 정의 하려면 먼저 속성 경우 행은 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 일반적으로 삽입 항목 템플릿을 명령 레코드를 삽입 하 고 삽입 작업을 취소 단추 수 있을 뿐만 아니라 새 레코드에 대 한 값을 입력 하 고 사용자에 대 한 입력된 컨트롤을 포함 합니다.       사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<InsertItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<InsertItemTemplate>` 태그입니다. 양방향 바인딩 식을 사용 하 여 필드를 입력 컨트롤과 연결할 수 있습니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 자동으로 연결된 된 입력된 컨트롤에서 필드 값을 추출 합니다.</xref:System.Web.UI.WebControls.FormView> 양방향 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다. 템플릿에 명령 단추 컨트롤을 추가 및 삽입 작업을 기본 제공 취소를 수행 하는 명령 단추를 만들려면 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.      | 명령 단추 유형 | CommandName 값 |   |-------------------------|-----------------------|   | 취소 | &quot; 취소 &quot;|   | 삽입 | &quot; 삽입 &quot;|       항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_158_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 데이터에 대 한 사용자 지정 콘텐츠가 들어 있는 경우 행은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 은 컨트롤이 삽입 모드에 있습니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 삽입 작업을 수행할 때 호출 되는 페이지에 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤 삽입 작업을 수행할 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.FormView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 삽입 모드에 있을 때이 컨트롤입니다."
  remarks: "사용 하 여 InsertRowStyle 속성 데이터의 모양을 제어 하는 경우 행을 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드에 있으면.</xref:System.Web.UI.WebControls.FormView> 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 삽입 모드 이면 데이터 행에 의해 지정 된 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>속성.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle>       선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `InsertRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<InsertRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `InsertRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the InsertRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1317_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1317_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 데이터 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 삽입 모드에 있을 때이 컨트롤입니다."
  overload: System.Web.UI.WebControls.FormView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 형식의 필드에 바인딩할 수 있는지 여부를 결정 하는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "IsBindableType 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>지정된 된 데이터 형식 필드 컨트롤에 바인딩할 수 있는지 여부를 확인 하기 위해 컨트롤.</xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>컨트롤은 다음 데이터 형식 지원:-모든 기본 등의 데이터 형식은 <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>등.</xref:System.Int32> </xref:System.Byte> </xref:System.Boolean> </xref:System.Web.UI.WebControls.FormView>      -   <xref:System.DateTime>      -   <xref:System.Decimal>      -   <xref:System.Guid>      -   <xref:System.String></xref:System.String></xref:System.Guid></xref:System.Decimal></xref:System.DateTime>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>확인할 데이터 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 데이터 형식의 필드에 바인딩할 수 하는 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "경우에 내에서 단추는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭 합니다."
  remarks: "ItemCommand 이벤트가 발생 하면 내에서 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       내에서 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다.</xref:System.Web.UI.WebControls.FormView> 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.      | CommandName 값 | 설명 |   |-----------------------|-----------------|   |&quot; 취소 &quot;| 편집 또는 삽입 작업을 취소 하 고 보냅니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드 및 지정 된을 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삭제 &quot;| 현재 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemDeleted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting>이벤트입니다. |   |&quot; 편집 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삽입 &quot;| 데이터 소스에 현재 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemInserted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemInserting>이벤트입니다. |   |&quot; 새 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 삽입 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 페이지 &quot;| 페이징 작업을 수행 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 설정의 `CommandArgument` 단추 &quot;First&quot;, &quot;마지막&quot;를, &quot;다음&quot;, &quot;이전&quot; 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>이벤트입니다. |   |&quot; 업데이트 &quot;| 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> <xref:System.Web.UI.WebControls.FormView.ItemUpdated>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>이벤트입니다. |       위의 표에 나열 된 단추를 클릭할 때 ItemCommand 이벤트가 발생 하지만 것이 좋습니다 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       A <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>개체 명령 이름과 클릭 된 단추의 명령 인수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 명령 이름 및 명령 인수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>및 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>속성을 각각.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 사용 하 여 이벤트를 발생 하는 컨트롤에 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.FormView> control. When the user clicks the Add button, the currently displayed item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_135_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_135_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.FormViewCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 행을 만든 후에 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "ItemCreated 이벤트는의 모든 행을 만든 후에 발생 한 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 컨트롤을 처음으로 렌더링 하는 경우 또는 사용자가 다른 레코드로 이동할 때 발생할 수 있습니다. 사용자 정의 루틴에 추가 하거나이 이벤트가 발생할 때마다 행의 내용을 수정 등을 수행 하는 이벤트 처리 메서드를 제공 하려면이 이벤트를 사용할 수 있습니다.      > [!NOTE] > The ItemCreated 이벤트가 발생 하기 전에 <xref:System.Web.UI.WebControls.FormView>컨트롤이 데이터 바인딩되어.</xref:System.Web.UI.WebControls.FormView> 바인딩된 필드의 값을 수정 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>이벤트.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>       머리글, 바닥글 및 호출기 행에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView>사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, 또는 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.FooterRow%2A> </xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> </xref:System.Web.UI.WebControls.FormView> 데이터 행에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.Row%2A>속성.</xref:System.Web.UI.WebControls.FormView.Row%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemCreated event to update the text of a <xref:System.Web.UI.WebControls.Label> control contained in the pager row.  \n  \n [!code-vb[FormViewItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_13_1.aspx)]\n [!code-cs[FormViewItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_13_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내에서 삭제 단추 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭할 삭제 작업 후 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤 삭제 단추 ItemDeleted 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;Delete&quot;로 설정) 컨트롤 내에서 클릭 하면 후의 <xref:System.Web.UI.WebControls.FormView>레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>개체 영향을 받는 레코드와 발생할 수 있는 모든 예외 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 삭제 작업의 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> 키 필드 및 삭제 된 레코드의 키가 아닌 필드의 이름/값 쌍에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemDeleted event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_35_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_35_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.FormViewDeletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내에서 삭제 단추 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭할 삭제 작업이 수행 되기 전에 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤 삭제 단추 ItemDeleting 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;Delete&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView>레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면 레코드를 삭제 하기 전에이 이벤트가 발생할 때마다 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>개체 삭제 하 고 레코드의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타낼 수 있습니다 하는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> 사용 레코드의 인덱스를 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> 삭제 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 사용 하 여 키 필드 및 키가 아닌 필드를 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemDeleting event to cancel a delete operation.  \n  \n [!code-cs[FormViewDeleteEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[FormViewDeleteEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.FormViewDeleteEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "경우에 삽입 단추에 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭할 삽입 작업 후 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤에 있는 삽입 단추 ItemInserted 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;Insert&quot;로 설정) 컨트롤 내에서 클릭 하면 후의 <xref:System.Web.UI.WebControls.FormView>레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>개체 영향을 받는 레코드와 발생할 수 있는 모든 예외 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 삽입 작업의 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 사용 하 여 삽입된 된 레코드의 값에 액세스 해야 하는 경우는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       기본적으로는 <xref:System.Web.UI.WebControls.FormView>제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성 삽입 작업 후.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 유지 하는 <xref:System.Web.UI.WebControls.FormView>삽입 모드에 컨트롤을 설정는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemInserted event to determine whether an exception occurred during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.FormViewInsertedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 삽입 단추 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭할 삽입 작업이 수행 되기 전에 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤에 있는 삽입 단추 ItemInserting 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;Insert&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView>레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 레코드의 값이이 이벤트가 발생할 때마다 데이터 원본에 삽입 하기 전에 인코딩 HTML 처럼 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>개체에 전송 하는 선택적 명령 인수의 값을 확인할 수 있는 이벤트 처리 메서드에 전달 되는 <xref:System.Web.UI.WebControls.FormView>컨트롤 삽입 작업을 취소 해야 함을 나타낼 수 있습니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> 명령 인수 값에 해당 하는 `CommandArgument` 삽입 단추의 속성입니다. 경우는 `CommandArgument` 삽입 단추의 속성이 설정 되어 있으면 사용는 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>명령 인수의 값을 확인 하는 속성.</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 삽입 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 또한 읽기 또는 사용 하 여 새 레코드에 대 한 필드 값을 수정할 수는 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>속성.</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemInserting event to cancel an insert operation.  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_61_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_61_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.FormViewInsertEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 읽기 전용 모드인 경우를 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤이 렌더링 컨트롤의 현재 모드에 따라 데이터 행에 대해 다른 서식 파일 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>속성).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> 다음 표에서 각 모드에 사용 되는 템플릿이 보여 줍니다.      | 모드 | 렌더링 되는 템플릿 |   |----------|-----------------------|   | 편집 | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | 삽입 | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | 읽기 전용 | ItemTemplate |       사용 하 여 ItemTemplate 속성 데이터에 대 한 고유의 사용자 인터페이스 (UI)를 정의 하는 경우 행은 <xref:System.Web.UI.WebControls.FormView>컨트롤은 읽기 전용 모드에.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 일반적으로 항목 템플릿을 명령 단추를 편집, 삽입 및 레코드를 삭제할 수 있을 뿐만 아니라 레코드의 필드 값을 표시 하는 컨트롤을 포함 합니다.       사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<ItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<ItemTemplate>` 태그입니다. 컨트롤에 바인딩된 데이터 소스의 필드 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 데이터 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터 바인딩 식 구문](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)합니다. 기본 제공 삭제, 편집 및 레코드는 새로운 작업을 수행 하는 명령 단추를 만들려면 명령 단추 컨트롤을 템플릿에 추가 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.      | 명령 단추 유형 | CommandName 값 |   |-------------------------|-----------------------|   | 삭제 | &quot; 삭제 &quot;|   | 편집 | &quot; 편집 &quot;|   | 새로 만들기 | &quot; 새 &quot;|       항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.RowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_192_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_192_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 데이터에 대 한 사용자 지정 콘텐츠가 들어 있는 경우 행은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 읽기 전용 모드에 있습니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 단추를 때 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭 하 고, 업데이트 작업 후 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤에 있는 업데이트 단추 ItemUpdated 이벤트를 발생 시킵니다 (단추와 해당 `CommandName` 속성이 &quot;업데이트&quot;로 설정) 컨트롤 내에서 클릭 하면 후는 <xref:System.Web.UI.WebControls.FormView>레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>개체 영향을 받는 레코드와 발생할 수 있는 모든 예외 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 업데이트 작업에 의해 영향 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 사용 하 여 업데이트 된 레코드에 대 한 키 필드 값에 액세스 해야 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 사용 하 여 원래 및 업데이트 된 키가 아닌 필드의 값에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>및 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       기본적으로는 <xref:System.Web.UI.WebControls.FormView>제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성 업데이트 작업 후.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> 계속 하려면는 <xref:System.Web.UI.WebControls.FormView>편집 모드에 컨트롤을 설정는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemUpdated event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_100_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.FormViewUpdatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 단추를 경우에 발생 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 클릭할 업데이트 작업이 수행 되기 전에 합니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>컨트롤에는 업데이트 단추 ItemUpdating 이벤트를 발생 시킵니다. (단추와 해당 `CommandName` 속성이 &quot;업데이트&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView>레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 레코드의 값이이 이벤트가 발생할 때마다 데이터 원본에서 업데이트 하기 전에 인코딩 HTML 처럼 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>개체에 전송 하는 선택적 명령 인수의 값을 확인할 수 있는 이벤트 처리 메서드에 전달 되는 <xref:System.Web.UI.WebControls.FormView>제어 및 업데이트 작업을 취소 해야 함을 나타냅니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 명령 인수 값에 해당 하는 `CommandArgument` 업데이트 단추의 속성입니다. 때는 `CommandArgument` 업데이트 단추에 속성 설정, 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>명령 인수의 값을 확인 하는 속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 또한 읽기 또는 사용 하 여 사용자가 입력 한 새 값을 수정할 수는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>속성의 키 필드를 포함 하는 동안는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>속성 키가 아닌 필드를 포함 합니다.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 키가 아닌 필드의 원래 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>속성.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ItemUpdating event to cancel an update operation.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_124_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_124_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.FormViewUpdateEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 경우에 지속 되어야 하는 컨트롤 속성의 <xref:System.Web.UI.Control.EnableViewState*>속성이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "LoadControlState 메서드는 상태를 로드 하는 데 사용 되는 <xref:System.Web.UI.WebControls.FormView>경우에 지속 되어야 하는 컨트롤 속성의 <xref:System.Web.UI.Control.EnableViewState%2A>속성이 `false`.</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 확장할 때 주로 컨트롤 개발자가이 메서드는는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>의 상태를 나타내는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 뷰 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "LoadViewState 메서드는 이전에 저장 된 뷰 상태를 로드 하는 데 사용 되는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 확장할 때 주로 컨트롤 개발자가이 메서드는는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>의 상태를 나타내는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 편집, 삽입 및 읽기 전용 모드 간에 하지만 모드가 변경 된 후 전환 합니다."
  remarks: "ModeChanged 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.FormView>컨트롤 모드는 실제로 변경 되 면 있지만 편집, 삽입 및 읽기 전용 모드 사이 전환 하려고 시도 합니다.</xref:System.Web.UI.WebControls.FormView> 이렇게 하면 동기화 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤이이 이벤트가 발생할 때마다 다른 컨트롤과.</xref:System.Web.UI.WebControls.FormView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ModeChanged event to display the current mode in the header row of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_127_1.aspx)]\n [!code-cs[FormViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_127_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 모드가 변경 되기 전에 편집, 삽입 및 읽기 전용 모드 간에 전환 합니다."
  remarks: "ModeChanging 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.FormView>컨트롤 모드는 실제로 변경 되기 전에 있지만 편집, 삽입 및 읽기 전용 모드 사이 전환 하려고 시도 합니다.</xref:System.Web.UI.WebControls.FormView> 구성 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView>특정 모드에 대 한 제어 하거나이 이벤트가 발생할 때마다 모드 변경을 취소 합니다.</xref:System.Web.UI.WebControls.FormView>       A <xref:System.Web.UI.WebControls.FormViewModeEventArgs>개체 모드를 확인할 수 있습니다 하는 이벤트 처리 메서드에 전달 되는 <xref:System.Web.UI.WebControls.FormView>제어 전환을 사용자 편집 작업을 취소로 인해 ModeChanging 이벤트 발생 여부를 확인 하거나 삽입 작업을 취소 해야 함을 나타내려면.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewModeEventArgs> 새 모드를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>속성.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>속성 중 하나를 설정 하 여 대체 모드로 전환 하는 <xref:System.Web.UI.WebControls.FormViewMode>열거형 값입니다.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>속성을 사용자가 편집 작업을 취소 여부를 확인 합니다.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 삽입 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the ModeChanging event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_111_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.FormViewModeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  id: ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "테이블 관련 CSS 스타일와 연결 된 규칙이 있는지 여부를 결정은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤을 해당 기본값으로 설정 됩니다."
  remarks: "사용 하 여 테이블 관련 CSS 스타일 규칙을 해당 기본값으로 설정 됩니다는 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>및 <xref:System.Web.UI.WebControls.Style.Font%2A>속성.</xref:System.Web.UI.WebControls.Style.Font%2A> </xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> </xref:System.Web.UI.WebControls.FormView.GridLines%2A> </xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> </xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>"
  syntax:
    content: protected virtual string ModifiedOuterTableStylePropertyName ();
    parameters: []
    return:
      type: System.String
      description: "연결 된 기본 CSS 스타일 규칙의 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 계층 구조를 통과 하는 이벤트를 처리 합니다."
  remarks: "<xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>메서드 선택적으로 이벤트를 처리 하 여 컨트롤 계층 구조 통과 컨트롤에서 사용 되는 <xref:System.Web.UI.Control.RaiseBubbleEvent%2A>메서드.</xref:System.Web.UI.Control.RaiseBubbleEvent%2A> </xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> 속성을 검사 하 여 이벤트를 처리할 것인지를 결정은 <xref:System.EventArgs>에 포함 된 개체는 `e` 매개 변수.</xref:System.EventArgs> 이벤트를 처리 해야 하는 경우 메서드는 적절 한 조치를 수행 합니다. 다른 이벤트는 무시 되 고 컨트롤 계층 구조로 전달 됩니다. 이 메서드는 반환 값을 통해 컨트롤 계층 구조 추가 이벤트를 전달할지 여부를 나타냅니다.       <xref:System.Web.UI.WebControls.FormView>컨트롤에서 인식 단추 중 하나를 클릭할 때 적절 한 조치를 수행 하기 위해이 메서드의 기본 구현을 재정의 합니다.</xref:System.Web.UI.WebControls.FormView> 다음 표에 명령 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 인식.</xref:System.Web.UI.WebControls.FormView>      | 단추 | CommandName 값 | 설명 |   |------------|-----------------------|-----------------|   | 취소 | &quot; 취소 &quot;| 작업을 취소 하 고 사용자가 입력 한 값을 취소할 수 업데이트 또는 삽입 작업에 사용 합니다. <xref:System.Web.UI.WebControls.FormView>돌아올 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성에 지정 된 모드를 제어 합니다. |   | 삭제 | &quot; 삭제 &quot;| 데이터 소스에서 표시 된 레코드를 삭제 하려면 삭제 작업에 사용 합니다.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView.ItemDeleting>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleted>이벤트입니다. |   | 편집 | &quot; 편집 &quot;| 업데이트 작업에 사용 하 여 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>속성에 지정 된 데이터 행에 대해 표시 됩니다. |   | 삽입 | &quot; 삽입 &quot;| 삽입 작업에는 사용자가 제공한 값이 포함 된 데이터 원본에 새 레코드를 삽입 하려고 하는 데 사용 합니다.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> <xref:System.Web.UI.WebControls.FormView.ItemInserting>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemInserted>이벤트입니다. |   | 새로 만들기 | &quot; 새 &quot;| 삽입 작업에 사용 하 여 <xref:System.Web.UI.WebControls.FormView>컨트롤을 삽입 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>속성에 지정 된 데이터 행에 대해 표시 됩니다. |   | 페이지 | &quot; 페이지 &quot;| 페이징 작업에서 페이징을 수행 하는 페이저 행에 있는 단추를 나타내는 데 사용 합니다.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 페이징 작업을 지정 하려면는 `CommandArgument` &quot;다음&quot;, &quot;이전&quot;, &quot;First&quot;, &quot;마지막&quot; 또는 탐색할 수 있는 페이지의 인덱스를 단추의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **참고:** 단추의이 유형은 호출기 서식 파일에만 일반적으로 사용 됩니다. |   | 업데이트 | &quot; 업데이트 &quot;| 사용자가 제공한 값이 포함 된 데이터 원본에 표시 된 레코드를 업데이트 하기 위해 업데이트 작업에 사용 합니다. <xref:System.Web.UI.WebControls.FormView.ItemUpdating>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdated>이벤트입니다. |       이 버전의 메서드 반환 `true` 이러한 단추 중 하나를 처리 하는 경우.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트 버블링 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 및 대리자](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)합니다."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트를 전달할지 컨트롤 계층 구조; 더 이상 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트입니다."
  remarks: "OnInit 메서드를 호출는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.Control.Init>이벤트.</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;> </xref> 이벤트입니다."
  remarks: "OnItemCommand 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCreated&quot;> </xref> 이벤트입니다."
  remarks: "OnItemCreated 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;> </xref> 이벤트입니다."
  remarks: "OnItemDeleted 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemDeleted>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemDeleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeletedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleting&quot;> </xref> 이벤트입니다."
  remarks: "OnItemDeleting 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemDeleting>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemDeleting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeleteEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewDeleteEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은, 사용자 삭제 작업을 취소 하지 않은 및 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> 이벤트입니다."
  remarks: "OnItemInserted 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemInserted>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemInserted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserting&quot;> </xref> 이벤트입니다."
  remarks: "OnItemInserting 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemInserting>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemInserting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewInsertEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은 사용자 삽입 작업을 취소 하지 않은 하 고 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;> </xref> 이벤트입니다."
  remarks: "OnItemUpdated 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemUpdated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemUpdated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdatedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;> </xref> 이벤트입니다."
  remarks: "OnItemUpdating 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemUpdating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdateEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewUpdateEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은 사용자 업데이트 작업을 취소 하지 않은 하 고 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnModeChanged 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ModeChanged>이벤트.</xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnModeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> 이벤트입니다."
  remarks: "OnModeChanging 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnModeChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은, 취소 되지 않은 모드 변경 및 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanged&quot;> </xref> 이벤트입니다."
  remarks: "OnPageIndexChanged 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanging&quot;> </xref> 이벤트입니다."
  remarks: "OnPageIndexChanging 메서드에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.FormView>를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>이벤트.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView>클래스</xref:System.Web.UI.WebControls.FormView> 를 확장할 때 주로 컨트롤 개발자가 사용 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnPageIndexChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewPageEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewPageEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 데이터 소스 제어에 바인딩되어 있지 않은, 페이징 작업 취소 되지 않은 및 이벤트 처리기는 이벤트에 등록 되지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본의 모든 레코드를 표시 하는 데 필요한 페이지의 총 수를 가져옵니다."
  remarks: "페이징 기능을 활성화 하는 경우 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이로 설정 되어 `true`), 데이터 원본에 있는 레코드의 총 수를 확인 하려면 PageCount 속성을 사용 합니다.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>      > [!NOTE] > 때문에 <xref:System.Web.UI.WebControls.FormView>컨트롤 한 번에 하나의 레코드만 표시,이 값은 데이터 원본의 모든 레코드를 표시 하는 데 필요한 페이지의 총 수에 해당 합니다.</xref:System.Web.UI.WebControls.FormView> 데이터 바인딩이 발생 후에이 값을 정확 하 게 될 때까지 하지 않습니다.       데이터 원본에서 현재 레코드의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of records displayed in the control.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_653_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_653_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "데이터 원본에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.FormView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 된 페이지의 인덱스를 가져오거나 설정 합니다."
  remarks: "페이징 기능을 활성화 하는 경우 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이 `true`), PageIndex 속성을 사용 하 여 현재 표시 된 레코드의 인덱스를 확인 합니다.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.      그러나 > [!NOTE] >; 표시 되는 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용할 때,이 속성은&0;부터 시작 하 고 고려해 야 합니다.       데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.PageCount%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the page index of the displayed record.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_319_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_319_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "에 표시 되는 데이터 항목의&0;부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 기본 데이터 원본에서 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값이-1 보다 작습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우의 값은 <xref:System.Web.UI.WebControls.FormView.PageIndex*>페이징 작업 후 속성 변경.</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>제어 페이저 단추 PageIndexChanged 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;페이지&quot;로 설정) 컨트롤 내에서 클릭 하면 후의 <xref:System.Web.UI.WebControls.FormView>컨트롤 페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       페이저 단추는 일반적으로의 호출기 행에 위치는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 이 이벤트를 동기화 하는 대개는 <xref:System.Web.UI.WebControls.FormView>보호로 <xref:System.Web.UI.WebControls.GridView>컨트롤 또는 동작을 설정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤 페이징 작업 후.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.FormView> to read-only mode when the user navigates to another record.  \n  \n [!code-vb[FormViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_142_1.aspx)]\n [!code-cs[FormViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_142_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우의 값은 <xref:System.Web.UI.WebControls.FormView.PageIndex*>페이징 작업 전에 속성 변경 내용을.</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "<xref:System.Web.UI.WebControls.FormView>제어 페이저 단추 PageIndexChanging 이벤트를 발생 시킵니다 (단추 해당 `CommandName` 속성이 &quot;페이지&quot;로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView>페이징 작업을 처리 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.      > [!NOTE] > 프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       페이저 단추는 일반적으로의 호출기 행에 위치는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       A <xref:System.Web.UI.WebControls.FormViewPageEventArgs>개체는이 통해 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타내려면 이벤트 처리 메서드에 전달 됩니다.</xref:System.Web.UI.WebControls.FormViewPageEventArgs> 사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>속성.</xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> 페이징 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.FormViewPageEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.FormViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewPageEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[FormViewPageEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_120_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.FormViewPageEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "PagerSettings 속성을 사용 하 여의 호출기 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이 `true`), 컨트롤의 다른 레코드를 탐색 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings>개체를 반환 합니다.</xref:System.Web.UI.WebControls.PagerSettings> 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.PagerSettings>개체 (예를 들어 `PagerSettings-Mode`).</xref:System.Web.UI.WebControls.PagerSettings> 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerSettings.Mode`). 일반 설정에는 일반적으로 호출기 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 이미지 탐색 컨트롤에 대 한 포함 됩니다."
  example:
  - "The following example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_238_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_238_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> 페이저 단추의 속성을 설정할 수 있는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행의 표시 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "PagerStyle 속성을 사용 하 여의 호출기 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이 `true`), 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `PagerStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<PagerRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the PagerStyle property to specify the style settings for the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_425_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_425_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 호출기 행의 스타일을 나타내는 한 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "호출기 행에 대 한 사용자 지정 콘텐츠를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "호출기 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView>페이징 기능을 활성화 하는 시기를 제어 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이 true로).</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView> 호출기 행 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 호출기 행 사용자 인터페이스 (UI)를 사용 하는 대신 PagerTemplate 속성을 사용 하 여 UI를 직접 정의할 수 있습니다.      > [!NOTE] > 때 the PagerTemplate 속성이 설정 된 기본 제공 호출기 행 UI를 재정의 합니다.       호출기 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<PagerTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<PagerTemplate>` 태그입니다. 호출기 행의 모양을 제어는 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>속성.</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>       일반적으로 단추 컨트롤 페이징 작업을 수행 하는 페이저 서식 파일에 추가 됩니다. <xref:System.Web.UI.WebControls.FormView>때 단추 컨트롤을 페이징 작업을 수행 하는 컨트롤의 `CommandName` &quot;페이지&quot;로 설정 하는 속성을 클릭 합니다.</xref:System.Web.UI.WebControls.FormView> 단추의 `CommandArgument` 속성 페이징 수행할 작업 유형을 결정 합니다. 지 원하는 명령 인수 값을 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>      | 명령 인수 값 | 설명 |   |---------------------------|-----------------|   |&quot; 다음 &quot;| 다음 페이지로 이동 합니다. |   |&quot; Prev &quot;| 이전 페이지로 이동 합니다. |   |&quot; 첫 번째 &quot;| 첫 번째 페이지를 탐색 합니다. |   |&quot; 마지막 &quot;| 마지막 페이지를 탐색 합니다. |   | 정수 값 | 지정된 된 페이지 번호를 탐색 합니다. |"
  example:
  - "The following example demonstrates how to define a custom pager template.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_644_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_644_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 호출기 행에 대 한 사용자 지정 콘텐츠가 들어 있는입니다. 기본값은 null로,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.FormView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 데이터 소스에 바인딩하는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "PerformDataBinding 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 컨트롤에 지정된 된 데이터 소스를 바인딩할.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>데이터 소스를 나타내는입니다.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.FormView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "설정의 컨트롤 계층 구조는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "PrepareControlHierarchy 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.FormView>컨트롤 렌더링 되기 전에 제어.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 적절 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "메서드는 다시 게시 이벤트 발생에 대 한 적절 한 이벤트를 발생 시킵니다. RaisePostBackEvent를 호출 하 여 페이지는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs>발생 하는 이벤트에 대 한 개체입니다.</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트 인수를 만들려는 <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 발생 하는 이벤트 또는 이벤트입니다."
  overload: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 클라이언트에서 제어 합니다."
  remarks: "Render 메서드는 사용 하 여 지정 된 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 데 <xref:System.Web.UI.HtmlTextWriter>개체입니다.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 클라이언트에 렌더링할 출력 스트림이 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  id: RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에 렌더링 된 HTML에 포함 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref> 인라인 스타일을 적용 하기 위하여 요소입니다."
  remarks: "인라인 스타일 속성 수와 같은 있도록 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>컨트롤에 대 한 렌더링 되는 모든 HTML에 적용, ASP.NET에 렌더링 된 HTML이 포함 된 `table` 요소.</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 외부 하지 않을 경우 `table` 이 속성을 설정 하는 요소를 렌더링할 수 `false`합니다. 이 경우 인라인 전체 컨트롤에 적용 되는 스타일 속성을 설정 하려고 하면 예외가 throw 됩니다."
  syntax:
    content: public virtual bool RenderOuterTable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 렌더링 된 HTML이 포함 하는 경우는 <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.RenderOuterTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Row
  id: Row
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 의 데이터 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "프로그래밍 방식으로 액세스할 행 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewRow>데이터 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.FormViewRow> 현재 모드에 대해 렌더링 되는 템플릿을 기반으로 하는 다른 콘텐츠를 포함 하는 데이터 행 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>속성).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 현재 모드에 대 한 서식 파일의 내용을 액세스할 수 있습니다. 다음 표에서 각 모드에 사용 되는 템플릿이 보여 줍니다.      | 모드 | 렌더링 되는 템플릿 |   |----------|-----------------------|   | 편집 | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | 삽입 | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | 읽기 전용 | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      > [!NOTE] > 행의 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 데이터 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>       예를 들어 사용자 지정 콘텐츠를 추가할 때 데이터 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 행 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.FormView>고, 그렇지 않으면 데이터 바인딩된 컨트롤이 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 변경 내용을 덮어씁니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the Row property to access the properties of the data row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-cs[FormViewRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1104_1.aspx)]\n [!code-vb[FormViewRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1104_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow Row { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "<xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 나타내는 데이터 행에는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 데이터 행에 표시 되는 모양을 설정할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 읽기 전용 모드인 경우를 제어 합니다."
  remarks: "RowStyle 속성 데이터의 모양을 제어 하는 경우 행을 사용 하 여 한 <xref:System.Web.UI.WebControls.FormView>컨트롤은 읽기 전용 (표시) 모드에 있습니다.</xref:System.Web.UI.WebControls.FormView> 경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 읽기 전용 모드 이면 데이터 행에 의해 지정 된 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>속성.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle>개체를 반환 합니다.</xref:System.Web.UI.WebControls.TableItemStyle> 선언적으로 다음 방법 중 하나를 사용 하는 속성을 설정할 수 있습니다:-의 여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.FormView>폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle>개체 (예를 들어 `RowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -중첩 된 `<RowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>       양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다."
  example:
  - "The following example demonstrates how to use the RowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_235_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_235_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 데이터 행의 스타일을 나타내는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 읽기 전용 모드인 경우를 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "상태를 저장 된 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 경우에 지속 되어야 하는 컨트롤 속성의 &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; 속성이로 설정 되어 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "이 메서드는의 상태를 저장 하는 데 사용 되는 <xref:System.Web.UI.WebControls.FormView>경우에 지속 되어야 하는 컨트롤 속성의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>속성이 `false`.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > 확장 하려면이 메서드는 주로 컨트롤 개발자가는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "서버 컨트롤 현재 뷰 상태를 반환합니다. 컨트롤과 연결 된 뷰 상태가 없으면이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 뷰 상태를 저장 된 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "SaveViewState 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 상태를 저장 하는 컨트롤입니다.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>의 저장된 된 상태를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 레코드의 데이터 키 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성이 설정 되어는 <xref:System.Web.UI.WebControls.FormView>컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey>필드 또는 필드에 나열 된 키/값 쌍을 포함 하는 개체는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>현재 레코드에 대 한 속성.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> <xref:System.Web.UI.WebControls.DataKey>개체는 기본 키 필드 또는 현재 레코드의 필드를 나타내며에 저장 되는 <xref:System.Web.UI.WebControls.FormView.DataKey%2A>속성.</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> 사용 하는 대신는 <xref:System.Web.UI.WebControls.FormView.DataKey%2A>데이터 키 값에 액세스 하는 속성을 바로 가기로 SelectedValue 속성을 사용할 수 있습니다.</xref:System.Web.UI.WebControls.FormView.DataKey%2A>      > [!NOTE] > 때는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성 여러 필드를 나열,이 속성이 나열 된 첫 번째 필드의 값을 반환 합니다.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the value of the key field.  \n  \n [!code-cs[FormViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_824_1.aspx)]\n [!code-vb[FormViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_824_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "데이터 키의 현재 레코드의 값을 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "설정에 현재 표시 된 페이지의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "설정할 인덱스입니다."
  overload: System.Web.UI.WebControls.FormView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IDataItemContainer.DataItemIndex%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataItemContainer>인터페이스.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "표시 인덱스를 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IDataItemContainer.DisplayIndex%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IDataItemContainer>인터페이스.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "항상 0을 반환 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 이벤트를 발생 시키는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 서버에 다시 게시 될 때 제어 합니다."
  remarks: "페이지 포스트백 이벤트가 발생할 때 IPostBackEventHandler.RaisePostBackEvent 메서드를 호출 합니다. 로드 및 변경 내용 알림 완료 되었으나 페이지가 렌더링 된 페이지 수명 주기에서이 호출이 발생 합니다."
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "이벤트에 대 한 인수입니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시 되는 항목의 기본 키 필드의 이름을 포함 하는 배열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "에 표시 되는 항목의 기본 키 필드의 이름이 포함 된 배열에서 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 항목의 목록 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤이 바인딩된 데이터 원본에 둘 이상의 데이터 항목 목록이 포함 되어 있으면 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "데이터 목록 이름 항목을 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤에 바인딩합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터의 목록을 포함 하는 개체를 가져오거나 설정 합니다. 하는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "데이터의 목록을 포함 하는 개체는는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져오거나 데이터의 목록을 포함 하는 데이터 소스 컨트롤의 ID 설정 하는 항목은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "데이터의 목록을 포함 하는 데이터 소스 컨트롤의 ID를 항목에 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터를 가져옵니다 하는 항목 데이터의 목록을 포함 하는 원본 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "데이터의 목록을 포함 하는 데이터 원본 개체를 항목에 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 검색을 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "행의 데이터 키 값을 나타내는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "행의 데이터 키 값을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 모드를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.FormView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IDataBoundControl>인터페이스.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "현재 모드는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "포스트백 이벤트 옵션에 대 한 결정은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "IPostBackContainer.GetPostBackOptions 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.FormView>만들 컨트롤을는 <xref:System.Web.UI.PostBackOptions>컨트롤에 대 한 다시 게시 이벤트 옵션이 포함 된 개체입니다.</xref:System.Web.UI.PostBackOptions> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.PostBackOptions>개체에 대 한 매개 변수로 사용 되는 일반적으로 <xref:System.Web.UI.Page.GetPostBackEventReference%2A>메서드.</xref:System.Web.UI.Page.GetPostBackEventReference%2A> </xref:System.Web.UI.PostBackOptions>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "페이지는 서버에 게시 하는 단추 컨트롤입니다."
    return:
      type: System.Web.UI.PostBackOptions
      description: "포스트백 이벤트에 대 한 옵션은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "에 포함 된 개체는 <code> buttonControl </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*> property of <code>buttonControl</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "TagKey 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림의 사용 하면는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "항상 반환 <xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 위쪽에 표시 되는 호출기 행을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "페이징이 활성화 된 경우 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>속성이로 설정 되어 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 호출기 행 사용자가 다른 레코드로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 프로그래밍 방식으로 액세스할 TopPagerRow 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewRow>의 상위 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > The TopPagerRow 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 위쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       이 속성은 일반적으로 프로그래밍 방식으로 조작 위쪽 페이저 행 예를 들어 사용자 지정 내용을 추가 해야 할 때 사용 됩니다. TopPagerRow 속성을 수정 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.FormView>고, 그렇지 않으면 데이터 바인딩된 컨트롤이 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 변경 내용을 덮어씁니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the pager row displayed at the top of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-vb[FormViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_408_1.aspx)]\n [!code-cs[FormViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_408_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> 의 상위 호출기 행을 나타내는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.FormView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "변경 내용을 추적 하 고 뷰 상태를 저장 하기 시작할 시작 위치 표시는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하는 시작 위치를 표시 하도록 재정의 됩니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스에서 현재 레코드를 업데이트 합니다."
  remarks: "경우는 <xref:System.Web.UI.WebControls.FormView>컨트롤 편집 모드에 있으면 UpdateItem 메서드를 사용 하 여 프로그래밍 방식으로 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView> 외부에서 현재 레코드를 업데이트 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView>제어 페이지 내의 다른 컨트롤 처럼.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.FormView>컨트롤이 고, 그렇지 않으면 호출에이 메서드를 편집 모드에 있어야는 <xref:System.Web.HttpException>throw 됩니다.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.FormView.ItemUpdated>및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>이벤트.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateItem method to programmatically update the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-vb[FormViewUpdateItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_32_1.aspx)]\n [!code-cs[FormViewUpdateItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_32_1.aspx)]"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 호출 될 때 페이지 유효성 검사를 수행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "이 메서드를 호출한 경우는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤 편집 모드에 있지 않습니다.       -또는- <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> 연관 된 개체는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 컨트롤은 null입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤이 업데이트 작업을 수행할 때 호출 되는 페이지 메서드의 이름을 가져오거나 설정 합니다."
  remarks: "Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)합니다."
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "컨트롤이 업데이트 작업을 수행할 때 호출 되는 페이지에 대 한 메서드의 이름입니다."
  overload: System.Web.UI.WebControls.FormView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.FormView.#ctor
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewRow
  nameWithType: FormViewRow
  fullName: System.Web.UI.WebControls.FormViewRow
- uid: System.Web.UI.WebControls.FormView.Caption
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.FormView.CreateTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
- uid: System.Web.UI.WebControls.FormView.DataItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormView.FooterRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
- uid: System.Web.UI.WebControls.FormViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventHandler
  nameWithType: FormViewCommandEventHandler
  fullName: System.Web.UI.WebControls.FormViewCommandEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
- uid: System.Web.UI.WebControls.FormViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventHandler
  nameWithType: FormViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeletedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
- uid: System.Web.UI.WebControls.FormViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventHandler
  nameWithType: FormViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeleteEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
- uid: System.Web.UI.WebControls.FormViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventHandler
  nameWithType: FormViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
- uid: System.Web.UI.WebControls.FormViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventHandler
  nameWithType: FormViewInsertEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
- uid: System.Web.UI.WebControls.FormViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventHandler
  nameWithType: FormViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
- uid: System.Web.UI.WebControls.FormViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventHandler
  nameWithType: FormViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdateEventHandler
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
- uid: System.Web.UI.WebControls.FormViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventHandler
  nameWithType: FormViewModeEventHandler
  fullName: System.Web.UI.WebControls.FormViewModeEventHandler
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventArgs
  nameWithType: FormViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeleteEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
- uid: System.Web.UI.WebControls.FormViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventArgs
  nameWithType: FormViewPageEventArgs
  fullName: System.Web.UI.WebControls.FormViewPageEventArgs
- uid: System.Web.UI.WebControls.FormView.PageCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
- uid: System.Web.UI.WebControls.FormViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventHandler
  nameWithType: FormViewPageEventHandler
  fullName: System.Web.UI.WebControls.FormViewPageEventHandler
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.FormView.TagKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
- uid: System.Web.UI.WebControls.FormView.#ctor*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView
  nameWithType: FormView.FormView
- uid: System.Web.UI.WebControls.FormView.AllowPaging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
- uid: System.Web.UI.WebControls.FormView.BackImageUrl*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormView.Caption*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
- uid: System.Web.UI.WebControls.FormView.CellSpacing*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode
  nameWithType: FormView.ChangeMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls
  nameWithType: FormView.CreateChildControls
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle
  nameWithType: FormView.CreateControlStyle
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: FormView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow
  nameWithType: FormView.CreateRow
- uid: System.Web.UI.WebControls.FormView.CreateTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable
  nameWithType: FormView.CreateTable
- uid: System.Web.UI.WebControls.FormView.CurrentMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind
  nameWithType: FormView.DataBind
- uid: System.Web.UI.WebControls.FormView.DataItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
- uid: System.Web.UI.WebControls.FormView.DataItemCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.DefaultMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem
  nameWithType: FormView.DeleteItem
- uid: System.Web.UI.WebControls.FormView.DeleteMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound
  nameWithType: FormView.EnsureDataBound
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues
  nameWithType: FormView.ExtractRowValues
- uid: System.Web.UI.WebControls.FormView.FooterRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager
  nameWithType: FormView.InitializePager
- uid: System.Web.UI.WebControls.FormView.InitializeRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow
  nameWithType: FormView.InitializeRow
- uid: System.Web.UI.WebControls.FormView.InsertItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem
  nameWithType: FormView.InsertItem
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType
  nameWithType: FormView.IsBindableType
- uid: System.Web.UI.WebControls.FormView.ItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.LoadControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState
  nameWithType: FormView.LoadControlState
- uid: System.Web.UI.WebControls.FormView.LoadViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState
  nameWithType: FormView.LoadViewState
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName
  nameWithType: FormView.ModifiedOuterTableStylePropertyName
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: FormView.OnBubbleEvent
- uid: System.Web.UI.WebControls.FormView.OnInit*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit
  nameWithType: FormView.OnInit
- uid: System.Web.UI.WebControls.FormView.OnItemCommand*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand
  nameWithType: FormView.OnItemCommand
- uid: System.Web.UI.WebControls.FormView.OnItemCreated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated
  nameWithType: FormView.OnItemCreated
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted
  nameWithType: FormView.OnItemDeleted
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting
  nameWithType: FormView.OnItemDeleting
- uid: System.Web.UI.WebControls.FormView.OnItemInserted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted
  nameWithType: FormView.OnItemInserted
- uid: System.Web.UI.WebControls.FormView.OnItemInserting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting
  nameWithType: FormView.OnItemInserting
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated
  nameWithType: FormView.OnItemUpdated
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating
  nameWithType: FormView.OnItemUpdating
- uid: System.Web.UI.WebControls.FormView.OnModeChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged
  nameWithType: FormView.OnModeChanged
- uid: System.Web.UI.WebControls.FormView.OnModeChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging
  nameWithType: FormView.OnModeChanging
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: FormView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: FormView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.FormView.PageCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PagerSettings*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding
  nameWithType: FormView.PerformDataBinding
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: FormView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: FormView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.Render*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render
  nameWithType: FormView.Render
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState
  nameWithType: FormView.SaveControlState
- uid: System.Web.UI.WebControls.FormView.SaveViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState
  nameWithType: FormView.SaveViewState
- uid: System.Web.UI.WebControls.FormView.SelectedValue*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex
  nameWithType: FormView.SetPageIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.FormView.TagKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
- uid: System.Web.UI.WebControls.FormView.TopPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState
  nameWithType: FormView.TrackViewState
- uid: System.Web.UI.WebControls.FormView.UpdateItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem
  nameWithType: FormView.UpdateItem
- uid: System.Web.UI.WebControls.FormView.UpdateMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
