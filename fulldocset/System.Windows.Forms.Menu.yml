### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Menu
  id: Menu
  children:
  - System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.CreateMenuHandle
  - System.Windows.Forms.Menu.Dispose(System.Boolean)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  - System.Windows.Forms.Menu.ToString
  langs:
  - csharp
  name: Menu
  nameWithType: Menu
  fullName: System.Windows.Forms.Menu
  type: Class
  summary: "모든 메뉴에 대 한 기본 기능을 나타냅니다. 하지만 <xref href=&quot;System.Windows.Forms.ToolStripDropDown&quot;> </xref> 및 <xref href=&quot;System.Windows.Forms.ToolStripDropDownMenu&quot;> </xref> 기능이 교체 및 추가에 이전 버전의 메뉴 컨트롤, 메뉴는 유지 이전 버전과 호환성 및 이후 사용 하도록 선택할 수 있습니다."
  remarks: "이 클래스는에 대 한 기본 클래스는 <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, 및 <xref:System.Windows.Forms.ContextMenu>클래스.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu> 이 클래스의 인스턴스를 만들 수 없습니다. 응용 프로그램 구성에 대 한 메뉴 <xref:System.Windows.Forms.MenuItem>개체입니다.</xref:System.Windows.Forms.MenuItem> 다른 포함할 수 있습니다 이러한 <xref:System.Windows.Forms.MenuItem>하위 메뉴 항목을 나타내는 개체입니다.</xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem>개체에 저장할 수는 <xref:System.Windows.Forms.MainMenu>폼에 대 한 전체 메뉴 구조로 표시 하기 위해 또는 <xref:System.Windows.Forms.ContextMenu>바로 가기 메뉴를 표시 하는 데 사용 되는.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> 이 클래스는 모든 메뉴 클래스에 공통 된 기능을 제공 합니다.       대부분의 기본 클래스와 달리 메뉴 클래스는 다양 한 속성을 정의 하려면 클래스의 파생된 클래스를 사용 합니다. 메뉴를 (mdi 다중) 다중 문서 인터페이스 응용 프로그램을 사용 하는 경우 사용할 수 있습니다는 <xref:System.Windows.Forms.Menu.MdiListItem%2A>속성을 통해 지정 된 <xref:System.Windows.Forms.MenuItem>응용 프로그램에서 열려 있는 MDI 자식 폼의 목록을 표시 하.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.MdiListItem%2A> <xref:System.Windows.Forms.Menu.MenuItems%2A>속성을 사용 하면 <xref:System.Windows.Forms.MenuItem>메뉴 클래스에 저장 된 개체의</xref:System.Windows.Forms.MenuItem> 목록이</xref:System.Windows.Forms.Menu.MenuItems%2A> 에 대 한는 <xref:System.Windows.Forms.MainMenu>또는 <xref:System.Windows.Forms.ContextMenu>,이 속성에 모두 포함 된 <xref:System.Windows.Forms.MenuItem>표시 되는 개체입니다.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.Menu.MenuItems%2A>속성은 이와 관련 된 하위 메뉴 항목 나타냅니다.</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.Windows.Forms.MenuItem>       모든 메뉴 파생된 클래스에 대해 제공 되는 속성과 함께 메뉴 클래스 메서드도 제공와 같은 <xref:System.Windows.Forms.Menu.CloneMenu%2A>및 <xref:System.Windows.Forms.Menu.MergeMenu%2A>기존 메뉴에서 새 메뉴를 만들 수 있도록 하는, 및도 병합 두 메뉴 구조를.</xref:System.Windows.Forms.Menu.MergeMenu%2A> </xref:System.Windows.Forms.Menu.CloneMenu%2A>       메뉴 클래스에는 또한 <xref:System.Windows.Forms.Menu.MenuItemCollection>.</xref:System.Windows.Forms.Menu.MenuItemCollection> 중첩 된 클래스 정의 이 클래스의 컬렉션을 정의 <xref:System.Windows.Forms.MenuItem>사용 되는 개체는 <xref:System.Windows.Forms.Menu.MenuItems%2A>속성.</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.Windows.Forms.MenuItem> 메서드를 사용할 수는 <xref:System.Windows.Forms.Menu.MenuItemCollection>클래스에서 메뉴 항목 추가 및 제거 하는 <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, 또는 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Menu.MenuItemCollection>"
  example:
  - "The following code example uses the derived class, <xref:System.Windows.Forms.MenuItem>, to create a menu structure for a form. The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application. The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.  \n  \n [!code-cpp[Classic Menu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_4_1.cpp)]\n [!code-cs[Classic Menu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_4_1.cs)]\n [!code-vb[Classic Menu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.ListBindable(false)]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      public abstract class Menu : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Menu(MenuItem[])
  nameWithType: Menu.Menu(MenuItem[])
  fullName: System.Windows.Forms.Menu.Menu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 클래스입니다."
  remarks: "이후 <xref:System.Windows.Forms.Menu>클래스는 추상 클래스를 상속 된 클래스에서 메뉴 생성자를 호출할 수만 있습니다.</xref:System.Windows.Forms.Menu>"
  syntax:
    content: protected Menu (System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "형식의 배열 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 메뉴에 추가할 개체를 포함 합니다."
  overload: System.Windows.Forms.Menu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  id: CloneMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: CloneMenu(Menu)
  nameWithType: Menu.CloneMenu(Menu)
  fullName: System.Windows.Forms.Menu.CloneMenu(Menu)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "복사본의 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 현재 매개 변수로 전달 되는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>합니다."
  remarks: "이 메서드는 전체 목록이 복사 <xref:System.Windows.Forms.MenuItem>개체 (에 저장 된는 <xref:System.Windows.Forms.Menu>에 전달 된 `menuSrc`) 현재 메뉴에.</xref:System.Windows.Forms.Menu> </xref:System.Windows.Forms.MenuItem> 복제 하려면 파생된 클래스에서이 방법을 사용할 수 있습니다 <xref:System.Windows.Forms.MenuItem>개체입니다.</xref:System.Windows.Forms.MenuItem> 파생 되는 다른 클래스에서 다시 사용할 수 있습니다 다음 <xref:System.Windows.Forms.Menu>와 같은 <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, 및 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Menu>"
  example:
  - "This example creates a main menu, `mainMenu1`, with three menu items: `File`, `Edit`, and `View`. It then uses the CloneMenu method to copy `mainMenu1` into `mainMenu2`. The cloned menu is then assigned to the form and displayed. This program requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[CloneMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_6_1.cs)]\n [!code-vb[CloneMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_6_1.vb)]\n [!code-cpp[CloneMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_6_1.cpp)]"
  syntax:
    content: protected void CloneMenu (System.Windows.Forms.Menu menuSrc);
    parameters:
    - id: menuSrc
      type: System.Windows.Forms.Menu
      description: "<xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 복사 합니다."
  overload: System.Windows.Forms.Menu.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.CreateMenuHandle
  id: CreateMenuHandle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: CreateMenuHandle()
  nameWithType: Menu.CreateMenuHandle()
  fullName: System.Windows.Forms.Menu.CreateMenuHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 새 핸들을 만듭니다는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>합니다."
  syntax:
    content: protected virtual IntPtr CreateMenuHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "메서드가 성공 하면; 메뉴에 대 한 핸들 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Menu.CreateMenuHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Menu.Dispose(Boolean)
  fullName: System.Windows.Forms.Menu.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용 하는 메모리 리소스를 삭제는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Forms.Menu>.</xref:System.Windows.Forms.Menu> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Windows.Forms.Menu>불안정 한 상태가.</xref:System.Windows.Forms.Menu> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Windows.Forms.Menu>차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</xref:System.Windows.Forms.Menu>      > [!NOTE] > <xref:System.Windows.Forms.Menu>.</xref:System.Windows.Forms.Menu> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 그렇지 않으면 리소스는 <xref:System.Windows.Forms.Menu>가 사용 하 여 해제 되지 것입니다 가비지 컬렉션 호출할 때까지 <xref:System.Windows.Forms.Menu>개체의 소멸자가.</xref:System.Windows.Forms.Menu> </xref:System.Windows.Forms.Menu>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Windows.Forms.Menu.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindHandle
  id: FindHandle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindHandle
  nameWithType: Menu.FindHandle
  fullName: System.Windows.Forms.Menu.FindHandle
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 <xref:System.Windows.Forms.Menu.FindMenuItem*>메서드 핸들을 검색 해야 합니다.</xref:System.Windows.Forms.Menu.FindMenuItem*>"
  syntax:
    content: public const int FindHandle = 0;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  id: FindMenuItem(System.Int32,System.IntPtr)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindMenuItem(Int32,IntPtr)
  nameWithType: Menu.FindMenuItem(Int32,IntPtr)
  fullName: System.Windows.Forms.Menu.FindMenuItem(Int32,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 지정 된 값이 들어 있는입니다."
  remarks: "검색할는 <xref:System.Windows.Forms.MenuItem>전달 핸들을 사용 하는 <xref:System.Windows.Forms.Menu.FindHandle>유형과의 핸들 필드는 <xref:System.Windows.Forms.MenuItem>값으로 찾으려는.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.FindHandle> </xref:System.Windows.Forms.MenuItem>       검색할는 <xref:System.Windows.Forms.MenuItem>전달 바로 가기를 사용 하 여는 <xref:System.Windows.Forms.Menu.FindShortcut>필드 형식과 대 한 바로 가기 값으로는 <xref:System.Windows.Forms.MenuItem>값으로 확인 하려면.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.FindShortcut> </xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: public System.Windows.Forms.MenuItem FindMenuItem (int type, IntPtr value);
    parameters:
    - id: type
      type: System.Int32
      description: "사용 하 여 찾을 항목의 종류는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
    - id: value
      type: System.IntPtr
      description: "찾는 데 사용할 항목의 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.MenuItem
      description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 값과 일치 하 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Menu.FindMenuItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  id: FindMergePosition(System.Int32)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindMergePosition(Int32)
  nameWithType: Menu.FindMergePosition(Int32)
  fullName: System.Windows.Forms.Menu.FindMergePosition(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴에 삽입 해야 메뉴 항목을 반환 합니다."
  remarks: "이 메뉴 항목이 메뉴 구성 하는 경우를 가정 하는 상대 위치를 지정 하는 메뉴 항목의 병합 순서는 <xref:System.Windows.Forms.MenuItem>포함 된 다른 항목과 병합 될.</xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: protected int FindMergePosition (int mergeOrder);
    parameters:
    - id: mergeOrder
      type: System.Int32
      description: "병합할 메뉴 항목의 병합 순서 위치입니다."
    return:
      type: System.Int32
      description: "메뉴에 메뉴 항목을 삽입 한 위치입니다."
  overload: System.Windows.Forms.Menu.FindMergePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindShortcut
  id: FindShortcut
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindShortcut
  nameWithType: Menu.FindShortcut
  fullName: System.Windows.Forms.Menu.FindShortcut
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 하는 <xref:System.Windows.Forms.Menu.FindMenuItem*>메서드 바로 가기에 대 한 검색 해야 합니다.</xref:System.Windows.Forms.Menu.FindMenuItem*>"
  syntax:
    content: public const int FindShortcut = 1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.GetContextMenu
  id: GetContextMenu
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: GetContextMenu()
  nameWithType: Menu.GetContextMenu()
  fullName: System.Windows.Forms.Menu.GetContextMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref> 이 메뉴를 포함 하 합니다."
  remarks: "이 메서드를 사용 하면 <xref:System.Windows.Forms.ContextMenu>이 메뉴는 포함 된 기능은</xref:System.Windows.Forms.ContextMenu> 에 대 한 참조를 가져올 수 있습니다. 이 속성은 반환 `null` 메뉴에 <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> 에 포함 되지 않은 경우 이 메뉴에 포함 된 경우 발생할 수 있습니다는 <xref:System.Windows.Forms.MenuItem>또는 <xref:System.Windows.Forms.MainMenu>, 메뉴는 메뉴에 포함 되지 않은 경우 또는.</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> 여부 메뉴가 현재 사용량을 확인 하 고 위치를 확인 하려면이 속성을 사용할 수 있습니다."
  example:
  - "In this example, you use the GetContextMenu method to obtain a reference to the shortcut menu that contains `menuItem1` or `menuItem2`, and display the shortcut menu information in a message box. You programmatically create a shortcut menu with two items, `New` and `Open`. You then add functionality to these items by creating the appropriate event handlers. When you run the example, you get a message box that tells you to right-click the form in order to display the shortcut menu. Then, when you click a menu item, you get another message that tells which item has been clicked and displays the information on the containing shortcut menu. This example requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetContextMenu2#1](~/add/codesnippet/csharp/m-system.windows.forms.m_15_1.cs)]\n [!code-cpp[GetContextMenu2#1](~/add/codesnippet/cpp/m-system.windows.forms.m_15_1.cpp)]\n [!code-vb[GetContextMenu2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_15_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ContextMenu GetContextMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.ContextMenu
      description: "<xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref> 이 메뉴를 포함 하 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Menu.GetContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.GetMainMenu
  id: GetMainMenu
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: GetMainMenu()
  nameWithType: Menu.GetMainMenu()
  fullName: System.Windows.Forms.Menu.GetMainMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 이 메뉴를 포함 하 합니다."
  remarks: "이 메서드를 사용 하면 <xref:System.Windows.Forms.MainMenu>이 메뉴는 현재 위치를 가리키는 기능은</xref:System.Windows.Forms.MainMenu> 에 대 한 참조를 가져올 수 있습니다. 이 속성은 반환 `null` 메뉴에 <xref:System.Windows.Forms.MainMenu>.</xref:System.Windows.Forms.MainMenu> 에 포함 되지 않은 경우 이 메뉴에 포함 된 경우 발생할 수 있습니다는 <xref:System.Windows.Forms.MenuItem>또는 <xref:System.Windows.Forms.ContextMenu>, 메뉴는 메뉴에 포함 되지 않은 경우 또는.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> 여부 메뉴가 현재 사용량을 확인 하 고 위치를 확인 하려면이 속성을 사용할 수 있습니다."
  example:
  - "This example declares a <xref:System.Windows.Forms.MainMenu>, `mainMenu1`, and four menu items, `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`. Only the first three menu items are added to `mainMenu1` for display. The program then checks to see if `menuItem3` is being used, which is `true`, and determines the form in which it is used. A label text is used to display the name of the form that hosts the <xref:System.Windows.Forms.MainMenu>. If you change the menu item being tested to `menuItem4`, the condition evaluates to `false` because `menuItem4` has never been used. This example requires that you have created a <xref:System.Windows.Forms.Form> named `MyForm` that includes a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cpp[GetMainMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_8_1.cpp)]\n [!code-cs[GetMainMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_8_1.cs)]\n [!code-vb[GetMainMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.MainMenu GetMainMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MainMenu
      description: "<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 이 메뉴를 포함 하 합니다."
  overload: System.Windows.Forms.Menu.GetMainMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Handle
  id: Handle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Handle
  nameWithType: Menu.Handle
  fullName: System.Windows.Forms.Menu.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "메뉴에 대 한 창 핸들을 나타내는 값을 가져옵니다."
  remarks: "이 클래스 또는 해당 파생된 클래스에서 제공 하는 기능 이외의 메뉴에 특별 한 작업을 수행 하려면 메뉴에 핸들을 얻기 위해이 속성을 사용할 수 있습니다."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "메뉴의 HMENU 값입니다."
  overload: System.Windows.Forms.Menu.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.IsParent
  id: IsParent
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: IsParent
  nameWithType: Menu.IsParent
  fullName: System.Windows.Forms.Menu.IsParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 메뉴에 메뉴 항목이 포함 되어 있는지 여부를 나타내는 값을 가져옵니다. 이 속성은 읽기 전용입니다."
  remarks: "이 메서드를 사용 하 여 있는지 여부를 확인 하려면 <xref:System.Windows.Forms.MenuItem>개체는이 메뉴에 할당 됩니다.</xref:System.Windows.Forms.MenuItem> 이 확인 하는 것에 대 한 `null` 에 <xref:System.Windows.Forms.Menu.MenuItems%2A>속성.</xref:System.Windows.Forms.Menu.MenuItems%2A>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu> with two <xref:System.Windows.Forms.MenuItem> objects. It then uses the IsParent property to determine whether `mainMenu1` contains menu items. If the condition evaluates `true`, it sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to `true` and binds the main menu to the <xref:System.Windows.Forms.Form>. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cpp[IsParent#1](~/add/codesnippet/cpp/p-system.windows.forms.m_9_1.cpp)]\n [!code-cs[IsParent#1](~/add/codesnippet/csharp/p-system.windows.forms.m_9_1.cs)]\n [!code-vb[IsParent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_9_1.vb)]"
  syntax:
    content: public virtual bool IsParent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 메뉴를 포함 하는 경우 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 개체이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Menu.IsParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MdiListItem
  id: MdiListItem
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MdiListItem
  nameWithType: Menu.MdiListItem
  fullName: System.Windows.Forms.Menu.MdiListItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져옵니다는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 다중 문서 MDI (인터페이스) 자식 폼의 목록을 표시 하는 데 사용 되는 합니다."
  remarks: "이 속성을 사용 하 여 확인 여부는 <xref:System.Windows.Forms.MenuItem>MDI 응용 프로그램에서 열려 있는 자식 창의 목록을 표시로 지정 된.</xref:System.Windows.Forms.MenuItem> 특정 사용 하려면 <xref:System.Windows.Forms.MenuItem>은 MDI 목록으로 설정는 <xref:System.Windows.Forms.MenuItem.MdiList%2A>속성에는 <xref:System.Windows.Forms.MenuItem>사용할.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.MdiList%2A> </xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: public System.Windows.Forms.MenuItem MdiListItem { get; }
    return:
      type: System.Windows.Forms.MenuItem
      description: "A <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 응용 프로그램에서 열려 있는 MDI 자식 폼의 목록을 표시 하는 메뉴 항목을 나타내는입니다."
  overload: System.Windows.Forms.Menu.MdiListItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MenuItems
  id: MenuItems
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MenuItems
  nameWithType: Menu.MenuItems
  fullName: System.Windows.Forms.Menu.MenuItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션을 나타내는 값을 가져옵니다 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 메뉴와 연결 된 개체입니다."
  remarks: "이 속성의 메뉴에 현재 저장 되어 있는 메뉴 항목의 목록에 대 한 참조를 사용할 수 있습니다. 에 대 한 <xref:System.Windows.Forms.MainMenu>및 <xref:System.Windows.Forms.ContextMenu>개체 Menuitem 속성은 컨트롤의 전체 메뉴 구조를 포함 합니다.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.MenuItem>클래스, Menuitem 속성 <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> 와 관련 된 하위 메뉴 항목 목록을 포함</xref:System.Windows.Forms.MenuItem> 하는 것에 대 한 (이 속성에서 제공) 메뉴에 대 한 메뉴 항목의 컬렉션에 대 한 참조를 수 추가 하 고 메뉴 항목을 제거, 새 메뉴 항목의 총 수를 확인 하 고 컬렉션에서 메뉴 항목 목록이 선택을 취소 합니다. 메뉴는 메뉴 항목 컬렉션을 유지 관리에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName>설명서.</xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName>"
  example:
  - "The following code example creates an instance of the derived class, <xref:System.Windows.Forms.MainMenu>, and adds a <xref:System.Windows.Forms.MenuItem> object to its collection of <xref:System.Windows.Forms.MenuItem> objects. This example requires that the method defined in this example is located within the class for a form and called by a method in that form class.  \n  \n [!code-vb[Classic Menu.MenuItems Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_28_1.vb)]\n [!code-cpp[Classic Menu.MenuItems Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_28_1.cpp)]\n [!code-cs[Classic Menu.MenuItems Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_28_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Menu.MenuItemCollection MenuItems { get; }
    return:
      type: System.Windows.Forms.Menu.MenuItemCollection
      description: "A &lt;xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName&gt; 목록을 나타내는 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 메뉴에 저장 된 개체입니다."
  overload: System.Windows.Forms.Menu.MenuItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  id: MergeMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MergeMenu(Menu)
  nameWithType: Menu.MergeMenu(Menu)
  fullName: System.Windows.Forms.Menu.MergeMenu(Menu)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "병합 된 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> 현재 메뉴와 하나의 메뉴의 개체입니다."
  remarks: "이 메서드는 병합 <xref:System.Windows.Forms.MenuItem>개체를 현재 메뉴와 한 메뉴에서입니다.</xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem>개체의 값에 따라 병합 됩니다는 <xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=fullName>및 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=fullName>속성.</xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=fullName> </xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=fullName></xref:System.Windows.Forms.MenuItem>       메뉴 병합는 일반적으로 해당 활성 MDI 자식 폼의 문서 MDI (다중 인터페이스) 부모 폼의 메뉴 병합을 수행 합니다. 이.NET Framework 공용 언어 런타임에 의해 자동으로 수행 됩니다. 예를 들어 MDI 부모 폼 파일을 처리 하는 것에 대 한 메뉴 집합을 포함 하는 경우 MDI 자식 폼 파일 관련 메뉴 항목에 메뉴 집합 자식 폼은 MDI 부모 폼에 표시 될 때 설정 하는 단일 파일 메뉴에 자동으로 병합 됩니다.       MDI 응용 프로그램의 일부분이 아닌 두 메뉴 구조를 병합 하는 경우 MergeMenu 메서드를 사용할 수 있습니다. 이 구현에서 <xref:System.Windows.Forms.MainMenu>또는 <xref:System.Windows.Forms.ContextMenu> <xref:System.Windows.Forms.Menu>.</xref:System.Windows.Forms.Menu> 에서 파생 되는 두 개 이상의 개체를 병합 하는 클래스</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> 에서 호출할 수 있습니다.       병합할 두 <xref:System.Windows.Forms.MenuItem>개체가 사용 된 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=fullName>메서드.</xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=fullName> </xref:System.Windows.Forms.MenuItem>"
  example:
  - "This example creates two menus, `mainMenu1` and `mainMenu2`. The first menu contains one <xref:System.Windows.Forms.MenuItem>, `File`, and the second contains one <xref:System.Windows.Forms.MenuItem>, `Edit`. Using the MergeMenu method, `mainMenu2` is merged with `mainMenu1`. When displayed, `mainMenu1` will contain the two menu items, `File` and `Edit`. This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MergeMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_23_1.cs)]\n [!code-cpp[MergeMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_23_1.cpp)]\n [!code-vb[MergeMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_23_1.vb)]"
  syntax:
    content: public virtual void MergeMenu (System.Windows.Forms.Menu menuSrc);
    parameters:
    - id: menuSrc
      type: System.Windows.Forms.Menu
      description: "<xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 메뉴 항목이 현재 메뉴의 메뉴 항목과 함께 병합 됩니다."
  overload: System.Windows.Forms.Menu.MergeMenu*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "자체를 사용 하 여 메뉴를 병합 하려고 했습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Name
  id: Name
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Name
  nameWithType: Menu.Name
  fullName: System.Windows.Forms.Menu.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>합니다."
  remarks: "이 속성은 디자인 타임에 컨트롤의 프로그래밍 id로 설정 됩니다. 그러나이 속성은 관련이 없습니다 컨트롤에서 런타임 시."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "이름을 나타내는 문자열입니다."
  overload: System.Windows.Forms.Menu.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Menu.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Menu.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "명령 키를 처리 합니다."
  syntax:
    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 창 메시지 처리를 나타내는 참조로 전달 합니다."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 처리할 키를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Menu.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Tag
  id: Tag
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Tag
  nameWithType: Menu.Tag
  fullName: System.Windows.Forms.Menu.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤과 연결 된 사용자 정의 데이터를 가져오거나 설정 합니다."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "데이터를 나타내는 개체입니다."
  overload: System.Windows.Forms.Menu.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.ToString
  id: ToString
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: ToString()
  nameWithType: Menu.ToString()
  fullName: System.Windows.Forms.Menu.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "반환 된 <xref:System.String>나타내는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> 컨트롤.</xref:System.String>"
  remarks: "ToString 메서드는 <xref:System.String>형식과의 항목 수를 포함 하는 <xref:System.Windows.Forms.Menu.MenuItems%2A>컨트롤의 속성입니다.</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>을 나타내는 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>.</xref:System.String>"
  overload: System.Windows.Forms.Menu.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Menu(MenuItem[])
  nameWithType: Menu.Menu(MenuItem[])
  fullName: System.Windows.Forms.Menu.Menu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CloneMenu(Menu)
  nameWithType: Menu.CloneMenu(Menu)
  fullName: System.Windows.Forms.Menu.CloneMenu(Menu)
- uid: System.Windows.Forms.Menu
  parent: System.Windows.Forms
  isExternal: false
  name: Menu
  nameWithType: Menu
  fullName: System.Windows.Forms.Menu
- uid: System.Windows.Forms.Menu.CreateMenuHandle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CreateMenuHandle()
  nameWithType: Menu.CreateMenuHandle()
  fullName: System.Windows.Forms.Menu.CreateMenuHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Menu.Dispose(System.Boolean)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Menu.Dispose(Boolean)
  fullName: System.Windows.Forms.Menu.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Menu.FindHandle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindHandle
  nameWithType: Menu.FindHandle
  fullName: System.Windows.Forms.Menu.FindHandle
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMenuItem(Int32,IntPtr)
  nameWithType: Menu.FindMenuItem(Int32,IntPtr)
  fullName: System.Windows.Forms.Menu.FindMenuItem(Int32,IntPtr)
- uid: System.Windows.Forms.MenuItem
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
- uid: System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMergePosition(Int32)
  nameWithType: Menu.FindMergePosition(Int32)
  fullName: System.Windows.Forms.Menu.FindMergePosition(Int32)
- uid: System.Windows.Forms.Menu.FindShortcut
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindShortcut
  nameWithType: Menu.FindShortcut
  fullName: System.Windows.Forms.Menu.FindShortcut
- uid: System.Windows.Forms.Menu.GetContextMenu
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetContextMenu()
  nameWithType: Menu.GetContextMenu()
  fullName: System.Windows.Forms.Menu.GetContextMenu()
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.Menu.GetMainMenu
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetMainMenu()
  nameWithType: Menu.GetMainMenu()
  fullName: System.Windows.Forms.Menu.GetMainMenu()
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.Menu.Handle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Handle
  nameWithType: Menu.Handle
  fullName: System.Windows.Forms.Menu.Handle
- uid: System.Windows.Forms.Menu.IsParent
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: IsParent
  nameWithType: Menu.IsParent
  fullName: System.Windows.Forms.Menu.IsParent
- uid: System.Windows.Forms.Menu.MdiListItem
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MdiListItem
  nameWithType: Menu.MdiListItem
  fullName: System.Windows.Forms.Menu.MdiListItem
- uid: System.Windows.Forms.Menu.MenuItems
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MenuItems
  nameWithType: Menu.MenuItems
  fullName: System.Windows.Forms.Menu.MenuItems
- uid: System.Windows.Forms.Menu.MenuItemCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Menu+MenuItemCollection
  nameWithType: Menu+MenuItemCollection
  fullName: System.Windows.Forms.Menu+MenuItemCollection
- uid: System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MergeMenu(Menu)
  nameWithType: Menu.MergeMenu(Menu)
  fullName: System.Windows.Forms.Menu.MergeMenu(Menu)
- uid: System.Windows.Forms.Menu.Name
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Name
  nameWithType: Menu.Name
  fullName: System.Windows.Forms.Menu.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Menu.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Menu.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Menu.Tag
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Tag
  nameWithType: Menu.Tag
  fullName: System.Windows.Forms.Menu.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Menu.ToString
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ToString()
  nameWithType: Menu.ToString()
  fullName: System.Windows.Forms.Menu.ToString()
- uid: System.Windows.Forms.Menu.#ctor*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Menu
  nameWithType: Menu.Menu
- uid: System.Windows.Forms.Menu.CloneMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CloneMenu
  nameWithType: Menu.CloneMenu
- uid: System.Windows.Forms.Menu.CreateMenuHandle*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CreateMenuHandle
  nameWithType: Menu.CreateMenuHandle
- uid: System.Windows.Forms.Menu.Dispose*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Dispose
  nameWithType: Menu.Dispose
- uid: System.Windows.Forms.Menu.FindMenuItem*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMenuItem
  nameWithType: Menu.FindMenuItem
- uid: System.Windows.Forms.Menu.FindMergePosition*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMergePosition
  nameWithType: Menu.FindMergePosition
- uid: System.Windows.Forms.Menu.GetContextMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetContextMenu
  nameWithType: Menu.GetContextMenu
- uid: System.Windows.Forms.Menu.GetMainMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetMainMenu
  nameWithType: Menu.GetMainMenu
- uid: System.Windows.Forms.Menu.Handle*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Handle
  nameWithType: Menu.Handle
- uid: System.Windows.Forms.Menu.IsParent*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: IsParent
  nameWithType: Menu.IsParent
- uid: System.Windows.Forms.Menu.MdiListItem*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MdiListItem
  nameWithType: Menu.MdiListItem
- uid: System.Windows.Forms.Menu.MenuItems*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MenuItems
  nameWithType: Menu.MenuItems
- uid: System.Windows.Forms.Menu.MergeMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MergeMenu
  nameWithType: Menu.MergeMenu
- uid: System.Windows.Forms.Menu.Name*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Name
  nameWithType: Menu.Name
- uid: System.Windows.Forms.Menu.ProcessCmdKey*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Menu.ProcessCmdKey
- uid: System.Windows.Forms.Menu.Tag*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Tag
  nameWithType: Menu.Tag
- uid: System.Windows.Forms.Menu.ToString*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ToString
  nameWithType: Menu.ToString
