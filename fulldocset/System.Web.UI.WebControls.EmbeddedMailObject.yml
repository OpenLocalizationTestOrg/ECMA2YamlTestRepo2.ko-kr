### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EmbeddedMailObject
  id: EmbeddedMailObject
  children:
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.EmbeddedMailObject.Name
  - System.Web.UI.WebControls.EmbeddedMailObject.Path
  langs:
  - csharp
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject
  fullName: System.Web.UI.WebControls.EmbeddedMailObject
  type: Class
  summary: "사용 하 여 구성한 전자 메일 메시지에 포함할 항목을 나타냅니다는 <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> 클래스입니다."
  remarks: "EmbeddedMailObject 메일 메시지에 포함할 항목을 나타냅니다. 이러한 포함 된 항목에는 회사 로고와 같은 이미지 파일 수 있습니다. 포함 된 각 항목 식별자가 고 경로가 지정 됩니다.       전자 메일 메시지 파일 내에서 포함된 된 개체를 올바르게 표시 되도록 하려면 다음 조건을 충족 해야 합니다:-메일 메시지의 HTML 형식으로 되어 있습니다.      -항목이 이미지 파일 (.jpg,.gif,.bmp, 및 등)입니다.      에 지정 된 HTML 형식의 본문 파일-는 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>다음 구문을 사용 하 여 이미지 파일에 대 한 참조를 포함 하는 속성: ```       <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />.       ``` 는 EmbeddedMailObject 메일 메시지에 추가 되 고 모든 이전에 지정 된 요구 사항을 만족 하지 않습니다, 하는 경우 대개 표시 됩니다는 메일 메시지의 첨부 파일로.</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> 항목을 메일 메시지의 식별자로 참조 하지만 포함된 된 항목으로 포함 되지 않은 경우 메일을 볼 때 깨진된 첨부 파일로 나타납니다.       <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>단일 메일 메시지에 대 한 EmbeddedMailObject 개체의 컬렉션을 저장 합니다.</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>에서 사용 되는 <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>속성의는 <xref:System.Web.UI.WebControls.MailDefinition>메일 메시지를 만들 개체입니다.</xref:System.Web.UI.WebControls.MailDefinition> </xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>       설정 하 여 포함 된 개체를 허용 하는 메일 메시지는 다음 웹 컨트롤에서 구성할 수 자신의 <xref:System.Web.UI.WebControls.MailDefinition>속성 선언적으로:- <xref:System.Web.UI.WebControls.CreateUserWizard>- <xref:System.Web.UI.WebControls.ChangePassword>- <xref:System.Web.UI.WebControls.PasswordRecovery>> [!NOTE] >는 EmbeddedMailObject 값 및 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection>개체 뷰 상태에 저장 되지 않습니다.</xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> </xref:System.Web.UI.WebControls.PasswordRecovery> </xref:System.Web.UI.WebControls.ChangePassword> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.MailDefinition> 이 서버에 대 한 경로 정보를 검색 하는 악의적인 사용자 로부터 보호 됩니다."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in e-mail is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]

      public sealed class EmbeddedMailObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;> </xref> 클래스입니다."
  remarks: "를 가져오거나 포함된 된 항목의 식별자를 설정 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>속성.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> 를 가져오거나 포함 된 항목에 경로 설정 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>속성.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> 성공적으로 메일 메시지에 항목을 포함 하려면 두 속성이 모두 설정 되어야 합니다."
  syntax:
    content: public EmbeddedMailObject ();
    parameters: []
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.EmbeddedMailObject&quot;> </xref> 클래스, 개체를 채우는 데 지정 된 식별자 이름 및 경로 사용 합니다."
  remarks: ''
  example:
  - "The following code example shows a code-behind example of an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. This code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n The following code example demonstrates using an .aspx page.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_1.aspx)]  \n  \n The following code example demonstrates using a code-behind file.  \n  \n [!code-cs[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_2.vb)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_3.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_3.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public EmbeddedMailObject (string name, string path);
    parameters:
    - id: name
      type: System.String
      description: "메일 메시지에 포함할 항목의 식별자로 사용 되는 이름입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*> 을 참조 하십시오."
    - id: path
      type: System.String
      description: "메일 메시지에 포함할 항목을 검색 하는 데 사용 하는 경로입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.</xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*> 을 참조 하십시오."
  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  id: Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 하 여 생성 하 여 메일 메시지에 포함할 수 있는 항목의 식별자로 사용 되는 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> 클래스입니다."
  remarks: "Name 속성 <xref:System.Web.UI.WebControls.MailDefinition>클래스</xref:System.Web.UI.WebControls.MailDefinition> 를 사용 하 여 선언적으로 생성 하는 메일 메시지에 포함할 항목에 대 한 식별자를 지정 합니다. 식별자에 포함 된 항목을 매핑할 때 사용 되는 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>속성에 지정 된 파일의 본문에 적절 한 위치는 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>다음 구문을 사용 하 여 속성: ```   <img src=&quot;cid:identifier&quot; alt=&quot;Alternate Text&quot; />   ``` 일반적으로 해당 항목은 이미지 파일.</xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> </xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> Name 속성에 대 한 기본값은 빈 문자열입니다.       에 대 한 모든 포함 된 이미지에 대 한 메일 메시지의 대체 텍스트 속성을 설정 하는 것이 좋습니다."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "메일 메시지에 포함할 항목의 식별자를 반환 합니다."
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  id: Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  langs:
  - csharp
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 하 여 생성 하는 메일 메시지에 포함할 항목을 검색 하는 경로 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.MailDefinition&quot;> </xref> 클래스입니다."
  remarks: "The Path property specifies the path to the item you want to embed in the mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> object. The file path in Path must be a path such as C:\\MyServer\\Banner.gif. Typically, the embedded item is an image file. If an image file is referenced by its identifier in the mail message but not included in the message, the image appears as a broken attachment when the e-mail message is viewed.  \n  \n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_2.cs)]  \n  \n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \n  \n> [!IMPORTANT]\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \"sniffing\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n```  \n<html>  \n<head><title></title></head>  \n<body>  \n<form>  \n  \n  <h1>Your password for the account named \"<%Username%>\" has changed.</h1>  \n  \n  <p>  \n  If you did not initiate this change, please call 1-206-555-0100.  \n  </p>  \n  \n  <p>  \n  <a href=\"http://www.contoso.com/login.aspx\">  \n    <img src=\"cid:LoginGif\" alt=\"Log In\" />  \n  </a>   \n  </p>  \n  \n  <p>  \n  Please read our attached Privacy Notice.  \n  </p>  \n  \n</form>  \n</body>  \n</html>  \n```"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "메일 메시지에 포함할 항목에는 경로 반환 합니다."
  overload: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject()
  nameWithType: EmbeddedMailObject.EmbeddedMailObject()
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject(String,String)
  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path
- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: EmbeddedMailObject
  nameWithType: EmbeddedMailObject.EmbeddedMailObject
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Name
  nameWithType: EmbeddedMailObject.Name
- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path*
  parent: System.Web.UI.WebControls.EmbeddedMailObject
  isExternal: false
  name: Path
  nameWithType: EmbeddedMailObject.Path
