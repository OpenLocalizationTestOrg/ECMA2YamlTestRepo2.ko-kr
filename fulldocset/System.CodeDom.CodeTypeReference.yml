### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeReference
  id: CodeTypeReference
  children:
  - System.CodeDom.CodeTypeReference.#ctor
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  - System.CodeDom.CodeTypeReference.#ctor(System.String)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type)
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.ArrayElementType
  - System.CodeDom.CodeTypeReference.ArrayRank
  - System.CodeDom.CodeTypeReference.BaseType
  - System.CodeDom.CodeTypeReference.Options
  - System.CodeDom.CodeTypeReference.TypeArguments
  langs:
  - csharp
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
  type: Class
  summary: "형식에 대 한 참조를 나타냅니다."
  remarks: "CodeTypeReference 개체를 CodeDOM 개체에 대 한 형식을 나타내는 데 사용 됩니다. CodeDOM 형식을 보유 하는 경우는 `Type` CodeTypeReference 유형 속성을 인지 합니다. 예를 들어는 <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>속성은 필드의 데이터 형식을 나타내는 CodeTypeReference.</xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>       CodeTypeReference 초기화 될 수 있습니다는 <xref:System.Type>개체 또는 문자열.</xref:System.Type> 사용 하는 것이 좋습니다 일반적으로 <xref:System.Type>항상 아닐 수 있지만이 수행 하려면.</xref:System.Type> 네임 스페이스 가져오기를 지원 하지 않는 언어도 때문에 문자열을 사용 하 여이 클래스의 인스턴스를 초기화 하는 경우 항상 &quot;System.Console&quot; 대신 &quot;Console&quot;, 같은 정규화 된 형식을 사용 하 여 좋습니다 것. 배열에 대 한 type 개체에 전달 하거나 순위 매개 변수로 사용 하는 생성자 중 하나를 사용 하 여 배열 형식은 지정할 수 있습니다.       <xref:System.CodeDom.CodeTypeReference.BaseType%2A>속성을 참조 하는 유형의 이름을 지정 합니다.</xref:System.CodeDom.CodeTypeReference.BaseType%2A> 배열 형식에 대 한 참조는 <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>속성에서 배열의 요소 형식을 나타냅니다 및 <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>속성 배열의 차원 수를 나타냅니다.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> </xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>"
  example:
  - "The following example demonstrates use of a CodeTypeReference to represent a reference to a type.  \n  \n [!code-cs[CodeTypeOfExample#2](~/add/codesnippet/csharp/t-system.codedom.codetyp_1_1.cs)]\n [!code-vb[CodeTypeOfExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_1_1.vb)]\n [!code-cpp[CodeTypeOfExample#2](~/add/codesnippet/cpp/t-system.codedom.codetyp_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeReference : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 빈 만듭니다 <xref:System.CodeDom.CodeTypeReference>개체입니다.</xref:System.CodeDom.CodeTypeReference>  이 생성자를 사용 하는 경우 형식 참조를 설정 하는 속성을 설정 합니다."
  syntax:
    content: public CodeTypeReference ();
    parameters: []
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  id: '#ctor(System.CodeDom.CodeTypeParameter)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스 지정 된 코드 형식 매개 변수를 사용 합니다."
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);
    parameters:
    - id: typeParameter
      type: System.CodeDom.CodeTypeParameter
      description: "A <xref href=&quot;System.CodeDom.CodeTypeParameter&quot;> </xref> 형식 매개 변수의 형식을 나타내는입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스 지정된 된 형식 이름을 사용 합니다."
  remarks: "경우는 `typeName` 제네릭 형식을 참조 하는 매개 변수, 제네릭 형식에 대 한 구문 표기 규칙을 따라야 합니다. 에 대 한 리플렉션 서명을 예를 들어는 <xref:System.Collections.Generic.Dictionary%602>유형, 여기서 `K` 문자열인 및 `V` 은 <xref:System.Collections.Generic.List%601>정수, 다음으로는 리플렉션에 의해 표현 됩니다 (어셈블리 정보가 제거)와: `System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`.</xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602>      > [!NOTE] > 하지는 C# 꺾쇠 괄호 및 대괄호 ()를 사용 해야 (<>)를 제네릭 매개 변수를 구분 합니다.       실수 구문 지정의 가능성을 방지 하려면 형식 문자열 대신 매개 변수로 사용 하는 생성자를 사용 하는 것이 좋습니다."
  syntax:
    content: public CodeTypeReference (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "참조할 형식의 이름입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스 지정된 된 형식을 사용 합니다."
  syntax:
    content: public CodeTypeReference (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>참조.</xref:System.Type>"
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  id: '#ctor(System.CodeDom.CodeTypeReference,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스 지정 된 배열 형식 및 순위를 사용 합니다."
  remarks: "이 생성자 데 사용할 수 배열의 배열을 만드는 중첩으로 <xref:System.CodeDom.CodeTypeReference>개체입니다.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);
    parameters:
    - id: arrayType
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 배열의 형식을 나타내는입니다."
    - id: rank
      type: System.Int32
      description: "배열의 차원 수를 지정 합니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스는 지정 된 형식 이름 및 형식 인수를 사용 합니다."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReference[] typeArguments);
    parameters:
    - id: typeName
      type: System.String
      description: "참조할 형식의 이름입니다."
    - id: typeArguments
      type: System.CodeDom.CodeTypeReference[]
      description: "배열을 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 값입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정 된 형식 이름을 사용 하 여 클래스 및 코드 형식 참조 옵션."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: typeName
      type: System.String
      description: "참조할 형식의 이름입니다."
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "중 하나는 코드 형식 참조 옵션은 <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> 값입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 클래스 지정 된 배열 형식 이름 및 순위를 사용 합니다."
  syntax:
    content: public CodeTypeReference (string baseType, int rank);
    parameters:
    - id: baseType
      type: System.String
      description: "이름 배열 요소의 형식입니다."
    - id: rank
      type: System.Int32
      description: "배열의 차원 수입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 지정 된 형식을 사용 하 여 클래스 및 코드 형식 참조입니다."
  syntax:
    content: public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>참조.</xref:System.Type>"
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "중 하나는 코드 형식 참조 옵션은 <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> 값입니다."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  id: ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "배열의 요소 형식을 가져오거나 설정 합니다."
  remarks: "이렇게 하지 않으면이 무시 됩니다는 <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>속성은 1 보다 크거나.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 배열 요소의 형식을 나타내는입니다."
  overload: System.CodeDom.CodeTypeReference.ArrayElementType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  id: ArrayRank
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "배열의 배열 차수를 가져오거나 설정 합니다."
  syntax:
    content: public int ArrayRank { get; set; }
    return:
      type: System.Int32
      description: "배열의 차원 수입니다."
  overload: System.CodeDom.CodeTypeReference.ArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.BaseType
  id: BaseType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "참조 되는 형식의 이름을 가져오거나 설정 합니다."
  remarks: "이 속성의 이름이 형식 배열 형식이 아닌 경우에 경우 배열 요소 형식 합니다.      > [!NOTE] > 속성의 이름을 잘못 될 수 있습니다. 이 속성에 있는 배열 장식 사용 유형 이름만 포함 또는 제네릭 형식 인수를 제거, 기본 또는 부모 형식이 아닌 얻을 수 있습니다. 예를 들어 BaseType 값에 대 한 `System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]` 은 `System.Collections.Generic.Dictionary`2`.      ## Representation of Generic Types    The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (&quot;`&quot;) 뒤에 제네릭 형식 인수의 개수입니다. 제네릭 형식 인수에서 찾을 수 있습니다는 <xref:System.CodeDom.CodeTypeReferenceCollection>에서 반환 되는 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>속성.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReferenceCollection> BaseType 및 연결 된 반환 하는 값 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>리플렉션에 의해 반환 되는 형식의 값으로 같은 내용을 다룹니다.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>       생성 된 <xref:System.Collections.Generic.Dictionary%602>예를 들어 여기서 `K` 문자열인 및 `V` 정수 생성된 <xref:System.Collections.Generic.List%601>다음으로 리플렉션에로 표현 됩니다 (어셈블리 정보가 제거)와: ```   System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]   ``` 위의 리플렉션 표현으로 동일한 문자열을 생성 하는 재귀적으로 구문 분석에서 <xref:System.Collections.Generic.Dictionary%602>에 대 한 <xref:System.CodeDom.CodeTypeReference>BaseType 속성:- <xref:System.CodeDom.CodeTypeReference>부모에 대 한 속성의 BaseType은 다음을 반환 합니다: <CodeContentPlaceHolder>1</CodeContentPlaceHolder> - <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>컬렉션의 첫 번째 <xref:System.CodeDom.CodeTypeReference>개체에 대 한 속성의 BaseType은 다음을 반환 합니다. : <CodeContentPlaceHolder>2</CodeContentPlaceHolder> -두 번째에 대 한 속성의 BaseType <xref:System.CodeDom.CodeTypeReference>개체는 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>는 다음을 반환 하는 컬렉션: <CodeContentPlaceHolder>3</CodeContentPlaceHolder> - <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>속성에는 <xref:System.CodeDom.CodeTypeReference>개체에 대 한 `System.Collections.Generic.List`1&quot;-는 다음을 반환 하는 중: ```       System.Int32       ``` 관련 된 구문 분석 하는 경우 형식 인수 개수를 사용 해야 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>값.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference>  </xref:System.CodeDom.CodeTypeReference></xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference>  </xref:System.CodeDom.CodeTypeReference></xref:System.Collections.Generic.Dictionary%602> </xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602> 생성된 된 코드에서 형식 인수 개수를 제거 하는 것이 일반적 이지만 방법은 컴파일러에 특정 합니다.  중첩된 된 형식 이름 내에서 형식 인수 개수를 확인할 수 있습니다,이 경우 뒤에 더하기 기호 (&quot;+&quot;)를 확인 하는 것이 유용 합니다.      > [!NOTE] >는 일반 <xref:System.CodeDom.CodeTypeReference> <xref:System.CodeDom.CodeTypeReference>개체</xref:System.CodeDom.CodeTypeReference> 또는 <xref:System.Type>.</xref:System.Type> 를 사용 하는 생성자를 사용 하 여 형식 인수를 지정 하는 것이 좋습니다,</xref:System.CodeDom.CodeTypeReference> 만들 때 만드는 생성자를 사용 하는 <xref:System.CodeDom.CodeTypeReference>발견할 형식 인수 오류를 일으킬 수 있는 문자열에서 있습니다.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public string BaseType { get; set; }
    return:
      type: System.String
      description: "참조 되는 형식의 이름입니다."
  overload: System.CodeDom.CodeTypeReference.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.Options
  id: Options
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "코드 형식 참조 옵션을 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }
    return:
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "비트 조합 된 <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> 값입니다."
  overload: System.CodeDom.CodeTypeReference.Options*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "현재 제네릭 형식 참조에 대 한 형식 인수를 가져옵니다."
  remarks: "TypeArguments 속성은 현재 제네릭 형식의 형식 매개 변수 참조 대신 사용할 형식 참조의 컬렉션입니다. 모든 중첩 된 형식에 대 한 모든 형식 인수를 포함 하는 컬렉션입니다. 예를 들어 참조는 <xref:System.CodeDom.CodeTypeReference.BaseType%2A>속성.</xref:System.CodeDom.CodeTypeReference.BaseType%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> 현재에 대 한 형식 인수를 포함 하 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 개체입니다."
  overload: System.CodeDom.CodeTypeReference.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.CodeDom.CodeTypeReference.#ctor
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
- uid: System.CodeDom.CodeTypeParameter
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter
  fullName: System.CodeDom.CodeTypeParameter
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReferenceOptions
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceOptions
  nameWithType: CodeTypeReferenceOptions
  fullName: System.CodeDom.CodeTypeReferenceOptions
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeReference.#ctor*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference.CodeTypeReference
- uid: System.CodeDom.CodeTypeReference.ArrayElementType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
