### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicControl
  id: DynamicControl
  children:
  - System.Web.DynamicData.DynamicControl.#ctor
  - System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicControl.Column
  - System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicControl.CssClass
  - System.Web.DynamicData.DynamicControl.DataField
  - System.Web.DynamicData.DynamicControl.DataFormatString
  - System.Web.DynamicData.DynamicControl.FieldTemplate
  - System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicControl.HtmlEncode
  - System.Web.DynamicData.DynamicControl.Mode
  - System.Web.DynamicData.DynamicControl.NullDisplayText
  - System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  - System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  - System.Web.DynamicData.DynamicControl.Table
  - System.Web.DynamicData.DynamicControl.UIHint
  - System.Web.DynamicData.DynamicControl.ValidationGroup
  langs:
  - csharp
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
  type: Class
  summary: "ASP.NET Dynamic Data 기능을 사용 하 여 템플릿 기반 데이터 바인딩된 컨트롤의 필드에 대해 정의 된 콘텐츠를 표시 합니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # #과 같은 소개 The DynamicControl 컨트롤 템플릿 기반 데이터 바인딩된 컨트롤에서 사용 됩니다 <xref:System.Web.UI.WebControls.FormView>또는 <xref:System.Web.UI.WebControls.ListView>, 사용자가 페이지에서 ASP.NET Dynamic Data 기능을 사용 하는 데이터 필드를 표시 하려면.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.FormView>       DynamicControl 컨트롤에 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TemplateField>필드는 <xref:System.Web.UI.WebControls.GridView>또는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField>       DynamicControl 컨트롤의 유사한 기능을 제공 된 <xref:System.Web.DynamicData.DynamicField>필드.</xref:System.Web.DynamicData.DynamicField> 그러나 템플릿 안에 DynamicControl 컨트롤은 반드시 때문에 하면 보다 융통성 있게 필드 주위 다른 HTML 요소를 추가할 수 있으므로 데이터가 표시 되는 방식을 제어 합니다. DynamicControl 컨트롤을 사용 하면 다음 Dynamic Data 기능을 활용 지나야:-자동으로 데이터 형식에 따라 필드 템플릿을 사용 하 여 필드에 대 한 적절 한 컨트롤을 렌더링 합니다. 전체 응용 프로그램에 대 한 필드 서식 파일을 전역으로 수정할 수 있습니다.      데이터베이스 스키마를 기반으로 하는 기본 제공 데이터 유효성 검사를 제공 합니다. 데이터 모델을 사용자 지정 하 여 유효성 검사 형식을 추가할 수도 있습니다.      -사용자 개별 필드에 대 한 데이터 렌더링 데이터 모델의 특성을 사용 하거나 사용 하 여 지정 된 <xref:System.Web.DynamicData.DynamicField.UIHint%2A>속성.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       DynamicControl 컨트롤에 표시할 필드를 지정 하려면 설정는 <xref:System.Web.DynamicData.DynamicControl.DataField%2A>속성 필드 이름.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> 설정 하 여 필드 값에는 사용자 지정 서식 문자열을 적용할 수는 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>속성.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 기본적으로 데이터 바인딩된 컨트롤이 읽기 전용 모드에 있을 때만 서식 문자열이 필드 값에 적용 됩니다. 형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 설정는 <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>속성을 `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> 필드 값이 `null`를 설정 하 여 사용자 지정 캡션을 표시할 수 있습니다는 <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A>속성.</xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> DynamicControl 컨트롤에는 빈 문자열도 자동 변환할 수 있습니다 (&quot;&quot;)을 설정 하 여 값을 null 값을 필드는 <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>속성을 `true`.</xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>       DynamicControl 컨트롤이 다른 디스플레이 모드를 지원합니다. DynamicControl 컨트롤을 표시 하는 모드를 지정 하려면 설정는 <xref:System.Web.DynamicData.DynamicControl.Mode%2A>속성.</xref:System.Web.DynamicData.DynamicControl.Mode%2A> 다음 표에서 다양 한 모드를 보여 줍니다.       <xref:System.Web.UI.WebControls.DataBoundControlMode>에 대 한 디스플레이 모드입니다.</xref:System.Web.UI.WebControls.DataBoundControlMode> 이 사용자를 레코드 또는 데이터 필드의 값을 수정할 수 없습니다. 템플릿 중 하나에 사용할 수 있습니다.       <xref:System.Web.UI.WebControls.DataBoundControlMode>에 대 한 편집 모드입니다.</xref:System.Web.UI.WebControls.DataBoundControlMode> 그러면 사용자가 기존 레코드의 값을 업데이트할 수 있습니다. 템플릿 편집에에서 사용 됩니다 (일반적으로 이름이 `EditItemTemplate`).       <xref:System.Web.UI.WebControls.DataBoundControlMode>삽입 모드입니다.</xref:System.Web.UI.WebControls.DataBoundControlMode> 그러면 사용자가 새 레코드에 대 한 값을 입력할 수 있습니다. Insert 서식 파일에 사용 됩니다 (일반적으로 이름이 `InsertItemTemplate`).       DynamicControl 컨트롤에 데이터 바인딩된 컨트롤을 설정 하 여 숨길 수 있습니다는 <xref:System.Web.UI.Control.Visible%2A>속성을 `false`.</xref:System.Web.UI.Control.Visible%2A>      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:DynamicControl       ApplyFormatInEditMode=&quot;True|False&quot;       ConvertEmptyStringToNull=&quot;True|False&quot;       CssClass=&quot;string&quot;       DataField=&quot;string&quot;       DataFormatString=&quot;string&quot;       EnableViewState=&quot;True|False&quot;       HtmlEncode=&quot;True|False&quot;       ID=&quot;string&quot;       Mode=&quot;Edit|Insert|ReadOnly&quot;       NullDisplayText=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       UIHint=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;   >   </asp:DynamicControl>   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).  \n  \n The following example demonstrates how to use the DynamicControl control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table. It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_0_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_0_1.aspx)]"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")]

      public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.DynamicData.IFieldTemplateHost
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 클래스입니다."
  syntax:
    content: public DynamicControl ();
    parameters: []
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  id: '#ctor(System.Web.UI.WebControls.DataBoundControlMode)'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 지정된 된 모드를 사용 하 여 클래스입니다."
  syntax:
    content: public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "컨트롤의 모드를 지정 하는 열거형 값 중 하나입니다."
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "형식 문자열에서 지정 되었는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Web.DynamicData.DynamicControl.DataFormatString*>속성의 필드가 편집 모드에 있을 때 필드 값에 적용 됩니다.</xref:System.Web.DynamicData.DynamicControl.DataFormatString*>"
  remarks: "<xref:System.Web.DynamicData.DynamicControl>컨트롤에 사용자가 읽기, 편집 또는 필드를 삽입 하도록 허용 하는 다른 디스플레이 모드.</xref:System.Web.DynamicData.DynamicControl> 지정한 서식 문자열이 기본적으로는 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>필드 값에 속성이 적용 되는지 경우에만 <xref:System.Web.DynamicData.DynamicControl>컨트롤은 읽기 전용 모드에.</xref:System.Web.DynamicData.DynamicControl> </xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 ApplyFormatInEditMode 속성을 설정 `true`합니다.      > [!NOTE] >는 <xref:System.Web.DynamicData.DynamicControl>컨트롤 서식 지정 필드는 데이터 원본에서 업데이트 될 때 자동으로 제거 되지 않습니다.</xref:System.Web.DynamicData.DynamicControl> 저장 된 값의 일부분으로 서식 지정 하지 않도록를 프로그래밍 방식으로 서식을 제거 해야 합니다."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식 문자열은; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Column
  id: Column
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "컨트롤에 연관 된 열 개체를 가져오거나 설정 합니다."
  remarks: "특정 열에 대 한 정보를 메타 데이터 열 속성을 사용할 수 있습니다. 열 속성은 자동 설정 됩니다는 <xref:System.Web.DynamicData.DynamicControl>에 대해 제공 된 필드 이름에 따라 제어는 <xref:System.Web.DynamicData.DynamicControl.DataField%2A>속성.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> </xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public System.Web.DynamicData.MetaColumn Column { get; set; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "컨트롤에 연관 된 열 개체입니다."
  overload: System.Web.DynamicData.DynamicControl.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "표시 하는 값을 가져오거나 설정 합니다. 빈 문자열 값을 사용 하는지 여부 (&quot;&quot;) 데이터 원본에서 데이터 필드가 업데이트 되는 경우 null 값으로 자동 변환 됩니다."
  remarks: "<xref:System.Web.UI.WebControls.Parameter>데이터 소스 제어의 개체도 라는 속성이 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> 이 속성에 동일한 기능을 수행 합니다. 두 속성 모두 적절 하 게 설정 되어 있는지 확인 합니다."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>빈 문자열 값이 자동으로 null 값으로 변환 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.CssClass
  id: CssClass
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "표시 스타일을 지정 하는 스타일 시트 CSS 클래스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 내용을 제어 합니다."
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "CSS 클래스의 이름입니다."
  overload: System.Web.DynamicData.DynamicControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "데이터 필드의 이름을 가져오거나는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 제어에 바인딩되어 있습니다."
  remarks: "DataField 속성을 사용 하 여 바인딩할 데이터 필드를 지정 하는 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> 데이터 필드 이름 또는 외래 키 열, 관계 이름에 대 한 열 수 있습니다.       기본적으로 지정된 된 데이터 필드에서 표시 된 <xref:System.Web.DynamicData.DynamicControl>필드 데이터 형식과 연결 된 필드 템플릿을 사용 하 여 제어 합니다.</xref:System.Web.DynamicData.DynamicControl> 데이터 필드에 설정 하 여 렌더링 되는 필드 템플릿을 변경할 수 있습니다는 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A>속성.</xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 설정 하 여 표시 된 텍스트를 형식을 지정할 수도 있습니다는 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>속성.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>       **참고** 데이터 모델의 특정 인스턴스에서이 설정 하는 대신에 특성을 적용 해야 표시 및 데이터 필드의 동작을 전체적으로 변경 하려는 경우는 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> 자세한 내용은 참조 [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_4_1.aspx)]"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 필드의 이름에서 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 를 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.DynamicData.DynamicControl.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필드의 값에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "DataFormatString 속성을 사용 하 여에 표시 된 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> DataFormatString 속성을 설정 하지 않으면 경우 필드 값은 특수 한 서식을 없이 표시 됩니다.       기본적으로 서식 문자열이 필드 값에 적용 경우에만 <xref:System.Web.DynamicData.DynamicControl.Mode%2A> <xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> 속성</xref:System.Web.DynamicData.DynamicControl.Mode%2A> 편집 모드에서 필드 값에 형식 문자열을 적용 하려면 설정는 <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>속성을 `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>       표시 DataFormatString 속성을 사용 하 여 지정한 형식이의이 인스턴스와 관련 된 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> 적용 하 여 전체 응용 프로그램에서 데이터 필드에 대 한 표시 형식을 변경할 수도 있습니다는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>데이터 모델 및 설정에는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>명명 된 생성자의 매개 변수.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 자세한 내용은 참조 [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "필드의 값에 대 한 표시 형식을 지정 하는 서식 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;), 필드 값에 특정 형식이 적용 않음을 나타냅니다."
  overload: System.Web.DynamicData.DynamicControl.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  id: FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "에 대해 만든 필드 템플릿을 가져옵니다는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 제어 합니다."
  syntax:
    content: public System.Web.UI.Control FieldTemplate { get; }
    return:
      type: System.Web.UI.Control
      description: "에 대해 생성 되는 필드 템플릿을 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 제어 합니다."
  overload: System.Web.DynamicData.DynamicControl.FieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "지정된 된 키를 사용 하 여 특성 값을 검색 합니다."
  remarks: "특성 컬렉션의 경우 `null`,이 메서드는 빈 문자열을 반환 합니다."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "특성의 이름입니다."
    return:
      type: System.String
      description: "특성의 값입니다."
  overload: System.Web.DynamicData.DynamicControl.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "컨트롤에 대 한 데이터가 렌더링 되기 전에 HTML 인코딩 인지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "HtmlEncode 속성을 사용 하 여 필드 값 표시 되기 전에 HTML 인코딩을 해당 문자열 표현 되는지 여부를 지정할 수 있습니다.      > [!NOTE] > HTML 인코딩 필드 값을 표시 되지 않도록 사이트 간 스크립팅 공격과 악성 콘텐츠를 방지 합니다. 가능한 경우 항상이 속성을 사용 하도록 설정 해야 합니다. 자세한 내용은 참조 [스크립트에 의해 악용 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤에 대 한 데이터가 렌더링 되기 전에 HTML 인코딩 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.DynamicData.DynamicControl.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Mode
  id: Mode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "렌더링 모드를 가져오거나 설정 합니다."
  remarks: "모드 속성을 사용 하 여 표시 하기 위해 사용할 렌더링 모드를 지정 하는 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> 다음 표에서 다양 한 모드를 보여 줍니다.      | 모드 | 설명 |   |----------|-----------------|   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| 디스플레이 모드에 대 한.</xref:System.Web.UI.WebControls.DataBoundControlMode> 이 사용자를 레코드 또는 데이터 필드의 값을 수정할 수 없습니다. 템플릿 중 하나에 사용할 수 있습니다. 기본값입니다. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| 편집 모드에 대 한.</xref:System.Web.UI.WebControls.DataBoundControlMode> 그러면 사용자가 기존 레코드의 값을 업데이트할 수 있습니다. 에 사용 되는 `EditItemTemplate` 템플릿. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| 삽입 모드에 대 한.</xref:System.Web.UI.WebControls.DataBoundControlMode> 그러면 사용자가 새 레코드에 대 한 값을 입력할 수 있습니다. 에 사용 되는 `InsertItemTemplate` 템플릿. |"
  syntax:
    content: public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "컨트롤에 대 한 렌더링 모드를 지정 하는 열거형 값 중 하나입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>합니다."
  overload: System.Web.DynamicData.DynamicControl.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "필드 값이 경우 데이터 필드에 대해 표시 되는 캡션을 가져오거나 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "경우에 따라 데이터 원본의 필드 값을 null로 저장 됩니다. 사용자 지정 필드 NullDisplayText 속성을 설정 하 여 null 값이 있는 대해 표시할 캡션을 지정할 수 있습니다. Null 필드 값에 빈 문자열로 표시 되는이 속성을 설정 하지 않으면 (&quot;&quot;)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "필드 값이 경우 데이터 필드에 대해 표시 되는 캡션을 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.DynamicData.DynamicControl.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "발생 된 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnInit 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.DynamicData.DynamicControl.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.DynamicData.DynamicControl.DataField*>속성이 설정 되지 않았습니다.</xref:System.Web.DynamicData.DynamicControl.DataField*>"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "렌더링 된 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 컨트롤 내용을 클라이언트 브라우저에 지정 된를 사용 하 여 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체입니다."
  remarks: "Render 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "렌더링 하는 데 사용 되는 개체는 <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 클라이언트의 브라우저에서 내용을 제어 합니다."
  overload: System.Web.DynamicData.DynamicControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "지정된 된 값으로 지정된 된 특성을 설정합니다."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "설정할 특성의 이름입니다."
    - id: value
      type: System.String
      description: "특성에 할당할 값입니다."
  overload: System.Web.DynamicData.DynamicControl.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  id: System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  isEii: true
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "이 멤버에 대 한 참조 <xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>.</xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>"
  syntax:
    content: System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }
    return:
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "필드 템플릿에 적용 되는 서식 옵션."
  overload: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Table
  id: Table
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "컨트롤과 연결 된 테이블 개체를 가져옵니다."
  remarks: "포함 하는 데이터 바인딩된 컨트롤에 연관 된 테이블에 대 한 메타 데이터 정보에 액세스할 수 테이블 속성을 사용 하 여는 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual System.Web.DynamicData.MetaTable Table { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "컨트롤과 연결 된 테이블 개체입니다."
  overload: System.Web.DynamicData.DynamicControl.Table*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> 구현 하는 데이터 소스 컨트롤에 바인딩되지 않은 데이터 바인딩된 컨트롤 내에서 <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> 인터페이스입니다."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "데이터 필드를 렌더링 하는 데 사용 되는 필드 템플릿의 이름을 가져오거나 설정 합니다."
  remarks: "UIHint 속성을 사용 하 여 데이터 필드에 대 한 UI를 표시 하는 데 필드 템플릿을 지정 합니다. 기본적으로 서식 파일 필드는 사용자 정의 컨트롤 및 이름 및 삽입 작업 편집 작업에 사용 되는 필드 템플릿을 식별 하기 위한 접미사를 포함 합니다. 접미사는 각각 편집 (_e) 및 삽입 (_i),입니다. UIHint 속성에 값을 설정 하는 경우 접미사 없이 이름을 설정 합니다. 동적 데이터를 평가 하 여 올바른 모드는 식별 된 <xref:System.Web.DynamicData.DynamicControl.Mode%2A>속성 값 및 올바른 필드 템플릿을 렌더링 합니다.</xref:System.Web.DynamicData.DynamicControl.Mode%2A>       UIHint 속성을 설정 하지 않으면 기본적으로 동적 데이터 템플릿을 렌더링 합니다 필드 필드 형식을 기반으로 합니다. 자세한 내용은 참조 [ASP.NET 동적 데이터 스 캐 폴딩](~/add/includes/ajax-current-ext-md.md)합니다.       UIHint 속성을 사용 하 여 지정한 필드 서식 파일은의이 인스턴스와 관련 된 <xref:System.Web.DynamicData.DynamicControl>컨트롤.</xref:System.Web.DynamicData.DynamicControl> 사용 되는 데이터 필드 전체 응용 프로그램이 적용 하 여 필드 템플릿을 변경할 수도 있습니다는 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>데이터 모델에.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 데이터 모델에 적용 되는 메타 데이터를 재정의 UIHint 속성을 설정 합니다. 메타 데이터 특성에 대 한 자세한 내용은 참조 [ASP.NET Dynamic Data](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).  \n  \n The following example shows how you can specify a data field to use a different field template to render its contents. The second example shows the custom field template specified by the UIHint property.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_1.aspx)]  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_2.ascx)]\n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_2.ascx)]"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "데이터 필드를 렌더링 하는 데 사용 되는 필드 템플릿의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;), 데이터 필드 형식 또는 데이터 모델에 적용 되는 메타 데이터 정보를 기반으로 필드 템플릿을 렌더링 함을 나타냅니다."
  overload: System.Web.DynamicData.DynamicControl.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "컨트롤에 대 한 유효성 검사 그룹 이름을 가져오거나 설정 합니다."
  remarks: "유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹에서 독립적으로 확인할 수 있습니다. ValidationGroup 속성을 사용 하 여 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.DynamicData.DynamicControl>때 페이지는 서버에 다시 게시 합니다.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "컨트롤에 대 한 유효성 검사 그룹 이름입니다."
  overload: System.Web.DynamicData.DynamicControl.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.DynamicData.DynamicControl.#ctor
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicControl.Column
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicControl.DataField
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicControl.UIHint
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
- uid: System.Web.DynamicData.DynamicControl.#ctor*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl.DynamicControl
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicControl.Column*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
- uid: System.Web.DynamicData.DynamicControl.DataField*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicControl.GetAttribute
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit
  nameWithType: DynamicControl.OnInit
- uid: System.Web.DynamicData.DynamicControl.Render*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render
  nameWithType: DynamicControl.Render
- uid: System.Web.DynamicData.DynamicControl.SetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicControl.SetAttribute
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
- uid: System.Web.DynamicData.DynamicControl.UIHint*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
