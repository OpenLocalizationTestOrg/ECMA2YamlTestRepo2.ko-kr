### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.DatabaseAttribute
  id: DatabaseAttribute
  children:
  - System.Data.Linq.Mapping.DatabaseAttribute.#ctor
  - System.Data.Linq.Mapping.DatabaseAttribute.Name
  langs:
  - csharp
  name: DatabaseAttribute
  nameWithType: DatabaseAttribute
  fullName: System.Data.Linq.Mapping.DatabaseAttribute
  type: Class
  summary: "데이터베이스를 나타내는 클래스의 특정 한 특성을 지정 합니다."
  remarks: "강력한 형식의를 DatabaseAttribute 특성을 적용할 수 <xref:System.Data.Linq.DataContext>선언.</xref:System.Data.Linq.DataContext>       DatabaseAttribute 특성은 선택 사항입니다. 이 옵션을 사용할 경우 사용 해야는 <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A>이름을 지정 하는 속성입니다.</xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A>       데이터베이스는 <xref:System.Data.Linq.DataContext>클래스</xref:System.Data.Linq.DataContext> 이름이 같은 것으로 가정 됩니다이 특성을 적용 하지 않으면 연결 이름을 지정 하지 않는 경우"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)]

      public sealed class DatabaseAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DatabaseAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  langs:
  - csharp
  name: DatabaseAttribute()
  nameWithType: DatabaseAttribute.DatabaseAttribute()
  fullName: System.Data.Linq.Mapping.DatabaseAttribute.DatabaseAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Linq.Mapping.DatabaseAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public DatabaseAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.DatabaseAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DatabaseAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DatabaseAttribute.Name
  fullName: System.Data.Linq.Mapping.DatabaseAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "데이터베이스의 이름을 가져오거나 설정 합니다."
  remarks: "사용 하는 경우이 속성은 필수 여 <xref:System.Data.Linq.Mapping.DatabaseAttribute>특성.</xref:System.Data.Linq.Mapping.DatabaseAttribute>       정보는 연결 자체 데이터베이스 이름을 지정 하지 않는 경우에 사용 됩니다."
  example:
  - "```vb#  \n<Database(Name:=\"Database#5\")> _  \nPublic Class Database5  \n    Inherits DataContext  \n    …  \nEnd Class  \n```  \n  \n```c#  \n[Database(Name=\"Database#5\")]  \npublic class Database5 : DataContext  \n{  \n    …  \n}  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "이름입니다."
  overload: System.Data.Linq.Mapping.DatabaseAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.DatabaseAttribute.#ctor
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  isExternal: false
  name: DatabaseAttribute()
  nameWithType: DatabaseAttribute.DatabaseAttribute()
  fullName: System.Data.Linq.Mapping.DatabaseAttribute.DatabaseAttribute()
- uid: System.Data.Linq.Mapping.DatabaseAttribute.Name
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  isExternal: false
  name: Name
  nameWithType: DatabaseAttribute.Name
  fullName: System.Data.Linq.Mapping.DatabaseAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.DatabaseAttribute.#ctor*
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  isExternal: false
  name: DatabaseAttribute
  nameWithType: DatabaseAttribute.DatabaseAttribute
- uid: System.Data.Linq.Mapping.DatabaseAttribute.Name*
  parent: System.Data.Linq.Mapping.DatabaseAttribute
  isExternal: false
  name: Name
  nameWithType: DatabaseAttribute.Name
