### YamlMime:ManagedReference
items:
- uid: System.Transactions.IDtcTransaction
  id: IDtcTransaction
  children:
  - System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  - System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  - System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  langs:
  - csharp
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
  type: Interface
  summary: "DTC 트랜잭션에 대해 설명합니다."
  remarks: "만 사용 되므로이 인터페이스를 구현 하지 않아야는 <xref:System.Transactions.TransactionInterop>를 관리 되지 않는 버전을 나타내는 내부적으로 클래스는 <xref:System.EnterpriseServices.ITransaction>의 인터페이스는 <xref:System.EnterpriseServices>네임 스페이스.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("0fb15084-af41-11ce-bd2b-204c4f4f5020")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IDtcTransaction
  implements: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  id: Abort(System.IntPtr,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: Abort(IntPtr,Int32,Int32)
  nameWithType: IDtcTransaction.Abort(IntPtr,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Abort(IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션을 중단합니다."
  remarks: "만 사용 되므로이 인터페이스의 모든 메서드를 구현 하지 않아야는 <xref:System.Transactions.TransactionInterop>를 관리 되지 않는 버전을 나타내는 내부적으로 클래스는 <xref:System.EnterpriseServices.ITransaction>의 인터페이스는 <xref:System.EnterpriseServices>네임 스페이스.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void Abort (IntPtr reason, int retaining, int async);
    parameters:
    - id: reason
      type: System.IntPtr
      description: "선택적 <xref href=&quot;System.EnterpriseServices.BOID&quot;> </xref> 는 트랜잭션이 중단 되는 이유를 나타내는입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 나타내는 없는 중단 이유를 제공 하는 합니다."
    - id: retaining
      type: System.Int32
      description: "이 값 이어야 합니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: async
      type: System.Int32
      description: "때 `async` 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>비동기 중단을 수행 하 고 호출자에 게 사용 해야 <xref uid=&quot;langword_csharp_ITransactionOutcomeEvents&quot; name=&quot;ITransactionOutcomeEvents&quot; href=&quot;&quot;> </xref> 트랜잭션의 결과 대 한 자세한 내용은 합니다."
  overload: System.Transactions.IDtcTransaction.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  id: Commit(System.Int32,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: Commit(Int32,Int32,Int32)
  nameWithType: IDtcTransaction.Commit(Int32,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Commit(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션을 커밋합니다."
  remarks: "값에 대 한 `commitType`, 참조 `ITransaction::Commit` OLE DB 프로그래머 참조에서.       만 사용 되므로이 인터페이스의 모든 메서드를 구현 하지 않아야는 <xref:System.Transactions.TransactionInterop>를 관리 되지 않는 버전을 나타내는 내부적으로 클래스는 <xref:System.EnterpriseServices.ITransaction>의 인터페이스는 <xref:System.EnterpriseServices>네임 스페이스.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void Commit (int retaining, int commitType, int reserved);
    parameters:
    - id: retaining
      type: System.Int32
      description: "이 값 이어야 합니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: commitType
      type: System.Int32
      description: "OLE DB 열거형에서 가져온 값 <xref uid=&quot;langword_csharp_XACTTC&quot; name=&quot;XACTTC&quot; href=&quot;&quot;> </xref>합니다."
    - id: reserved
      type: System.Int32
      description: "이 값은&0; 이어야 합니다."
  overload: System.Transactions.IDtcTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  id: GetTransactionInfo(System.IntPtr)
  parent: System.Transactions.IDtcTransaction
  langs:
  - csharp
  name: GetTransactionInfo(IntPtr)
  nameWithType: IDtcTransaction.GetTransactionInfo(IntPtr)
  fullName: System.Transactions.IDtcTransaction.GetTransactionInfo(IntPtr)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션에 대 한 정보를 검색 합니다."
  remarks: "만 사용 되므로이 인터페이스의 모든 메서드를 구현 하지 않아야는 <xref:System.Transactions.TransactionInterop>를 관리 되지 않는 버전을 나타내는 내부적으로 클래스는 <xref:System.EnterpriseServices.ITransaction>의 인터페이스는 <xref:System.EnterpriseServices>네임 스페이스.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction> </xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public void GetTransactionInfo (IntPtr transactionInformation);
    parameters:
    - id: transactionInformation
      type: System.IntPtr
      description: "호출자가 할당에 대 한 포인터 <xref href=&quot;System.EnterpriseServices.XACTTRANSINFO&quot;> </xref> 트랜잭션에 대 한 정보를 받을 구조입니다. 이 값이 아니어야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Transactions.IDtcTransaction.GetTransactionInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Abort(IntPtr,Int32,Int32)
  nameWithType: IDtcTransaction.Abort(IntPtr,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Abort(IntPtr,Int32,Int32)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Commit(Int32,Int32,Int32)
  nameWithType: IDtcTransaction.Commit(Int32,Int32,Int32)
  fullName: System.Transactions.IDtcTransaction.Commit(Int32,Int32,Int32)
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: GetTransactionInfo(IntPtr)
  nameWithType: IDtcTransaction.GetTransactionInfo(IntPtr)
  fullName: System.Transactions.IDtcTransaction.GetTransactionInfo(IntPtr)
- uid: System.Transactions.IDtcTransaction.Abort*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Abort
  nameWithType: IDtcTransaction.Abort
- uid: System.Transactions.IDtcTransaction.Commit*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: Commit
  nameWithType: IDtcTransaction.Commit
- uid: System.Transactions.IDtcTransaction.GetTransactionInfo*
  parent: System.Transactions.IDtcTransaction
  isExternal: false
  name: GetTransactionInfo
  nameWithType: IDtcTransaction.GetTransactionInfo
