### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  id: WorkflowRuntimeService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  langs:
  - csharp
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  type: Class
  summary: "워크플로 런타임 엔진의 핵심 서비스가 파생 되는 추상 기본 클래스를 나타냅니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntimeService 클래스에서 파생 된 서비스를 시작 하 고 워크플로 런타임 엔진에서 중지할 수 있습니다. 하지만 서비스는 제대로 초기화 되기 위해 시작 되 고 때, 반대로 해야 다른 서비스 지원이 필요할 수 있습니다 및 순서는 서비스의 시작 또는 중지이 명확 하지는 하기 위해 다른 서비스의 제대로 종료 중지 될 때입니다. 이 문제를 해결 하기 위해 워크플로 런타임 엔진 서비스 시작 및 중지 하기 위한&2; 단계 메커니즘을 제공 합니다. 때 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>호출 되는 워크플로 런타임 엔진이 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>각 WorkflowRuntimeService 클래스에서 파생 되는 서비스에 대 한 메서드</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 를 호출</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>  워크플로 런타임 엔진에서 발생 이러한 모든 서비스가 시작 된 후의 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>이벤트를 발생는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>각 워크플로 런타임 엔진 서비스에 대 한 호출 될 메서드를.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> 서비스를 재정의할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>이&2; 단계 프로세스에 참여 하는 메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 마찬가지로, <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>호출 됩니다는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>메서드를는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>이벤트, 및 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>메서드가&2; 단계 메커니즘을 제공 합니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  State 속성을 포함 한 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>서비스가 시작 또는 중지 되거나 완전히 시작 또는 중지 여부를 나타내는 값입니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>       WorkflowRuntimeService 클래스에서 파생 된 서비스 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 를 호출 하 여 처리 되지 않은 예외가 발생 하는 조건에 도달할 때 이벤트</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> 를 발생 시킬 수 있습니다.       <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>클래스는 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService>궁극적으로 WorkflowRuntimeService 클래스에서 파생 된 클래스</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 에서 파생 된 서비스"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRuntimeService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 구현 된 경우의 새 인스턴스를 초기화 합니다.는 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 초기화</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>"
  syntax:
    content: protected WorkflowRuntimeService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면 워크플로 런타임 엔진에서 발생 하는 경우 호출 될 메서드를 나타냅니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Started&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스가 워크플로 런타임 엔진 서비스가 워크플로 런타임 엔진이 호출한 후에 다른 서비스에 의존 하는 모든 초기화를 수행할 수 있도록&2; 단계 시작 메커니즘을 구현 하는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>모든 워크플로 런타임 엔진 서비스에 대 한 메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 워크플로 런타임 엔진이 호출 된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>발생 모든 워크플로 런타임 엔진 서비스의 메서드를는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 서비스에 필요한 최종 시작 기능을 제공 하려면 OnStarted 메서드를 재정의할 수 있습니다 때는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>이벤트가 발생 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> 구독 및 구독의 메커니즘은 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>이벤트 내부적으로 처리 됩니다.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>      > [!NOTE] > 서비스를 호출 하 여 워크플로 런타임 엔진에 추가 하는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>워크플로 런타임 엔진은 호출 하는 워크플로 런타임 엔진이 이미 시작 된 후 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>서비스에서.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 그러나이 경우에에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started>이벤트가 이미 발생 한, 따라서 서비스 내에서 OnStarted에서 수행할 일반적으로 모든 초기화를 수행 하도록 할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> 테스트할 수 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>워크플로 런타임 엔진이 시작 되었는지 여부를 확인 하려면.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>로 설정 되어 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>OnStarted가 호출 되기 전에.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  OnStarted의 기본 구현은 아무 작업도 수행 합니다."
  syntax:
    content: protected virtual void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  id: OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면 워크플로 런타임 엔진에서 발생 하는 경우 호출 될 메서드를 나타냅니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Stopped&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스는 워크플로 런타임 엔진 서비스 후 몇 가지 기능을 유지할 수 있도록&2; 단계 중지 메커니즘을 구현 해당 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>메서드는 지 수, 필요한 경우 원하는 다른 서비스의 종료를 워크플로 런타임 엔진에서 호출 됩니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 워크플로 런타임 엔진이 호출 된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>발생 모든 워크플로 런타임 엔진 서비스의 메서드를는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 서비스에 필요한 최종 종료 기능을 제공 하려면 OnStopped 메서드를 재정의할 수 있습니다 때는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>이벤트가 발생 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> 구독 및 구독의 메커니즘은 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>이벤트 내부적으로 처리 됩니다.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>      > [!NOTE] > 경우 프로그램 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>를 호출 하 여 워크플로 런타임 엔진에서 제거 되 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>워크플로 런타임 엔진은 호출 하는 워크플로 런타임 엔진이 실행 되는 동안 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>서비스에서.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 그러나이 경우 OnStopped 메서드가 호출 되지 않습니다 서비스에 대 한 합니다. 따라서, 서비스 내에서 OnStopped에서 수행할 일반적으로 모든 최종 종료를 수행 해야 할 수는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 테스트할 수 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>워크플로 런타임 엔진이 실행 되 고 있는지 확인 하려면.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>로 설정 되어 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>OnStopped가 호출 되기 전에.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  OnStopped의 기본 구현은 아무 작업도 수행 합니다."
  syntax:
    content: protected virtual void OnStopped ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  id: RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "발생 된 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&quot;> </xref> 이벤트입니다."
  remarks: "서비스를 발생 시키는 RaiseServicesExceptionNotHandledEvent를 호출할 수는 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>이벤트는 실행 중 처리할 수 없는 예외가 발생 하면.</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> 전달 해야는 <xref:System.Guid>처리 되지 않은 예외와 연결 된 워크플로 인스턴스의.</xref:System.Guid> 예를 들어 타이머 서비스 전달는 <xref:System.Guid>예외가 발생 한 타이머와 연결 된.</xref:System.Guid>"
  syntax:
    content: protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "처리할 수 없는 예외입니다."
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>처리 되지 않은 예외와 연결 된 워크플로 인스턴스의.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  id: Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "가져옵니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> 이 서비스에 대 한 합니다."
  remarks: "호출 하기 전에이 속성을 설정 하는 워크플로 런타임 엔진이 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>서비스.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>"
  syntax:
    content: protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "<xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> 개체입니다."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면 시작 되는 서비스 작업 및 변경 된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>를 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "시작 서비스에서 파생 되는 모든 워크플로 런타임 엔진에 의해 호출 되는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>호출 됩니다.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       워크플로 런타임 엔진 서비스를 호출 하 여 워크플로 런타임 엔진에 추가 될 때 워크플로 런타임 엔진에 의해 시작 호출 또한 됩니다 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>워크플로 런타임 엔진이 이미 시작 된 후.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 시작의 기본 구현은 서비스가 시작 되었는지 이미 실행 되는 동안 서비스를 시작 하는 경우 적절 한 예외를 throw 하는 데이 정보를 사용 여부를 추적 합니다.       이 메서드를 재정의 하 여 워크플로 런타임 엔진에 의해 시작 서비스 하도록 하는 데 필요한 추가 기능을 제공할 수 있습니다. 에 대 한 보장 되지 않습니다는 워크플로 런타임 엔진이 서비스에서 시작을 호출할 때 서비스를 실행할 수 있는 경우. 따라서에서 Start 메서드를 다른 서비스에서 제공 하는 기능에 의존 하지 않는 초기화만 수행 해야 합니다. 이 스케줄러 서비스 같은 핵심 서비스에서 제공 하는 기능이 포함 됩니다. 워크플로 런타임 엔진에서 발생 된 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>호출한 후 Start 메서드 모든 워크플로 런타임 엔진 서비스 이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName> 모든 워크플로 런타임 엔진 서비스가 시작 된 후 추가 초기화가 필요한 서비스를 재정의할 수 있습니다는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>시작 이벤트가 발생할 때이 초기화를 수행 하기 위해 메서드.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>      > [!NOTE] > 서비스를 호출 하 여 워크플로 런타임 엔진에 추가 하는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>워크플로 런타임 엔진이 이미 시작 된 후 워크플로 런타임 엔진이 서비스에서 시작을 호출 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 그러나이 경우에에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started>이미 발생 한 이벤트, 서비스가에서 일반적으로 수행 하는 모든 초기화를 수행 해야 할 수는 따라서 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>에서 Start 메서드 내.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Started> 테스트할 수 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>워크플로 런타임 엔진이 시작 되었는지 여부를 확인 하려면.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       시작은 워크플로 런타임 엔진 에서만 호출 되어야 합니다."
  example:
  - "The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  This example is from the Termination Tracking Service SDK sample.  For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#112](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#112)]\n [!code-vb[WF_Samples#112](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#112)]"
  syntax:
    content: protected virtual void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서) 또는 서비스가 이미 시작 되었습니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  id: State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "상태를 가져옵니다는 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>합니다."
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스를 시작 및 중지 워크플로 런타임 엔진 서비스에 대 한&2; 단계 메커니즘을 구현 합니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 워크플로 런타임 엔진의 구현을 호출할 때 시작 메커니즘의 첫 번째 단계가 시작 된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>메서드는 서비스에 대 한.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 이 메서드에서 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 상태를 설정 하는</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 의 기본 구현을 호출 해야 발생 시킬 때 워크플로 런타임 엔진 서비스의 모든 워크플로 런타임 엔진이 시작 된 후 두 번째 단계는 발생 된 <xref:System.Workflow.Runtime.WorkflowRuntime.Started>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>내부적으로이 이벤트에 대 한 구독을 관리 처리기는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 상태 설정</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       워크플로 런타임 엔진의 구현을 호출할 때 워크플로 런타임 엔진 서비스를 중지 하는&2; 단계 메커니즘 시작 되는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>메서드는 서비스에 대 한.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 이 메서드에서 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 상태를 설정 하는</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 의 기본 구현을 호출 해야 워크플로 런타임 엔진에서 발생 모든 워크플로 런타임 엔진 서비스를 중지 한 후의 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>내부적으로이 이벤트에 대 한 구독을 관리 처리기는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 상태 설정</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  syntax:
    content: protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }
    return:
      type: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
      description: "중 하나는 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref> 값입니다."
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "파생된 클래스에서 재정의 되 면 중지는 서비스 작업 및 변경 된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>를 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>"
  remarks: "Stop 모든에서 파생 되는 서비스에서 워크플로 런타임 엔진에 의해 호출 되는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>클래스 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>호출 됩니다.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  중지 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> 를 호출 하 여 워크플로 런타임 엔진에서 워크플로 런타임 엔진 서비스를 제거할 때에 워크플로 런타임 엔진에 의해 호출 됩니다. 정지의 기본 구현은 서비스가 시작 된 서비스를 시작 하기 전에 중지 되 면 해당 예외를 throw 하는 데이 정보를 사용 여부를 추적 합니다.       이 메서드를 재정의 하 여 워크플로 런타임 엔진에 의해 중지 서비스 하도록 하는 데 필요한 추가 기능을 제공할 수 있습니다. 보장이 없습니다 있는 경우 어떠한 서비스가 중지 또는 중지 서비스에서 호출 될 때 실행 중입니다. 워크플로 런타임 엔진에서 발생 된 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>호출한 후 Stop 메서드가 모든 워크플로 런타임 엔진 서비스 이벤트.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> 서비스에 있을 때까지 모든 워크플로 런타임 엔진 서비스가 워크플로 런타임 엔진이 호출한 중지 메서드가 다른 서비스를 지원 하기 위한 추가 기능을 유지 해야 할 수 있습니다. 서비스에서 이러한 기능을 유지 해야 하는 경우 재정의할 수 있습니다는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>메서드를 서비스 중지를 완료 하는 데 필요한 추가 작업을 수행할 때는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>이벤트가 발생 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>      > [!NOTE] > 경우 프로그램 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>를 호출 하 여 워크플로 런타임 엔진에서 제거 되 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>워크플로 런타임 엔진이 실행 되는 동안 워크플로 런타임 엔진이 서비스에서 중지를 호출 합니다.</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 그러나이 경우에에서는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>서비스에 대 한 메서드 호출 되지 것입니다.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 서비스에이에서 일반적으로 수행 하는 추가 종료 기능을 수행 해야 할 수는 따라서 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>에서 Stop 메서드가 내부.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 테스트할 수 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>워크플로 런타임 엔진이 실행 되 고 있는지 확인 하려면.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       중지는 워크플로 런타임 엔진 에서만 호출 되어야 합니다."
  syntax:
    content: protected virtual void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서).</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>       -또는-서비스가 아직 시작 되지 않았습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowRuntimeServiceState
  nameWithType: WorkflowRuntimeServiceState
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted
  nameWithType: WorkflowRuntimeService.OnStarted
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped
  nameWithType: WorkflowRuntimeService.OnStopped
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start
  nameWithType: WorkflowRuntimeService.Start
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop
  nameWithType: WorkflowRuntimeService.Stop
