### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializerFactory
  id: XmlSerializerFactory
  children:
  - System.Xml.Serialization.XmlSerializerFactory.#ctor
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  langs:
  - csharp
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory
  fullName: System.Xml.Serialization.XmlSerializerFactory
  type: Class
  summary: "형식화 된 버전을 만듭니다는 <xref:System.Xml.Serialization.XmlSerializer>더 효율적인 직렬화에 대 한.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public class XmlSerializerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlSerializerFactory ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  id: CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생을 반환 된 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> 지정된 된 형식을 serialize 하는 데 사용 되는 클래스입니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "파생은 <xref:System.Xml.Serialization.XmlSerializer>클래스 지정 된 형식을 직렬화 하기 위해 특별히 만들어지는.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  id: CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생을 반환 된 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> 클래스를 다른 형식에 매핑하는 개체를 사용 합니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);
    parameters:
    - id: xmlTypeMapping
      type: System.Xml.Serialization.XmlTypeMapping
      description: "<xref:System.Xml.Serialization.XmlTypeMapping>를 다른 형식으로 매핑하는.</xref:System.Xml.Serialization.XmlTypeMapping>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "파생은 <xref:System.Xml.Serialization.XmlSerializer>매핑된 형식을 serialize 하기 위해 특별히 만들어지는 클래스.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생을 반환 된 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> 지정한 유형 및 네임 스페이스를 serialize 하는 데 사용 되는 클래스입니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    - id: defaultNamespace
      type: System.String
      description: "모든 XML 요소에 사용할 기본 네임 스페이스입니다."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "파생은 <xref:System.Xml.Serialization.XmlSerializer>클래스 지정 된 형식을 직렬화 하기 위해 특별히 만들어지는.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  id: CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생을 반환 된 <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> 지정된 된 형식을 serialize 하는 데 사용 되는 클래스입니다. 속성 또는 필드를 배열에 반환 하는 경우는 <code> extraTypes </code> 매개 변수 배열에 삽입할 수 있는 개체를 지정 합니다."
  remarks: "이 오버 로드는 호출과 비슷하지만 [XmlSerializer (형식, 형식,\\[\\])](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스를 만들려면"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, Type[] extraTypes);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    - id: extraTypes
      type: System.Type[]
      description: "A <xref:System.Type>serialize 하는 데 추가 개체 형식의 배열입니다.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생 반환는 <xref:System.Xml.Serialization.XmlSerializer>XML 문서에 지정 된 형식의 개체를 serialize 할 수 있는 클래스 또는 그 반대로.</xref:System.Xml.Serialization.XmlSerializer> Serialize 될 각 개체를 포함할 수 있으며이 오버 로드는 다른 클래스와 재정의할 수 있는 클래스의 인스턴스."
  remarks: "이 오버 로드는 호출 하는 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29> <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스를 만드는</xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29> 비슷합니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>기본 serialization 동작을 재정의 하는 필드가 포함 된.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생 반환는 <xref:System.Xml.Serialization.XmlSerializer>XML 문서에 지정 된 형식의 개체를 serialize 할 수 있는 클래스 또는 그 반대로.</xref:System.Xml.Serialization.XmlSerializer> XML 루트 요소를 나타내는 개체를 지정 합니다."
  remarks: "이 오버 로드는 호출 하는 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName> <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스를 만드는</xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName> 비슷합니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML 루트 요소를 나타내는입니다.</xref:System.Xml.Serialization.XmlRootAttribute>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생 반환는 <xref:System.Xml.Serialization.XmlSerializer>클래스에는 XML 문서 인스턴스에 지정 된 형식의 개체를 serialize 할 수 있는 그 반대의.</xref:System.Xml.Serialization.XmlSerializer> Serialize 될 각 개체를 포함할 수 있으며이 오버 로드는 다른 클래스와 재정의할 수 있는 클래스의 인스턴스. 이 오버 로드는 또한 모든 XML 요소 및 XML 루트 요소로 사용 하는 클래스에 대 한 기본 네임 스페이스를 지정 합니다."
  remarks: "이 오버 로드는 호출과 비슷하지만 [XmlSerializer (형식, XmlAttributeOverrides, y p e\\[\\], XmlRootAttribute, String)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스를 만들려면"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>serialize 하는 데.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>기본 serialization 동작을 재정의 하는 필드가 포함 된.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A <xref:System.Type>serialize 하는 데 추가 개체 형식의 배열입니다.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML 루트 요소를 나타내는입니다.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 문서에 있는 모든 XML 요소 기본 네임 스페이스입니다."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생 반환는 <xref:System.Xml.Serialization.XmlSerializer>클래스에는 XML 문서 인스턴스에 지정 된 형식의 개체를 serialize 할 수 있는 그 반대의.</xref:System.Xml.Serialization.XmlSerializer> Serialize 될 각 개체를 포함할 수 있으며이 오버 로드는 다른 클래스와 재정의할 수 있는 클래스의 인스턴스. 이 오버 로드는 또한 모든 XML 요소 및 XML 루트 요소로 사용 하는 클래스에 대 한 기본 네임 스페이스를 지정 합니다."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>개체의이 <xref:System.Xml.Serialization.XmlSerializer>serialize 할 수 있습니다.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>확장 하거나 형식 매개 변수에 지정 된 클래스의 동작을 재정의 하.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A <xref:System.Type>serialize 하는 데 추가 개체 형식의 배열입니다.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML 루트 요소 속성을 정의 하는.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 문서에 있는 모든 XML 요소 기본 네임 스페이스입니다."
    - id: location
      type: System.String
      description: "형식의 위치를 지정 하는 경로입니다."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "파생 반환는 <xref:System.Xml.Serialization.XmlSerializer>클래스에는 XML 문서 인스턴스에 지정 된 형식의 개체를 serialize 할 수 있는 그 반대의.</xref:System.Xml.Serialization.XmlSerializer> Serialize 될 각 개체를 포함할 수 있으며이 오버 로드는 다른 클래스와 재정의할 수 있는 클래스의 인스턴스. 이 오버 로드는 또한 모든 XML 요소 및 XML 루트 요소로 사용 하는 클래스에 대 한 기본 네임 스페이스를 지정 합니다."
  remarks: "이 오버 로드는 호출과 비슷하지만 [XmlSerializer (Type, XmlAttributeOverrides, 형식\\[\\], XmlRootAttribute, 문자열, 문자열, 증명 정보)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)?qualifyHint=False&autoUpgrade=False) <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스를 만들려면"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>개체의이 <xref:System.Xml.Serialization.XmlSerializer>serialize 할 수 있습니다.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>확장 하거나 형식 매개 변수에 지정 된 클래스의 동작을 재정의 하.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "A <xref:System.Type>serialize 하는 데 추가 개체 형식의 배열입니다.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>XML 루트 요소 속성을 정의 하는.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "XML 문서에 있는 모든 XML 요소 기본 네임 스페이스입니다."
    - id: location
      type: System.String
      description: "형식의 위치를 지정 하는 경로입니다."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "인스턴스는 <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> 형식에 액세스 하는 데 필요한 자격 증명을 포함 하는 클래스입니다."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "<xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> 의 파생"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
- uid: System.Xml.Serialization.XmlSerializer
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
- uid: System.Xml.Serialization.XmlTypeMapping
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlTypeMapping
  nameWithType: XmlTypeMapping
  fullName: System.Xml.Serialization.XmlTypeMapping
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
- uid: System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory.XmlSerializerFactory
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer
  nameWithType: XmlSerializerFactory.CreateSerializer
