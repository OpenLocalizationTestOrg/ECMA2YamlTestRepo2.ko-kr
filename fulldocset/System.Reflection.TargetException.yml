### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetException
  id: TargetException
  children:
  - System.Reflection.TargetException.#ctor
  - System.Reflection.TargetException.#ctor(System.String)
  - System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.TargetException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
  type: Class
  summary: "잘못 된 대상을 호출 하려고 시도 하는 경우 throw 되는 예외를 나타냅니다."
  remarks: "A `TargetException` null 개체에 대해 비정적 메서드를 호출 하려고 시도 하는 경우에 throw 됩니다. 호출자에 게는 멤버에 액세스할 수 없기 때문에 없거나 대상 해당 멤버를 정의 하지 않으며 등 때문에 발생할 수 있습니다.      > [!NOTE] >이 예외에 포함 되지 않습니다는 [Windows 스토어 앱 용.NET](http://go.microsoft.com/fwlink/?LinkID=247912) the 하지만 일부의 멤버를에서 throw 됩니다. 이 경우, 예외를 catch 하려면 작성 한 `catch` 문을 <xref:System.Exception>대신.</xref:System.Exception>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TargetException : ApplicationException
  inheritance:
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor
  id: '#ctor'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Reflection.TargetException&quot;> </xref> 된 빈 메시지 및 예외의 근본 원인입니다."
  remarks: "`InnerException` 속성이 `null` HRESULT 오류 코드는 COR_E_TARGET로 설정 됩니다.       `TargetException`<xref:System.Exception>.</xref:System.Exception> 에서 상속 속성을 설정 하는이 생성자는 `Exception` 다음 표에 나와 있는 것 처럼 개체입니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| 빈 문자열 (&quot;&quot;). |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException ();
    parameters: []
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Reflection.TargetException&quot;> </xref> 된 지정된 된 메시지 및 루트 예외가 발생 합니다."
  remarks: "`TargetException`<xref:System.Exception>.</xref:System.Exception> 에서 상속 속성을 설정 하는이 생성자는 `Exception` 다음 표에 나와 있는 것 처럼 개체입니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 예외가 발생 하는 이유를 설명 하는 합니다."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Reflection.TargetException&quot;> </xref> 지정 된 직렬화 및 컨텍스트 정보를 사용 하 여 클래스입니다."
  syntax:
    content: protected TargetException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "데이터를 직렬화 또는 역직렬화 된 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "원본 및 대상 개체입니다."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Reflection.TargetException&quot;> </xref> 지정된 된 오류 메시지와 해당 예외의 원인인 내부 예외에 대 한 참조를 사용 하 여 클래스입니다."
  remarks: "이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>속성은 생성자에 전달 되는 동일한 값을 반환 하거나 `null` 경우는 <xref:System.Exception.InnerException%2A>생성자에 내부 예외 값을 제공 하지 않는.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.Reflection.TargetException>안내 하십시오.</xref:System.Reflection.TargetException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| 내부 예외를 참조 합니다. |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
    - id: inner
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다. 경우는 `inner` 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>에서 현재 예외가 발생 한 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> 내부 예외를 처리 하는 블록입니다."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetException.#ctor
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
- uid: System.Reflection.TargetException.#ctor(System.String)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetException.#ctor*
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException
  nameWithType: TargetException.TargetException
