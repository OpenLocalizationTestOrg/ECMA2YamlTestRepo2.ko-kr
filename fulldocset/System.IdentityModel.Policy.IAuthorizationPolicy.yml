### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Policy.IAuthorizationPolicy
  id: IAuthorizationPolicy
  children:
  - System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  - System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  langs:
  - csharp
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy
  type: Interface
  summary: "클레임 집합이 제공 된 사용자를 인증 하는 데 규칙의 집합을 정의 합니다."
  remarks: "추가 하 여 하나의 다른 클레임 집합을 매핑할 IAuthorizationPolicy 인터페이스를 구현 합니다. 권한 부여 정책 클레임의 집합을 조사 하 고 현재 집합에 따라 추가 클레임을 추가 합니다. 예를 들어 권한 부여 정책 수 생년월일이 포함 하는 클레임을 평가 고 사용자가 21 살이 넘 주장 및 추가 <xref:System.IdentityModel.Policy.EvaluationContext>.</xref:System.IdentityModel.Policy.EvaluationContext> Over21 클레임       IAuthorizationPolicy 인터페이스를 구현 하는 클래스에 사용자를 인증 하지 않으면 <xref:System.ServiceModel.ServiceAuthorizationManager>못하게 하는 클래스</xref:System.ServiceModel.ServiceAuthorizationManager> 를 사용 하지만 <xref:System.ServiceModel.ServiceAuthorizationManager>호출은 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>각 권한 부여 정책의 적용에서 방법.</xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> </xref:System.ServiceModel.ServiceAuthorizationManager> <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>메서드는 현재 컨텍스트를 기반으로 사용자에 대해 추가 클레임을 추가 해야 하는지 여부를 확인 합니다.</xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 권한 부여 정책의 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>메서드 수 여러 번 호출 수, 클레임에 추가 되 고 <xref:System.IdentityModel.Policy.EvaluationContext>다른 권한 부여 정책에서.</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 모든 권한 부여 정책 적용 작업을 완료 하는 경우는 <xref:System.ServiceModel.ServiceAuthorizationManager>클레임의 최종 집합을 기반으로 권한 부여 결정이 클래스를 사용 합니다.</xref:System.ServiceModel.ServiceAuthorizationManager> <xref:System.ServiceModel.ServiceAuthorizationManager>클래스를 만듭니다는 <xref:System.IdentityModel.Policy.AuthorizationContext>이러한 권한 부여 결정을 반영 하는 변경할 수 없는 클레임 집합이 포함 된.</xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#1](~/add/codesnippet/csharp/t-system.identitymodel.p_1_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#1](~/add/codesnippet/visualbasic/t-system.identitymodel.p_1_1.vb)]
  syntax:
    content: 'public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent'
  implements:
  - System.IdentityModel.Policy.IAuthorizationComponent
  platform:
  - net462
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  id: Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  name: Evaluate(EvaluationContext,Object)
  nameWithType: IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "사용자가이 권한 부여 정책에 대 한 요구 사항을 충족 하는지 여부를 평가 합니다."
  remarks: "> [!NOTE]>의 구현자는 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>인터페이스 Evaluate 메서드 서로 다른 스레드에 의해 여러 번 호출할 수를 예상 해야 합니다.</xref:System.IdentityModel.Policy.IAuthorizationPolicy>       구현자는 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>인터페이스 צ ְ ײ는 `state` Evaluate 메서드 호출 간에 상태를 추적 하는 매개 변수.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 상태 개체는 주어진된 Evaluate 메서드 호출 내 설정 되 면 동일한 개체 인스턴스가 현재 평가 프로세스에서 Evaluate 메서드 각 후속 호출에 전달 됩니다."
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#2](~/add/codesnippet/csharp/b64090c9-1ef7-4f2c-956c-_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#2](~/add/codesnippet/visualbasic/b64090c9-1ef7-4f2c-956c-_1.vb)]
  syntax:
    content: public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);
    parameters:
    - id: evaluationContext
      type: System.IdentityModel.Policy.EvaluationContext
      description: "<xref href=&quot;System.IdentityModel.Policy.EvaluationContext&quot;> </xref> 권한 부여 정책을 평가 하는 클레임 집합이 들어 있는입니다."
    - id: state
      type: System.Object
      description: "A <xref:System.Object>를이 권한 부여 정책에 대 한 사용자 지정 상태를 나타내는 참조로 전달 합니다.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>다른 권한 부여 정책에서 추가 클레임을 추가할 경우이 권한 부여 정책에 대 한 평가 메서드를 호출 해야 하는 경우 <code> evaluationContext </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 상태로이 권한 부여 정책에 따라 없는 추가 평가 요구 합니다."
  overload: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  id: Issuer
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  langs:
  - csharp
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "권한 부여 정책의 발급자를 나타내는 클레임 집합을 가져옵니다."
  syntax:
    content: public System.IdentityModel.Claims.ClaimSet Issuer { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 권한 부여 정책의 발급자를 나타내는입니다."
  overload: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Evaluate(EvaluationContext,Object)
  nameWithType: IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(EvaluationContext,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Policy.EvaluationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: System.IdentityModel.Policy.EvaluationContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate*
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Evaluate
  nameWithType: IAuthorizationPolicy.Evaluate
- uid: System.IdentityModel.Policy.IAuthorizationPolicy.Issuer*
  parent: System.IdentityModel.Policy.IAuthorizationPolicy
  isExternal: false
  name: Issuer
  nameWithType: IAuthorizationPolicy.Issuer
