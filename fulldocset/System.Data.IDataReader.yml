### YamlMime:ManagedReference
items:
- uid: System.Data.IDataReader
  id: IDataReader
  children:
  - System.Data.IDataReader.Close
  - System.Data.IDataReader.Depth
  - System.Data.IDataReader.GetSchemaTable
  - System.Data.IDataReader.IsClosed
  - System.Data.IDataReader.NextResult
  - System.Data.IDataReader.Read
  - System.Data.IDataReader.RecordsAffected
  langs:
  - csharp
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
  type: Interface
  summary: "데이터 원본에서 명령을 실행 하 여 얻은 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽는 방법을 제공 하며 관계형 데이터베이스에 액세스 하는.NET Framework 데이터 공급자에 의해 구현 됩니다."
  remarks: "IDataReader 및 <xref:System.Data.IDataRecord>인터페이스를 통해 상속 하는 클래스를 구현 하는 `DataReader` 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽는 방법을 제공 하는 클래스입니다.</xref:System.Data.IDataRecord> 에 대 한 자세한 내용은 `DataReader` 클래스 참조 [DataReader를 사용 하 여 데이터 검색](~/add/includes/ajax-current-ext-md.md)합니다.       응용 프로그램을 직접 IDataReader 인터페이스의 인스턴스를 만들지 않는 있지만 IDataReader를 상속 하는 클래스의 인스턴스를 만듭니다.       IDataReader를 상속 하는 클래스는 상속 된 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다.       변경 결과를 다른 집합을 처리 하거나 구현 하는 클래스의 사용자에 게 표시 될 수 있습니다 데이터를 읽는 동안 스레드는 `IDataReader`합니다. 그러나 정확한 동작은 공급자와 시간에 따라 다릅니다."
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatareader_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatareader_1.vb)]"
  syntax:
    content: 'public interface IDataReader : IDisposable, System.Data.IDataRecord'
  implements:
  - System.Data.IDataRecord
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDataReader.Close
  id: Close
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "닫습니다는 <xref href=&quot;System.Data.IDataReader&quot;> </xref> 개체입니다."
  remarks: "사용 하 여 끝나면 Close 메서드를 명시적으로 호출 해야는 <xref:System.Data.IDataReader>사용할 연결 된 <xref:System.Data.IDbConnection>다른 용도로.</xref:System.Data.IDbConnection> </xref:System.Data.IDataReader>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.IDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Depth
  id: Depth
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "현재 행의 중첩 수준을 나타내는 값을 가져옵니다."
  remarks: "가장 바깥쪽 테이블의 중첩 수준은&0;입니다."
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "중첩 수준입니다."
  overload: System.Data.IDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 의 열 메타 데이터를 설명 하는 <xref href=&quot;System.Data.IDataReader&quot;> </xref>합니다."
  remarks: "다른.NET Framework 데이터 공급자에 대 한 구현을 OLE DB 공급자 계층을 사용 하지 않는 동안 구현의 GetSchemaTable 메서드는.NET Framework 데이터 공급자에 대 한 OLE DB에 대 한 OLE DB icolumnsrowset:: Getcolumnsrowset 메서드에 매핑합니다. GetSchemaTable에서 반환 되는 DataReader 열 및 테이블의 각 열에 대 한 메타 데이터를 반환 하는 순서는 사용 하는 데이터 공급자에 따라 달라 집니다. 다음 표에서 데이터 공급자와 GetSchemaTable를 구현 하는 멤버를 나열 합니다.      | 데이터 공급자 | 멤버 |   |-------------------|------------|   |. NET Data Provider for ODBC | <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. NET Data Provider for OLE DB | <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. NET Data Provider for Oracle | <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. NET Data Provider for SQL Server | <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|</xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>"
  syntax:
    content: public System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 열 메타 데이터를 설명 하는 합니다."
  overload: System.Data.IDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> 닫혀 있습니다."
  platform:
  - net462
- uid: System.Data.IDataReader.IsClosed
  id: IsClosed
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 판독기가 닫혀 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsClosed 및 <xref:System.Data.IDataReader.RecordsAffected%2A>후 호출할 수 있는 속성만 <xref:System.Data.IDataReader>닫힙니다.</xref:System.Data.IDataReader> </xref:System.Data.IDataReader.RecordsAffected%2A>"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 판독기가 닫혀; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.IDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.NextResult
  id: NextResult
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "일괄 처리 SQL 문의 결과를 읽을 때 데이터 판독기를 다음 결과로 이동 합니다."
  remarks: "일괄 처리 SQL 문을 실행 하 여 가져올 수 있는 여러 결과 처리 하는 데 사용 합니다.       기본적으로 데이터 판독기가 첫 번째 결과에 배치 됩니다.       [!code-vb[#1 IDataReader_NextResult](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)][!code-cs[IDataReader_NextResult&#1;  ](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]"
  syntax:
    content: public bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.IDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Read
  id: Read
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이동 된 <xref href=&quot;System.Data.IDataReader&quot;> </xref> 를 다음 레코드로 합니다."
  remarks: "기본 위치는 <xref:System.Data.IDataReader>첫 번째 레코드 앞.</xref:System.Data.IDataReader> 따라서 데이터에 액세스 하려면 Read를 호출 해야 합니다.       데이터 판독기를 사용 하는 동안 관련된 연결 중인 <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> 이 때 까지는 <xref:System.Data.IDataReader.Close%2A>호출 됩니다.</xref:System.Data.IDataReader.Close%2A>"
  example:
  - "The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.idatareade_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_0_1.vb)]"
  syntax:
    content: public bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.IDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "변경, 삽입 또는 SQL 문 실행 하 여 삭제 된 행의 수를 가져옵니다."
  remarks: "모든 행을 <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> 를 닫을 때까지 RecordsAffected 속성이 설정 되지       <xref:System.Data.IDataReader.IsClosed%2A>RecordsAffected 후 호출할 수 있는 유일한 속성은 및에서 <xref:System.Data.IDataReader>닫힙니다.</xref:System.Data.IDataReader></xref:System.Data.IDataReader.IsClosed%2A>"
  syntax:
    content: public int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "행 수가 변경, 삽입 또는 삭제 행이 없는 영향을 받은 경우에 0 또는 문이 실패 했습니다. 및 SELECT 문에 대 한-1을 추가 합니다."
  overload: System.Data.IDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDataReader.Close
  parent: System.Data.IDataReader
  isExternal: false
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
- uid: System.Data.IDataReader.Depth
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataReader.GetSchemaTable
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader.IsClosed
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataReader.NextResult
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
- uid: System.Data.IDataReader.Read
  parent: System.Data.IDataReader
  isExternal: false
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
- uid: System.Data.IDataReader.RecordsAffected
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
- uid: System.Data.IDataReader.Close*
  parent: System.Data.IDataReader
  isExternal: false
  name: Close
  nameWithType: IDataReader.Close
- uid: System.Data.IDataReader.Depth*
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
- uid: System.Data.IDataReader.GetSchemaTable*
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: IDataReader.GetSchemaTable
- uid: System.Data.IDataReader.IsClosed*
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
- uid: System.Data.IDataReader.NextResult*
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult
  nameWithType: IDataReader.NextResult
- uid: System.Data.IDataReader.Read*
  parent: System.Data.IDataReader
  isExternal: false
  name: Read
  nameWithType: IDataReader.Read
- uid: System.Data.IDataReader.RecordsAffected*
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
