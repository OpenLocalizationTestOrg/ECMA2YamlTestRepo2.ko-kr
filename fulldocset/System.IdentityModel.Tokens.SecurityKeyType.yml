### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyType
  id: SecurityKeyType
  children:
  - System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey
  - System.IdentityModel.Tokens.SecurityKeyType.BearerKey
  - System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey
  langs:
  - csharp
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
  type: Enum
  summary: "보안 토큰과 연결 된 키 유형을 지정 합니다."
  remarks: "SecurityKeyType 열거형을 사용 하 여 설정 하는 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>속성.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>       와 BearerKey 필드가 사용 되는 <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A>속성.</xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A>      ### 페더레이션 시나리오에서 자격 증명 메시지와 wsu: id 또는 전송 보안을 필요로 하는 BearerKey, 발급된 된 토큰은 일반적으로 클라이언트와 신뢰 당사자 간의 메시지 보안에 대 한 보증 지원 토큰으로 구성 됩니다. 그러나 때는 보안 토큰 서비스 (STS) 토큰을 발급 키 (BearerKey) [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 으로 구성 된 <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode>지원 토큰 ([!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 키 없이 보증할 수 없으므로).</xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> 이렇게 하려면 발급 된 토큰을 서명에서 참조 되도록 합니다. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]현재 다음을 사용 하 여:에서는 http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id를 참조 메커니즘 (wsu: id)으로 합니다.       발급된 된 토큰 클라이언트에 이러한 특성이 없으면는 <xref:System.ServiceModel.Security.MessageSecurityException>&quot;서명할 요소에 id가 있어야 합니다&quot; 텍스트와 함께 throw 됩니다.</xref:System.ServiceModel.Security.MessageSecurityException> 이 SAML 1.1 토큰이 발급된 된 토큰 (wsu SAML 1.1 사양에는 정의 되지 않은)으로 사용 될 때 발생 합니다.       전송 보안과 메시지 자격 증명으로 사용 하거나이 문제를 해결 하기 위해 (예를 들어 <xref:System.ServiceModel.Configuration.AuthenticationMode>) STS에서 발급 된 토큰을에서는 http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (wsu: id)를 추가 해야 합니다.</xref:System.ServiceModel.Configuration.AuthenticationMode>       SAML 1.1 토큰에는 wsu: id를 추가 하는 경우 결과 XML을 준수 하지 않음은 SAML 1.1 사양을 참고 합니다. 에 wsu: id를 추가 하는 대신 사용 하는 것은 `EncryptedData` 발급된 된 토큰을 암호화 한 결과인 변수인 합니다. 때문에이 절차는 SAML 1.1 사양을 준수는 `EncryptedData` 요소는 wsu: id 특성을 지원 합니다.       따라서 사양을 준수 되도록 STS에서 bearer 토큰 암호화 되어야 합니다."
  syntax:
    content: public enum SecurityKeyType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey
  id: AsymmetricKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  langs:
  - csharp
  name: AsymmetricKey
  nameWithType: SecurityKeyType.AsymmetricKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키가 비대칭 키 임을 지정 합니다."
  syntax:
    content: AsymmetricKey
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyType.BearerKey
  id: BearerKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  langs:
  - csharp
  name: BearerKey
  nameWithType: SecurityKeyType.BearerKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.BearerKey
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 토큰 소유 증명 키를 포함 하 여 사용 되지 않도록 지정 합니다."
  syntax:
    content: BearerKey
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey
  id: SymmetricKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  langs:
  - csharp
  name: SymmetricKey
  nameWithType: SecurityKeyType.SymmetricKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키가 대칭 키 임을 지정 합니다."
  syntax:
    content: SymmetricKey
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  isExternal: false
  name: AsymmetricKey
  nameWithType: SecurityKeyType.AsymmetricKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType.BearerKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  isExternal: false
  name: BearerKey
  nameWithType: SecurityKeyType.BearerKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.BearerKey
- uid: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey
  parent: System.IdentityModel.Tokens.SecurityKeyType
  isExternal: false
  name: SymmetricKey
  nameWithType: SecurityKeyType.SymmetricKey
  fullName: System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey
