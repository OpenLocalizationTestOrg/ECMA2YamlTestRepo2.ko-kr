### YamlMime:ManagedReference
items:
- uid: System.Web.SiteMapNodeCollection
  id: SiteMapNodeCollection
  children:
  - System.Web.SiteMapNodeCollection.#ctor
  - System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Clear
  - System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  - System.Web.SiteMapNodeCollection.Count
  - System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  - System.Web.SiteMapNodeCollection.GetEnumerator
  - System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  - System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  - System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.IsFixedSize
  - System.Web.SiteMapNodeCollection.IsReadOnly
  - System.Web.SiteMapNodeCollection.IsSynchronized
  - System.Web.SiteMapNodeCollection.Item(System.Int32)
  - System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  - System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  langs:
  - csharp
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
  type: Class
  summary: "에 대 한 강력한 형식의 컬렉션을 제공 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체 및 구현 하는 <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> 컬렉션 탐색을 지 원하는에 대 한 인터페이스입니다."
  remarks: "SiteMapNodeCollection 클래스에 대 한 강력한 형식의 컬렉션을 제공 <xref:System.Web.SiteMapNode>개체입니다.</xref:System.Web.SiteMapNode> 저장 <xref:System.Web.SiteMapNode>내부적으로 배열의 개체에는&0;부터 시작 합니다.</xref:System.Web.SiteMapNode>       처음 만들 때 SiteMapNodeCollection 컬렉션을 수정 하 고 다음 추가, 복사 및 제거 하려면 다음 방법을 사용 <xref:System.Web.SiteMapNode>개체:-추가할 <xref:System.Web.SiteMapNode>개체를 사용 하 여는 <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, 및 <xref:System.Web.SiteMapNodeCollection.Insert%2A>메서드.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode>      -복사 하려면 <xref:System.Web.SiteMapNode>개체를 사용 하 여는 <xref:System.Web.SiteMapNodeCollection.CopyTo%2A>메서드.</xref:System.Web.SiteMapNodeCollection.CopyTo%2A> </xref:System.Web.SiteMapNode>      -제거 하는 방법 <xref:System.Web.SiteMapNode>개체를 사용 하 여는 <xref:System.Web.SiteMapNodeCollection.Remove%2A>메서드.</xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNode>       추가, 복사 또는 제거를 허용 하지 않는 읽기 전용 SiteMapNodeCollection를 만들 수 있습니다 <xref:System.Web.SiteMapNode>정적을 사용 하 여 개체 <xref:System.Web.SiteMapNodeCollection.ReadOnly%2A>메서드.</xref:System.Web.SiteMapNodeCollection.ReadOnly%2A> </xref:System.Web.SiteMapNode> 반환 되는 SiteMapNodeCollection 컬렉션은 <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName>및 <xref:System.Web.UI.IHierarchyData.GetChildren%2A>메서드는 읽기 전용으로 SiteMapNodeCollection 때 반환 되는 <xref:System.Web.SiteMapNode.ChildNodes%2A>속성에서 액세스 하는 <xref:System.Web.SiteMapNode>공급자에서 반환 되는 개체입니다.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.ChildNodes%2A> </xref:System.Web.UI.IHierarchyData.GetChildren%2A> </xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> A <xref:System.NotSupportedException>기본 인덱서 속성을 설정 하거나 다음 방법 중 하나를 사용 하 여 읽기 전용 SiteMapNodeCollection 수정 하려고 하면 예외가 throw 되:- <xref:System.Web.SiteMapNodeCollection.Add%2A>- <xref:System.Web.SiteMapNodeCollection.AddRange%2A>- <xref:System.Web.SiteMapNodeCollection.Clear%2A>- <xref:System.Web.SiteMapNodeCollection.Insert%2A>- <xref:System.Web.SiteMapNodeCollection.Remove%2A>- <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>사용은 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>앞의 목록에 메서드를 호출 하기 전에 컬렉션 확인할 속성입니다.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> </xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.Clear%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.NotSupportedException>"
  example:
  - "The following code example demonstrates how to create a SiteMapNodeCollection collection, and then add <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. The SiteMapNodeCollection is a subset of the current site map, showing only the first two hierarchical levels.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/t-system.web.sitemapnode_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/t-system.web.sitemapnode_1.aspx)]"
  syntax:
    content: 'public class SiteMapNodeCollection : System.Collections.IList, System.Web.UI.IHierarchicalEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IHierarchicalEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 기본 인스턴스가 있는 클래스입니다."
  remarks: "SiteMapNodeCollection 생성자를 사용 하 여 빈 만들려는 <xref:System.Web.SiteMapNodeCollection>컬렉션.</xref:System.Web.SiteMapNodeCollection> 요소를 추가할 수는 <xref:System.Web.SiteMapNodeCollection>를 사용 하는 <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, 또는 <xref:System.Web.SiteMapNodeCollection.Insert%2A>메서드.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to use the SiteMapNodeCollection constructor to create a new <xref:System.Web.SiteMapNodeCollection> collection, and then add elements to the <xref:System.Web.SiteMapNodeCollection> with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_5_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_5_1.vb)]"
  syntax:
    content: public SiteMapNodeCollection ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 지정한 초기 용량을 사용 합니다."
  remarks: "SiteMapNodeCollection 생성자를 사용 하는 <xref:System.Web.SiteMapNodeCollection>지정된 된 초기 용량을 사용 하 여 컬렉션.</xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public SiteMapNodeCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "초기 용량은 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  id: '#ctor(System.Web.SiteMapNode)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화 합니다는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 클래스 및 추가 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체는 <xref:System.Collections.CollectionBase.InnerList*>컬렉션에 대 한 속성.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "SiteMapNodeCollection 생성자를 사용 하는 <xref:System.Web.SiteMapNodeCollection>단일 초기를 사용 하 여 컬렉션 <xref:System.Web.SiteMapNode>개체입니다.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection> 요소를 추가할 수는 <xref:System.Web.SiteMapNodeCollection>를 사용 하는 <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, 또는 <xref:System.Web.SiteMapNodeCollection.Insert%2A>메서드.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection with a single initial <xref:System.Web.SiteMapNode> object, and then add a <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. You can modify the <xref:System.Web.SiteMapNodeCollection>, even though the individual <xref:System.Web.SiteMapNode> objects might be read-only.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_2_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_2_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  id: '#ctor(System.Web.SiteMapNode[])'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 클래스 및 추가 하는 형식의 배열 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에 <xref:System.Collections.CollectionBase.InnerList*>컬렉션에 대 한 속성.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "SiteMapNodeCollection 생성자를 사용 하는 것은 <xref:System.Web.SiteMapNodeCollection.%23ctor%2A>생성자에 요소를 추가 하 고는 <xref:System.Web.SiteMapNodeCollection>사용 하 여 컬렉션의 <xref:System.Web.SiteMapNodeCollection.AddRange%2A>메서드.</xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.%23ctor%2A>"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "형식의 배열 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에 추가 하는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  id: '#ctor(System.Web.SiteMapNodeCollection)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 클래스는 지정 된 모든 목록 항목 추가 및 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 컬렉션에는 <xref:System.Collections.CollectionBase.InnerList*>컬렉션에 대 한 속성.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "SiteMapNodeCollection 생성자를 사용 하는 것은 <xref:System.Web.SiteMapNodeCollection.%23ctor%2A>생성자에 요소를 추가 하 고는 <xref:System.Web.SiteMapNodeCollection>사용 하 여 컬렉션의 <xref:System.Web.SiteMapNodeCollection.AddRange%2A>메서드.</xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection using another <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects as a base. The <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> method returns a read-only <xref:System.Web.SiteMapNodeCollection>, which is detected when the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property returns `true`. A new <xref:System.Web.SiteMapNodeCollection> is created using the read-only <xref:System.Web.SiteMapNodeCollection> and the <xref:System.Web.SiteMapNodeCollection.Add%2A> and <xref:System.Web.SiteMapNodeCollection.Remove%2A> methods can be called successfully.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_7_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_7_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "A <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 현재 추가할 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  id: Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "하나가 추가 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체 컬렉션입니다."
  remarks: "추가할 수 없습니다는 <xref:System.Web.SiteMapNode>개체를 읽기 전용 또는 고정 크기 <xref:System.Web.SiteMapNodeCollection>컬렉션.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> 테스트할 수 있습니다 여부는 <xref:System.Web.SiteMapNodeCollection>검사 하 여 읽기 전용가 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to create a new <xref:System.Web.SiteMapNodeCollection> collection and add elements to it. The second code example demonstrates how to add elements to a custom site map provider.  \n  \n The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection>, and then add elements to it with the Add method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_1.vb)]  \n  \n The following code example demonstrates a custom site map provider implementation and shows how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection> and add elements to the <xref:System.Web.SiteMapNodeCollection> with the Add method.  \n  \n This code example is part of a larger code example provided for the <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_2.cs)]"
  syntax:
    content: public virtual int Add (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "인덱스는 <xref:System.Collections.CollectionBase.InnerList*>여기서는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 삽입 되었습니다.</xref:System.Collections.CollectionBase.InnerList*>"
  overload: System.Web.SiteMapNodeCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  id: AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "형식의 배열을 추가 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 컬렉션에 있습니다."
  remarks: "AddRange 메서드에 전달 되는 배열에 포함 될 수 있습니다 `null` 값; 그러나이 인해 예기치 않은 예외 때는 <xref:System.Web.SiteMapNodeCollection>컬렉션 조작.</xref:System.Web.SiteMapNodeCollection>       <xref:System.Web.SiteMapNode>개체를 읽기 전용 또는 고정 크기 <xref:System.Web.SiteMapNodeCollection>.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> 를 추가할 수 없습니다. 테스트할 수 있습니다 여부는 <xref:System.Web.SiteMapNodeCollection>검사 하 여 읽기 전용가 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "형식의 배열 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 현재 추가할 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  id: AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된 노드를 추가 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 현재 컬렉션에 있습니다."
  remarks: "그러나 <xref:System.Web.SiteMapNodeCollection>AddRange 메서드에 전달 되는 컬렉션에 포함할 수 `null` <xref:System.Web.SiteMapNode>개체이 고,이 인해 예기치 않은 예외 때는 <xref:System.Web.SiteMapNodeCollection>조작.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>       <xref:System.Web.SiteMapNode>개체를 읽기 전용 또는 고정 크기 <xref:System.Web.SiteMapNodeCollection>.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> 를 추가할 수 없습니다. 테스트할 수 있습니다 여부는 <xref:System.Web.SiteMapNodeCollection>검사 하 여 읽기 전용가 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to create a modifiable <xref:System.Web.SiteMapNodeCollection> collection, and then add <xref:System.Web.SiteMapNode> objects to it using the AddRange method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "A <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 현재에 추가할 개체를 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Clear
  id: Clear
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에서 모든 항목을 제거합니다."
  remarks: "테스트할 수 있는지 여부를 <xref:System.Web.SiteMapNodeCollection>확인 하 여 컬렉션은 읽기 전용의 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       특정 요소를 제거 하는 <xref:System.Web.SiteMapNodeCollection>를 사용 하 여는 <xref:System.Web.SiteMapNodeCollection.Remove%2A>또는 <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>메서드.</xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> </xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  id: Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "특정 컬렉션에 포함 되어 있는지 확인 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체입니다."
  remarks: "Contains 메서드를 호출 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A?displayProperty=fullName>메서드.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the Contains and <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_6_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_6_1.aspx)]"
  syntax:
    content: public virtual bool Contains (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에서 찾으려고는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 에 지정 된 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  id: CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션 전체를 대상 배열의 지정 된 인덱스부터 호환 가능한&1; 차원 배열에 복사 합니다."
  remarks: "CopyTo 메서드 대리자 <xref:System.Collections.CollectionBase.List%2A?displayProperty=fullName>는 &quot;예외&quot;에 나열 되어 있는 가능한 예외에 대 한 계정 속성</xref:System.Collections.CollectionBase.List%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void CopyTo (System.Web.SiteMapNode[] array, int index);
    parameters:
    - id: array
      type: System.Web.SiteMapNode[]
      description: "0부터 시작 하는 인덱스가 있어야 하 고에서 복사한 요소의 대상인&1; 차원 배열에서 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.SiteMapNodeCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-수가 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 원본에 개체 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Count
  id: Count
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에 포함 된 요소의 수를 가져옵니다."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "에 있는 요소의 수는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  id: GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "검색 된 <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;> </xref> 현재 컬렉션의 노드와 연결 된 개체입니다."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SiteMapDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSource&quot;> </xref> 보기와 연결 된 컨트롤입니다."
    - id: viewName
      type: System.String
      description: "보기의 이름입니다."
    return:
      type: System.Web.UI.WebControls.SiteMapDataSourceView
      description: "명명 된 <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;> </xref> 에 대 한는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 현재에서 개체 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.GetDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션을 반복 하는 데 사용 되는 열거자 개체에 대 한 참조를 검색 합니다."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator> 를 구현 하는 개체"
  overload: System.Web.SiteMapNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  id: GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "검색 된 <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;> </xref> 현재 컬렉션의 노드와 연결 된 개체입니다."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;> </xref> 에 대 한는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 현재에서 개체 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  id: GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 열거형된 항목에 대 한 계층적 데이터 항목을 반환합니다."
  syntax:
    content: public virtual System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "반환 될 개체는 <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref>합니다."
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> 는 GetHierarchyData에 전달 된 개체를 나타내는입니다."
  overload: System.Web.SiteMapNodeCollection.GetHierarchyData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  id: IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 검색 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체를 전체 컬렉션에서 처음 나타나는&0;부터 시작 하는 인덱스를 반환 합니다."
  remarks: "IndexOf 메서드를 호출 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A?displayProperty=fullName>메서드.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.Contains%2A> and IndexOf methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_3_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_3_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에서 찾으려고는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "첫 번째로 나타나는 항목의&0;부터 시작 인덱스 <code> value </code> 전체 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>이거나, 없는 경우, 그렇지 않으면-1입니다."
  overload: System.Web.SiteMapNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  id: Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된 삽입 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 컬렉션에서 지정된 된 인덱스에는 개체입니다."
  remarks: "테스트할 수 있는지 여부를 <xref:System.Web.SiteMapNodeCollection>확인 하 여 컬렉션은 읽기 전용의 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void Insert (int index, System.Web.SiteMapNode value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 된 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 삽입 됩니다."
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 를 삽입 합니다."
  overload: System.Web.SiteMapNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다.       -또는- <code>index</code> 보다 크면는 <xref:System.Collections.CollectionBase.Count*>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다.       -또는- <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 크기가 고정된 되어 있습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "노드를 추가 하거나 컬렉션에서 뺄 수 있는지 여부를 나타내는 부울 값을 가져옵니다."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>추가할 수 있는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체 또는 제거 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 부울 값을 가져옵니다."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>수정할 수 있는 경우는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "부울 컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 (스레드로부터 안전함)을 가져옵니다."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대 한 액세스가 동기화 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져오거나는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "항목 인덱서를 사용 하 여 내용에 대해 반복 하는 <xref:System.Web.SiteMapNodeCollection>컬렉션 또는 교체할 수는 <xref:System.Web.SiteMapNode>지정된 된 인덱스에는 개체입니다.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to use the Item indexer to retrieve a <xref:System.Web.SiteMapNode> object from the <xref:System.Web.SiteMapNodeCollection> collection. In this example, a <xref:System.Web.SiteMapNode> object is removed from its position at the second element of the internal array using the <xref:System.Web.SiteMapNodeCollection.Remove%2A> method and is appended to the array with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. To insert a <xref:System.Web.SiteMapNode> object at a specific index, instead of appending it to the end of the array, use the <xref:System.Web.SiteMapNodeCollection.Insert%2A> method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/p-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/p-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual System.Web.SiteMapNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 요소에 나타내는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is great than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Setter에 제공 된 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "값 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행 합니다."
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 유효성을 검사 합니다."
  overload: System.Web.SiteMapNodeCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is not a <xref href=&quot;System.Web.SiteMapNode&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  id: ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된 노드를 포함 하는 읽기 전용 컬렉션을 반환 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 컬렉션입니다."
  remarks: "테스트할 수 있는지 여부를 <xref:System.Web.SiteMapNodeCollection>확인 하 여 컬렉션은 읽기 전용의 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection> <xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A>속성도 반환 `true` 때는 <xref:System.Web.SiteMapNodeCollection>읽기 전용입니다.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property to test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only or modifiable. If `siteNodes` is modifiable, `MoveNode` is called on it; otherwise, a clone <xref:System.Web.SiteMapNodeCollection> is created, using `siteNodes` as a base.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_11_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_11_1.aspx)]"
  syntax:
    content: public static System.Web.SiteMapNodeCollection ReadOnly (System.Web.SiteMapNodeCollection collection);
    parameters:
    - id: collection
      type: System.Web.SiteMapNodeCollection
      description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 읽기 전용에 추가할 개체를 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
    return:
      type: System.Web.SiteMapNodeCollection
      description: "읽기 전용 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 동일한 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 요소와 구조가 원래 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.ReadOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  id: Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정 된 제거 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "테스트할 수 있는지 여부를 <xref:System.Web.SiteMapNodeCollection>확인 하 여 컬렉션은 읽기 전용의 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       Remove 메서드를 호출 하 여 일치 여부를 확인는 <xref:System.Object.Equals%2A?displayProperty=fullName>메서드.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.SiteMapNode> object from a <xref:System.Web.SiteMapNodeCollection> collection, and then append the <xref:System.Web.SiteMapNode> object to the end of the <xref:System.Web.SiteMapNodeCollection> using the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. If the <xref:System.Web.SiteMapNodeCollection> is read-only, a <xref:System.NotSupportedException> exception is caught.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_9_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 에서 제거 하 고 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>컬렉션에 존재 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용입니다.       -또는- <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 크기가 고정된 되어 있습니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "제거는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 개체 컬렉션의 지정 된 인덱스입니다."
  remarks: "테스트할 수 있는지 여부를 <xref:System.Web.SiteMapNodeCollection>확인 하 여 컬렉션은 읽기 전용의 <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>속성.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       요소를 제거 하는 <xref:System.Web.SiteMapNodeCollection>지정 하 여 한 <xref:System.Web.SiteMapNode>제거를 사용 하는 개체는 <xref:System.Web.SiteMapNodeCollection.Remove%2A>메서드.</xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 요소의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.SiteMapNodeCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> has a fixed sized."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "전체를 열거 하는 <xref:System.Web.SiteMapNodeCollection>컬렉션이 스레드로부터 안전한 프로시저가 기본적으로 없습니다.</xref:System.Web.SiteMapNodeCollection> 경우에는 <xref:System.Web.SiteMapNodeCollection>은 동기화 다른 스레드에서 수 수정할는 <xref:System.Web.SiteMapNodeCollection>, 열거자에서 예외가 throw 됩니다.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection> 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 잠그거나는 <xref:System.Web.SiteMapNodeCollection>열거 하는 동안 다른 스레드가가 만든 변경 된 내용에서으로 인해 발생 한 예외를 catch 합니다.</xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "요소에 복사는 <xref:System.Collections.ICollection>인터페이스를 배열의 특정 배열 인덱스에서 시작 합니다.</xref:System.Collections.ICollection> 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 하는 인덱스가 있어야 하 고에서 복사한 요소의 대상인&1; 차원 배열에서 <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-수가 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 원본에 개체 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "에 포함 된 요소의 수를 가져옵니다는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 포함 된 요소 수"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> 나타내는 값을에 액세스할 수 있는지 여부는 <xref:System.Collections.ICollection>인터페이스 한 액세스가 동기화 되어 스레드로부터 안전 하 게 보호 합니다.</xref:System.Collections.ICollection> 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref:System.Collections.ICollection>은 동기화 (스레드로부터 안전함); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> 이 클래스는 상속 될 수 없습니다."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>을 반복 하는 데 사용 하 여 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에 항목 추가 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에 추가할 개체"
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에서 모든 항목을 제거는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "결정 하는지 여부를 컬렉션에는 <xref:System.Collections.IList>인터페이스 지정된 된 부울 값을 포함 합니다.</xref:System.Collections.IList>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을 개체"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 개체가 있으면는 <xref:System.Collections.IList>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "반환 되는 컬렉션의 특정 항목의 인덱스를 결정은 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을 개체"
    return:
      type: System.Int32
      description: "목록에서 값의 인덱스 경우 반환 합니다. 그렇지 않으면-1입니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에 항목을 삽입의 <xref:System.Collections.IList>지정된 된 인덱스에 대 한 인터페이스입니다.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 `index` 을 삽입할 `value`합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에 삽입할 개체"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> 컬렉션 크기가 고정된 되어 있는지 여부를 나타내는 값입니다. 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> 컬렉션이 읽기 전용인 지 여부를 나타내는 값입니다. 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> 읽기 전용, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "가져옵니다는 <xref:System.Collections.IList>지정된 된 인덱스에 요소.</xref:System.Collections.IList>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져올 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "컬렉션에서 맨 처음 발견 되는 지정 된 개체 제거는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 제거할 개체"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "제거는 <xref:System.Collections.IList>지정된 된 인덱스에 항목.</xref:System.Collections.IList> 이 멤버에 대 한 참조 &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 항목의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  id: System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "지정된 된 열거형된 항목에 대 한 계층적 데이터 항목을 반환합니다. 이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A?displayProperty=fullName&gt;합니다."
  syntax:
    content: System.Web.UI.IHierarchyData IHierarchicalEnumerable.GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "반환 될 개체는 <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref>합니다."
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> 는 IHierarchicalEnumerable.GetHierarchyData에 전달 된 개체를 나타내는입니다."
  overload: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SiteMapNodeCollection.#ctor
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
- uid: System.Web.SiteMapNode[]
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode[]
  spec.csharp:
  - uid: System.Web.SiteMapNode
    name: SiteMapNode
    nameWithType: SiteMapNode
    fullName: SiteMapNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection
  parent: System.Web
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
- uid: System.Web.SiteMapNodeCollection.Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
- uid: System.Web.UI.WebControls.SiteMapDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSourceView
  nameWithType: SiteMapDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapDataSourceView
- uid: System.Web.UI.WebControls.SiteMapDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSource
  nameWithType: SiteMapDataSource
  fullName: System.Web.UI.WebControls.SiteMapDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
- uid: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapHierarchicalDataSourceView
  nameWithType: SiteMapHierarchicalDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
- uid: System.Web.SiteMapNodeCollection.#ctor*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add
  nameWithType: SiteMapNodeCollection.Add
- uid: System.Web.SiteMapNodeCollection.AddRange*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: SiteMapNodeCollection.AddRange
- uid: System.Web.SiteMapNodeCollection.Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear
  nameWithType: SiteMapNodeCollection.Clear
- uid: System.Web.SiteMapNodeCollection.Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains
  nameWithType: SiteMapNodeCollection.Contains
- uid: System.Web.SiteMapNodeCollection.CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: SiteMapNodeCollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView
  nameWithType: SiteMapNodeCollection.GetDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: SiteMapNodeCollection.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData
  nameWithType: SiteMapNodeCollection.GetHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: SiteMapNodeCollection.IndexOf
- uid: System.Web.SiteMapNodeCollection.Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert
  nameWithType: SiteMapNodeCollection.Insert
- uid: System.Web.SiteMapNodeCollection.IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item
  nameWithType: SiteMapNodeCollection.Item
- uid: System.Web.SiteMapNodeCollection.OnValidate*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate
  nameWithType: SiteMapNodeCollection.OnValidate
- uid: System.Web.SiteMapNodeCollection.ReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly
  nameWithType: SiteMapNodeCollection.ReadOnly
- uid: System.Web.SiteMapNodeCollection.Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove
  nameWithType: SiteMapNodeCollection.Remove
- uid: System.Web.SiteMapNodeCollection.RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SiteMapNodeCollection.RemoveAt
- uid: System.Web.SiteMapNodeCollection.SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
