### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.RoutingConfiguration
  id: RoutingConfiguration
  children:
  - System.ServiceModel.Routing.RoutingConfiguration.#ctor
  - System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)
  - System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch
  - System.ServiceModel.Routing.RoutingConfiguration.FilterTable
  - System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly
  - System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled
  langs:
  - csharp
  name: RoutingConfiguration
  nameWithType: RoutingConfiguration
  fullName: System.ServiceModel.Routing.RoutingConfiguration
  type: Class
  summary: "사용 하는 구성 정보를 정의 <xref href=&quot;System.ServiceModel.Routing.RoutingExtension&quot;> </xref>합니다."
  syntax:
    content: public sealed class RoutingConfiguration
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: RoutingConfiguration()
  nameWithType: RoutingConfiguration.RoutingConfiguration()
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.ServiceModel.Routing.RoutingConfiguration&quot;> </xref> 클래스입니다."
  syntax:
    content: public RoutingConfiguration ();
    parameters: []
  overload: System.ServiceModel.Routing.RoutingConfiguration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)
  id: '#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)'
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
  nameWithType: RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.ServiceModel.Routing.RoutingConfiguration&quot;> </xref> 사용 하 여 지정 된 클래스 &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; 과 routeOnHeadersOnly 매개 변수입니다."
  syntax:
    content: public RoutingConfiguration (System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>> filterTable, bool routeOnHeadersOnly);
    parameters:
    - id: filterTable
      type: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}
      description: "이 구성에 사용할 메시지 필터 테이블입니다."
    - id: routeOnHeadersOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; 만 메시지 헤더를 검사할 수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Routing.RoutingConfiguration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: RoutingConfiguration.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지가 전송 된 순서에 디스패치 되는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메시지가 전송 된 대로; 순서로 디스패치할 수 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable
  id: FilterTable
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: FilterTable
  nameWithType: RoutingConfiguration.FilterTable
  fullName: System.ServiceModel.Routing.RoutingConfiguration.FilterTable
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "가져오거나는 &lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt; 이 구성에서 사용 합니다."
  syntax:
    content: public System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>> FilterTable { get; }
    return:
      type: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}
      description: "메시지 필터 테이블입니다."
  overload: System.ServiceModel.Routing.RoutingConfiguration.FilterTable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly
  id: RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: RouteOnHeadersOnly
  nameWithType: RoutingConfiguration.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "필터는 메시지 본문을 검사할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool RouteOnHeadersOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>필터는 메시지 헤더;만 검사할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 **true**합니다."
  overload: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled
  id: SoapProcessingEnabled
  parent: System.ServiceModel.Routing.RoutingConfiguration
  langs:
  - csharp
  name: SoapProcessingEnabled
  nameWithType: RoutingConfiguration.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.</xref:System.ServiceModel.Channels.MessageVersion> 간에 메시지를 처리할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "SOAP 처리는 SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.</xref:System.ServiceModel.Channels.MessageVersion> 간에 메시지를 변환 하는 프로세스       이 값을 설정 `false` 나타냅니다는 <xref:System.ServiceModel.Routing.RoutingBehavior>설치 해서는 안는 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>클라이언트 끝점에.</xref:System.ServiceModel.Routing.SoapProcessingBehavior> </xref:System.ServiceModel.Routing.RoutingBehavior> 경우 설정 `false`, 전송 되기 전에 메시지의 일부 측면을 처리 하는 고유한 메시지 검사자 또는 기타 코드를 추가 해야 합니다. 각 끝점에서 SOAP 처리를 사용 하지 않도록 설정 하는 것도 가능 합니다. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Routing.SoapProcessingBehavior>클래스가 있습니다.</xref:System.ServiceModel.Routing.SoapProcessingBehavior>       기본적으로는 <xref:System.ServiceModel.Routing.RoutingBehavior>만들고 새 연결 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>와 <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A>로 설정 `true` 각 클라이언트 끝점에 대 한.</xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> </xref:System.ServiceModel.Routing.SoapProcessingBehavior> </xref:System.ServiceModel.Routing.RoutingBehavior> 사용 하지 않을 경우는 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>특정 끝점에서 새 만듭니다 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>이 값으로 설정 된 `false` 후를 원하지 않는 처리를 끝점에 연결 합니다.</xref:System.ServiceModel.Routing.SoapProcessingBehavior> </xref:System.ServiceModel.Routing.SoapProcessingBehavior> 경우는 <xref:System.ServiceModel.Routing.RoutingBehavior>클라이언트 이미에 관찰 한 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, 다른 연결을 시도 하지 않습니다.</xref:System.ServiceModel.Routing.SoapProcessingBehavior> </xref:System.ServiceModel.Routing.RoutingBehavior>       응용 프로그램의 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>모든 끝점에서 사용 하지 않도록 설정 <xref:System.ServiceModel.Routing.RoutingBehavior>하 고 있는 <xref:System.ServiceModel.Routing.RoutingConfiguration>.</xref:System.ServiceModel.Routing.RoutingConfiguration> </xref:System.ServiceModel.Routing.RoutingBehavior> SOAP 처리를</xref:System.ServiceModel.Routing.SoapProcessingBehavior> 사용 하지 않도록 설정 하려면       SoapProcessingEnabled 이면 `true`, <xref:System.ServiceModel.Routing.SoapProcessingBehavior>클라이언트 끝점에 추가 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>컬렉션.</xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> </xref:System.ServiceModel.Routing.SoapProcessingBehavior>"
  syntax:
    content: public bool SoapProcessingEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메시지를 처리 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: RoutingConfiguration()
  nameWithType: RoutingConfiguration.RoutingConfiguration()
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration()
- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
  nameWithType: RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RoutingConfiguration(MessageFilterTable<IEnumerable<ServiceEndpoint>>,Boolean)
- uid: System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageFilterTable<IEnumerable<ServiceEndpoint>>
  nameWithType: MessageFilterTable<IEnumerable<ServiceEndpoint>>
  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.MessageFilterTable`1
    name: MessageFilterTable
    nameWithType: MessageFilterTable
    fullName: MessageFilterTable<System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ServiceEndpoint>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingConfiguration.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch
- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: FilterTable
  nameWithType: RoutingConfiguration.FilterTable
  fullName: System.ServiceModel.Routing.RoutingConfiguration.FilterTable
- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingConfiguration.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingConfiguration.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled
- uid: System.ServiceModel.Routing.RoutingConfiguration.#ctor*
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: RoutingConfiguration
  nameWithType: RoutingConfiguration.RoutingConfiguration
- uid: System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch*
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingConfiguration.EnsureOrderedDispatch
- uid: System.ServiceModel.Routing.RoutingConfiguration.FilterTable*
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: FilterTable
  nameWithType: RoutingConfiguration.FilterTable
- uid: System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly*
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingConfiguration.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled*
  parent: System.ServiceModel.Routing.RoutingConfiguration
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingConfiguration.SoapProcessingEnabled
