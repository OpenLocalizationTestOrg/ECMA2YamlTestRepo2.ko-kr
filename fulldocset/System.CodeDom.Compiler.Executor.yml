### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.Executor
  id: Executor
  children:
  - System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)
  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  - System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  langs:
  - csharp
  name: Executor
  nameWithType: Executor
  fullName: System.CodeDom.Compiler.Executor
  type: Class
  summary: "컴파일러를 호출 하는 명령 실행 함수를 제공 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "일반적으로 컴파일러를 호출 하는 데 사용할 수 있는 메서드의 컬렉션을 제공 하는이 클래스는 <xref:System.CodeDom.Compiler.ICodeCompiler>구현.</xref:System.CodeDom.Compiler.ICodeCompiler>      > [!NOTE] >이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다. A <xref:System.Security.SecurityException>직접 실행 호출자에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</xref:System.Security.SecurityException> 자세한 내용은 참조 [링크 요청](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static class Executor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)
  id: ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)
  parent: System.CodeDom.Compiler.Executor
  langs:
  - csharp
  name: ExecWait(String,TempFileCollection)
  nameWithType: Executor.ExecWait(String,TempFileCollection)
  fullName: System.CodeDom.Compiler.Executor.ExecWait(String,TempFileCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 임시 파일을 사용 하 여 명령을 실행 하 고 호출이 반환 될 때까지 대기 합니다."
  syntax:
    content: public static void ExecWait (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles);
    parameters:
    - id: cmd
      type: System.String
      description: "실행할 명령입니다."
    - id: tempFiles
      type: System.CodeDom.Compiler.TempFileCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 관리 하 고 컴파일하는 동안 생성 된 중간 파일에 대 한 참조를 저장 합니다."
  overload: System.CodeDom.Compiler.Executor.ExecWait*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  id: ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  langs:
  - csharp
  name: ExecWaitWithCapture(String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(String,TempFileCollection,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정된 된 임시 파일을 사용 하 여 지정된 된 명령을 실행 하 고 컴파일러에서 출력 및 오류 정보를 지정 된 문자열에 저장을 반환 하려면 호출에 대 한 대기 합니다."
  syntax:
    content: public static int ExecWaitWithCapture (string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);
    parameters:
    - id: cmd
      type: System.String
      description: "실행할 명령입니다."
    - id: tempFiles
      type: System.CodeDom.Compiler.TempFileCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 관리 하 고 컴파일하는 동안 생성 된 중간 파일에 대 한 참조를 저장 합니다."
    - id: outputName
      type: System.String
      description: "컴파일러의 메시지 출력을 저장 하는 문자열에 대 한 참조입니다."
    - id: errorName
      type: System.String
      description: "오류 또는 발생 한 오류의 이름을 저장 하는 문자열에 대 한 참조입니다."
    return:
      type: System.Int32
      description: "컴파일러는 반환 값입니다."
  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  id: ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  langs:
  - csharp
  name: ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일러에서 출력 및 오류 정보를 지정 된 문자열에 저장을 반환 하려면 지정 된 사용자 토큰 및 임시 파일의 호출에 대 한 대기를 사용 하 여 지정된 된 명령을 실행 합니다."
  remarks: "`userToken` 매개 변수가에서 시작 하는 프로세스에 대 한 보안 컨텍스트를 나타내는 Win32 보안 액세스 토큰을 허용 합니다. 자세한 내용은 Windows를 참조 하십시오. `CreateProcessAsUser` 메서드 설명서 MSDN에 있는 Platform SDK 설명서에서."
  syntax:
    content: public static int ExecWaitWithCapture (IntPtr userToken, string cmd, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "컴파일러 프로세스를 시작 하는 토큰입니다."
    - id: cmd
      type: System.String
      description: "실행할 명령입니다."
    - id: tempFiles
      type: System.CodeDom.Compiler.TempFileCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 관리 하 고 컴파일하는 동안 생성 된 중간 파일에 대 한 참조를 저장 합니다."
    - id: outputName
      type: System.String
      description: "컴파일러의 메시지 출력을 저장 하는 문자열에 대 한 참조입니다."
    - id: errorName
      type: System.String
      description: "오류 또는 발생 한 오류의 이름을 저장 하는 문자열에 대 한 참조입니다."
    return:
      type: System.Int32
      description: "컴파일러는 반환 값입니다."
  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  id: ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  langs:
  - csharp
  name: ExecWaitWithCapture(String,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(String,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(String,String,TempFileCollection,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일러에서 출력 및 오류 정보를 지정 된 문자열에 저장을 반환 하려면 지정 된 현재 디렉터리와 임시 파일, 그리고 호출에 대 한 대기를 사용 하 여 지정된 된 명령을 실행 합니다."
  syntax:
    content: public static int ExecWaitWithCapture (string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);
    parameters:
    - id: cmd
      type: System.String
      description: "실행할 명령입니다."
    - id: currentDir
      type: System.String
      description: "현재 디렉터리입니다."
    - id: tempFiles
      type: System.CodeDom.Compiler.TempFileCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 관리 하 고 컴파일하는 동안 생성 된 중간 파일에 대 한 참조를 저장 합니다."
    - id: outputName
      type: System.String
      description: "컴파일러의 메시지 출력을 저장 하는 문자열에 대 한 참조입니다."
    - id: errorName
      type: System.String
      description: "오류 또는 발생 한 오류의 이름을 저장 하는 문자열에 대 한 참조입니다."
    return:
      type: System.Int32
      description: "컴파일러는 반환 값입니다."
  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  id: ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  langs:
  - csharp
  name: ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "지정 된 사용자 토큰, 현재 디렉터리 및; 임시 파일을 사용 하 여 지정 된 명령을 실행 합니다. 그런 다음 기다립니다 호출이 반환 하 고, 컴파일러에서 출력 및 오류 정보를 지정 된 문자열에 저장 합니다."
  syntax:
    content: public static int ExecWaitWithCapture (IntPtr userToken, string cmd, string currentDir, System.CodeDom.Compiler.TempFileCollection tempFiles, ref string outputName, ref string errorName);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "컴파일러 프로세스를 시작 하는 토큰입니다."
    - id: cmd
      type: System.String
      description: "실행할 명령입니다."
    - id: currentDir
      type: System.String
      description: "프로세스를 시작 하는 디렉터리입니다."
    - id: tempFiles
      type: System.CodeDom.Compiler.TempFileCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 관리 하 고 컴파일하는 동안 생성 된 중간 파일에 대 한 참조를 저장 합니다."
    - id: outputName
      type: System.String
      description: "컴파일러의 메시지 출력을 저장 하는 문자열에 대 한 참조입니다."
    - id: errorName
      type: System.String
      description: "오류 또는 발생 한 오류의 이름을 저장 하는 문자열에 대 한 참조입니다."
    return:
      type: System.Int32
      description: "컴파일러는 반환 값입니다."
  overload: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWait(String,TempFileCollection)
  nameWithType: Executor.ExecWait(String,TempFileCollection)
  fullName: System.CodeDom.Compiler.Executor.ExecWait(String,TempFileCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWaitWithCapture(String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(String,TempFileCollection,String,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(IntPtr,String,TempFileCollection,String,String)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWaitWithCapture(String,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(String,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(String,String,TempFileCollection,String,String)
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
  nameWithType: Executor.ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
  fullName: System.CodeDom.Compiler.Executor.ExecWaitWithCapture(IntPtr,String,String,TempFileCollection,String,String)
- uid: System.CodeDom.Compiler.Executor.ExecWait*
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWait
  nameWithType: Executor.ExecWait
- uid: System.CodeDom.Compiler.Executor.ExecWaitWithCapture*
  parent: System.CodeDom.Compiler.Executor
  isExternal: false
  name: ExecWaitWithCapture
  nameWithType: Executor.ExecWaitWithCapture
