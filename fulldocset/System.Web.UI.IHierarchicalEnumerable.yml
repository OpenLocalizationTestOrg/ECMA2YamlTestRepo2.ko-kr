### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IHierarchicalEnumerable
  id: IHierarchicalEnumerable
  children:
  - System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)
  langs:
  - csharp
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
  type: Interface
  summary: "열거할 수 있는 계층적 컬렉션을 나타냅니다는 <xref:System.Collections.IEnumerator>인터페이스.</xref:System.Collections.IEnumerator> IHierarchicalEnumerable 인터페이스를 구현 하는 컬렉션은 ASP.NET 사이트 탐색 및 데이터 소스 제어에서 사용 됩니다."
  remarks: "IHierarchicalEnumerable 인터페이스를 확장는 <xref:System.Collections.IEnumerable>인터페이스 및 노출 <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>를 검색 하는 데 사용 하는 방법인는 <xref:System.Web.UI.IHierarchyData>외에 열거 된 항목에서 개체는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>메서드.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Web.UI.IHierarchyData> </xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> </xref:System.Collections.IEnumerable>       일반적으로, IHierarchicalEnumerable 컬렉션을 사용 하는 클라이언트를 검색 한 <xref:System.Collections.IEnumerator>호출 하 여 개체는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>메서드를 열거 및 호출을 반복 하는 <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A>검색할 열거 된 각 항목에는 <xref:System.Web.UI.IHierarchyData>개체.</xref:System.Web.UI.IHierarchyData> </xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates how to implement the IHierarchicalEnumerable interface with a class that extends <xref:System.Collections.ArrayList> and provides a collection of <xref:System.Web.UI.IHierarchyData> objects that wrap <xref:System.IO.FileSystemInfo> objects. The IHierarchicalEnumerable collection is used by classes that derive from <xref:System.Web.UI.HierarchicalDataSourceView> to return a collection of hierarchical nodes when the <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> method is called. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#4](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#4](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_2_1.vb)]"
  syntax:
    content: 'public interface IHierarchicalEnumerable : System.Collections.IEnumerable'
  implements:
  - System.Collections.IEnumerable
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)
  id: GetHierarchyData(System.Object)
  parent: System.Web.UI.IHierarchicalEnumerable
  langs:
  - csharp
  name: GetHierarchyData(Object)
  nameWithType: IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "지정된 된 열거형된 항목에 대 한 계층적 데이터 항목을 반환합니다."
  remarks: "일반적으로 사용 하는 클라이언트 <xref:System.Web.UI.IHierarchicalEnumerable>컬렉션을 검색 한 <xref:System.Collections.IEnumerator>호출 하 여 개체는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>메서드를 다음 열거형에서 반복 하 고 검색할 열거 된 각 항목에 GetHierarchyData 메서드를 호출는 <xref:System.Web.UI.IHierarchyData>개체입니다.</xref:System.Web.UI.IHierarchyData> </xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator> </xref:System.Web.UI.IHierarchicalEnumerable>"
  example:
  - "The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <xref:System.Web.UI.IHierarchyData> object in a recursive data-binding method. The items in an <xref:System.Web.UI.IHierarchicalEnumerable> object are enumerated, and for each an <xref:System.Web.UI.IHierarchyData> object is retrieved using the GetHierarchyData method. Finally, the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property is checked to determine whether recursion is necessary. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> class.  \n  \n [!code-vb[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_0_1.vb)]\n [!code-cs[Samples.AspNet.GeneologyTree#5](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_0_1.cs)]"
  syntax:
    content: public System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "<xref:System.Object>를 반환할 대상이 되는 <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> 나타내는 인스턴스는 <xref:System.Object>GetHierarchyData 메서드에 전달 합니다.</xref:System.Object>"
  overload: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)
  parent: System.Web.UI.IHierarchicalEnumerable
  isExternal: false
  name: GetHierarchyData(Object)
  nameWithType: IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData*
  parent: System.Web.UI.IHierarchicalEnumerable
  isExternal: false
  name: GetHierarchyData
  nameWithType: IHierarchicalEnumerable.GetHierarchyData
