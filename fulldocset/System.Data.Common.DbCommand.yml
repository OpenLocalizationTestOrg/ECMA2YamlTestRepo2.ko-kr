### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommand
  id: DbCommand
  children:
  - System.Data.Common.DbCommand.#ctor
  - System.Data.Common.DbCommand.Cancel
  - System.Data.Common.DbCommand.CommandText
  - System.Data.Common.DbCommand.CommandTimeout
  - System.Data.Common.DbCommand.CommandType
  - System.Data.Common.DbCommand.Connection
  - System.Data.Common.DbCommand.CreateDbParameter
  - System.Data.Common.DbCommand.CreateParameter
  - System.Data.Common.DbCommand.DbConnection
  - System.Data.Common.DbCommand.DbParameterCollection
  - System.Data.Common.DbCommand.DbTransaction
  - System.Data.Common.DbCommand.DesignTimeVisible
  - System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQuery
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReader
  - System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalar
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.Parameters
  - System.Data.Common.DbCommand.Prepare
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.Data.Common.DbCommand.Transaction
  - System.Data.Common.DbCommand.UpdatedRowSource
  langs:
  - csharp
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
  type: Class
  summary: "SQL 문 또는 데이터 원본에 대해 실행할 저장된 프로시저를 나타냅니다. 명령을 나타내는 데이터베이스 관련 클래스에 대 한 기본 클래스를 제공 합니다. <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*></xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*>"
  syntax:
    content: 'public abstract class DbCommand : System.ComponentModel.Component, IDisposable, System.Data.IDbCommand'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDbCommand
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbCommand.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbCommand()
  nameWithType: DbCommand.DbCommand()
  fullName: System.Data.Common.DbCommand.DbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "인스턴스를 생성 된 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체입니다."
  syntax:
    content: protected DbCommand ();
    parameters: []
  overload: System.Data.Common.DbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.Cancel
  id: Cancel
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: DbCommand.Cancel()
  fullName: System.Data.Common.DbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "실행을 취소 하려고 시도 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>합니다."
  remarks: "가 취소할 경우 아무 작업도 수행 합니다. 그러나 처리 중인 명령을 취소 동작이 실패 하는 경우 예외가 생성 되지 않습니다."
  syntax:
    content: public abstract void Cancel ();
    parameters: []
  overload: System.Data.Common.DbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.CommandText
  id: CommandText
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: DbCommand.CommandText
  fullName: System.Data.Common.DbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "데이터 원본에 대해 실행할 텍스트 명령을 가져오거나 설정 합니다."
  remarks: "설정 하는 경우는 <xref:System.Data.CommandType>를 `StoredProcedure`, 저장된 프로시저의 이름에 CommandText 속성을 설정 해야 합니다.</xref:System.Data.CommandType> 명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 `Execute` 메서드."
  syntax:
    content: public abstract string CommandText { get; set; }
    return:
      type: System.String
      description: "실행할 텍스트 명령입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.Common.DbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: DbCommand.CommandTimeout
  fullName: System.Data.Common.DbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "명령을 실행 하는 시도 종료 하 고 오류를 생성 하기 전 대기 시간을 가져오거나 설정 합니다."
  remarks: "<xref:System.ArgumentException>할당 된 CommandTimeout 속성 값이 0 보다 작은 경우 생성 됩니다.</xref:System.ArgumentException>       Note 구현자에 게 0은 제한 시간이 없음을 의미 하는 것이 좋습니다."
  syntax:
    content: public abstract int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "명령이 실행 될 때까지 기다리는 시간 (초) 시간입니다."
  overload: System.Data.Common.DbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.CommandType
  id: CommandType
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: DbCommand.CommandType
  fullName: System.Data.Common.DbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "나타내거나 지정 방법을 <xref:System.Data.Common.DbCommand.CommandText*>속성을 해석 합니다.</xref:System.Data.Common.DbCommand.CommandText*>"
  remarks: "설정 하는 경우는 <xref:System.Data.CommandType>를 `StoredProcedure`를 설정 해야는 <xref:System.Data.Common.DbCommand.CommandText%2A>속성을 저장된 프로시저의 이름입니다.</xref:System.Data.Common.DbCommand.CommandText%2A> </xref:System.Data.CommandType> 명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 `Execute` 메서드."
  syntax:
    content: public abstract System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "중 하나는 <xref href=&quot;System.Data.CommandType&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommand.CommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.Connection
  id: Connection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: DbCommand.Connection
  fullName: System.Data.Common.DbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> 에서 사용 하는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>합니다."
  syntax:
    content: public System.Data.Common.DbConnection Connection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "데이터 원본에 연결 합니다."
  overload: System.Data.Common.DbCommand.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: DbCommand.CreateDbParameter()
  fullName: System.Data.Common.DbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 개체입니다."
  syntax:
    content: protected abstract System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "A <xref href=&quot;System.Data.Common.DbParameter&quot;></xref> object."
  overload: System.Data.Common.DbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: DbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Data.Common.DbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "A <xref href=&quot;System.Data.Common.DbParameter&quot;></xref> object."
  overload: System.Data.Common.DbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.DbConnection
  id: DbConnection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbCommand.DbConnection
  fullName: System.Data.Common.DbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> 에서 사용 하는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>합니다."
  syntax:
    content: protected abstract System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "데이터 원본에 연결 합니다."
  overload: System.Data.Common.DbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: DbCommand.DbParameterCollection
  fullName: System.Data.Common.DbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 개체입니다."
  syntax:
    content: protected abstract System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "SQL 문 또는 저장된 프로시저의 매개 변수입니다."
  overload: System.Data.Common.DbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: DbCommand.DbTransaction
  fullName: System.Data.Common.DbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "DbTransaction을 가져오거나 설정 합니다. <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 실행 합니다."
  syntax:
    content: protected abstract System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: ".NET Framework 데이터 공급자의 명령 개체가 실행 되는 트랜잭션. 기본값은 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  overload: System.Data.Common.DbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: DbCommand.DesignTimeVisible
  fullName: System.Data.Common.DbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "명령 개체를 사용자 지정 된 인터페이스 컨트롤에 표시 되어야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public abstract bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 명령 개체를 컨트롤;에 표시 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "연결에 대해 명령 텍스트를 실행합니다."
  syntax:
    content: protected abstract System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "인스턴스 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>합니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteDbDataReader*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "공급자에 대 한 기본이 아닌 구현을 제공 하려면이 메서드를 구현 해야 <> </> *> 오버 로드 합니다.       기본 구현은 동기 호출 <> </> *> 메서드 호출 스레드를 차단 하는 완료 작업을 반환 합니다. 기본 구현은 이미 취소 된 취소 토큰을 전달 하는 경우 취소 된 작업을 반환 합니다. ExecuteReader에서 throw 된 예외는 반환 된 작업 예외 속성을 통해 전달 됩니다.       이 메서드는 초기 취소 될 작업을 요청 하는 데 사용할 수 있는 취소 토큰을 허용 합니다. 구현이이 요청을 무시할 수 있습니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "문 실행 및 데이터 검색을 위한 옵션입니다."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: DbCommand.ExecuteNonQuery()
  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "연결 개체에 대해 SQL 문을 실행합니다."
  remarks: "ExecuteNonQuery를 사용 하 여 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기), 카탈로그 작업을 수행 하거나 업데이트를 실행 하 여 데이터베이스의 데이터를 변경 하려면 INSERT 또는 DELETE 문을 수 있습니다.       ExecuteNonQuery 모든 행을 반환 하지 않는 있지만 모든 출력 매개 변수 또는 반환 값 매개 변수에 매핑된 데이터로 채워집니다.       UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다. 문의 다른 모든 형식에 대 한 반환 값은-1입니다."
  syntax:
    content: public abstract int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "영향을 받는 행 수입니다."
  overload: System.Data.Common.DbCommand.ExecuteNonQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  id: ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync()
  nameWithType: DbCommand.ExecuteNonQueryAsync()
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>, 연결 개체에 대 한 SQL 문을 실행 합니다.       호출 <> </> *> CancellationToken.None을 사용 합니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<int> ExecuteNonQueryAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이의 비동기 버전 <> </> *> 합니다. 공급자는 적절 한 구현을 재정의 해야 합니다. 취소 토큰은 선택적으로 무시할 수 있습니다.       기본 구현은 동기 호출 <> </> *> 메서드 호출 스레드를 차단 하는 완료 작업을 반환 합니다. 기본 구현은 이미 취소 된 취소 토큰을 전달 하는 경우 취소 된 작업을 반환 합니다.  throw 된 예외 <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>반환 된 작업 예외 속성을 통해 전달 됩니다.</xref:System.Data.Common.DbCommand.ExecuteNonQuery*>       다른 메서드 및 속성을 호출 하지 않고는 <xref uid=&quot;langword_csharp_DbCommand&quot; name=&quot;DbCommand&quot; href=&quot;&quot;> </xref> 반환 된 작업이 완료 될 때까지 개체입니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: DbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "실행는 <> </> *>에 대해는 <> </> *>를 반환 하 고는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다."
  syntax:
    content: public System.Data.Common.DbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "실행는 <> </> *>에 대해는 <> </> *>를 반환 하 고는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 중 하나를 사용 하 여는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  syntax:
    content: public System.Data.Common.DbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "<xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.Common.DbCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: DbCommand.ExecuteReaderAsync()
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>를 실행 하는 <> </> *>에 대해는 <> </> *>를 반환 하 고는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다.       호출 <> </> *> CancellationToken.None을 사용 합니다."
  remarks: "관리 되는 공급자 구현자 <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>.</xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A> </xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> 호출 해야 합니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>를 실행 하는 <> </> *>에 대해는 <> </> *>를 반환 하 고는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다.       호출 <> </> *> 합니다."
  remarks: "관리 되는 공급자 구현자 <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>.</xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A> </xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> 호출 해야 합니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>를 실행 하는 <> </> *>에 대해는 <> </> *>를 반환 하 고는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다. 이 메서드는 작업을 취소 해야 한다는 알림을 전파 합니다.       호출 <> </> *> 합니다."
  remarks: "관리 되는 공급자 구현자 <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>.</xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A> </xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> 호출 해야 합니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>.</xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*> 호출"
  remarks: "관리 되는 공급자 구현자 <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>.</xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A> </xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> 호출 해야 합니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "잘못 된 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: DbCommand.ExecuteScalar()
  fullName: System.Data.Common.DbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "쿼리를 실행 하 고 쿼리에서 반환 된 결과 집합의 첫 번째 행의 첫 번째 열을 반환 합니다. 다른 모든 열과 행은 무시 됩니다."
  remarks: "ExecuteScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다. 이렇게 하려면 <xref:System.Data.Common.DbCommand.ExecuteReader%2A>에 <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> 에서 반환 된 데이터를 사용 하 여 메서드와 단일 값을 생성 하는 데 필요한 작업을 수행</xref:System.Data.Common.DbCommand.ExecuteReader%2A> 하는 사용 하 여 보다 적은 코드가 필요       결과 집합의 첫 번째 행의 첫 번째 열이 발견 되지 않으면 null 참조 하는 경우 (`Nothing` Visual basic에서)이 반환 됩니다. 데이터베이스의 값이 `null`, 쿼리에서 반환 `DBNull.Value`합니다."
  syntax:
    content: public abstract object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "결과의 첫 번째 행의 첫 번째 열을 설정 합니다."
  overload: System.Data.Common.DbCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  id: ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalarAsync()
  nameWithType: DbCommand.ExecuteScalarAsync()
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>, 쿼리를 실행 하 고 쿼리에 의해 반환 된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환 합니다. 다른 모든 열과 행은 무시 됩니다.       호출 <> </> *> CancellationToken.None을 사용 합니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<object> ExecuteScalarAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이의 비동기 버전 <> </> *> 합니다. 공급자는 적절 한 구현을 재정의 해야 합니다. 취소 토큰은 선택적으로 무시할 수 있습니다.       기본 구현은 동기 호출 <> </> *> 메서드 호출 스레드를 차단 하는 완료 작업을 반환 합니다. 기본 구현은 이미 취소 된 취소 토큰을 전달 하는 경우 취소 된 작업을 반환 합니다. ExecuteScalar에서 throw 된 예외는 반환 된 작업 예외 속성을 통해 전달 됩니다.       다른 메서드 및 속성을 호출 하지 않고는 <xref uid=&quot;langword_csharp_DbCommand&quot; name=&quot;DbCommand&quot; href=&quot;&quot;> </xref> 반환 된 작업이 완료 될 때까지 개체입니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbCommand.Parameters
  id: Parameters
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: DbCommand.Parameters
  fullName: System.Data.Common.DbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> 개체입니다. 매개 변수에 대 한 자세한 내용은 참조 하십시오. [구성 매개 변수 및 매개 변수 데이터 형식](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Data.Common.DbParameterCollection Parameters { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "SQL 문 또는 저장된 프로시저의 매개 변수입니다."
  overload: System.Data.Common.DbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.Prepare
  id: Prepare
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: DbCommand.Prepare()
  fullName: System.Data.Common.DbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "데이터 원본에 명령의 준비 된 (또는 컴파일된) 버전을 만듭니다."
  remarks: "경우는 <xref:System.Data.Common.DbCommand.CommandType%2A>속성이 `TableDirect`, `Prepare` 아무것도 수행 하지 않습니다.</xref:System.Data.Common.DbCommand.CommandType%2A> 경우 <xref:System.Data.Common.DbCommand.CommandType%2A>로 설정 된 `StoredProcedure`에 대 한 호출 `Prepare` 아니요-운영 될 수 있지만 성공 해야</xref:System.Data.Common.DbCommand.CommandType%2A>"
  syntax:
    content: public abstract void Prepare ();
    parameters: []
  overload: System.Data.Common.DbCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  id: System#Data#IDbCommand#Connection
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Connection
  nameWithType: DbCommand.System.Data.IDbCommand.Connection
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.IDbConnection&quot;> </xref> 의이 인스턴스에서 사용 되는 <xref href=&quot;System.Data.IDbCommand&quot;> </xref>합니다."
  remarks: "자세한 내용은 <xref:System.Data.IDbCommand.Connection%2A>.</xref:System.Data.IDbCommand.Connection%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDbConnection System.Data.IDbCommand.Connection { get; set; }
    return:
      type: System.Data.IDbConnection
      description: "데이터 원본에 연결 합니다."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  id: System#Data#IDbCommand#CreateParameter
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.CreateParameter()
  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Data.IDbDataParameter&quot;> </xref> 개체입니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.Common.DbCommand>       자세한 내용은 <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDbDataParameter IDbCommand.CreateParameter ();
    parameters: []
    return:
      type: System.Data.IDbDataParameter
      description: "<xref uid=&quot;langword_csharp_IDbDataParameter&quot; name=&quot;IDbDataParameter&quot; href=&quot;&quot;> </xref> 개체입니다."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "실행의 <> </> *>에 대해는 <> </> *>와 빌드는 <xref href=&quot;System.Data.IDataReader&quot;> </xref>합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.Common.DbCommand>       자세한 내용은 <xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "실행의 <> </> *>에 대해는 <> </> *>, 및 빌드는 <xref href=&quot;System.Data.IDataReader&quot;> </xref> 중 하나를 사용 하 여는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.Common.DbCommand>       자세한 내용은 <xref:System.Data.IDbCommand.ExecuteReader%2A>.</xref:System.Data.IDbCommand.ExecuteReader%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "중 하나는 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> 값입니다."
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> 개체입니다."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  id: System#Data#IDbCommand#Parameters
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Parameters
  nameWithType: DbCommand.System.Data.IDbCommand.Parameters
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the <xref href=&quot;System.Data.IDataParameterCollection&quot;></xref>."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbCommand>인스턴스로 캐스팅 되는 <xref:System.Data.IDbCommand>인터페이스.</xref:System.Data.IDbCommand> </xref:System.Data.Common.DbCommand>       자세한 내용은 <xref:System.Data.IDbCommand.Parameters%2A>.</xref:System.Data.IDbCommand.Parameters%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDataParameterCollection System.Data.IDbCommand.Parameters { get; }
    return:
      type: System.Data.IDataParameterCollection
      description: "SQL 문 또는 저장된 프로시저의 매개 변수입니다."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  id: System#Data#IDbCommand#Transaction
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Transaction
  nameWithType: DbCommand.System.Data.IDbCommand.Transaction
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref:System.Data.Common.DbCommand.DbTransaction*>는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 실행 됩니다.</xref:System.Data.Common.DbCommand.DbTransaction*>"
  remarks: "자세한 내용은 <xref:System.Data.IDbCommand.Ttransaction%2A>.</xref:System.Data.IDbCommand.Ttransaction%2A> 을 참조 하십시오."
  syntax:
    content: System.Data.IDbTransaction System.Data.IDbCommand.Transaction { get; set; }
    return:
      type: System.Data.IDbTransaction
      description: "트랜잭션은 <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> .NET Framework 데이터 공급자의 개체를 실행 합니다. 기본값은 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.Transaction
  id: Transaction
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: DbCommand.Transaction
  fullName: System.Data.Common.DbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가져오거나는 <xref href=&quot;System.Data.Common.DbTransaction&quot;> </xref> 는 <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> 개체가 실행 합니다."
  syntax:
    content: public System.Data.Common.DbTransaction Transaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "트랜잭션은 <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> .NET Framework 데이터 공급자의 개체를 실행 합니다. 기본값은 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  overload: System.Data.Common.DbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: DbCommand.UpdatedRowSource
  fullName: System.Data.Common.DbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "명령 결과가 적용 되는 방식을 가져오거나는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 큐브의 Update 메서드에 의해 사용 될 때는 <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>합니다."
  remarks: "throw 한 <xref:System.ArgumentException>한 경우 입력 한 값 중 하나는 <xref:System.Data.UpdateRowSource>값.</xref:System.Data.UpdateRowSource> </xref:System.ArgumentException>"
  syntax:
    content: public abstract System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "중 하나는 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Both&quot; name=&quot;Both&quot; href=&quot;&quot;> </xref> 명령이 자동으로 생성 하지 않는 한 합니다. 기본값은 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.DbCommand.#ctor
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbCommand()
  nameWithType: DbCommand.DbCommand()
  fullName: System.Data.Common.DbCommand.DbCommand()
- uid: System.Data.Common.DbCommand.Cancel
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Cancel()
  nameWithType: DbCommand.Cancel()
  fullName: System.Data.Common.DbCommand.Cancel()
- uid: System.Data.Common.DbCommand.CommandText
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandText
  nameWithType: DbCommand.CommandText
  fullName: System.Data.Common.DbCommand.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommand.CommandTimeout
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: DbCommand.CommandTimeout
  fullName: System.Data.Common.DbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommand.CommandType
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandType
  nameWithType: DbCommand.CommandType
  fullName: System.Data.Common.DbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Common.DbCommand.Connection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Connection
  nameWithType: DbCommand.Connection
  fullName: System.Data.Common.DbCommand.Connection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbCommand.CreateDbParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: DbCommand.CreateDbParameter()
  fullName: System.Data.Common.DbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Common.DbCommand.CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: DbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.CreateParameter()
- uid: System.Data.Common.DbCommand.DbConnection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbConnection
  nameWithType: DbCommand.DbConnection
  fullName: System.Data.Common.DbCommand.DbConnection
- uid: System.Data.Common.DbCommand.DbParameterCollection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbCommand.DbParameterCollection
  fullName: System.Data.Common.DbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Common.DbCommand.DbTransaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: DbCommand.DbTransaction
  fullName: System.Data.Common.DbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Common.DbCommand.DesignTimeVisible
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: DbCommand.DesignTimeVisible
  fullName: System.Data.Common.DbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.ExecuteNonQuery
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: DbCommand.ExecuteNonQuery()
  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync()
  nameWithType: DbCommand.ExecuteNonQueryAsync()
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Data.Common.DbCommand.ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: DbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.ExecuteReader()
- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: DbCommand.ExecuteReaderAsync()
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.Common.DbCommand.ExecuteScalar
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: DbCommand.ExecuteScalar()
  fullName: System.Data.Common.DbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync()
  nameWithType: DbCommand.ExecuteScalarAsync()
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Data.Common.DbCommand.Parameters
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Parameters
  nameWithType: DbCommand.Parameters
  fullName: System.Data.Common.DbCommand.Parameters
- uid: System.Data.Common.DbCommand.Prepare
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Prepare()
  nameWithType: DbCommand.Prepare()
  fullName: System.Data.Common.DbCommand.Prepare()
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Connection
  nameWithType: DbCommand.System.Data.IDbCommand.Connection
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.CreateParameter()
  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()
- uid: System.Data.IDbDataParameter
  parent: System.Data
  isExternal: false
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Parameters
  nameWithType: DbCommand.System.Data.IDbCommand.Parameters
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters
- uid: System.Data.IDataParameterCollection
  parent: System.Data
  isExternal: false
  name: IDataParameterCollection
  nameWithType: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Transaction
  nameWithType: DbCommand.System.Data.IDbCommand.Transaction
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common.DbCommand.Transaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Transaction
  nameWithType: DbCommand.Transaction
  fullName: System.Data.Common.DbCommand.Transaction
- uid: System.Data.Common.DbCommand.UpdatedRowSource
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: DbCommand.UpdatedRowSource
  fullName: System.Data.Common.DbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Common.DbCommand.#ctor*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand.DbCommand
- uid: System.Data.Common.DbCommand.Cancel*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Cancel
  nameWithType: DbCommand.Cancel
- uid: System.Data.Common.DbCommand.CommandText*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandText
  nameWithType: DbCommand.CommandText
- uid: System.Data.Common.DbCommand.CommandTimeout*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: DbCommand.CommandTimeout
- uid: System.Data.Common.DbCommand.CommandType*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandType
  nameWithType: DbCommand.CommandType
- uid: System.Data.Common.DbCommand.Connection*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Connection
  nameWithType: DbCommand.Connection
- uid: System.Data.Common.DbCommand.CreateDbParameter*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: DbCommand.CreateDbParameter
- uid: System.Data.Common.DbCommand.CreateParameter*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: DbCommand.CreateParameter
- uid: System.Data.Common.DbCommand.DbConnection*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbConnection
  nameWithType: DbCommand.DbConnection
- uid: System.Data.Common.DbCommand.DbParameterCollection*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbCommand.DbParameterCollection
- uid: System.Data.Common.DbCommand.DbTransaction*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: DbCommand.DbTransaction
- uid: System.Data.Common.DbCommand.DesignTimeVisible*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: DbCommand.DesignTimeVisible
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: DbCommand.ExecuteDbDataReader
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: DbCommand.ExecuteDbDataReaderAsync
- uid: System.Data.Common.DbCommand.ExecuteNonQuery*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: DbCommand.ExecuteNonQuery
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: DbCommand.ExecuteNonQueryAsync
- uid: System.Data.Common.DbCommand.ExecuteReader*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: DbCommand.ExecuteReader
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: DbCommand.ExecuteReaderAsync
- uid: System.Data.Common.DbCommand.ExecuteScalar*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: DbCommand.ExecuteScalar
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: DbCommand.ExecuteScalarAsync
- uid: System.Data.Common.DbCommand.Parameters*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Parameters
  nameWithType: DbCommand.Parameters
- uid: System.Data.Common.DbCommand.Prepare*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Prepare
  nameWithType: DbCommand.Prepare
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Connection
  nameWithType: DbCommand.System.Data.IDbCommand.Connection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.CreateParameter
  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Parameters
  nameWithType: DbCommand.System.Data.IDbCommand.Parameters
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Transaction
  nameWithType: DbCommand.System.Data.IDbCommand.Transaction
- uid: System.Data.Common.DbCommand.Transaction*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Transaction
  nameWithType: DbCommand.Transaction
- uid: System.Data.Common.DbCommand.UpdatedRowSource*
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: DbCommand.UpdatedRowSource
