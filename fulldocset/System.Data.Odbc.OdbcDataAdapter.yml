### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataAdapter
  id: OdbcDataAdapter
  children:
  - System.Data.Odbc.OdbcDataAdapter.#ctor
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.RowUpdated
  - System.Data.Odbc.OdbcDataAdapter.RowUpdating
  - System.Data.Odbc.OdbcDataAdapter.SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
  type: Class
  summary: "채우는 데 사용 되는 데이터 원본에 대 한 연결 및 데이터 명령 집합을 나타냅니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 데이터 소스를 업데이트 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "OdbcDataAdapter 사이의 브리지 역할을 `DataSet` 와 데이터 소스를 검색 하 고 데이터를 저장 합니다. OdbcDataAdapter를 사용 하 여이 연결을 제공 <xref:System.Data.Common.DbDataAdapter.Fill%2A>에 데이터 원본에서 데이터를 로드 하는 <xref:System.Data.DataSet>, 및를 사용 하 여 <xref:System.Data.Common.DbDataAdapter.Update%2A>에서 변경 내용을 보낼는 <xref:System.Data.DataSet>데이터 소스에 다시.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       OdbcDataAdapter 채우는 경우는 <xref:System.Data.DataSet>, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.</xref:System.Data.DataSet> 그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> 속성</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> <xref:System.Data.DataSet>포함 하 여 기본 키 정보, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 를 사용 하 여 데이터를 채우기 전에</xref:System.Data.DataSet> 스키마를 만들 OdbcDataAdapter 할 수도 있습니다. 자세한 내용은 참조 [기존 제약 조건 데이터 집합에 추가](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 호출 하는 경우는 `Fill` 메서드는 기본 키 열이 없는 데이터 원본에는 OdbcDataAdapter 승격 하려고 unique 제약 조건 열에서 기본 키입니다. 프로세스는 OdbcDataAdapter null 허용 안 함으로 unique 제약 조건을 표시합니다. 이 동작은 unique 제약 조건 열에서 null 값이 있으면 작동 합니다. Null 값이 있는 경우는 `Fill` 메서드는 제약 조건 위반으로 인해 실패 합니다. 이러한 상황을 방지 하려면 unique 제약 조건 열에서 null 값을 허용 하지 않습니다.      > [!NOTE] > 하나만 <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 를 호출 하는 경우 반환 되</xref:System.Data.DataTable> 는 네이티브 ODBC 드라이버의 제한으로 인해 이 어떤 다중에서 SQL 일괄 처리 문을 실행 하는 경우에 <xref:System.Data.DataTable>개체가 있을 수 있습니다.</xref:System.Data.DataTable>       OdbcDataAdapter도 포함 되어는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, 및 `TableMappings` 속성을 로드 하 고 데이터의 업데이트를 용이 하 게.</xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, OdbcDataAdapter, and <xref:System.Data.Odbc.OdbcConnection> to select records and populate a `DataSet` with the selected rows.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 클래스입니다."
  remarks: "인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcDataAdapter>, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.</xref:System.Data.Odbc.OdbcDataAdapter>      | 속성 | 기본 값 |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_2_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_2_1.vb)]"
  syntax:
    content: public OdbcDataAdapter ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  id: '#ctor(System.Data.Odbc.OdbcCommand)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 지정 된 SQL SELECT 문 사용 하 여 클래스입니다."
  remarks: "이 구현에서 <xref:System.Data.Odbc.OdbcDataAdapter>생성자는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>속성에 지정 된 값을는 `selectCommand` 매개 변수.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter>       인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcDataAdapter>, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.</xref:System.Data.Odbc.OdbcDataAdapter>      | 속성 | 초기 값 |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_6_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_6_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 는 SQL SELECT 문 또는 저장된 프로시저를이 고로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> SQL SELECT 문 사용 하 여 클래스 및 <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>합니다."
  remarks: "이 구현에서 <xref:System.Data.Odbc.OdbcDataAdapter>호출 해야 하는 응용 프로그램에 유용할 수는 `Fill` 둘 이상에 대 한 메서드 <xref:System.Data.Odbc.OdbcDataAdapter>개체.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/visualbasic/d0ba4f92-5ec4-4c3a-b38b-_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/csharp/d0ba4f92-5ec4-4c3a-b38b-_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
    - id: selectConnection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> 연결을 나타내는입니다."
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> SQL SELECT 문 및 연결 문자열을 사용 하 여 클래스입니다."
  remarks: "이 오버 로드는 <xref:System.Data.Odbc.OdbcDataAdapter>생성자 사용 하 여는 `selectConnectionString` 매개 변수를 설정 된 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>속성.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter> 그러나 연결이 열리지 않습니다. 여전히 명시적으로 열어야 연결 합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_1_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_1_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>의 속성은 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>"
    - id: selectConnectionString
      type: System.String
      description: "연결 문자열입니다."
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "추가할 수 있습니다."
    - id: command
      type: System.Data.IDbCommand
      description: "추가할 수 있습니다."
    - id: statementType
      type: System.Data.StatementType
      description: "추가할 수 있습니다."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "추가할 수 있습니다."
    - id: command
      type: System.Data.IDbCommand
      description: "추가할 수 있습니다."
    - id: statementType
      type: System.Data.StatementType
      description: "추가할 수 있습니다."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "SQL 문 또는 데이터 원본에서 레코드를 삭제 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다."
  remarks: "DeleteCommand 속성 할당 된 경우에 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand>가 복제 되지 않습니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> DeleteCommand에 이전에 만든된 <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> 에 대 한 참조를 유지 하는 대신,       DeleteCommand를 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder>클래스는 DeleteCommand를 자동으로 생성 하 고 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터 원본에.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 이 작업을 수행 하려면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 속성</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_2_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_2_1.cs)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 의 삭제 된 행에 해당 하는 데이터 원본의 레코드를 삭제 하는 업데이트 작업 중에 사용 된 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "SQL 문 또는 데이터 원본에 새 레코드를 삽입 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다."
  remarks: "InsertCommand 속성 할당 된 경우에 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>개체는 <xref:System.Data.Odbc.OdbcCommand>가 복제 되지 않습니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> InsertCommand에 이전에 만든된 <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> 에 대 한 참조를 유지 하는 대신,       InsertCommand 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder>InsertCommand를 자동으로 생성 하는 클래스 및 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터 원본에.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 이 작업을 수행 하려면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 속성</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet>설정 하는 방법에 따라는 <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>의 속성은 <xref:System.Data.Odbc.OdbcCommand>개체입니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 새 행에 해당 하는 데이터 원본에서 레코드를 삽입 업데이트 작업 중에 사용 된 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "데이터 원본에 대해 명령이 실행 된 후 업데이트 작업 중 발생 합니다."
  remarks: "사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</xref:System.Data.Common.DbDataAdapter.Update%2A> 실행 순서는 다음과 같습니다: 1.  값은 <xref:System.Data.DataRow>매개 변수 값으로 이동 됩니다.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>이벤트가 발생 합니다.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  명령을 실행합니다.      4.  명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과 <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 에 놓입니다.      5.  출력 매개 변수가 있는 경우 <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 배치      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>이벤트가 발생 합니다.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>가 호출 됩니다.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.Odbc.OdbcRowUpdatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "중에 발생 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 원본에 대해 명령을 실행 하기 전에.</xref:System.Data.Common.DbDataAdapter.Update*>"
  remarks: "사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</xref:System.Data.Common.DbDataAdapter.Update%2A> 실행 순서는 다음과 같습니다: 1.  값은 <xref:System.Data.DataRow>매개 변수 값으로 이동 됩니다.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>이벤트가 발생 합니다.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  명령을 실행합니다.      4.  명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과 <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 에 놓입니다.      5.  출력 매개 변수가 있는 경우 <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 배치      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>이벤트가 발생 합니다.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>가 호출 됩니다.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.Odbc.OdbcRowUpdatingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "SQL 문 또는 데이터 원본에서 레코드를 선택 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다."
  remarks: "SelectCommand 할당 된 경우에 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand>가 복제 되지 않습니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> SelectCommand 이전에 만든에 대 한 참조를 유지 하는 대신, <xref:System.Data.Odbc.OdbcCommand>개체입니다.</xref:System.Data.Odbc.OdbcCommand>       에 테이블이 추가 된 SelectCommand 행을 반환 하는 경우는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the SelectCommand and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_3_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_3_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 에 배치 하기 위해 데이터 원본에서 레코드를 선택 하는 데 채우기 작업 중 사용 되는 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 업데이트 하는 동안 데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 하는 데 사용 합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 데 사용 되는 업데이트 하는 동안 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 삽입 합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 업데이트 중에 사용 하는 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcDataAdapter>인스턴스로 캐스팅 되는 <xref:System.Data.IDbDataAdapter>인터페이스.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 데이터 집합의 수정 된 행에 대 한 데이터 원본에는 업데이트에 업데이트 레코드 중에 사용 합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "이 멤버에 대 한 참조 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Odbc.OdbcDataAdapter>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "새 <xref:System.Object>이 인스턴스의 복사본입니다.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "SQL 문 또는 데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다."
  remarks: "UpdateCommand 할당 된 경우에 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand>가 복제 되지 않습니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand> UpdateCommand 이전에 만든에 대 한 참조를 유지 하는 대신, <xref:System.Data.Odbc.OdbcCommand>개체입니다.</xref:System.Data.Odbc.OdbcCommand>       UpdateCommand 설정 하지 않으면, 기본 키 정보에 존재 하는 경우에 업데이트 작업 중의 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder>UpdateCommand를 자동으로 생성 하는 클래스 및 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet>데이터 원본에.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.DataSet> 이 작업을 수행 하려면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 속성</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 설정 생성 논리는 또한 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보 필요 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 행을 반환 하는이 명령 실행 하는 경우 이러한 행으로 병합 될 수 있습니다는 <xref:System.Data.DataSet>설정 하는 방법에 따라는 <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>의 속성은 <xref:System.Data.Odbc.OdbcCommand>개체입니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 업데이트 작업 중에 수정 된 행에 해당 하는 데이터 원본에서 레코드를 업데이트 하는 데 사용 된 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
- uid: System.Data.Odbc.OdbcRowUpdatedEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatedEventHandler
  nameWithType: OdbcRowUpdatedEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatedEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
- uid: System.Data.Odbc.OdbcRowUpdatingEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatingEventHandler
  nameWithType: OdbcRowUpdatingEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatingEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OdbcDataAdapter.OnRowUpdated
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OdbcDataAdapter.OnRowUpdating
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
