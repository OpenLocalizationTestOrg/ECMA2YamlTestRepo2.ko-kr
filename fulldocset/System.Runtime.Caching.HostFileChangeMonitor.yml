### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "디렉터리 및 파일 경로 모니터링 하 고 모니터링 되는 항목의 변경 내용 캐시에 알립니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "HostFileChangeMonitor 클래스의 구체적인 구현인는 <xref:System.Runtime.Caching.FileChangeMonitor>유형.</xref:System.Runtime.Caching.FileChangeMonitor> 이 클래스는 봉인, 따라서 확장할 수 없습니다. 이 클래스는 기존 캐시 구현을 사용 하 고 파일 및 디렉터리의 변경 사항 모니터링 하려는 경우 유용 합니다.       각 지정 된 파일 또는 디렉터리 경로 대 한 HostFileChangeMonitor 클래스를 트리거하는 변경 알림을 다음 변경 사항 중 하나가 발생:-모니터링 되는 파일 또는 디렉터리 변경의 이름입니다.      -지정 된 파일 또는 디렉터리 모니터를 만들었지만 나중에 만들어진 시간에 존재 하지 않습니다. 즉, 파일 또는 디렉터리를 모니터링된 하는 항목의 범위에 만들어졌습니다.      -모니터링 되는 변경 된 파일의 크기입니다.      -모니터링 되는 파일의 내용을 변경 하거나 모니터링 되는 디렉터리의 내용을 변경 합니다.      파일 또는 디렉터리의 액세스 제어 목록 (ACL)-변경 되었습니다.      -모니터링 되는 파일 또는 디렉터리 삭제 되었습니다.       동시에 너무 많은 변경 사항이 발생할 모니터링 되는 파일 또는 디렉터리에 대 한 특정 변경 내용 추적할 HostFileChangeMonitor 인스턴스 수 없게 됩니다. 이 시나리오에서는 HostFileChangeMonitor 클래스 변경 알림을 트리거합니다. 이 시나리오는 HostFileChangeMonitor 인스턴스는 디렉터리를 모니터링 하 고 짧은 기간 동안 디렉터리 구조체의 범위에서 많은 변경이 발생 하는 경우 발생할 가능성이 높습니다.       HostFileChangeMonitor 클래스의 목적은 모니터링 대상된 파일 및 디렉터리의 집합에서 변경 된 내용이 신호에 이기 때문에 중요 한 특정 변경에 대 한 세부 정보 캡처되지 않는 간주 되지 않습니다. HostFileChangeMonitor 클래스의 목적은 캐시 항목 (또는 항목)가 제거 될 수 있도록 상태 알림 변경 제공 하는 것입니다. HostFileChangeMonitor 클래스 변경 내용을 정확 하 게 나타내지 않습니다 때문에 내부 변경 내용 추적 오버플로 관련이 없습니다.       HostFileChangeMonitor 인스턴스에 대해 경로를 제공 하는 경우 디렉터리와 파일 경로 디렉터리 또는 파일 전체 경로 여야 합니다. 상대 경로 및 경로에서 와일드 카드 문자 허용 되지 않습니다.       ASP.NET 응용 프로그램에서 HostFileChangeMonitor 클래스를 사용할 경우 모니터링된 항목에 대 한 액세스에 사용 되는 Windows id는 ASP.NET 응용 프로그램에 대 한 응용 프로그램 id가입니다. 즉, 응용 프로그램 id는 다음 중 하나로 설정 됩니다.-프로세스 id입니다.      -구성 된 응용 프로그램 id입니다.      -UNC 자격 증명 UNC 공유에서 응용 프로그램이 실행 중인 경우.       HostFileChangeMonitor 클래스는 ASP.NET 이외의 응용 프로그램에 사용 된 경우는 <xref:System.IO.FileSystemWatcher>클래스 파일을 모니터링 하는 데 내부적으로 사용 됩니다.</xref:System.IO.FileSystemWatcher> 결과적으로, 모든 액세스 제어 목록 (ACL) 모니터링 되는 파일 또는 디렉터리에 적용 되는 현재 스레드의 Windows id에 적용 됩니다.      > [!NOTE] > 호출자에 게 적절 한 수준의 코드 액세스 보안 (CA) 권한이 있어야 하며 모든 모니터링 되는 디렉터리 및 경로에 대 한 NTFS 권한이 있어야 합니다."
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> 클래스입니다."
  remarks: "HostFileChangeMonitor 생성자에 대 한 호출에 대 한 null이 아닌 값을 제공 해야 합니다는 `filePaths` 매개 변수입니다. 여기에 최소한 생성자에 전달 되는 다음 해당 경로 대 한 모니터링을 초기화 하는 경로의 컬렉션을 확인 합니다.      > [!NOTE] > 생성자의 경로 이름 문자열 유효성 검사만 수행 합니다. 경로 정식화 하거나 경로가 있는지 유효성을 검사 하지 않습니다."
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "하나 이상의 디렉터리 경로 또는 모니터링할 파일 경로 포함 하는 목록입니다."
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>0 개 항목이 포함 됩니다.       -또는-에서 경로 <code>filePaths</code> 목록은 다음과 같이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "디렉터리 및 파일 경로에 전달 된 컬렉션을 가져옵니다는 &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt; 생성자입니다."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "컬렉션 디렉터리 및 파일 경로입니다."
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "모니터링 되는 파일 또는 경로의 마지막으로 쓴 시간을 나타내는 읽기 전용 값을 가져옵니다."
  remarks: "여러 파일 또는 경로 파일 변경 모니터는 모니터링 하는 경우이 속성의 모든 파일 및 경로 집합에 가장 최근의 쓰기 시간을 반환 합니다."
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "마지막으로 쓴 시간 모니터링 되는 파일 또는 경로입니다."
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "에 대 한 식별자를 가져옵니다는 <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> 모니터링 되는 디렉터리 및 파일 경로 집합을 기반으로 하는 인스턴스."
  remarks: "UniqueId 속성 값을 구성 하는 문자열은 다음 부분으로 생성 됩니다:-파일 또는 디렉터리 경로입니다.      -가장 최근의 쓰기 시간 UTC 시간으로 틱 수로 측정 되지만&16; 진수 문자열로 표시 합니다.      16 진수 문자열로 표시-파일 크기입니다.       파일 변경 모니터는 경로가 여러 개를 모니터링 하는 경우이 속성에서 반환 되는 정보는 모든 디렉터리와 파일 경로 대 한 단일 문자열에 연결 됩니다."
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "식별자는 변경 모니터입니다."
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
