### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HierarchicalDataSourceView
  id: HierarchicalDataSourceView
  children:
  - System.Web.UI.HierarchicalDataSourceView.#ctor
  - System.Web.UI.HierarchicalDataSourceView.Select
  langs:
  - csharp
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
  type: Class
  summary: "노드 또는 계층적 데이터 구조에서 노드 컬렉션에서 데이터 뷰를 나타냅니다는 <xref href=&quot;System.Web.UI.HierarchicalDataSourceControl&quot;> </xref> 제어 합니다."
  remarks: "ASP.NET은 데이터에 바인딩하고 일관성 있게에서 제공 하는 웹 서버 컨트롤 수 있도록 하는 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤을 이라고 하 고 해당 바인딩을 지는 클래스 데이터 소스 컨트롤 이라고 합니다. 합니다. 데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다. 데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.       추상 <xref:System.Web.UI.HierarchicalDataSourceControl>클래스</xref:System.Web.UI.HierarchicalDataSourceControl> 에서 파생 되는 계층적 데이터를 나타내는 데이터 소스 컨트롤 데이터 소스 컨트롤의 데이터 소스 제어 개체와 연결된 된 뷰의 데이터 원본 뷰 개체도 표시 되는 기본 데이터의 조합으로 생각할 수 있습니다. 계층적 데이터 소스 컨트롤 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층적 데이터 원본 뷰를 지원 합니다. 데이터 원본 뷰 이름이 지정 되지 않은, <xref:System.Web.UI.DataSourceView>관련는 <xref:System.Web.UI.DataSourceControl>컨트롤과 같지만 고유한 계층적 경로로 식별</xref:System.Web.UI.DataSourceControl> 된 개체</xref:System.Web.UI.DataSourceView> 와 마찬가지로       데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다. 모든 데이터 원본 뷰 HierarchicalDataSourceView를 포함 하 여 개체를 사용 하 여 기본 데이터 원본에서 데이터를 검색할 지원는 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>으로 데이터의 계층적 목록을 검색 하는 메서드는 <xref:System.Web.UI.IHierarchicalEnumerable>개체입니다.</xref:System.Web.UI.IHierarchicalEnumerable> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 모든 데이터 원본 뷰 개체는 기본 기능 집합을,와 같은 작업을 포함 하는 필요에 따라 지원 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, 정렬 및.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A> 데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 볼를 검색할 수는 <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>메서드와 디자인 타임 또는 런타임 시 뷰를 쿼리 합니다.</xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> HierarchicalDataSourceView 현재 지원 하지 않는 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>또는 <xref:System.Web.UI.DataSourceView.Delete%2A>작업.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A>"
  example:
  - "The following code example demonstrates how to derive a class from the HierarchicalDataSourceView class to retrieve data from hierarchical data storage, in this case a file system. The `FileSystemDataSourceView` class is a strongly typed HierarchicalDataSourceView instance that enables hierarchical Web server controls such as the <xref:System.Web.UI.WebControls.TreeView> control to bind to a `FileSystemDataSource` control and display file system information. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/t-system.web.ui.hierarch_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/t-system.web.ui.hierarch_0_1.vb)]"
  syntax:
    content: public abstract class HierarchicalDataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  id: '#ctor'
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref> 클래스입니다."
  syntax:
    content: protected HierarchicalDataSourceView ();
    parameters: []
  overload: System.Web.UI.HierarchicalDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  id: Select
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "보기에 있는 모든 데이터 항목의 목록을 가져옵니다."
  remarks: "Select 메서드는 반환 된 <xref:System.Web.UI.IHierarchicalEnumerable>현재 보기의 데이터 항목의 컬렉션입니다.</xref:System.Web.UI.IHierarchicalEnumerable> 호출할 수 있습니다는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>가져올 메서드를 한 <xref:System.Collections.IEnumerator>개체 및 데이터 항목의 컬렉션을 반복 합니다.</xref:System.Collections.IEnumerator> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to override the Select method in a class that derives from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve hierarchical <xref:System.IO.FileSystemInfo> data from a file system. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor of the view object might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.hierarch_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.hierarch_1_1.vb)]"
  syntax:
    content: public abstract System.Web.UI.IHierarchicalEnumerable Select ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchicalEnumerable
      description: "<xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> 데이터 항목의 컬렉션입니다."
  overload: System.Web.UI.HierarchicalDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
- uid: System.Web.UI.IHierarchicalEnumerable
  parent: System.Web.UI
  isExternal: false
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView
- uid: System.Web.UI.HierarchicalDataSourceView.Select*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select
  nameWithType: HierarchicalDataSourceView.Select
