### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcTransaction
  id: OdbcTransaction
  children:
  - System.Data.Odbc.OdbcTransaction.Commit
  - System.Data.Odbc.OdbcTransaction.Connection
  - System.Data.Odbc.OdbcTransaction.DbConnection
  - System.Data.Odbc.OdbcTransaction.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcTransaction.IsolationLevel
  - System.Data.Odbc.OdbcTransaction.Rollback
  langs:
  - csharp
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
  type: Class
  summary: "데이터 원본에서 만들어지는 SQL 트랜잭션을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "응용 프로그램 호출 하 여 OdbcTransaction 개체를 만듭니다 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>에 <xref:System.Data.Odbc.OdbcConnection>개체입니다.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> (예를 들어, 커밋 또는 트랜잭션을 중단) 트랜잭션과 관련 된 모든 후속 작업 OdbcTransaction 개체에서 수행 됩니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an OdbcTransaction. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction#1](~/add/codesnippet/csharp/t-system.data.odbc.odbct_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbct_1.vb)]"
  syntax:
    content: 'public sealed class OdbcTransaction : System.Data.Common.DbTransaction'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbTransaction
  implements: []
  inheritedMembers:
  - System.Data.Common.DbTransaction.Dispose
  - System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.Commit
  id: Commit
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: OdbcTransaction.Commit()
  fullName: System.Data.Odbc.OdbcTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "데이터베이스 트랜잭션을 커밋합니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, Commit, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbct_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbct_1_1.vb)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Data.Odbc.OdbcTransaction.Commit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "트랜잭션을 커밋하는 동안 오류가 발생 했습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "트랜잭션이 이미 커밋 또는 롤백됩니다.       -또는-연결이 끊어졌습니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.Connection
  id: Connection
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: OdbcTransaction.Connection
  fullName: System.Data.Odbc.OdbcTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "가져옵니다는 <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> 에 트랜잭션과 관련 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 트랜잭션이 더 이상 유효한 경우."
  remarks: "단일 응용 프로그램에는 각각&0; 개 이상의 트랜잭션을 사용 하 여 여러 데이터베이스 연결을 있을 수 있습니다. 이 속성을 사용 하면 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> 만든 특정 트랜잭션과 관련 된 연결 개체를 확인할 수 있습니다."
  syntax:
    content: public System.Data.Odbc.OdbcConnection Connection { get; }
    return:
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> 트랜잭션과 관련 된 개체입니다."
  overload: System.Data.Odbc.OdbcTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.DbConnection
  id: DbConnection
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: DbConnection
  nameWithType: OdbcTransaction.DbConnection
  fullName: System.Data.Odbc.OdbcTransaction.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcTransaction.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcTransaction.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: OdbcTransaction.IsolationLevel
  fullName: System.Data.Odbc.OdbcTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "지정 된 <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> 이 트랜잭션에 대 한 합니다."
  remarks: "병렬 트랜잭션은 지원 되지 않습니다. 따라서는 <xref:System.Data.IsolationLevel>전체 트랜잭션에 적용 됩니다.</xref:System.Data.IsolationLevel>"
  syntax:
    content: public override System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "<xref href=&quot;System.Data.IsolationLevel&quot;> </xref> 이 트랜잭션에 대 한 합니다. 기본값은 기본 ODBC 드라이버에 따라 달라 집니다."
  overload: System.Data.Odbc.OdbcTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcTransaction.Rollback
  id: Rollback
  parent: System.Data.Odbc.OdbcTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: OdbcTransaction.Rollback()
  fullName: System.Data.Odbc.OdbcTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "보류 상태에서 트랜잭션을 롤백합니다."
  remarks: "트랜잭션을 롤백할 수 보류 중 상태 에서만에서 (후 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>호출 하기 전에 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>라고).</xref:System.Data.Odbc.OdbcTransaction.Commit%2A> </xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> 다시 이벤트 하기 전에 삭제 되 고 트랜잭션이 롤백됩니다 `Commit` 또는 `Rollback` 라고 합니다."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and Rollback methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbct_0_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbct_0_1.vb)]"
  syntax:
    content: public override void Rollback ();
    parameters: []
  overload: System.Data.Odbc.OdbcTransaction.Rollback*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "트랜잭션을 커밋하는 동안 오류가 발생 했습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "트랜잭션이 이미 커밋 또는 롤백됩니다.       -또는-연결이 끊어졌습니다."
  platform:
  - net462
references:
- uid: System.Data.Common.DbTransaction
  isExternal: false
  name: System.Data.Common.DbTransaction
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcTransaction.Commit
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Commit()
  nameWithType: OdbcTransaction.Commit()
  fullName: System.Data.Odbc.OdbcTransaction.Commit()
- uid: System.Data.Odbc.OdbcTransaction.Connection
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Connection
  nameWithType: OdbcTransaction.Connection
  fullName: System.Data.Odbc.OdbcTransaction.Connection
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcTransaction.DbConnection
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: DbConnection
  nameWithType: OdbcTransaction.DbConnection
  fullName: System.Data.Odbc.OdbcTransaction.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Odbc.OdbcTransaction.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcTransaction.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcTransaction.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcTransaction.IsolationLevel
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: OdbcTransaction.IsolationLevel
  fullName: System.Data.Odbc.OdbcTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Odbc.OdbcTransaction.Rollback
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Rollback()
  nameWithType: OdbcTransaction.Rollback()
  fullName: System.Data.Odbc.OdbcTransaction.Rollback()
- uid: System.Data.Odbc.OdbcTransaction.Commit*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Commit
  nameWithType: OdbcTransaction.Commit
- uid: System.Data.Odbc.OdbcTransaction.Connection*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Connection
  nameWithType: OdbcTransaction.Connection
- uid: System.Data.Odbc.OdbcTransaction.DbConnection*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: DbConnection
  nameWithType: OdbcTransaction.DbConnection
- uid: System.Data.Odbc.OdbcTransaction.Dispose*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Dispose
  nameWithType: OdbcTransaction.Dispose
- uid: System.Data.Odbc.OdbcTransaction.IsolationLevel*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: OdbcTransaction.IsolationLevel
- uid: System.Data.Odbc.OdbcTransaction.Rollback*
  parent: System.Data.Odbc.OdbcTransaction
  isExternal: false
  name: Rollback
  nameWithType: OdbcTransaction.Rollback
