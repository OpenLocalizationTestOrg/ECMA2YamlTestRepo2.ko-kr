### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.UnmanagedMarshal
  id: UnmanagedMarshal
  children:
  - System.Reflection.Emit.UnmanagedMarshal.BaseType
  - System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)
  - System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)
  - System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)
  - System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)
  - System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)
  - System.Reflection.Emit.UnmanagedMarshal.ElementCount
  - System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType
  - System.Reflection.Emit.UnmanagedMarshal.IIDGuid
  langs:
  - csharp
  name: UnmanagedMarshal
  nameWithType: UnmanagedMarshal
  fullName: System.Reflection.Emit.UnmanagedMarshal
  type: Class
  summary: "비관리 코드에 관리 되는 필드를 마샬링하는 방법을 설명 하는 클래스를 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "코드 예제에서는이 사용 되지 않는 형식에 대 한 해결 방법을 보여 줍니다.       마샬링 이므로 프로세스 압축 하 고 패키지 매개 변수를 원격 프로시저 호출에서 발생할 수 있습니다. 마샬링을 하는 동안 필드 형식이 관리 되는 형식의 해당 하는 관리 되지 않는 형식은 형식과 다른 경우에 형식 변환을 거쳐야 할 수 있습니다. 예를 들어 하려는 경우도 마샬링하는 `String` 와 관리 되지 않는 BSTR 형식입니다. 일부 형식 변환은 런타임에 의해 자동으로 처리 됩니다. 기본 동작을 재정의 하려면 사용 해야 합니다는 `UnmanagedMarshal` 형식 변환을 정의 하는 클래스입니다."
  example:
  - "The following code example shows replacement code for the obsolete UnmanagedMarshal type. The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`. The type has a method named `Test`, with one parameter of type <xref:System.String>. The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> to the parameter.  \n  \n You can use the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.  \n  \n [!code-cs[UnmanagedMarshalObsolete#1](~/add/codesnippet/csharp/t-system.reflection.emit_1.cs)]\n [!code-cpp[UnmanagedMarshalObsolete#1](~/add/codesnippet/cpp/t-system.reflection.emit_1.cpp)]\n [!code-vb[UnmanagedMarshalObsolete#1](~/add/codesnippet/visualbasic/t-system.reflection.emit_1.vb)]"
  syntax:
    content: >-
      [System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UnmanagedMarshal
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.BaseType
  id: BaseType
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: BaseType
  nameWithType: UnmanagedMarshal.BaseType
  fullName: System.Reflection.Emit.UnmanagedMarshal.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "관리 되지 않는 기본 형식을 가져옵니다. 이 속성은 읽기 전용입니다."
  syntax:
    content: public System.Runtime.InteropServices.UnmanagedType BaseType { get; }
    return:
      type: System.Runtime.InteropServices.UnmanagedType
      description: "<xref uid=&quot;langword_csharp_UnmanagedType&quot; name=&quot;UnmanagedType&quot; href=&quot;&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.BaseType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관리 되지 않는 형식이 아닌는 <xref uid=&quot;langword_csharp_LPArray&quot; name=&quot;LPArray&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_SafeArray&quot; name=&quot;SafeArray&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)
  id: DefineByValArray(System.Int32)
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: DefineByValArray(Int32)
  nameWithType: UnmanagedMarshal.DefineByValArray(Int32)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "고정 길이 배열을 비관리 코드로 마샬링하 (ByValArray)을 지정 합니다."
  remarks: "`DefineByValArray` 메서드는 간단한 네이티브 마샬링 없습니다.       이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 구조체만 만들 수 있습니다.       배열 마샬링 정수 매개 변수를 마샬링 보다 더 복잡 한 과정이 되었습니다. 배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다."
  syntax:
    content: public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);
    parameters:
    - id: elemCount
      type: System.Int32
      description: "고정 길이 배열에 있는 요소의 수입니다."
    return:
      type: System.Reflection.Emit.UnmanagedMarshal
      description: "<xref href=&quot;System.Reflection.Emit.UnmanagedMarshal&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는 단순한 네이티브 형식이 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)
  id: DefineByValTStr(System.Int32)
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: DefineByValTStr(Int32)
  nameWithType: UnmanagedMarshal.DefineByValTStr(Int32)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "고정 된 배열 버퍼 (ByValTStr)를 비관리 코드로 마샬링하는 문자열을 지정 합니다."
  remarks: "`DefineByValStr` 메서드는 간단한 네이티브 마샬링 없습니다.       이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 구조체만 만들 수 있습니다.       배열 마샬링 정수 매개 변수를 마샬링 보다 더 복잡 한 과정이 되었습니다. 배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다."
  syntax:
    content: public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);
    parameters:
    - id: elemCount
      type: System.Int32
      description: "고정 된 배열 버퍼에 있는 요소의 수입니다."
    return:
      type: System.Reflection.Emit.UnmanagedMarshal
      description: "<xref href=&quot;System.Reflection.Emit.UnmanagedMarshal&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는 단순한 네이티브 형식이 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)
  id: DefineLPArray(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: DefineLPArray(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineLPArray(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(UnmanagedType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "지정 된 <xref uid=&quot;langword_csharp_LPArray&quot; name=&quot;LPArray&quot; href=&quot;&quot;> </xref> 비관리 코드로 마샬링합니다. 길이 <xref uid=&quot;langword_csharp_LPArray&quot; name=&quot;LPArray&quot; href=&quot;&quot;> </xref> 실제 마샬링된 배열 크기에 따라 런타임에 결정 됩니다."
  remarks: "`DefineLPArray` 메서드는 간단한 네이티브 마샬링 없습니다.       이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 구조체만 만들 수 있습니다.       배열 마샬링 정수 매개 변수를 마샬링 보다 더 복잡 한 과정이 되었습니다. 배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다."
  syntax:
    content: public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);
    parameters:
    - id: elemType
      type: System.Runtime.InteropServices.UnmanagedType
      description: "배열을 마샬링할는 관리 되지 않는 형식입니다."
    return:
      type: System.Reflection.Emit.UnmanagedMarshal
      description: "<xref href=&quot;System.Reflection.Emit.UnmanagedMarshal&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는 단순한 네이티브 형식이 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)
  id: DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: DefineSafeArray(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineSafeArray(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(UnmanagedType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "지정 된 <xref uid=&quot;langword_csharp_SafeArray&quot; name=&quot;SafeArray&quot; href=&quot;&quot;> </xref> 비관리 코드로 마샬링합니다."
  remarks: "`DefineSafeArray` 메서드는 간단한 네이티브 마샬링 없습니다.       이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 구조체만 만들 수 있습니다.       배열 마샬링 정수 매개 변수를 마샬링 보다 더 복잡 한 과정이 되었습니다. 배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다."
  syntax:
    content: public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);
    parameters:
    - id: elemType
      type: System.Runtime.InteropServices.UnmanagedType
      description: "기본 형식 또는 <xref uid=&quot;langword_csharp_UnmanagedType&quot; name=&quot;UnmanagedType&quot; href=&quot;&quot;> </xref> 배열의 각 요소입니다."
    return:
      type: System.Reflection.Emit.UnmanagedMarshal
      description: "<xref href=&quot;System.Reflection.Emit.UnmanagedMarshal&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는 단순한 네이티브 형식이 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)
  id: DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: DefineUnmanagedMarshal(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineUnmanagedMarshal(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(UnmanagedType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "관리 되지 않는 코드로 마샬링할 수를 지정 된 형식을 지정 합니다."
  remarks: "<xref:System.Runtime.InteropServices.UnmanagedType>이 메서드에 전달 되는 간단한 네이티브 형식 이어야 합니다.</xref:System.Runtime.InteropServices.UnmanagedType> 사용할 수 있습니다. 다음 값이 없어서: <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>, <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>, <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>, <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>, 또는 <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>.</xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>       이 메서드를 사용 하 여 관리 되지 않는 마샬링 구조체만 만들 수 있습니다."
  syntax:
    content: public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);
    parameters:
    - id: unmanagedType
      type: System.Runtime.InteropServices.UnmanagedType
      description: "관리 되지 않는 형식 종류를 마샬링할 수입니다."
    return:
      type: System.Reflection.Emit.UnmanagedMarshal
      description: "<xref href=&quot;System.Reflection.Emit.UnmanagedMarshal&quot;> </xref> 개체입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는 단순한 네이티브 형식이 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.ElementCount
  id: ElementCount
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: ElementCount
  nameWithType: UnmanagedMarshal.ElementCount
  fullName: System.Reflection.Emit.UnmanagedMarshal.ElementCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "개의 요소를 가져옵니다. 이 속성은 읽기 전용입니다."
  remarks: "한 `ElementCount` 경우에는 `NativeTypeFixedArray`합니다."
  syntax:
    content: public int ElementCount { get; }
    return:
      type: System.Int32
      description: "요소 수를 나타내는 정수입니다."
  overload: System.Reflection.Emit.UnmanagedMarshal.ElementCount*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수가 관리 되지 않는 요소 수가 아닙니다."
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType
  id: GetUnmanagedType
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: GetUnmanagedType
  nameWithType: UnmanagedMarshal.GetUnmanagedType
  fullName: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "관리 되지 않는 유형을 나타냅니다. 이 속성은 읽기 전용입니다."
  remarks: "`GetUnmanagedType` 속성은 네이티브 형식에 대 한 접근자 함수입니다."
  syntax:
    content: public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }
    return:
      type: System.Runtime.InteropServices.UnmanagedType
      description: "<xref:System.Runtime.InteropServices.UnmanagedType>개체입니다.</xref:System.Runtime.InteropServices.UnmanagedType>"
  overload: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.UnmanagedMarshal.IIDGuid
  id: IIDGuid
  parent: System.Reflection.Emit.UnmanagedMarshal
  langs:
  - csharp
  name: IIDGuid
  nameWithType: UnmanagedMarshal.IIDGuid
  fullName: System.Reflection.Emit.UnmanagedMarshal.IIDGuid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "GUID를 가져옵니다. 이 속성은 읽기 전용입니다."
  remarks: "이 속성은 항상 Guid.Empty를 반환 합니다. 이 속성은 이후 릴리스에서 제거 될 수 있습니다."
  syntax:
    content: public Guid IIDGuid { get; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid>개체입니다.</xref:System.Guid>"
  overload: System.Reflection.Emit.UnmanagedMarshal.IIDGuid*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수가 사용자 지정 마샬러 아닙니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Reflection.Emit.UnmanagedMarshal.BaseType
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: BaseType
  nameWithType: UnmanagedMarshal.BaseType
  fullName: System.Reflection.Emit.UnmanagedMarshal.BaseType
- uid: System.Runtime.InteropServices.UnmanagedType
  parent: System.Runtime.InteropServices
  isExternal: true
  name: UnmanagedType
  nameWithType: UnmanagedType
  fullName: System.Runtime.InteropServices.UnmanagedType
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineByValArray(Int32)
  nameWithType: UnmanagedMarshal.DefineByValArray(Int32)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(Int32)
- uid: System.Reflection.Emit.UnmanagedMarshal
  parent: System.Reflection.Emit
  isExternal: false
  name: UnmanagedMarshal
  nameWithType: UnmanagedMarshal
  fullName: System.Reflection.Emit.UnmanagedMarshal
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineByValTStr(Int32)
  nameWithType: UnmanagedMarshal.DefineByValTStr(Int32)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(Int32)
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineLPArray(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineLPArray(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(UnmanagedType)
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineSafeArray(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineSafeArray(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(UnmanagedType)
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineUnmanagedMarshal(UnmanagedType)
  nameWithType: UnmanagedMarshal.DefineUnmanagedMarshal(UnmanagedType)
  fullName: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(UnmanagedType)
- uid: System.Reflection.Emit.UnmanagedMarshal.ElementCount
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: ElementCount
  nameWithType: UnmanagedMarshal.ElementCount
  fullName: System.Reflection.Emit.UnmanagedMarshal.ElementCount
- uid: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: GetUnmanagedType
  nameWithType: UnmanagedMarshal.GetUnmanagedType
  fullName: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType
- uid: System.Reflection.Emit.UnmanagedMarshal.IIDGuid
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: IIDGuid
  nameWithType: UnmanagedMarshal.IIDGuid
  fullName: System.Reflection.Emit.UnmanagedMarshal.IIDGuid
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Emit.UnmanagedMarshal.BaseType*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: BaseType
  nameWithType: UnmanagedMarshal.BaseType
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValArray*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineByValArray
  nameWithType: UnmanagedMarshal.DefineByValArray
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineByValTStr
  nameWithType: UnmanagedMarshal.DefineByValTStr
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineLPArray*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineLPArray
  nameWithType: UnmanagedMarshal.DefineLPArray
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineSafeArray
  nameWithType: UnmanagedMarshal.DefineSafeArray
- uid: System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: DefineUnmanagedMarshal
  nameWithType: UnmanagedMarshal.DefineUnmanagedMarshal
- uid: System.Reflection.Emit.UnmanagedMarshal.ElementCount*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: ElementCount
  nameWithType: UnmanagedMarshal.ElementCount
- uid: System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: GetUnmanagedType
  nameWithType: UnmanagedMarshal.GetUnmanagedType
- uid: System.Reflection.Emit.UnmanagedMarshal.IIDGuid*
  parent: System.Reflection.Emit.UnmanagedMarshal
  isExternal: false
  name: IIDGuid
  nameWithType: UnmanagedMarshal.IIDGuid
