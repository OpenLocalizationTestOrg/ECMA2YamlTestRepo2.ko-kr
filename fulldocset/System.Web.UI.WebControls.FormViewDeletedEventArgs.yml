### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  id: FormViewDeletedEventArgs
  children:
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  - System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  langs:
  - csharp
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView>발생는 <xref:System.Web.UI.WebControls.FormView.ItemDeleted>이벤트 삭제 단추 (단추 해당 `CommandName` 속성이 &quot;Delete&quot;로 설정) 컨트롤 내에서 클릭 하면 후는 <xref:System.Web.UI.WebControls.FormView>레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       FormViewDeletedEventArgs 개체는 영향을 받는 레코드 수를 확인할 수 있는 이벤트 처리 메서드 및 발생할 수 있는 모든 예외를 전달 됩니다. 삭제 작업의 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>속성 예외가 발생 한 것인지 확인 합니다.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>      > [!NOTE] > 삭제 작업 중에 예외가 발생 하는 경우 및 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>속성이로 설정 되어 `false`, <xref:System.Web.UI.WebControls.FormView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>       키 필드 및 삭제 된 레코드의 키가 아닌 필드의 이름/값 쌍에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>및 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>속성을 각각.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following example demonstrates how to use the FormViewDeletedEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ItemDeleted> event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_57_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_57_1.aspx)]"
  syntax:
    content: 'public class FormViewDeletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  id: '#ctor(System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: FormViewDeletedEventArgs(Int32,Exception)
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>클래스</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>안내 하십시오.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>| 값은 `affectedRows` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>| 에 포함 된 <xref:System.Exception?displayProperty=fullName>개체는 `e` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>| 로 초기화 `false`. |      > [!NOTE] > 이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> </xref:System.Exception?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>"
  syntax:
    content: public FormViewDeletedEventArgs (int affectedRows, Exception e);
    parameters:
    - id: affectedRows
      type: System.Int32
      description: "삭제 작업에 영향을 받는 행의 수입니다."
    - id: e
      type: System.Exception
      description: "<xref:System.Exception>삭제 작업을 수행할 때 발생 하는 예외를 나타내는입니다.</xref:System.Exception> 예외가 발생 하는 경우 사용 하 여 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 매개 변수에 대 한 합니다."
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업에 영향을 받은 행 수를 가져옵니다."
  remarks: "받는 속성을 사용 하 여 삭제 작업에 영향을 받는 레코드 수를 결정 합니다. 이 속성은 일반적으로 레코드의 정확한 수는 다음과 같은 상황에서 삭제 되었는지 확인 하는 데 사용 됩니다.-하나의 레코드만 삭제 되었는지 확인 합니다. 잘못 작성 된 delete 문을 여러 레코드를 삭제할 수 있는 경우도 있습니다.      -예외 발생 시 키 지 않는 삭제 작업 중 오류가 발생 하면 레코드가 삭제 되었는지 확인 하십시오.      -데이터 소스 제어를 지 원하는 경우 충돌 검색 (낙관적 동시성)와 같은 레코드 삭제 되었는지 확인는 <xref:System.Web.UI.WebControls.SqlDataSource>및 <xref:System.Web.UI.WebControls.ObjectDataSource>제어에 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>속성이로 설정 된 `ConflictOptions.CompareAllValues` 열거형 값입니다.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> 이 설정에 따라 다른 사용자가 동시에 수정 된 레코드를 삭제 될 수 있습니다."
  example:
  - "The following example demonstrates how to use the AffectedRows property to verify that a record was deleted during the delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_968_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_968_1.aspx)]"
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "삭제 작업에 영향을 받는 행의 수입니다."
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "(있는 경우) 예외를 가져옵니다 삭제 작업 동안 예외가 발생 합니다."
  remarks: "(있는 경우) 예외를 확인 하려면 예외 속성을 사용 하 여 삭제 작업 동안 예외가 발생 합니다. 이 속성을 반환 하는 경우 예외가 발생 된, `null`합니다.      > [!NOTE] > 예외가 발생 했습니다. 이벤트 처리기에서 예외를 처리 하려는 설정 해야는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>속성을 `true`, 그렇지 않으면는 <xref:System.Web.UI.WebControls.FormView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>"
  example:
  - "The following example demonstrates how to use the Exception property to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1130_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1130_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>삭제 작업 중에 발생 하는 예외를 나타내는입니다.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업 중에 발생 하는 예외 처리 되었는지 여부를 이벤트 처리기를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "삭제 작업 동안 예외가 발생 한 경우, ExceptionHandled 속성 처리 되었는지 나타내는 예외 이벤트에 처리기를 사용 합니다. 이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 다시 throw 되지 않습니다. 이 속성은로 설정 하는 경우 `false`, <xref:System.Web.UI.WebControls.FormView>제어 예외를 다시 throw 합니다.</xref:System.Web.UI.WebControls.FormView> 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>"
  example:
  - "The following example demonstrates how to use the ExceptionHandled property to indicate that the exception was handled in the event handler.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_310_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_310_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>예외 이벤트에 처리기; 처리 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  id: Keys
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삭제 된 레코드에 대 한 키 필드 이름/값 쌍의 정렬된 된 사전을 가져옵니다."
  remarks: "키 속성에 나열 된 키 필드의 값이 포함 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성의는 <xref:System.Web.UI.WebControls.FormView>컨트롤.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 키 필드의 값에 액세스 하는 키 속성을 사용 하 여 (에 지정 된 대로 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성) 삭제 된 레코드에 대 한.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 예를 들어, 삭제 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.      > [!NOTE] >이 속성에 지정 된 키 필드에 포함 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 키가 아닌 필드에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>       키 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>삭제 된 레코드의 키 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>키 필드 값에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 인덱서를 사용 하 여 장점은 키 필드 값이 직접 반환 된다는 것입니다. 데이터 소스 컨트롤의 필드 순서를 사용 하는 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 키 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>"
  example:
  - "The following example demonstrates how to use the Keys property to access the values of the key fields for a deleted record.  \n  \n [!code-vb[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1272_1.aspx)]\n [!code-cs[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1272_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Keys { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> 삭제 된 레코드에 대 한 키 필드 이름/값 쌍이 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삭제 된 레코드에 대 한 키가 아닌 필드 이름/값 쌍의 사전을 가져옵니다."
  remarks: "삭제 된 레코드에 대 한 키가 아닌 필드의 값에 액세스 하려면 값 속성을 사용 합니다. 예를 들어, 삭제 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.      > [!NOTE] >의 값 속성은 양방향 바인딩 식이 항목 템플릿에서 사용 될 경우에 채워집니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 하십시오. [데이터베이스에 바인딩](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742)합니다.       값 속성은 반환 된 <xref:System.Collections.Specialized.OrderedDictionary>구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName>인터페이스.</xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> <xref:System.Collections.Specialized.OrderedDictionary>개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=fullName>삭제 된 레코드의 키가 아닌 필드를 나타내는 개체입니다.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> </xref:System.Collections.Specialized.OrderedDictionary> 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A>의 속성은 <xref:System.Collections.Specialized.OrderedDictionary>개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>속성.</xref:System.Collections.Specialized.OrderedDictionary.Values%2A>      > [!NOTE] >를 사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary>필드 값에 액세스 하는 개체입니다.</xref:System.Collections.Specialized.OrderedDictionary> 인덱서를 사용 하 여 장점은 필드 값이 직접 반환 된다는 것입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.</xref:System.Web.UI.WebControls.AccessDataSource>       이 속성의 키 필드를 포함 되지 않았습니다 (에 지정 된 대로 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>속성)는 삭제 된 레코드에 대 한.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 키 필드에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>속성.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>"
  example:
  - "The following example demonstrates how to use the Values property to access the values of the non-key fields for a deleted record.  \n  \n [!code-vb[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_912_1.aspx)]\n [!code-cs[FormViewDeletedEventArgsKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_912_1.aspx)]"
  syntax:
    content: public System.Collections.Specialized.IOrderedDictionary Values { get; }
    return:
      type: System.Collections.Specialized.IOrderedDictionary
      description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> 삭제 된 레코드에 대 한 키가 아닌 필드 이름/값 쌍의 사전에 들어 있는입니다."
  overload: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor(System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: FormViewDeletedEventArgs(Int32,Exception)
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.FormViewDeletedEventArgs(Int32,Exception)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: FormViewDeletedEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Exception
  nameWithType: FormViewDeletedEventArgs.Exception
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: FormViewDeletedEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Keys
  nameWithType: FormViewDeletedEventArgs.Keys
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs.Values*
  parent: System.Web.UI.WebControls.FormViewDeletedEventArgs
  isExternal: false
  name: Values
  nameWithType: FormViewDeletedEventArgs.Values
