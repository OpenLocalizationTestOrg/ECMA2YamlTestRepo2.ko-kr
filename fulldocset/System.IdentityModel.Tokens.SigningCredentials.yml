### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "디지털 서명을 생성 하는 데 사용 되는 암호화 키와 보안 알고리즘을 나타냅니다."
  remarks: "SigningCredentials 클래스를 사용 하 여 서명 키, 서명 키 식별자 및에서 사용 되는 보안 알고리즘을 지정 하려면 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion> 에 대 한 디지털 서명을 생성 하 디지털 서명 정보를 설정 하려면 <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> <xref:System.IdentityModel.Tokens.SamlAssertion>클래스</xref:System.IdentityModel.Tokens.SamlAssertion> 의 속성</xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> 설정"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> 클래스입니다."
  remarks: "사용 하 여는 <xref:System.IdentityModel.Tokens.SecurityAlgorithms>지정 하는 클래스는 `signatureAlgorithm` 및 `digestAlgorithm` 매개 변수.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> <xref:System.IdentityModel.Tokens.SecurityAlgorithms>클래스 집합 암호화 알고리즘을 나타내는 정적 상수 문자열을 포함 합니다.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 없는 멤버는 `Signature` 접미사를 지정 하려면 사용할 수 있습니다는 `signatureAlgoritm` 있는 멤버 및 매개 변수는 `Digest` 접미사를 지정 하려면 사용할 수 있습니다는 `digestAlgorithm` 매개 변수입니다."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 디지털 서명을 생성 하는 데 사용 되는 암호화 키가 들어 있는입니다."
    - id: signatureAlgorithm
      type: System.String
      description: "디지털 서명을 생성 하는 데 사용 되는 암호화 알고리즘을 나타내는 URI입니다."
    - id: digestAlgorithm
      type: System.String
      description: "URI를 디지털 서명 될 SOAP 메시지의 부분에 대 한 다이제스트를 계산 하는 데 사용 되는 암호화 알고리즘을 나타내는입니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> 클래스입니다."
  remarks: "사용 하 여는 <xref:System.IdentityModel.Tokens.SecurityAlgorithms>지정 하는 클래스는 `signatureAlgorithm` 및 `digestAlgorithm` 매개 변수.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> <xref:System.IdentityModel.Tokens.SecurityAlgorithms>클래스에는 암호화 알고리즘을 나타내는 정적 상수 문자열의 집합을 포함 합니다.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> 없는 멤버는 `Signature` 접미사를 지정 하려면 사용할 수 있습니다는 `signatureAlgoritm` 있는 멤버 및 매개 변수는 `Digest` 접미사를 지정 하려면 사용할 수 있습니다는 `digestAlgorithm` 매개 변수입니다."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 디지털 서명을 생성 하는 데 사용 되는 암호화 키가 들어 있는입니다."
    - id: signatureAlgorithm
      type: System.String
      description: "디지털 서명을 생성 하는 데 사용 되는 암호화 알고리즘을 나타내는 URI입니다."
    - id: digestAlgorithm
      type: System.String
      description: "URI를 디지털 서명 될 SOAP 메시지의 부분에 대 한 다이제스트를 계산 하는 데 사용 되는 암호화 알고리즘을 나타내는입니다."
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 디지털 서명을 만드는 데 사용 되는 키를 나타내는 식별자를 지정 하는 합니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "디지털 서명 될 SOAP 메시지의 부분에 대 한 다이제스트를 계산 하는 데 사용 되는 암호화 알고리즘을 가져옵니다."
  remarks: "DigestAlgorithm 속성을 설정 하려면 사용 하는 생성자 중 하나를 사용는 `digestAlgorithm` 매개 변수입니다."
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "URI를 디지털 서명 될 SOAP 메시지의 부분에 대 한 다이제스트를 계산 하는 데 사용 되는 암호화 알고리즘을 나타내는입니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "디지털 서명을 생성 하는 데 사용 되는 암호화 알고리즘을 가져옵니다."
  remarks: "Signaturealgorithm이 속성을 설정 하려면 사용 하는 생성자 중 하나를 사용는 `signatureAlgorithm` 매개 변수입니다."
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "디지털 서명을 생성 하는 데 사용 되는 암호화 알고리즘을 나타내는 URI입니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "디지털 서명을 생성 하는 데 사용 되는 암호화 키를 가져옵니다."
  remarks: "SigningKey 속성을 설정 하려면 사용 하는 생성자를 사용 하 여는 `signingKey` 매개 변수입니다."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 디지털 서명을 생성 하는 데 사용 되는 암호화 키가 들어 있는입니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "디지털 서명을 만드는 데 사용 되는 키를 나타내는 식별자를 가져옵니다."
  remarks: "SigningKeyIdentifier 속성을 설정 하려면 사용 하는 생성자를 사용 하 여는 `signingKeyIdentifier` 매개 변수입니다."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 디지털 서명을 만드는 데 사용 되는 키를 나타내는 식별자를 지정 하는 합니다."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
