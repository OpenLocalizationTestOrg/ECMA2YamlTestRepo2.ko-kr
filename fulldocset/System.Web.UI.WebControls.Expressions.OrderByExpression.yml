### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression
  id: OrderByExpression
  children:
  - System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  - System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  - System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  - System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  langs:
  - csharp
  name: OrderByExpression
  nameWithType: OrderByExpression
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression
  type: Class
  summary: "정렬 식을 적용 하는 방법을 제공는 <xref:System.Linq.IQueryable>개체입니다.</xref:System.Linq.IQueryable>"
  remarks: "OrderByExpression 클래스에서 사용 되는 <xref:System.Web.UI.WebControls.QueryExtender>컨트롤을 데이터를 오름차순 또는 내림차순으로 정렬 합니다.</xref:System.Web.UI.WebControls.QueryExtender> 정렬 하는 요소 형식에 대 한 기본 비교 연산자에 따라 수행 됩니다.       <xref:System.Web.UI.WebControls.QueryExtender>컨트롤은 다양 한 데이터를 필터링 하는 데 사용할 수 있는 옵션을 지원 합니다.</xref:System.Web.UI.WebControls.QueryExtender> 필터 옵션을 사용 하 여 데이터를 정렬할 OrderByExpression 개체를 사용할 수 있습니다.       사용 하 여 정렬 하려면 데이터 필드를 지정 된 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A>속성.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> 정렬 방향을 사용 하 여 지정 된 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>속성.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> OrderByExpression 개체 데이터 소스에 적용 된 후 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.ThenBy>다른 데이터 필드에는 후속 정렬을 수행 하는 식.</xref:System.Web.UI.WebControls.Expressions.ThenBy>"
  example:
  - "The following example shows how to search the Products table of the AdventureWorks database for products that have names that start with the string that is specified in the `SearchTextBox` text box. The OrderByExpression object sorts the data by the ListPrice data field in descending order and then by the product ID field in ascending order. The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ThenByExpressions")]

      [System.Web.UI.PersistChildren(false)]

      public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> 클래스입니다."
  syntax:
    content: public OrderByExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "속성을 가져오거나 설정 합니다.는 <xref:System.Linq.IQueryable>개체를 기준으로 정렬 합니다.</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>데이터 필드에 데이터를 정렬 하는 개체입니다.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 사용 하 여 다른 데이터 필드에 후속 정렬 작업을 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>속성.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "속성은 <xref:System.Linq.IQueryable>기준으로 정렬 하려면 데이터 원본 개체입니다.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "정렬 방향을 가져오거나 설정는 <xref:System.Linq.IQueryable>데이터 원본 개체입니다.</xref:System.Linq.IQueryable>"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>클래스에서 사용 되는 <xref:System.Web.UI.WebControls.QueryExtender>컨트롤을 데이터를 오름차순 또는 내림차순으로 정렬 합니다.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 정렬 작업의 방향은 Direction 속성을 사용 하 여 지정 됩니다."
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the ProductID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "데이터 원본 개체의 정렬 방향입니다."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "정렬 식을 적용 하는 <xref:System.Linq.IQueryable>기반 개체는 <> </> *> 값 및 <> </> *> 값입니다.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "정렬에 적용 하려면 데이터 원본을 지정 합니다."
    return:
      type: System.Linq.IQueryable
      description: "식에 적용 되는 데이터 원본의 인스턴스."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  id: ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "컬렉션을 가져오거나 설정 합니다. <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> 식에 적용할 한 <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> 값 데이터 소스에 적용 됩니다."
  remarks: "정렬 한 후 작업을 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>에 <xref:System.Web.UI.WebControls.QueryExtender>제어 후속 정렬 ThenByExpressions 속성을 사용 하 여 작업을 수행할 수 있습니다.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order using the ThenByExpressions. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy> ThenByExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
      description: "컬렉션 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> 에 적용할 식의 <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> 데이터 원본에 적용 됩니다."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
- uid: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ThenBy>
  nameWithType: Collection<ThenBy>
  fullName: System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.Expressions.ThenBy
    name: ThenBy
    nameWithType: ThenBy
    fullName: ThenBy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression
  nameWithType: OrderByExpression.OrderByExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable
  nameWithType: OrderByExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
