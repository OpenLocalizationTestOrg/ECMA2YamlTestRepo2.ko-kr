### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ElasticEase
  id: ElasticEase
  children:
  - System.Windows.Media.Animation.ElasticEase.#ctor
  - System.Windows.Media.Animation.ElasticEase.CreateInstanceCore
  - System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)
  - System.Windows.Media.Animation.ElasticEase.Oscillations
  - System.Windows.Media.Animation.ElasticEase.OscillationsProperty
  - System.Windows.Media.Animation.ElasticEase.Springiness
  - System.Windows.Media.Animation.ElasticEase.SpringinessProperty
  langs:
  - csharp
  name: ElasticEase
  nameWithType: ElasticEase
  fullName: System.Windows.Media.Animation.ElasticEase
  type: Class
  summary: "유사한 앞뒤로 정지할 될 때까지 스프링 애니메이션을 만드는 감속/가속 함수를 나타냅니다."
  remarks: "&quot;Spring&quot;에 문제가 발생 하면 애니메이션에서을 지정 하 여 제어할 수 있습니다는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>속성 값.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 다음 그래프의 다른 값을 보여 주는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>여기서 *f*(*t*)에서는 및 *t* 시간을 나타냅니다.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![다양 한 easingmode 그래프로 나타낸 ElasticEase ] (~/add/media/elasticease-graph.png &quot;다양 한 easingmode 그래프로 나타낸 ElasticEase 합니다.&quot;)       애니메이션을 사용 하 여 앞뒤로 오고 갑니다 실패 한 횟수를 지정할 수는 <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A>속성과 변동 springiness 사용 하는 방법을 빽빽하게는 <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>속성.</xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> </xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A>      > [!NOTE] > 애니메이션 음수 값으로 예기치 않게 보간 수이 애니메이션 인해 진동 전환 하는 값을 합니다. 이 하면 음수 값을 허용 하지 않는 속성에 애니메이션을 적용 하는 경우 오류가 발생할 수 있습니다. 예를 들어,이 애니메이션을 적용 하는 경우는 <xref:System.Windows.FrameworkElement.Height%2A>개체의 (예: 0에서 200까지와 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>의 <xref:System.Windows.Media.Animation.EasingMode>), 애니메이션에 대 한 음수를 통해 보간 하 려 합니다 <xref:System.Windows.FrameworkElement.Height%2A>를 오류가 throw 됩니다.</xref:System.Windows.FrameworkElement.Height%2A> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> </xref:System.Windows.FrameworkElement.Height%2A>       여러 다른 감속/가속 함수 ElasticEase 다음 Silverlight 샘플을 사용 하 여 확인할 수 있는 것 외에도 있습니다.       [이 샘플을 실행](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery) 실행 시간에 포함 된 감속/가속 함수를 사용 하 여를 <xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase> 에서 상속 하 여 사용자 지정 감속/가속 함수를 만들 수 있습니다      <a name=&quot;xamlObjectElementUsage_ElasticEase&quot;></a># # XAML 개체 요소 사용```   <ElasticEase .../>   ```"
  example:
  - "The following example applies an ElasticEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \n  \n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/elasticease/window1.xaml#elasticease)]\n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/t-system.windows.media.a_0_1.xaml)]"
  syntax:
    content: 'public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: ElasticEase()
  nameWithType: ElasticEase.ElasticEase()
  fullName: System.Windows.Media.Animation.ElasticEase.ElasticEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.ElasticEase&quot;> </xref> 클래스입니다."
  syntax:
    content: public ElasticEase ();
    parameters: []
  overload: System.Windows.Media.Animation.ElasticEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ElasticEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 클래스를 파생 합니다. 파생된 클래스를 만들 때이 메서드를 재정의 해야 합니다."
  remarks: "애니메이션 클래스 <xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> 에서 간접적으로 상속 이 때문에 무시 해야는 <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>메서드를 사용자 지정 애니메이션 개체를 생성 합니다.</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "새 인스턴스입니다."
  overload: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: ElasticEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.ElasticEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "생성 하기 위해 재정의할 수 있는 감속/가속 함수의 논리 부분을 제공 된 <xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;> </xref> 모드의 사용자 지정 감속/가속 함수입니다."
  remarks: "이 메서드는 <xref:System.Windows.Media.Animation.EasingMode> <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> 의 대/소문자</xref:System.Windows.Media.Animation.EasingMode> 에 대 한 애니메이션의 속도 제어 하는 정규화 된 시간 변환       에 대 한 감속/가속 함수를 지정 해야는 <xref:System.Windows.Media.Animation.EasingMode>때문에 대/소문자의 구현을 <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>메서드 변환 `normalizedTime` 에 대 한는 <xref:System.Windows.Media.Animation.EasingMode>및 <xref:System.Windows.Media.Animation.EasingMode>사례.</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "애니메이션의 정규화 된 시간 (진행 상황)입니다."
    return:
      type: System.Double
      description: "Double 변형 된 진행 상황을 나타내는입니다."
  overload: System.Windows.Media.Animation.ElasticEase.EaseInCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.Oscillations
  id: Oscillations
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: Oscillations
  nameWithType: ElasticEase.Oscillations
  fullName: System.Windows.Media.Animation.ElasticEase.Oscillations
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "가져오거나 횟수 대상이 전환 애니메이션 대상에서."
  remarks: "[!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty> <a name=&quot;xamlAttributeUsage_Occilations&quot;> </a> # # XAML 특성 사용      ```   <ElasticEase Oscillations=&quot;int&quot;/>   ```</xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>"
  example:
  - "The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \n  \n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/elasticease/window1.xaml#elasticease)]\n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/p-system.windows.media.a_5_1.xaml)]"
  syntax:
    content: public int Oscillations { get; set; }
    return:
      type: System.Int32
      description: "대상 앞뒤로 애니메이션 대상에서 횟수입니다. 이 값은 0 보다 크거나 이어야 합니다. 기본값은 3입니다."
  overload: System.Windows.Media.Animation.ElasticEase.Oscillations*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.OscillationsProperty
  id: OscillationsProperty
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: OscillationsProperty
  nameWithType: ElasticEase.OscillationsProperty
  fullName: System.Windows.Media.Animation.ElasticEase.OscillationsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.ElasticEase.Oscillations*>종속성 속성입니다.</xref:System.Windows.Media.Animation.ElasticEase.Oscillations*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty OscillationsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.Springiness
  id: Springiness
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: Springiness
  nameWithType: ElasticEase.Springiness
  fullName: System.Windows.Media.Animation.ElasticEase.Springiness
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "스프링 강성은 설정 하거나 가져옵니다. 작을수록 Springiness 값 스프링이 이며, 각 진동에서 강도가 더 빠르게 탄력성 줄어듭니다."
  remarks: "작을수록 Springiness 값 스프링이 이며, 각 진동에서 강도가 더 빠르게 탄력성 줄어듭니다.       [!INCLUDE[DP_ID_field_label](~/add/includes/dp-id-field-label-md.md)]<xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>다음 다이어그램은 서로 다른 Springiness 값의 효과 설명 합니다.</xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>       ![서로 다른 Springiness 값을 보여 줍니다. ] (~/add/media/elasticease-springiness.png &quot;서로 다른 Springiness 값을 보여 줍니다.&quot;)      <a name=&quot;xamlAttributeUsage_Springiness&quot;></a># # XAML 특성 사용```   <ElasticEase Springiness=&quot;double&quot;/>   ```"
  example:
  - "The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.  \n  \n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/elasticease/window1.xaml#elasticease)]\n [!code-xml[ElasticEase#ElasticEase](~/add/codesnippet/xaml/p-system.windows.media.a_4_1.xaml)]"
  syntax:
    content: public double Springiness { get; set; }
    return:
      type: System.Double
      description: "스프링 강성은 지정 하는 양수입니다. 기본값은 3입니다."
  overload: System.Windows.Media.Animation.ElasticEase.Springiness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ElasticEase.SpringinessProperty
  id: SpringinessProperty
  parent: System.Windows.Media.Animation.ElasticEase
  langs:
  - csharp
  name: SpringinessProperty
  nameWithType: ElasticEase.SpringinessProperty
  fullName: System.Windows.Media.Animation.ElasticEase.SpringinessProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.ElasticEase.Springiness*>종속성 속성입니다.</xref:System.Windows.Media.Animation.ElasticEase.Springiness*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SpringinessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.ElasticEase.#ctor
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: ElasticEase()
  nameWithType: ElasticEase.ElasticEase()
  fullName: System.Windows.Media.Animation.ElasticEase.ElasticEase()
- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ElasticEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: ElasticEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.ElasticEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.ElasticEase.Oscillations
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: Oscillations
  nameWithType: ElasticEase.Oscillations
  fullName: System.Windows.Media.Animation.ElasticEase.Oscillations
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Animation.ElasticEase.OscillationsProperty
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: OscillationsProperty
  nameWithType: ElasticEase.OscillationsProperty
  fullName: System.Windows.Media.Animation.ElasticEase.OscillationsProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.ElasticEase.Springiness
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: Springiness
  nameWithType: ElasticEase.Springiness
  fullName: System.Windows.Media.Animation.ElasticEase.Springiness
- uid: System.Windows.Media.Animation.ElasticEase.SpringinessProperty
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: SpringinessProperty
  nameWithType: ElasticEase.SpringinessProperty
  fullName: System.Windows.Media.Animation.ElasticEase.SpringinessProperty
- uid: System.Windows.Media.Animation.ElasticEase.#ctor*
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: ElasticEase
  nameWithType: ElasticEase.ElasticEase
- uid: System.Windows.Media.Animation.ElasticEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ElasticEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.ElasticEase.EaseInCore*
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: EaseInCore
  nameWithType: ElasticEase.EaseInCore
- uid: System.Windows.Media.Animation.ElasticEase.Oscillations*
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: Oscillations
  nameWithType: ElasticEase.Oscillations
- uid: System.Windows.Media.Animation.ElasticEase.Springiness*
  parent: System.Windows.Media.Animation.ElasticEase
  isExternal: false
  name: Springiness
  nameWithType: ElasticEase.Springiness
