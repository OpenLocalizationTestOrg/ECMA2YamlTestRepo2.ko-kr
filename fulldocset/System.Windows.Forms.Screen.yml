### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Screen
  id: Screen
  children:
  - System.Windows.Forms.Screen.AllScreens
  - System.Windows.Forms.Screen.BitsPerPixel
  - System.Windows.Forms.Screen.Bounds
  - System.Windows.Forms.Screen.DeviceName
  - System.Windows.Forms.Screen.Equals(System.Object)
  - System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  - System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  - System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  - System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.GetHashCode
  - System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  - System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.Primary
  - System.Windows.Forms.Screen.PrimaryScreen
  - System.Windows.Forms.Screen.ToString
  - System.Windows.Forms.Screen.WorkingArea
  langs:
  - csharp
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen
  type: Class
  summary: "디스플레이 장치 또는 단일 시스템에 여러 디스플레이 장치를 나타냅니다."
  remarks: "이 개체에 대 한 생성자는 공용이 화면 개체를 명시적으로 만들 수 없습니다. 개체의 공용 메서드를 호출할 때 생성 됩니다."
  example:
  - "The following code example shows how to use various methods and properties of the Screen class. The example calls the <xref:System.Windows.Forms.Screen.AllScreens%2A> property to retrieve an array of all the screens connected to the system. For each returned Screen, the example adds the device name, bounds, type, working area, and primary screen to a <xref:System.Windows.Forms.ListBox>. To use the example, add a <xref:System.Windows.Forms.ListBox> and a <xref:System.Windows.Forms.Button> to a form, and then add a <xref:System.Windows.Forms.Control.Click> event handler for the button.  \n  \n [!code-cs[Screen Object Example#1](~/add/codesnippet/csharp/t-system.windows.forms.s_7_1.cs)]\n [!code-vb[Screen Object Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.s_7_1.vb)]\n [!code-cpp[Screen Object Example#1](~/add/codesnippet/cpp/t-system.windows.forms.s_7_1.cpp)]"
  syntax:
    content: public class Screen
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.AllScreens
  id: AllScreens
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: AllScreens
  nameWithType: Screen.AllScreens
  fullName: System.Windows.Forms.Screen.AllScreens
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "시스템에서 모든 디스플레이의 배열을 가져옵니다."
  syntax:
    content: public static System.Windows.Forms.Screen[] AllScreens { get; }
    return:
      type: System.Windows.Forms.Screen[]
      description: "형식의 배열 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>, 시스템에서 모든 디스플레이 포함 합니다."
  overload: System.Windows.Forms.Screen.AllScreens*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.BitsPerPixel
  id: BitsPerPixel
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
  fullName: System.Windows.Forms.Screen.BitsPerPixel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "1 픽셀의 데이터와 연결 된 메모리의 비트 수를 가져옵니다."
  remarks: "일반적으로 비트맵 작업 하는 경우 화면에 대 한 픽셀당 비트 수 유용 합니다. 비트맵에 대 한 자세한 내용은 참조 [한](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public int BitsPerPixel { get; }
    return:
      type: System.Int32
      description: "1 픽셀의 데이터와 연결 된 메모리의 비트 수"
  overload: System.Windows.Forms.Screen.BitsPerPixel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Bounds
  id: Bounds
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Bounds
  nameWithType: Screen.Bounds
  fullName: System.Windows.Forms.Screen.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "디스플레이의 범위를 가져옵니다."
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>을 디스플레이의 범위를 나타내는입니다."
  overload: System.Windows.Forms.Screen.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.DeviceName
  id: DeviceName
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: DeviceName
  nameWithType: Screen.DeviceName
  fullName: System.Windows.Forms.Screen.DeviceName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "디스플레이와 연결 된 장치 이름을 가져옵니다."
  remarks: "이 문자열에 인쇄할 수 없는 문자가 포함 될 수 있습니다."
  syntax:
    content: public string DeviceName { get; }
    return:
      type: System.String
      description: "디스플레이와 연결 된 장치 이름입니다."
  overload: System.Windows.Forms.Screen.DeviceName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Screen.Equals(Object)
  fullName: System.Windows.Forms.Screen.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 개체를이 같은지 여부를 나타내는 값을 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_Screen&quot; name=&quot;Screen&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "이를 비교할 개체를 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 개체가이 같으면 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Screen.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  id: FromControl(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromControl(Control)
  nameWithType: Screen.FromControl(Control)
  fullName: System.Windows.Forms.Screen.FromControl(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "검색 한 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 지정된 된 컨트롤의 가장 큰 부분을 포함 하는 디스플레이 대 한 합니다."
  syntax:
    content: public static System.Windows.Forms.Screen FromControl (System.Windows.Forms.Control control);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "A <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 를 검색할는 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.Screen
      description: "A <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 지정된 된 컨트롤의 가장 큰 영역을 포함 하는 디스플레이 대 한 합니다. 아무것도 표시 되지 컨트롤을 포함 여러 디스플레이 환경에서는 지정된 된 컨트롤에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.FromControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Screen.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Screen.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "검색 한 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 개체의 가장 큰 부분을 포함 하는 디스플레이 대 한 참조 하는 지정 된 핸들입니다."
  syntax:
    content: public static System.Windows.Forms.Screen FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "창 핸들을 검색할는 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.Screen
      description: "A <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 개체의 가장 큰 영역을 포함 하는 디스플레이 대 한 합니다. 아무것도 표시 되지 모든 부분의 지정된 된 창에 포함 된 여러 디스플레이 환경에서는 개체에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  id: FromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: Screen.FromPoint(Point)
  fullName: System.Windows.Forms.Screen.FromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "검색 한 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 지정 된 위치를 포함 하는 디스플레이 대 한 합니다."
  remarks: ''
  example:
  - "The following code example shows how to use the FromPoint method. This example creates a <xref:System.Drawing.Point> referencing the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> coordinates passed by a <xref:System.Windows.Forms.MouseEventArgs>, and then uses the FromPoint method to determine if the point clicked is on the primary screen.  \n  \n [!code-cpp[Screen.FromPoint#1](~/add/codesnippet/cpp/m-system.windows.forms.s_5_1.cpp)]\n [!code-cs[Screen.FromPoint#1](~/add/codesnippet/csharp/m-system.windows.forms.s_5_1.cs)]\n [!code-vb[Screen.FromPoint#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_5_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.Screen FromPoint (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 를 검색할 위치를 지정 하는 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>합니다."
    return:
      type: System.Windows.Forms.Screen
      description: "A <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 지점을 포함 하는 디스플레이 대 한 합니다. 아무것도 표시 되지 지점을 포함 하는 여기서 여러 디스플레이 환경에서는 지정 된 위치에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  id: FromRectangle(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromRectangle(Rectangle)
  nameWithType: Screen.FromRectangle(Rectangle)
  fullName: System.Windows.Forms.Screen.FromRectangle(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "검색 한 <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 사각형의 가장 큰 부분을 포함 하는 디스플레이 대 한 합니다."
  syntax:
    content: public static System.Windows.Forms.Screen FromRectangle (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 를 디스플레이 검색할 영역을 지정 하는 합니다."
    return:
      type: System.Windows.Forms.Screen
      description: "A <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> 지정된 된 사각형의 가장 큰 영역을 포함 하는 디스플레이 대 한 합니다. 아무것도 표시 되지 사각형에 포함 된 여러 디스플레이 환경에서는 사각형에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.FromRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  id: GetBounds(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Point)
  nameWithType: Screen.GetBounds(Point)
  fullName: System.Windows.Forms.Screen.GetBounds(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 위치를 포함 하는 디스플레이의 범위를 검색 합니다."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 디스플레이 범위를 검색할의 좌표를 지정 하는 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 지정된 위치를 포함 하는 디스플레이의 범위를 지정 하 합니다. 여러 디스플레이 환경 아무것도 표시 되지 지정된 위치를 포함 하는 위치에 표시 된 지점과 가장 가까운 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  id: GetBounds(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Rectangle)
  nameWithType: Screen.GetBounds(Rectangle)
  fullName: System.Windows.Forms.Screen.GetBounds(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 사각형의 가장 큰 부분을 포함 하는 디스플레이의 범위를 검색 합니다."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 디스플레이 범위를 검색할 영역을 지정 하는 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 지정된 된 사각형을 포함 하는 디스플레이의 범위를 지정 합니다. 모니터가 지정된 된 사각형에 포함 된 여러 디스플레이 환경에서는 사각형에 가장 가까운 모니터 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  id: GetBounds(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Control)
  nameWithType: Screen.GetBounds(Control)
  fullName: System.Windows.Forms.Screen.GetBounds(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 컨트롤의 가장 큰 부분을 포함 하는 디스플레이의 범위를 검색 합니다."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 디스플레이 범위를 검색할입니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 지정된 된 컨트롤을 포함 하는 디스플레이의 범위를 지정 합니다. 아무것도 표시 되지 지정된 된 컨트롤을 포함 되어 있는 여러 디스플레이 환경에서 컨트롤에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Screen.GetHashCode()
  fullName: System.Windows.Forms.Screen.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "계산 하 고 개체에 대 한 해시 코드를 검색 합니다."
  remarks: "이 메서드를 구현 하는 <xref:System.Object>메서드.</xref:System.Object>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "개체에 대 한 해시 코드입니다."
  overload: System.Windows.Forms.Screen.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  id: GetWorkingArea(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Point)
  nameWithType: Screen.GetWorkingArea(Point)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 지점에 가장 가까운 작업 영역을 검색 합니다. 작업 영역은 디스플레이 작업 표시줄, 도킹 된 창을 도킹 된 도구 모음을 제외한의 바탕 화면 영역이입니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of <xref:System.Windows.Forms.Screen.PrimaryScreen%2A> property and the GetWorkingArea method. This method requires a form containing a button named `Button1`  \n  \n [!code-cs[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/csharp/m-system.windows.forms.s_4_1.cs)]\n [!code-cpp[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/cpp/m-system.windows.forms.s_4_1.cpp)]\n [!code-vb[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 하는 작업 영역을 검색할 좌표를 지정 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 작업 영역을 지정 합니다. 여러 디스플레이 환경 아무것도 표시 되지 지정된 위치를 포함 하는 위치에 표시 된 지점과 가장 가까운 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  id: GetWorkingArea(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Rectangle)
  nameWithType: Screen.GetWorkingArea(Rectangle)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 사각형의 가장 큰 부분을 포함 하는 디스플레이 대 한 작업 영역을 검색 합니다. 작업 영역은 디스플레이 작업 표시줄, 도킹 된 창을 도킹 된 도구 모음을 제외한의 바탕 화면 영역이입니다."
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 작업 영역을 검색할 영역을 지정 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 작업 영역을 지정 합니다. 아무것도 표시 되지 지정된 된 사각형에 포함 된 여러 디스플레이 환경에서는 사각형에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  id: GetWorkingArea(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Control)
  nameWithType: Screen.GetWorkingArea(Control)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 컨트롤의 가장 큰 영역을 포함 하는 디스플레이 대 한 작업 영역을 검색 합니다. 작업 영역은 디스플레이 작업 표시줄, 도킹 된 창을 도킹 된 도구 모음을 제외한의 바탕 화면 영역이입니다."
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 를 검색할 작업 영역입니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 하는 작업 영역을 지정 합니다. 아무것도 표시 되지 지정된 된 컨트롤을 포함 되어 있는 여러 디스플레이 환경에서 컨트롤에 가장 가까운 표시 반환 됩니다."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Primary
  id: Primary
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Primary
  nameWithType: Screen.Primary
  fullName: System.Windows.Forms.Screen.Primary
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "특정 디스플레이 기본 장치 인지를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool Primary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>기본;이 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Screen.Primary*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.PrimaryScreen
  id: PrimaryScreen
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
  fullName: System.Windows.Forms.Screen.PrimaryScreen
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 디스플레이 가져옵니다."
  remarks: "단일 디스플레이 시스템에 대 한 기본 디스플레이만 표시가 됩니다."
  example:
  - "The following code example demonstrates the use of PrimaryScreen property and the <xref:System.Windows.Forms.Screen.GetWorkingArea%2A> method. This method requires a form containing a button named `Button1`.  \n  \n [!code-cs[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/csharp/p-system.windows.forms.s_57_1.cs)]\n [!code-cpp[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/cpp/p-system.windows.forms.s_57_1.cpp)]\n [!code-vb[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.s_57_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.Screen PrimaryScreen { get; }
    return:
      type: System.Windows.Forms.Screen
      description: "기본 디스플레이입니다."
  overload: System.Windows.Forms.Screen.PrimaryScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.ToString
  id: ToString
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: ToString()
  nameWithType: Screen.ToString()
  fullName: System.Windows.Forms.Screen.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 개체를 나타내는 문자열을 검색 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "개체의 문자열 표현입니다."
  overload: System.Windows.Forms.Screen.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.WorkingArea
  id: WorkingArea
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: WorkingArea
  nameWithType: Screen.WorkingArea
  fullName: System.Windows.Forms.Screen.WorkingArea
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "디스플레이의 작업 영역을 가져옵니다. 작업 영역은 디스플레이 작업 표시줄, 도킹 된 창을 도킹 된 도구 모음을 제외한의 바탕 화면 영역이입니다."
  remarks: "작업 영역은 디스플레이 작업 표시줄, 도킹 된 창을 도킹 된 도구 모음을 제외한의 바탕 화면 영역이입니다.       Windows 작업 표시줄의 작업 표시줄 현재 표시 여부 여부에 관계 없이 자동 숨김으로 설정 되어 있으면 WorkingArea 화면의 전체 영역을 반환 합니다."
  syntax:
    content: public System.Drawing.Rectangle WorkingArea { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>을 디스플레이의 작업 영역을 나타내는입니다."
  overload: System.Windows.Forms.Screen.WorkingArea*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Screen.AllScreens
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: AllScreens
  nameWithType: Screen.AllScreens
  fullName: System.Windows.Forms.Screen.AllScreens
- uid: System.Windows.Forms.Screen[]
  parent: System.Windows.Forms
  isExternal: false
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen[]
  spec.csharp:
  - uid: System.Windows.Forms.Screen
    name: Screen
    nameWithType: Screen
    fullName: Screen[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Screen.BitsPerPixel
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
  fullName: System.Windows.Forms.Screen.BitsPerPixel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Screen.Bounds
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Bounds
  nameWithType: Screen.Bounds
  fullName: System.Windows.Forms.Screen.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Screen.DeviceName
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: DeviceName
  nameWithType: Screen.DeviceName
  fullName: System.Windows.Forms.Screen.DeviceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Screen.Equals(System.Object)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Equals(Object)
  nameWithType: Screen.Equals(Object)
  fullName: System.Windows.Forms.Screen.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromControl(Control)
  nameWithType: Screen.FromControl(Control)
  fullName: System.Windows.Forms.Screen.FromControl(Control)
- uid: System.Windows.Forms.Screen
  parent: System.Windows.Forms
  isExternal: false
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Screen.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Screen.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromPoint(Point)
  nameWithType: Screen.FromPoint(Point)
  fullName: System.Windows.Forms.Screen.FromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromRectangle(Rectangle)
  nameWithType: Screen.FromRectangle(Rectangle)
  fullName: System.Windows.Forms.Screen.FromRectangle(Rectangle)
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Point)
  nameWithType: Screen.GetBounds(Point)
  fullName: System.Windows.Forms.Screen.GetBounds(Point)
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Rectangle)
  nameWithType: Screen.GetBounds(Rectangle)
  fullName: System.Windows.Forms.Screen.GetBounds(Rectangle)
- uid: System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Control)
  nameWithType: Screen.GetBounds(Control)
  fullName: System.Windows.Forms.Screen.GetBounds(Control)
- uid: System.Windows.Forms.Screen.GetHashCode
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetHashCode()
  nameWithType: Screen.GetHashCode()
  fullName: System.Windows.Forms.Screen.GetHashCode()
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Point)
  nameWithType: Screen.GetWorkingArea(Point)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Point)
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Rectangle)
  nameWithType: Screen.GetWorkingArea(Rectangle)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Rectangle)
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Control)
  nameWithType: Screen.GetWorkingArea(Control)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Control)
- uid: System.Windows.Forms.Screen.Primary
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Primary
  nameWithType: Screen.Primary
  fullName: System.Windows.Forms.Screen.Primary
- uid: System.Windows.Forms.Screen.PrimaryScreen
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
  fullName: System.Windows.Forms.Screen.PrimaryScreen
- uid: System.Windows.Forms.Screen.ToString
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: ToString()
  nameWithType: Screen.ToString()
  fullName: System.Windows.Forms.Screen.ToString()
- uid: System.Windows.Forms.Screen.WorkingArea
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: WorkingArea
  nameWithType: Screen.WorkingArea
  fullName: System.Windows.Forms.Screen.WorkingArea
- uid: System.Windows.Forms.Screen.AllScreens*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: AllScreens
  nameWithType: Screen.AllScreens
- uid: System.Windows.Forms.Screen.BitsPerPixel*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
- uid: System.Windows.Forms.Screen.Bounds*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Bounds
  nameWithType: Screen.Bounds
- uid: System.Windows.Forms.Screen.DeviceName*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: DeviceName
  nameWithType: Screen.DeviceName
- uid: System.Windows.Forms.Screen.Equals*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Equals
  nameWithType: Screen.Equals
- uid: System.Windows.Forms.Screen.FromControl*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromControl
  nameWithType: Screen.FromControl
- uid: System.Windows.Forms.Screen.FromHandle*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromHandle
  nameWithType: Screen.FromHandle
- uid: System.Windows.Forms.Screen.FromPoint*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromPoint
  nameWithType: Screen.FromPoint
- uid: System.Windows.Forms.Screen.FromRectangle*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromRectangle
  nameWithType: Screen.FromRectangle
- uid: System.Windows.Forms.Screen.GetBounds*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds
  nameWithType: Screen.GetBounds
- uid: System.Windows.Forms.Screen.GetHashCode*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetHashCode
  nameWithType: Screen.GetHashCode
- uid: System.Windows.Forms.Screen.GetWorkingArea*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea
  nameWithType: Screen.GetWorkingArea
- uid: System.Windows.Forms.Screen.Primary*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Primary
  nameWithType: Screen.Primary
- uid: System.Windows.Forms.Screen.PrimaryScreen*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
- uid: System.Windows.Forms.Screen.ToString*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: ToString
  nameWithType: Screen.ToString
- uid: System.Windows.Forms.Screen.WorkingArea*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: WorkingArea
  nameWithType: Screen.WorkingArea
