### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.NTAccount
  id: NTAccount
  children:
  - System.Security.Principal.NTAccount.#ctor(System.String)
  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  - System.Security.Principal.NTAccount.Equals(System.Object)
  - System.Security.Principal.NTAccount.GetHashCode
  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.ToString
  - System.Security.Principal.NTAccount.Translate(System.Type)
  - System.Security.Principal.NTAccount.Value
  langs:
  - csharp
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
  type: Class
  summary: "사용자 또는 그룹 계정을 나타냅니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class NTAccount : System.Security.Principal.IdentityReference
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements: []
  inheritedMembers:
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: NTAccount(String)
  nameWithType: NTAccount.NTAccount(String)
  fullName: System.Security.Principal.NTAccount.NTAccount(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 지정된 된 이름을 사용 하 여 클래스입니다."
  remarks: "지정 된 이름을 해당 하는 기존 계정 또는 그룹에 있지만 다른로 변환 하지 않아도 됩니다 <xref:System.Security.Principal.IdentityReference>-계정 또는 그룹이 존재 하지 않으면 파생 된 형식은 지원 되지 것입니다.</xref:System.Security.Principal.IdentityReference>"
  syntax:
    content: public NTAccount (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름을 만드는 데는 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다. 이 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  overload: System.Security.Principal.NTAccount.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>빈 문자열입니다.       -또는- <code>name</code> 너무 깁니다."
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: NTAccount(String,String)
  nameWithType: NTAccount.NTAccount(String,String)
  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 지정한 도메인 이름 및 계정 이름을 사용 하 여 클래스입니다."
  remarks: "지정 된 도메인 및 계정 이름이 필요 하지 않습니다는 기존 계정 또는 그룹에 있지만 다른를 변환에 해당 <xref:System.Security.Principal.IdentityReference>-계정 또는 그룹이 존재 하지 않으면 파생 된 형식은 지원 되지 것입니다.</xref:System.Security.Principal.IdentityReference>"
  syntax:
    content: public NTAccount (string domainName, string accountName);
    parameters:
    - id: domainName
      type: System.String
      description: "도메인의 이름입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다. 도메인 이름에서 null 값은 빈 문자열 처럼 취급 됩니다."
    - id: accountName
      type: System.String
      description: "계정의 이름입니다. 이 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  overload: System.Security.Principal.NTAccount.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accountName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>accountName</code>빈 문자열입니다.       -또는- <code>accountName</code> 너무 깁니다.       -또는- <code>domainName</code> 너무 깁니다."
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NTAccount.Equals(Object)
  fullName: System.Security.Principal.NTAccount.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "나타내는 값을 반환 하는지 여부를이 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체가 지정된 된 개체와 같은지 합니다."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "와 비교할 개체 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> o </code> 은 동일한 개체 내부 형식 및 값이 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Principal.NTAccount.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NTAccount.GetHashCode()
  fullName: System.Security.Principal.NTAccount.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "현재에 대 한 해시 함수 역할을 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다. GetHashCode 메서드는 해시 테이블 같은 해시 알고리즘 및 데이터 구조에 적합 합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "해시 값을 현재 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다."
  overload: System.Security.Principal.NTAccount.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: NTAccount.IsValidTargetType(Type)
  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "지정된 된 형식에 대 한 유효한 변환을 형식 인지 여부를 나타내는 값을 반환 된 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 클래스입니다."
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> targetType </code> 대 한 유효한 변환 유형이 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 클래스입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Principal.NTAccount.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: op_Equality(NTAccount,NTAccount)
  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)
  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "두 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 같은지 여부를 결정 하는 개체입니다. 반환 된 것과 동일한 정식 이름 가능할 경우 같은 것으로 간주 되는 <xref:System.Security.Principal.NTAccount.Value*>속성 또는 둘 다 있는지 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.NTAccount.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: "같음 비교에 사용할 왼쪽된 피연산자입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: right
      type: System.Security.Principal.NTAccount
      description: "같음 비교에 사용할 오른쪽 피연산자입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.NTAccount.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: op_Inequality(NTAccount,NTAccount)
  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)
  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "두 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 같지 않은지 여부를 결정 하는 개체입니다. 같은 개체로 간주 되는지 하지 서로 다른 정식 이름 표현에 의해 반환 된 것 보다는 <xref:System.Security.Principal.NTAccount.Value*>속성 또는 개체 중 하나 인지 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 고 다른 하나는 없습니다.</xref:System.Security.Principal.NTAccount.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: "같지 않음 비교에 사용할 왼쪽된 피연산자입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: right
      type: System.Security.Principal.NTAccount
      description: "같지 않음 비교에 사용할 오른쪽 피연산자입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.NTAccount.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.ToString
  id: ToString
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: ToString()
  nameWithType: NTAccount.ToString()
  fullName: System.Security.Principal.NTAccount.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "에 계정 이름을 반환 *도메인* ** \\\\ ** *계정* 에 표시 된 계정에 대 한 형식으로는 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "계정 이름이 *도메인* ** \\\\ ** *계정* 형식입니다."
  overload: System.Security.Principal.NTAccount.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: NTAccount.Translate(Type)
  fullName: System.Security.Principal.NTAccount.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "변환으로 표시 되는 계정 이름을 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 다른 파티션으로 개체 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-파생 형식입니다."
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "변환에 대 한 대상 유형 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>합니다. 대상 형식에 유효한 것으로 간주 되는 형식 이어야 합니다.는 <xref:System.Security.Principal.NTAccount.IsValidTargetType*>메서드.</xref:System.Security.Principal.NTAccount.IsValidTargetType*>"
    return:
      type: System.Security.Principal.IdentityReference
      description: "변환 된 id입니다."
  overload: System.Security.Principal.NTAccount.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType </code>않습니다는 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 유형입니다."
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Id 참조 일부 또는 전부를 변환할 수 없습니다."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "소스 계정 이름이 너무 깁니다.       -또는-A Win32 오류 코드가 반환 되었습니다."
  platform:
  - net462
- uid: System.Security.Principal.NTAccount.Value
  id: Value
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Value
  nameWithType: NTAccount.Value
  fullName: System.Security.Principal.NTAccount.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "이 대문자 문자열 표현을 반환 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다."
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "이 대문자 문자열 표현을 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 개체입니다."
  overload: System.Security.Principal.NTAccount.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Principal.IdentityReference
  isExternal: false
  name: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount(String)
  nameWithType: NTAccount.NTAccount(String)
  fullName: System.Security.Principal.NTAccount.NTAccount(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount(String,String)
  nameWithType: NTAccount.NTAccount(String,String)
  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Equals(Object)
  nameWithType: NTAccount.Equals(Object)
  fullName: System.Security.Principal.NTAccount.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.NTAccount.GetHashCode
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: GetHashCode()
  nameWithType: NTAccount.GetHashCode()
  fullName: System.Security.Principal.NTAccount.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: NTAccount.IsValidTargetType(Type)
  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Equality(NTAccount,NTAccount)
  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)
  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)
- uid: System.Security.Principal.NTAccount
  parent: System.Security.Principal
  isExternal: false
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Inequality(NTAccount,NTAccount)
  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)
  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)
- uid: System.Security.Principal.NTAccount.ToString
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: ToString()
  nameWithType: NTAccount.ToString()
  fullName: System.Security.Principal.NTAccount.ToString()
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Translate(Type)
  nameWithType: NTAccount.Translate(Type)
  fullName: System.Security.Principal.NTAccount.Translate(Type)
- uid: System.Security.Principal.NTAccount.Value
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Value
  nameWithType: NTAccount.Value
  fullName: System.Security.Principal.NTAccount.Value
- uid: System.Security.Principal.NTAccount.#ctor*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount
  nameWithType: NTAccount.NTAccount
- uid: System.Security.Principal.NTAccount.Equals*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Equals
  nameWithType: NTAccount.Equals
- uid: System.Security.Principal.NTAccount.GetHashCode*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: GetHashCode
  nameWithType: NTAccount.GetHashCode
- uid: System.Security.Principal.NTAccount.IsValidTargetType*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: IsValidTargetType
  nameWithType: NTAccount.IsValidTargetType
- uid: System.Security.Principal.NTAccount.op_Equality*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Equality
  nameWithType: NTAccount.op_Equality
- uid: System.Security.Principal.NTAccount.op_Inequality*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Inequality
  nameWithType: NTAccount.op_Inequality
- uid: System.Security.Principal.NTAccount.ToString*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: ToString
  nameWithType: NTAccount.ToString
- uid: System.Security.Principal.NTAccount.Translate*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Translate
  nameWithType: NTAccount.Translate
- uid: System.Security.Principal.NTAccount.Value*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Value
  nameWithType: NTAccount.Value
