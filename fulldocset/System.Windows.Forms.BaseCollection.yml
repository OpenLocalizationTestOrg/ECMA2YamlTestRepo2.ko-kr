### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BaseCollection
  id: BaseCollection
  children:
  - System.Windows.Forms.BaseCollection.#ctor
  - System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BaseCollection.Count
  - System.Windows.Forms.BaseCollection.GetEnumerator
  - System.Windows.Forms.BaseCollection.IsReadOnly
  - System.Windows.Forms.BaseCollection.IsSynchronized
  - System.Windows.Forms.BaseCollection.List
  - System.Windows.Forms.BaseCollection.SyncRoot
  langs:
  - csharp
  name: BaseCollection
  nameWithType: BaseCollection
  fullName: System.Windows.Forms.BaseCollection
  type: Class
  summary: "데이터 관련 컬렉션을 만들기 위한 기본 기능을 제공 된 <xref href=&quot;System.Windows.Forms&quot;> </xref> 네임 스페이스입니다."
  remarks: "BaseCollection 클래스는 응용 프로그램 개발자가 사용 하기 위해 없습니다. 응용 프로그램 개발자가 사용 해야 <xref:System.Collections.CollectionBase>대신.</xref:System.Collections.CollectionBase>       BaseCollection 클래스가 구현 하는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection>       BaseCollection 클래스에서 파생 된 클래스에 포함:- <xref:System.Windows.Forms.BindingsCollection>- <xref:System.Windows.Forms.GridColumnStylesCollection>- <xref:System.Windows.Forms.GridTableStylesCollection></xref:System.Windows.Forms.GridTableStylesCollection> </xref:System.Windows.Forms.GridColumnStylesCollection> </xref:System.Windows.Forms.BindingsCollection>"
  syntax:
    content: 'public class BaseCollection : MarshalByRefObject, System.Collections.ICollection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: BaseCollection()
  nameWithType: BaseCollection.BaseCollection()
  fullName: System.Windows.Forms.BaseCollection.BaseCollection()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.BaseCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public BaseCollection ();
    parameters: []
  overload: System.Windows.Forms.BaseCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: BaseCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BaseCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재&1; 차원의 요소를 모두 복사 <xref:System.Array>지정 된&1; 차원 <xref:System.Array>지정된 된 대상에서 시작 <xref:System.Array>인덱스.</xref:System.Array> </xref:System.Array> </xref:System.Array>"
  syntax:
    content: public void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "1 차원 <xref:System.Array>현재에서 복사한 요소의 대상인 <xref uid=&quot;langword_csharp_Array&quot; name=&quot;Array&quot; href=&quot;&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "0부터 시작 상대 인덱스 `ar` 복사가 시작 되는 합니다."
  overload: System.Windows.Forms.BaseCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.Count
  id: Count
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: Count
  nameWithType: BaseCollection.Count
  fullName: System.Windows.Forms.BaseCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 있는 요소의 총 수를 가져옵니다."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 요소의 총 수입니다."
  overload: System.Windows.Forms.BaseCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: BaseCollection.GetEnumerator()
  fullName: System.Windows.Forms.BaseCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션의 멤버 전체 반복을 활성화 하는 개체를 가져옵니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "구현 하는 개체는 <xref:System.Collections.IEnumerator>인터페이스.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.BaseCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BaseCollection.IsReadOnly
  fullName: System.Windows.Forms.BaseCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "파생 되는 컬렉션의 <xref:System.Windows.Forms.BaseCollection>클래스를 쓸 수는 항상 이기 때문에이 속성은 항상 반환 `false`.</xref:System.Windows.Forms.BaseCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "이 속성은 항상 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BaseCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: BaseCollection.IsSynchronized
  fullName: System.Windows.Forms.BaseCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref:System.Collections.ICollection>동기화 됩니다.</xref:System.Collections.ICollection>"
  remarks: "IsSynchronized 속성을 반환 하는 경우 컬렉션이 스레드로부터 안전 하 게 보호, `true`, 및 프로그래머가 컬렉션 스레드를 안전 하 게 유지 아무 작업도 수행할 필요가 없습니다.       로 되는 경우와 <xref:System.Windows.Forms.BaseCollection>, IsSynchronized 속성은 반환 `false`, 하면 <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A>C#과 함께 사용할 수 있는 개체를 반환 `lock` 키워드.</xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> </xref:System.Windows.Forms.BaseCollection> 정적을 사용 하 여 <xref:System.Threading.Monitor.Enter%2A>및 <xref:System.Threading.Monitor.Exit%2A>의 메서드는 <xref:System.Threading.Monitor>클래스를 수동으로 잠금 및 동기화 개체의 잠금을 해제 합니다.</xref:System.Threading.Monitor> </xref:System.Threading.Monitor.Exit%2A> </xref:System.Threading.Monitor.Enter%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "이 속성은 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.BaseCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.List
  id: List
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: List
  nameWithType: BaseCollection.List
  fullName: System.Windows.Forms.BaseCollection.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 포함 된 요소의 목록을 가져옵니다는 <xref href=&quot;System.Windows.Forms.BaseCollection&quot;> </xref> 인스턴스."
  syntax:
    content: protected virtual System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 컬렉션의 요소를 포함 합니다. 이 속성은 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 파생된 클래스에서 재정의 되지 않는 경우."
  overload: System.Windows.Forms.BaseCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BaseCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Forms.BaseCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: BaseCollection.SyncRoot
  fullName: System.Windows.Forms.BaseCollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Windows.Forms.BaseCollection&quot;> </xref>합니다."
  remarks: "으로 되는 경우와 <xref:System.Windows.Forms.BaseCollection>, <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A>속성에서 반환 `false`, SyncRoot 속성 C#과 함께 사용할 수 있는 개체를 반환 합니다. 그런 다음 `lock` 키워드.</xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> </xref:System.Windows.Forms.BaseCollection>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Windows.Forms.BaseCollection&quot;> </xref>합니다."
  overload: System.Windows.Forms.BaseCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Windows.Forms.BaseCollection.#ctor
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: BaseCollection()
  nameWithType: BaseCollection.BaseCollection()
  fullName: System.Windows.Forms.BaseCollection.BaseCollection()
- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: BaseCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BaseCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BaseCollection.Count
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: Count
  nameWithType: BaseCollection.Count
  fullName: System.Windows.Forms.BaseCollection.Count
- uid: System.Windows.Forms.BaseCollection.GetEnumerator
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: BaseCollection.GetEnumerator()
  fullName: System.Windows.Forms.BaseCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BaseCollection.IsReadOnly
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: BaseCollection.IsReadOnly
  fullName: System.Windows.Forms.BaseCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BaseCollection.IsSynchronized
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: BaseCollection.IsSynchronized
  fullName: System.Windows.Forms.BaseCollection.IsSynchronized
- uid: System.Windows.Forms.BaseCollection.List
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: List
  nameWithType: BaseCollection.List
  fullName: System.Windows.Forms.BaseCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.BaseCollection.SyncRoot
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: SyncRoot
  nameWithType: BaseCollection.SyncRoot
  fullName: System.Windows.Forms.BaseCollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.BaseCollection.#ctor*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: BaseCollection
  nameWithType: BaseCollection.BaseCollection
- uid: System.Windows.Forms.BaseCollection.CopyTo*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: CopyTo
  nameWithType: BaseCollection.CopyTo
- uid: System.Windows.Forms.BaseCollection.Count*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: Count
  nameWithType: BaseCollection.Count
- uid: System.Windows.Forms.BaseCollection.GetEnumerator*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: BaseCollection.GetEnumerator
- uid: System.Windows.Forms.BaseCollection.IsReadOnly*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: BaseCollection.IsReadOnly
- uid: System.Windows.Forms.BaseCollection.IsSynchronized*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: BaseCollection.IsSynchronized
- uid: System.Windows.Forms.BaseCollection.List*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: List
  nameWithType: BaseCollection.List
- uid: System.Windows.Forms.BaseCollection.SyncRoot*
  parent: System.Windows.Forms.BaseCollection
  isExternal: false
  name: SyncRoot
  nameWithType: BaseCollection.SyncRoot
