### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Web.WebServiceHost
  id: WebServiceHost
  children:
  - System.ServiceModel.Web.WebServiceHost.#ctor
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.OnOpening
  langs:
  - csharp
  name: WebServiceHost
  nameWithType: WebServiceHost
  fullName: System.ServiceModel.Web.WebServiceHost
  type: Class
  summary: "A <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> 파생 보완 하는 클래스는 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] REST 프로그래밍 모델입니다."
  remarks: "WebServiceHost 서비스 설명에서 끝점을 찾지 못하면, HTTP 및 HTTPS 기본 주소에 대 한 서비스의 기본 주소에서 기본 끝점을 자동으로 만듭니다. 문제가 발생 하지 않는 끝점 자동으로 사용자가 구성한 경우 끝점 명시적으로 기본 주소에서 합니다. WebServiceHost는 보안 가상 디렉터리에서 사용 될 때 연결 된 인터넷 정보 서비스 (IIS) 보안 설정과 함께 작동 하도록 끝점의 바인딩을 자동으로 구성 합니다.       기본 HTTP 끝점을 만들 때의 WebServiceHost 않도록 HTTP 도움말 페이지 및 WSDL 웹 서비스 설명 언어 () GET 기능 메타 데이터 끝점이 기본 HTTP 끝점과 간섭 하지 합니다.       WebServiceHost 클래스 <xref:System.ServiceModel.Description.WebHttpBehavior>하 게 동작 아직 있고에 <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</xref:System.ServiceModel.Configuration.WebMessageEncodingElement> 모든 끝점에</xref:System.ServiceModel.Description.WebHttpBehavior> 추가 하는 또한 서비스에서 모든 작업 중 하나가 빈 HTTP 요청 본문 또는 HTTP 요청 본문을 스트림으로 처리할 경우는 WebServiceHost은 자동으로 바인딩에 대 한 적절 한 콘텐츠 형식 매퍼를 구성 합니다."
  example:
  - "The following example shows how to use the WebServiceHost class to host a service that makes use of the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] REST programming model.  \n  \n [!code-cs[WebServiceHost#0](~/add/codesnippet/csharp/t-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: 'public class WebServiceHost : System.ServiceModel.ServiceHost'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.ServiceHost
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> 클래스입니다."
  syntax:
    content: public WebServiceHost ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> 지정한 singleton 서버 인스턴스와 기본 주소를 사용 하 여 클래스입니다."
  remarks: "`baseAddresses` 의 기본 주소를 하나 이상의 매개 변수 구성 될 수 있습니다."
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.we_1_1.cs)]\n [!code-vb[WebServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.we_1_1.vb)]"
  syntax:
    content: public WebServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "Singleton 인스턴스로 사용할 서비스 인스턴스."
    - id: baseAddresses
      type: System.Uri[]
      description: "서비스의 기본 주소입니다."
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> 지정 된 서비스 형식 및 기본 주소를 사용 하 여 클래스입니다."
  remarks: "`baseAddresses` 의 기본 주소를 하나 이상의 매개 변수 구성 될 수 있습니다."
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#2](~/add/codesnippet/csharp/m-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#2](~/add/codesnippet/visualbasic/m-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: public WebServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "서비스 유형입니다."
    - id: baseAddresses
      type: System.Uri[]
      description: "서비스의 기본 주소입니다."
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "될 때 호출 된 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> 인스턴스가 열릴 합니다."
  remarks: "이 메서드를 호출할 때 다음이 발생 합니다. 1.  경우 <xref:System.ServiceModel.Web.WebServiceHost>끝점을 찾지 못하면 서비스 설명에서 서비스의 기본 주소에서 기본 끝점을 만듭니다.</xref:System.ServiceModel.Web.WebServiceHost> <xref:System.ServiceModel.Web.WebServiceHost>HTTP 도움말 페이지 및 WSDL GET 기능 메타 데이터 끝점이 기본 HTTP 끝점과 간섭 하지 않도록 자동으로 해제 합니다.</xref:System.ServiceModel.Web.WebServiceHost>      2.  <xref:System.ServiceModel.Web.WebServiceHost><xref:System.ServiceModel.WebHttpBinding>필요한 <xref:System.ServiceModel.Description.WebHttpBehavior>.</xref:System.ServiceModel.Description.WebHttpBehavior> 있는지를</xref:System.ServiceModel.WebHttpBinding> 사용 하는 모든 끝점 확인</xref:System.ServiceModel.Web.WebServiceHost> 가 없으면 <xref:System.ServiceModel.Web.WebServiceHost>추가 <xref:System.ServiceModel.Description.WebHttpBehavior>끝점.</xref:System.ServiceModel.Description.WebHttpBehavior> </xref:System.ServiceModel.Web.WebServiceHost>      3.  <xref:System.ServiceModel.Web.WebServiceHost>보안 가상 디렉터리에서 사용 될 때 연결 된 IIS 보안 설정으로 작동 하도록 끝점의 바인딩을 구성 합니다.</xref:System.ServiceModel.Web.WebServiceHost>"
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.OnOpening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHost
  isExternal: false
  name: System.ServiceModel.ServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost
  nameWithType: WebServiceHost.WebServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening
  nameWithType: WebServiceHost.OnOpening
