### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringEnumerator
  id: StringEnumerator
  children:
  - System.Collections.Specialized.StringEnumerator.Current
  - System.Collections.Specialized.StringEnumerator.MoveNext
  - System.Collections.Specialized.StringEnumerator.Reset
  langs:
  - csharp
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
  type: Class
  summary: "간단한 반복을 지원 한 <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>합니다."
  remarks: "`foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다.  따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>또한이 위치로 복원 열거자를 가져옵니다.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 이 위치에서, 호출 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> 따라서 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 호출 해야 합니다.       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>될 때까지 동일한 개체를 반환 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>또는 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>설정 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>를 다음 요소로.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>반환 `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>반환할 수도 `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 마지막으로 호출 하는 경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>반환 `false`호출, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>예외를 throw 합니다.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Current%2A>다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>그 뒤 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> 설정 하려면       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 또는</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 을 다음에 호출할 컬렉션 변경 될 경우 사이 컬렉션이 수정 되는 경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>및 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다."
  example:
  - "The following code example demonstrates several of the properties and methods of StringEnumerator.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/t-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/t-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_8_1.vb)]"
  syntax:
    content: public class StringEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Current
  id: Current
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "컬렉션의 현재 요소를 가져옵니다."
  remarks: "열거자를 만들거나는 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>호출 되 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>호출 하 여 열거자의 현재; 값을 읽기 전에 컬렉션의 첫 번째 요소를 현재 그렇지 않으면 정의 되지 않습니다.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       현재 예외를 throw 마지막으로 호출 하는 경우 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>반환 `false`, 컬렉션의 끝을 나타내는.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       현재가 열거자의 위치를 이동 하지 않으며 현재 연속 해 서 호출 될 때까지 동일한 개체를 반환 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>또는 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Collections.IEnumerator.Reset%2A> 또는</xref:System.Collections.IEnumerator.MoveNext%2A> 을 다음에 호출할 컬렉션 변경 될 경우 사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/p-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/p-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/p-system.collections.spe_8_1.vb)]"
  syntax:
    content: public string Current { get; }
    return:
      type: System.String
      description: "컬렉션의 현재 요소입니다."
  overload: System.Collections.Specialized.StringEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "열거자는 컬렉션의 또는 마지막 요소 뒤의 첫 번째 요소 앞에 배치 됩니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "열거자는 컬렉션의 다음 요소로 이동 합니다."
  remarks: "열거자를 만든 후 또는 이후에 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>가 호출 되는 열거자를 컬렉션의 첫 번째 요소 앞에 배치 됩니다 고, movenext 첫 번째 호출 열거자를 컬렉션의 첫 번째 요소로 이동 합니다.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       MoveNext 컬렉션의 끝을 통과 열거자는 컬렉션의 마지막 요소 뒤에 배치 되 고 MoveNext 반환 `false`합니다. 이 위치에 열거자는 복구 불가능, 이후에 MoveNext 호출 또한 반환 `false` 될 때까지 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.Collections.IEnumerator.Reset%2A> 또는</xref:System.Collections.IEnumerator.MoveNext%2A> 을 다음에 호출할 컬렉션 변경 될 경우 사이 컬렉션이 수정 되는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>및 <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>열거자가 이미 무효로 되 었 하는 경우에 설정 하는 요소를 반환 합니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_12_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_12_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_12_1.vb)]"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열거자를 다음 요소로 이동 성공 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 열거자가 컬렉션의 끝을 통과 하는 경우."
  overload: System.Collections.Specialized.StringEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컬렉션은 열거자를 만든 후 수정 되었습니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Reset
  id: Reset
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정 합니다."
  remarks: "첫 번째 요소 앞의 컬렉션의 시작 부분에는 열거자를 이동 하는 다시 설정 합니다. <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>호출 하 여 <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를 이동 해야</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 하는 다시 설정한 후"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_14_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_14_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_14_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Collections.Specialized.StringEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컬렉션은 열거자를 만든 후 수정 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Collections.Specialized.StringEnumerator.Current
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringEnumerator.Reset
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
- uid: System.Collections.Specialized.StringEnumerator.Current*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
- uid: System.Collections.Specialized.StringEnumerator.MoveNext*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: StringEnumerator.MoveNext
- uid: System.Collections.Specialized.StringEnumerator.Reset*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset
  nameWithType: StringEnumerator.Reset
