### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManager
  id: ClientBuildManager
  children:
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  - System.Web.Compilation.ClientBuildManager.AppDomainStarted
  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  - System.Web.Compilation.ClientBuildManager.CodeGenDir
  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  - System.Web.Compilation.ClientBuildManager.IsHostCreated
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  - System.Web.Compilation.ClientBuildManager.Unload
  langs:
  - csharp
  name: ClientBuildManager
  nameWithType: ClientBuildManager
  fullName: System.Web.Compilation.ClientBuildManager
  type: Class
  summary: "ASP.NET 응용 프로그램에 대 한 컴파일 서비스를 제공 합니다."
  remarks: "ClientBuildManager 클래스 ASP.NET 웹 응용 프로그램을 컴파일 및 생성 된 어셈블리를 검색 하기 위한 메서드와 속성을 제공 합니다. 또는 소스 코드를 생성 합니다. 클래스의 인스턴스는 클라이언트의 응용 프로그램 도메인에서 설정 및 Microsoft 인터넷 정보 서비스 (IIS) 외부에서 ASP.NET 빌드 시스템에 대 한 액세스를 제공 합니다. 웹 응용 프로그램 컴파일을 위한 사용자 지정 된 도구를 개발 하는 클래스를 사용할 수 있습니다.       명령줄 도구 `aspnet_compiler` ClientBuildManager 클래스를 사용 합니다."
  syntax:
    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> 지정한 대상 디렉터리 또는 미리 컴파일 플래그 없이 클래스입니다."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "응용 프로그램 루트 가상 경로입니다."
    - id: appPhysicalSourceDir
      type: System.String
      description: "응용 프로그램 루트를 실제 경로입니다."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> 지정한 대상 디렉터리를 사용 하 여 클래스입니다."
  remarks: "이 형식의 생성자가 미리 컴파일 대상 디렉터리를 지정 하므로 일반적으로 미리 컴파일에서 사용 됩니다."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "응용 프로그램 루트 가상 경로입니다."
    - id: appPhysicalSourceDir
      type: System.String
      description: "응용 프로그램 루트를 실제 경로입니다."
    - id: appPhysicalTargetDir
      type: System.String
      description: "미리 컴파일에 대 한 대상 디렉터리입니다."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> 지정한 대상 디렉터리와 컴파일 매개 변수를 사용 하 여 클래스입니다."
  remarks: "미리 컴파일 대상 디렉터리와 미리 컴파일 플래그를 지정 하므로이 형식의 생성자가 일반적으로 미리 컴파일에서 사용 됩니다."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "응용 프로그램 루트 가상 경로입니다."
    - id: appPhysicalSourceDir
      type: System.String
      description: "응용 프로그램 루트를 실제 경로입니다."
    - id: appPhysicalTargetDir
      type: System.String
      description: "미리 컴파일에 대 한 대상 디렉터리입니다."
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "미리 컴파일 동작을 결정 하는 값입니다."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> 지정 된 가상 디렉터리, 소스 디렉터리, 대상 디렉터리, 컴파일 매개 변수 및 형식 설명 공급자를 사용 하 여 클래스입니다."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "응용 프로그램 루트의 가상 경로입니다."
    - id: appPhysicalSourceDir
      type: System.String
      description: "응용 프로그램 루트의 실제 경로입니다."
    - id: appPhysicalTargetDir
      type: System.String
      description: "미리 컴파일에 대 한 대상 디렉터리입니다."
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "미리 컴파일 동작을 결정 하는 값입니다."
    - id: typeDescriptionProvider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "사용할 형식 설명 공급자입니다. 이 매개 변수는 Visual Studio의 멀티 타기 팅 인프라를 지 원하는 데 주로 사용 됩니다. .NET Framework의 특정 버전에 대 한 필터링 된 형식에 대 한 메타 데이터를 검색 하는 데 사용 됩니다."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  id: AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램 도메인이 종료 될 때 발생 합니다."
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  id: AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램 도메인을 시작할 때 발생 합니다."
  syntax:
    content: public event EventHandler AppDomainStarted;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  id: AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램 도메인이 언로드될 때 발생 합니다."
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  id: CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "코드 생성에 사용 되는 디렉터리에 실제 경로 가져옵니다."
  remarks: "코드 생성에 대 한 디렉터리는 일반적으로 임시 ASP.NET 파일 디렉터리에 있습니다."
  syntax:
    content: public string CodeGenDir { get; }
    return:
      type: System.String
      description: "A <xref:System.String>코드 생성에 사용 되는 디렉터리 경로가 포함 된.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  id: CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_Code 디렉터리에 파일, Global.asax 파일, 리소스 파일 및 웹 참조와 같은 응용 프로그램에 따라 파일을 컴파일합니다."
  remarks: "CompileApplicationDependencies 메서드를 사용 하면 리소스, 웹 참조, App_Code 디렉터리에 파일, App_Browsers 디렉터리에 있는 브라우저 파일 및 Global.asax 파일은 컴파일됩니다."
  syntax:
    content: public void CompileApplicationDependencies ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  id: CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "가상 경로 나타내는 파일을 컴파일합니다."
  syntax:
    content: public void CompileFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "컴파일할 파일 경로입니다."
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "가상 경로 나타내는 파일을 컴파일하고 빌드에 대 한 상태 정보를 수신 하는 콜백 클래스를 제공 합니다."
  syntax:
    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: virtualPath
      type: System.String
      description: "컴파일할 파일 경로입니다."
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "컴파일에서 상태 정보를 수신 하는 개체입니다."
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  id: CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 런타임 응용 프로그램 도메인에서 개체를 만듭니다."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);
    parameters:
    - id: type
      type: System.Type
      description: "만들 개체의 형식입니다."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASP.NET 런타임;의 응용 프로그램 도메인에 개체가 이미 만들어져 있는 경우 예외를 throw 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "ASP.NET 런타임 응용 프로그램 도메인에서 사용 되는 개체입니다."
  overload: System.Web.Compilation.ClientBuildManager.CreateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "응용 프로그램 도메인에 개체가 이미 및 <code> failIfExists </code> 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "파일의 내용에서 코드를 생성합니다."
  syntax:
    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "파일 가상 경로입니다."
    - id: virtualFileString
      type: System.String
      description: "파일의 내용입니다."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다."
    return:
      type: System.String
      description: "A <xref:System.String>생성 된 코드가 포함 된.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "CodeDOM 트리, 컴파일러 유형 및 가상 경로 의해 표시 되는 파일에 대 한 컴파일러 매개 변수를 반환 합니다."
  remarks: "GenerateCodeCompileUnit 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다. 이외에 <xref:System.CodeDom.CodeCompileUnit>개체를 반환 값으로&3; 개 반환 `out` 매개 변수.</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType` 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다. `compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다. `linePragmasTable` 매개 변수 줄 pragma의 사전이 포함 되어 있습니다."
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "파일 가상 경로입니다."
    - id: codeDomProviderType
      type: System.Type
      description: "이 메서드가 반환 될 때 코드 생성 및 컴파일을 사용 된 codeDOM 공급자 형식을 포함 합니다."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 지정된 된 파일에 대 한 합니다."
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "내용, codeDOM 트리, 컴파일러 형식 및 가상 경로 의해 표시 되는 파일에 대 한 컴파일러 매개 변수를 반환 합니다."
  remarks: "GenerateCodeCompileUnit 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다. 이외에 <xref:System.CodeDom.CodeCompileUnit>개체를 반환 값으로&3; 개 반환 `out` 매개 변수.</xref:System.CodeDom.CodeCompileUnit> `codeDomProviderType` 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다. `compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다. `linePragmasTable` 매개 변수 줄 pragma의 사전이 포함 되어 있습니다."
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "파일 가상 경로입니다."
    - id: virtualFileString
      type: System.String
      description: "가 나타내는 파일의 콘텐츠는 `virtualPath` 매개 변수입니다."
    - id: codeDomProviderType
      type: System.Type
      description: "이 메서드가 반환 될 때 코드 생성 및 컴파일을 사용 된 codeDOM 공급자 형식을 포함 합니다."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "이 메서드가 반환 될 때 포함 하 여 파일을 표시 하는 방법을 정의 하는 속성은 `virtualPath` 매개 변수 식이 컴파일됩니다."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "이 메서드가 반환 될 때 줄 pragma의 사전이 포함 되어 있습니다."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> 지정된 된 파일에 대 한 합니다."
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  id: GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "디렉터리 파일과 함께 가져옵니다을 변경 하면 응용 프로그램 도메인이 종료 합니다."
  remarks: "특정 최상위 디렉터리에 파일 변경이 응용 프로그램 도메인이 종료 합니다. 변경 내용을 검색 하는 Bin, App_Code, Global_Resources, 웹 참조 및 App_Browsers 디렉터리 내의 파일 모니터링 됩니다. 변경 내용이 검색 되 면 응용 프로그램 도메인이 종료 됩니다."
  syntax:
    content: public string[] GetAppDomainShutdownDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A <xref:System.String>최상위 디렉터리 이름이 포함 된 배열.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  id: GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "브라우저 요소의 컬렉션을 가져옵니다."
  remarks: "<xref:System.Collections.IDictionary>개체 키에 대 한 브라우저 이름을 포함 하 고 <xref:System.Web.UI.Triplet>값에 대 한 개체입니다.</xref:System.Web.UI.Triplet> </xref:System.Collections.IDictionary> <xref:System.Web.UI.Triplet>각 개체에는 부모 브라우저 요소, 설명 및 브라우저 요소 트리의 깊이의 이름이 포함 되어 있습니다.</xref:System.Web.UI.Triplet>"
  syntax:
    content: public System.Collections.IDictionary GetBrowserDefinitions ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>브라우저 요소를 포함 합니다.</xref:System.Collections.IDictionary>"
  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "컴파일러 형식, 컴파일러 변수와.wsdl 파일과 같은 비 코드 파일에서 생성 된 코드 파일을 저장할 디렉터리에 대 한 정보를 가져옵니다."
  remarks: "GetCodeDirectoryInformation 메서드 코드 디렉터리를 만드는 데 필요한 정보를 검색 합니다. 이 정보를 통해&3; 개 반환 `out` 매개 변수입니다. `codeDomProviderType` 매개 변수를 생성 하 고 코드 디렉터리에 파일을 컴파일하여 공급자 유형을 반환 합니다. `compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다. `generatedFilesDir` .wsdl 파일 등 코드 디렉터리에 비 코드 파일에서 생성 된 모든 코드 파일이 포함 된 디렉터리 경로 저장 하는 매개 변수입니다."
  syntax:
    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);
    parameters:
    - id: virtualCodeDir
      type: System.String
      description: "정보를 검색할에 대 한 디렉터리입니다."
    - id: codeDomProviderType
      type: System.Type
      description: "이 메서드가 반환 될 때 코드 생성 및 컴파일에 사용 되는 공급자 유형을 포함 합니다."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다."
    - id: generatedFilesDir
      type: System.String
      description: "이 메서드가 반환 될 때에 비 코드 파일에서 생성 된 파일의 디렉터리를 포함 합니다."
  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualCodeDir</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "가상 경로 나타내는 파일을 컴파일하고 컴파일된 형식을 반환 합니다."
  syntax:
    content: public Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "컴파일할 파일의 가상 경로입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>컴파일된 파일의.</xref:System.Type>"
  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "컴파일러 형식 및 가상 경로 의해 표시 되는 파일을 작성 하는 데 사용 되는 매개 변수를 반환 합니다."
  syntax:
    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);
    parameters:
    - id: virtualPath
      type: System.String
      description: "파일 가상 경로입니다."
    - id: codeDomProviderType
      type: System.Type
      description: "이 메서드가 반환 될 때 코드 생성 및 컴파일에 사용 되는 공급자 유형을 포함 합니다."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "이 메서드가 반환 될 때 파일을 컴파일하는 방법을 정의 하는 속성을 포함 합니다."
  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  id: GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "생성된 된 파일의 가상 경로 반환합니다."
  syntax:
    content: public string GetGeneratedFileVirtualPath (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "생성 된 파일의 전체 실제 경로입니다."
    return:
      type: System.String
      description: "A <xref:System.String>에 대 한 가상 경로 포함 하 <code> filePath </code>.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  id: GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "생성 된 파일 가상 경로 대 한 실제 경로 가져옵니다."
  syntax:
    content: public string GetGeneratedSourceFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "검색할 파일의 가상 경로입니다."
    return:
      type: System.String
      description: "A <xref:System.String>실제 경로가 생성된 된 파일에 포함 된.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  id: GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Bin 디렉터리에 정의 된 어셈블리의 배열을 반환 하며 <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> 웹 구성 파일의 섹션입니다."
  syntax:
    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "구성 이름 및 경로입니다."
    return:
      type: System.String[]
      description: "A <xref:System.String>Bin 디렉터리에 기본 경로 코드를 포함 하는 배열 및 <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> 웹 구성 파일의 섹션.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  id: GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_code 및 ASP.NET 응용 프로그램에서 하위 디렉터리에 가상 경로 반환합니다."
  syntax:
    content: public string[] GetVirtualCodeDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A <xref:System.String>응용 프로그램의 코드 디렉터리에 대 한 모든 가상 경로가 포함 된 배열.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "응용 프로그램 도메인에는 무한 제공 임대가 만들어지는 것을 방지 하 여 수명입니다."
  remarks: "이 메서드 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>기본 클래스에서 메서드</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 를 재정의합니다 액세스할 수 있으려면 `null` 및 응용 프로그램 도메인의 수명을 제한 하는 임대가 만들어지지 않도록 합니다."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  id: IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "어셈블리는 코드 어셈블리 인지 여부를 나타냅니다."
  syntax:
    content: public bool IsCodeAssembly (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "코드 어셈블리로 식별 되어야 하는 어셈블리의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <code> assemblyName </code> 매개 변수는 생성 된 코드 어셈블리 중 하 나와 일치, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>null입니다."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  id: IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인 생성 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsHostCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인 생성 되었음을 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  id: PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 응용을 프로그램을 미리 컴파일합니다."
  remarks: "ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다. 한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다. 이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다. 사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.       다른 두 가지 미리 컴파일 배포에 사용 됩니다. 사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다. 이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다. 다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다. 소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.       미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager>생성자.</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 PrecompileApplication 메서드를 호출 하 여 합니다."
  syntax:
    content: public void PrecompileApplication ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 응용 프로그램 미리 컴파일한 빌드에 대 한 상태 정보를 수신 하는 콜백 메서드를 제공 합니다."
  remarks: "ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다. 한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다. 이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다. 사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다. `callback` 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.       다른 두 가지 미리 컴파일 배포에 사용 됩니다. 사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다. 이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다. 다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다. 소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.       미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager>생성자.</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 PrecompileApplication 메서드를 호출 하 여 합니다."
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref> 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다."
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 응용 프로그램을 컴파일한 빌드에 대 한 상태 정보를 수신 하는 콜백 메서드를 제공 깨끗 한 빌드를 만들지 여부를 나타냅니다."
  remarks: "ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다. 한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다. 이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다. 사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다. `callback` 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.       다른 두 가지 미리 컴파일 배포에 사용 됩니다. 사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다. 이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다. 다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다. 소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.       미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager>생성자.</xref:System.Web.Compilation.ClientBuildManager> <xref:System.Web.Compilation.ClientBuildManagerParameter>의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 호출 하 여는 <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>메서드.</xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref> 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다."
    - id: forceCleanBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 개체와 중간 파일 먼저 삭제 하는 클린 빌드를 수행 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 변경 된 파일을 다시 작성 해야 합니다. 종속성 수 선택 되지 빌드 환경에 의해 된 경우 true로 설정 합니다."
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "현재 ASP.NET 응용 프로그램을 종료합니다."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.Unload
  id: Unload
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET 웹 응용 프로그램을 컴파일하는 데 응용 프로그램 도메인을 언로드합니다."
  syntax:
    content: public bool Unload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응용 프로그램 도메인이 언로드되면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Compilation.ClientBuildManager.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
- uid: System.Web.Compilation.ClientBuildManagerParameter
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler
  parent: System.Web.Compilation
  isExternal: false
  name: BuildManagerHostUnloadEventHandler
  nameWithType: BuildManagerHostUnloadEventHandler
  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManagerCallback
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerCallback
  nameWithType: ClientBuildManagerCallback
  fullName: System.Web.Compilation.ClientBuildManagerCallback
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
- uid: System.Web.Compilation.ClientBuildManager.Unload
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
- uid: System.Web.Compilation.ClientBuildManager.#ctor*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager
  nameWithType: ClientBuildManager.ClientBuildManager
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies
  nameWithType: ClientBuildManager.CompileApplicationDependencies
- uid: System.Web.Compilation.ClientBuildManager.CompileFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile
  nameWithType: ClientBuildManager.CompileFile
- uid: System.Web.Compilation.ClientBuildManager.CreateObject*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject
  nameWithType: ClientBuildManager.CreateObject
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode
  nameWithType: ClientBuildManager.GenerateCode
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions
  nameWithType: ClientBuildManager.GetBrowserDefinitions
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: ClientBuildManager.GetCompiledType
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters
  nameWithType: ClientBuildManager.GetCompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile
  nameWithType: ClientBuildManager.GetGeneratedSourceFile
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ClientBuildManager.InitializeLifetimeService
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly
  nameWithType: ClientBuildManager.IsCodeAssembly
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication
  nameWithType: ClientBuildManager.PrecompileApplication
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBuildManager.System.IDisposable.Dispose
- uid: System.Web.Compilation.ClientBuildManager.Unload*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload
  nameWithType: ClientBuildManager.Unload
