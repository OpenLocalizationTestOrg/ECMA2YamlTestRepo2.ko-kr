### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.Target
  id: Target
  children:
  - Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)
  - Microsoft.Build.BuildEngine.Target.Condition
  - Microsoft.Build.BuildEngine.Target.DependsOnTargets
  - Microsoft.Build.BuildEngine.Target.GetEnumerator
  - Microsoft.Build.BuildEngine.Target.Inputs
  - Microsoft.Build.BuildEngine.Target.IsImported
  - Microsoft.Build.BuildEngine.Target.Name
  - Microsoft.Build.BuildEngine.Target.Outputs
  - Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)
  langs:
  - csharp
  name: Target
  nameWithType: Target
  fullName: Microsoft.Build.BuildEngine.Target
  type: Class
  summary: "단일 나타냅니다 [대상](~/add/includes/ajax-current-ext-md.md) 요소에는 [!INCLUDE[vstecmsbuild](~/add/includes/vstecmsbuild-md.md)] 프로젝트입니다."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Target (Name = { Name }, Condition = { Condition })")]

      public class Target : System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)
  id: AddNewTask(System.String)
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: AddNewTask(String)
  nameWithType: Target.AddNewTask(String)
  fullName: Microsoft.Build.BuildEngine.Target.AddNewTask(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "지정 된 추가 [작업](~/add/includes/ajax-current-ext-md.md) 요소는 [대상](~/add/includes/ajax-current-ext-md.md) 요소입니다."
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildTask AddNewTask (string taskName);
    parameters:
    - id: taskName
      type: System.String
      description: "<xref href=&quot;Microsoft.Build.BuildEngine.BuildTask&quot;> </xref> 을 나타내는 개체는 <xref uid=&quot;langword_csharp_Task&quot; name=&quot;Task&quot; href=&quot;&quot;> </xref> 에 추가할 요소를는 <xref uid=&quot;langword_csharp_Target&quot; name=&quot;Target&quot; href=&quot;&quot;> </xref> 요소입니다."
    return:
      type: Microsoft.Build.BuildEngine.BuildTask
      description: "A <xref href=&quot;Microsoft.Build.BuildEngine.BuildTask&quot;> </xref> 개체가 나타내는 자식 `Task` 의 요소는 `Target` 요소입니다."
  overload: Microsoft.Build.BuildEngine.Target.AddNewTask*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.Condition
  id: Condition
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: Condition
  nameWithType: Target.Condition
  fullName: Microsoft.Build.BuildEngine.Target.Condition
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "가져옵니다는 `Condition` 특성의 값은 [대상](~/add/includes/ajax-current-ext-md.md) 요소입니다."
  syntax:
    content: public string Condition { get; set; }
    return:
      type: System.String
      description: "`Condition` 특성의 값은 `Target` 요소입니다."
  overload: Microsoft.Build.BuildEngine.Target.Condition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.DependsOnTargets
  id: DependsOnTargets
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: DependsOnTargets
  nameWithType: Target.DependsOnTargets
  fullName: Microsoft.Build.BuildEngine.Target.DependsOnTargets
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "가져옵니다는 `DependsOnTargets` 특성의 값은 [대상](~/add/includes/ajax-current-ext-md.md) 요소는 세미콜론으로 구분 된 목록입니다."
  syntax:
    content: public string DependsOnTargets { get; set; }
    return:
      type: System.String
      description: "`DependsOnTargets` 특성의 값은 `Target` 요소입니다."
  overload: Microsoft.Build.BuildEngine.Target.DependsOnTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Target.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.Target.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "반복 하는 열거자를 가져옵니다는 <xref href=&quot;Microsoft.Build.BuildEngine.BuildTask&quot;> </xref> 개체에 <xref href=&quot;Microsoft.Build.BuildEngine.Target&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하면 호출자가 사용할 수는 `foreach` C# 언어의 (`for each` 에서 [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]) 개별 <xref:Microsoft.Build.BuildEngine.BuildTask> <xref:Microsoft.Build.BuildEngine.Target>.</xref:Microsoft.Build.BuildEngine.Target> 개체</xref:Microsoft.Build.BuildEngine.BuildTask> 를 반복 하려면       A <xref:Microsoft.Build.BuildEngine.BuildTask>개체의 자식 요소를 나타냅니다는 `Target` 요소.</xref:Microsoft.Build.BuildEngine.BuildTask>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>에 대 한는 <xref href=&quot;Microsoft.Build.BuildEngine.BuildTask&quot;> </xref> 개체에 <xref href=&quot;Microsoft.Build.BuildEngine.Target&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: Microsoft.Build.BuildEngine.Target.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.Inputs
  id: Inputs
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: Inputs
  nameWithType: Target.Inputs
  fullName: Microsoft.Build.BuildEngine.Target.Inputs
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "이 대상에 입력으로 사용 되는 항목을 가져오거나 설정 합니다."
  remarks: "이 대상 특성에 포함 하는 항목은 최상위 종속성 분석을 위한 입력으로 사용 됩니다."
  syntax:
    content: public string Inputs { get; set; }
    return:
      type: System.String
      description: "항목을 나타내는 문자열입니다."
  overload: Microsoft.Build.BuildEngine.Target.Inputs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.IsImported
  id: IsImported
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: IsImported
  nameWithType: Target.IsImported
  fullName: Microsoft.Build.BuildEngine.Target.IsImported
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "나타내는 값을 가져옵니다 여부는 [대상](~/add/includes/ajax-current-ext-md.md) 요소를 프로젝트로 가져옵니다."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우는 `Target` 요소가 프로젝트로 가져온 하 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.BuildEngine.Target.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.Name
  id: Name
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: Name
  nameWithType: Target.Name
  fullName: Microsoft.Build.BuildEngine.Target.Name
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "가져옵니다는 `Name` 특성의 값은 [대상](~/add/includes/ajax-current-ext-md.md) 요소입니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "`Name` 특성의 값은 `Target` 요소입니다."
  overload: Microsoft.Build.BuildEngine.Target.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.Outputs
  id: Outputs
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: Outputs
  nameWithType: Target.Outputs
  fullName: Microsoft.Build.BuildEngine.Target.Outputs
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "이 대상의 예상된 출력을 가져오거나 설정 합니다."
  remarks: "입력된 항목의 집합을 출력 항목의 집합으로 변환 하려면이 대상 특성에 변환을 적용할 수 있습니다. 이 특성은 최상위 종속성 분석 뿐만 아니라이 대상 출력을 정의 하는 용도로 사용 됩니다."
  syntax:
    content: public string Outputs { get; set; }
    return:
      type: System.String
      description: "출력을 나타내는 문자열입니다."
  overload: Microsoft.Build.BuildEngine.Target.Outputs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)
  id: RemoveTask(Microsoft.Build.BuildEngine.BuildTask)
  parent: Microsoft.Build.BuildEngine.Target
  langs:
  - csharp
  name: RemoveTask(BuildTask)
  nameWithType: Target.RemoveTask(BuildTask)
  fullName: Microsoft.Build.BuildEngine.Target.RemoveTask(BuildTask)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "지정 된 제거 [작업](~/add/includes/ajax-current-ext-md.md) 에서 요소는 [대상](~/add/includes/ajax-current-ext-md.md) 요소입니다."
  remarks: "A <xref:Microsoft.Build.BuildEngine.BuildTask>개체가 나타내는 자식 `Task` 의 요소는 `Target` 요소.</xref:Microsoft.Build.BuildEngine.BuildTask>"
  syntax:
    content: public void RemoveTask (Microsoft.Build.BuildEngine.BuildTask taskElement);
    parameters:
    - id: taskElement
      type: Microsoft.Build.BuildEngine.BuildTask
      description: "<xref href=&quot;Microsoft.Build.BuildEngine.BuildTask&quot;> </xref> 을 나타내는 개체는 <xref uid=&quot;langword_csharp_Task&quot; name=&quot;Task&quot; href=&quot;&quot;> </xref> 에서 제거할 요소의 <xref uid=&quot;langword_csharp_Target&quot; name=&quot;Target&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: Microsoft.Build.BuildEngine.Target.RemoveTask*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.Target.AddNewTask(System.String)
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: AddNewTask(String)
  nameWithType: Target.AddNewTask(String)
  fullName: Microsoft.Build.BuildEngine.Target.AddNewTask(String)
- uid: Microsoft.Build.BuildEngine.BuildTask
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildTask
  nameWithType: BuildTask
  fullName: Microsoft.Build.BuildEngine.BuildTask
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Target.Condition
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Condition
  nameWithType: Target.Condition
  fullName: Microsoft.Build.BuildEngine.Target.Condition
- uid: Microsoft.Build.BuildEngine.Target.DependsOnTargets
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: DependsOnTargets
  nameWithType: Target.DependsOnTargets
  fullName: Microsoft.Build.BuildEngine.Target.DependsOnTargets
- uid: Microsoft.Build.BuildEngine.Target.GetEnumerator
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: GetEnumerator()
  nameWithType: Target.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.Target.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.Target.Inputs
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Inputs
  nameWithType: Target.Inputs
  fullName: Microsoft.Build.BuildEngine.Target.Inputs
- uid: Microsoft.Build.BuildEngine.Target.IsImported
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: IsImported
  nameWithType: Target.IsImported
  fullName: Microsoft.Build.BuildEngine.Target.IsImported
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Target.Name
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Name
  nameWithType: Target.Name
  fullName: Microsoft.Build.BuildEngine.Target.Name
- uid: Microsoft.Build.BuildEngine.Target.Outputs
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Outputs
  nameWithType: Target.Outputs
  fullName: Microsoft.Build.BuildEngine.Target.Outputs
- uid: Microsoft.Build.BuildEngine.Target.RemoveTask(Microsoft.Build.BuildEngine.BuildTask)
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: RemoveTask(BuildTask)
  nameWithType: Target.RemoveTask(BuildTask)
  fullName: Microsoft.Build.BuildEngine.Target.RemoveTask(BuildTask)
- uid: Microsoft.Build.BuildEngine.Target.AddNewTask*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: AddNewTask
  nameWithType: Target.AddNewTask
- uid: Microsoft.Build.BuildEngine.Target.Condition*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Condition
  nameWithType: Target.Condition
- uid: Microsoft.Build.BuildEngine.Target.DependsOnTargets*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: DependsOnTargets
  nameWithType: Target.DependsOnTargets
- uid: Microsoft.Build.BuildEngine.Target.GetEnumerator*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: GetEnumerator
  nameWithType: Target.GetEnumerator
- uid: Microsoft.Build.BuildEngine.Target.Inputs*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Inputs
  nameWithType: Target.Inputs
- uid: Microsoft.Build.BuildEngine.Target.IsImported*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: IsImported
  nameWithType: Target.IsImported
- uid: Microsoft.Build.BuildEngine.Target.Name*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Name
  nameWithType: Target.Name
- uid: Microsoft.Build.BuildEngine.Target.Outputs*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: Outputs
  nameWithType: Target.Outputs
- uid: Microsoft.Build.BuildEngine.Target.RemoveTask*
  parent: Microsoft.Build.BuildEngine.Target
  isExternal: false
  name: RemoveTask
  nameWithType: Target.RemoveTask
