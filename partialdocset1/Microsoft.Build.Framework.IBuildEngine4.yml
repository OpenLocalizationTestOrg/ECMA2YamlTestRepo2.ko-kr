### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.IBuildEngine4
  id: IBuildEngine4
  children:
  - Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  - Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  - Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  langs:
  - csharp
  name: IBuildEngine4
  nameWithType: IBuildEngine4
  fullName: Microsoft.Build.Framework.IBuildEngine4
  type: Interface
  summary: "이 인터페이스는 IBuildEngine을 확장 작업 호출 간에 데이터를 공유 하는 작업을 허용 하는 메커니즘을 제공 합니다."
  syntax:
    content: 'public interface IBuildEngine4 : Microsoft.Build.Framework.IBuildEngine3'
  implements:
  - Microsoft.Build.Framework.IBuildEngine3
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  id: GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "지정된 된 키와 함께 저장 하는 이전에 등록 된 작업 개체를 검색 합니다."
  syntax:
    content: public object GetRegisteredTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);
    parameters:
    - id: key
      type: System.Object
      description: "개체를 검색 하는 데 사용 하는 키입니다."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "개체의 수명입니다."
    return:
      type: System.Object
      description: "해당 키 하에서 등록 된 등록 된 개체 또는 개체가 없는 경우에 null 또는 초기 컬렉션을 통해 개체를 버렸습니다 경우 반환 합니다."
  overload: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  id: RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  nameWithType: IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "앞으로 몇 가지 지정 된 시간에 삭제 됩니다 시스템 개체에 등록 합니다."
  remarks: "데이터 캐싱 작업 등의 작업 호출 상태를 유지 해야 하는 작업에서이 메서드를 호출할 수 있습니다. 이 가장 좋습니다는 `allowEarlyCollection` 로 설정 `true` 개체는 모든 상당한 양의 데이터를 유지 하는 경우.       개체가 삭제 된 스레드를 임의로 수 있지만 작업이 실행 되는 동안 삭제 될 경우에 `allowEarlyCollection` 로 설정 된 `true`합니다.       개체에서 IDisposable을 구현 하는 경우 IDisposable.Dispose 개체에 삭제 하기 전에 호출 됩니다."
  syntax:
    content: public void RegisterTaskObject (object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection);
    parameters:
    - id: key
      type: System.Object
      description: "개체를 검색 하는 데 사용 하는 키입니다."
    - id: obj
      type: System.Object
      description: "이후 폐기 유지 될 개체입니다."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "개체의 수명입니다."
    - id: allowEarlyCollection
      type: System.Boolean
      description: "개체를 요청 된 시간 보다 이전 삭제할 수 있는지 여부를 결정 하는 플래그입니다."
  overload: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  id: UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "이전에 등록 된 작업 개체를 등록 취소합니다."
  syntax:
    content: public object UnregisterTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);
    parameters:
    - id: key
      type: System.Object
      description: "개체를 검색 하는 데 사용 하는 키입니다."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "개체의 수명입니다."
    return:
      type: System.Object
      description: "해당 키 하에서 등록 하는 이전에 등록 된 개체 또는 개체가 없는 경우에 null 또는 초기 컬렉션을 통해 개체를 버렸습니다 경우 반환 합니다."
  overload: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
  parent: Microsoft.Build.Framework
  isExternal: false
  name: RegisteredTaskObjectLifetime
  nameWithType: RegisteredTaskObjectLifetime
  fullName: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  nameWithType: IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: GetRegisteredTaskObject
  nameWithType: IBuildEngine4.GetRegisteredTaskObject
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: RegisterTaskObject
  nameWithType: IBuildEngine4.RegisterTaskObject
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: UnregisterTaskObject
  nameWithType: IBuildEngine4.UnregisterTaskObject
