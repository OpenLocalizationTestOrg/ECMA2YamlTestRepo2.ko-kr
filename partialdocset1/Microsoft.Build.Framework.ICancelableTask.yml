### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.ICancelableTask
  id: ICancelableTask
  children:
  - Microsoft.Build.Framework.ICancelableTask.Cancel
  langs:
  - csharp
  name: ICancelableTask
  nameWithType: ICancelableTask
  fullName: Microsoft.Build.Framework.ICancelableTask
  type: Interface
  summary: "취소할 수 있는 작업에 대 한 인터페이스입니다."
  syntax:
    content: 'public interface ICancelableTask : Microsoft.Build.Framework.ITask'
  implements:
  - Microsoft.Build.Framework.ITask
  platform:
  - net462
- uid: Microsoft.Build.Framework.ICancelableTask.Cancel
  id: Cancel
  parent: Microsoft.Build.Framework.ICancelableTask
  langs:
  - csharp
  name: Cancel()
  nameWithType: ICancelableTask.Cancel()
  fullName: Microsoft.Build.Framework.ICancelableTask.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "이 방법을 수행한 후 Execute가 호출 되 면 즉시 종료 하거나 가능한 한 빨리 종료 작업을 지시 합니다."
  remarks: "언제 든 지 작업 인스턴스화된 후, 되기 전에 cancel ()를 호출할 수 있습니다 <xref:Microsoft.Build.Framework.ITask.Execute%2A>호출 됩니다.</xref:Microsoft.Build.Framework.ITask.Execute%2A>       모든 스레드에서 취소 호출이 제공 될 수 있습니다. 이 메서드의 구현은 무기한으로 차단 되지 않아야 합니다.       빌드를 취소 하려면 둘 다 `Cancel` 및 `Execute` 순서에 관계 없이 반환 해야 합니다."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: Microsoft.Build.Framework.ICancelableTask.Cancel*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.ICancelableTask.Cancel
  parent: Microsoft.Build.Framework.ICancelableTask
  isExternal: false
  name: Cancel()
  nameWithType: ICancelableTask.Cancel()
  fullName: Microsoft.Build.Framework.ICancelableTask.Cancel()
- uid: Microsoft.Build.Framework.ICancelableTask.Cancel*
  parent: Microsoft.Build.Framework.ICancelableTask
  isExternal: false
  name: Cancel
  nameWithType: ICancelableTask.Cancel
