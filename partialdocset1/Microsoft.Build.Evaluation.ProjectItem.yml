### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectItem
  id: ProjectItem
  children:
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.IsImported
  - Microsoft.Build.Evaluation.ProjectItem.ItemType
  - Microsoft.Build.Evaluation.ProjectItem.Metadata
  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.Project
  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.Xml
  langs:
  - csharp
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
  type: Class
  summary: "확인 된 디자인 타임 프로젝트 항목을 나타냅니다."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]

      public class ProjectItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  id: DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "모든 항목 메타 데이터에 대 한 열거자를 가져옵니다."
  remarks: "항목 정의에서 메타 데이터를 포함 하지 않습니다. &quot;FullPath&quot;와 같은 기본 제공 메타 데이터를 포함 하지 않습니다."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Null 합니다 모든 항목 메타 데이터에 대 한 열거자를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목에 대 한 메타 데이터의 수를 가져옵니다."
  remarks: "항목 정의에서 메타 데이터를 포함 하지 않습니다. &quot;FullPath&quot;와 같은 기본 제공 메타 데이터를 포함 하지 않습니다."
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "이 항목에 대 한 메타 데이터의 수를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Include 특성의 확인된 된 값을 가져옵니다."
  remarks: "이스케이프 된 문자 나타나지 않습니다."
  syntax:
    content: public string EvaluatedInclude { get; }
    return:
      type: System.String
      description: "Include 특성의 확인된 된 값을 반환합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목에 대 한 지정된 된 메타 데이터의 확인된 된 값을 가져옵니다."
  remarks: "항목 정의에서 메타 데이터를 포함할 수 있습니다. &quot;FullPath&quot;와 같은 기본 제공 메타 데이터를 포함 하지 않습니다."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "해당 값을 검색 하는 메타 데이터의 이름입니다."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "이 항목에 대 한 지정된 된 메타 데이터의 확인된 된 값을 가져옵니다. 지정 된 이름의 메타 데이터가 없으면 null을 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 지정된 된 메타 데이터의 확인된 된 값을 가져옵니다."
  remarks: "메타 데이터의 존재 여부를 확인 하려면 있는지 값 여부, <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A> 사용       &quot;FullPath&quot;와 같은 기본 제공 메타 데이터 값에 액세스 하려면이 메서드를 사용할 수 있습니다."
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "해당 값을 검색 하는 메타 데이터의 이름입니다."
    return:
      type: System.String
      description: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 지정된 된 메타 데이터의 확인된 된 값을 반환 합니다. 지정 된 이름의 메타 데이터가 없으면 빈 문자열을 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목에 지정 된 이름의 메타 데이터 정의 되어 있는지 여부를 결정 합니다."
  remarks: "기본 제공 메타 데이터 및 항목 정의에서 생성 된 메타 데이터를 포함 합니다."
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 메타 데이터의 이름입니다."
    return:
      type: System.Boolean
      description: "이 항목;에 지정 된 이름의 메타 데이터를 정의 하는 경우 true를 반환 false 그렇지 않은 경우."
  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목이 가져온된 파일에서 생성 하는 경우를 결정 합니다."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "이 항목이 가져온된 파일;에서 생성 하는 경우 true를 반환합니다 false 그렇지 않은 경우."
  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목의 형식을 가져오거나 설정 합니다."
  syntax:
    content: public string ItemType { get; set; }
    return:
      type: System.String
      description: "항목 형식을 반환합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  id: Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 모든 메타 데이터를 가져옵니다."
  remarks: "&quot;FullPath&quot;와 같은 기본 제공 메타 데이터를 포함 하지 않습니다.       추가, 제거 또는 기본 제공 메타 데이터의 값을 변경, 사용 <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>및 <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A> </xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 모든 메타 데이터를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 메타 데이터 및 기본 제공 메타 데이터의 수를 가져옵니다."
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "항목 정의에서 생성 된 메타 데이터를 포함 하 여이 항목에 대 한 메타 데이터 및 기본 제공 메타 데이터의 수를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 프로젝트 항목을 포함 하는 프로젝트를 가져옵니다."
  remarks: "프로젝트 항목은 항상 프로젝트에 포함 됩니다."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "이 프로젝트 항목을 포함 하는 프로젝트를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "지정한 이름을 가진 모든 메타 데이터를 제거합니다."
  remarks: "InvalidArgumentException 메타 데이터 이름이 &quot;FullPath&quot;와 같은 기본 제공 메타 데이터를 참조 하는 경우 throw 됩니다.       메타 데이터 이름이 항목 정의에서 생성 된 메타 데이터를 참조 하는 경우 InvalidOperationException을 throw 합니다."
  syntax:
    content: public bool RemoveMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "제거할 메타 데이터의 이름입니다."
    return:
      type: System.Boolean
      description: "지정 된 이름의 메타 데이터가; 제거 하기 전에 존재 하는 경우 true를 반환 false 그렇지 않은 경우."
  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  id: Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "항목이 지정 된 이름으로 이름을 바꿉니다."
  remarks: "로 설정 된 <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>값.</xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> 일반적으로이 발생할 수 있으므로 여러 항목에서 단일 항목의 컨텍스트에서 의미가 있는 계산은 필요 하지 않은 발생 합니다. 그러나 항목 분할 될 필요가 없는 경우 새 값이 항목이 정확히&1;로 계산 평가 Include 특성의 계산된 값으로 업데이트 됩니다."
  syntax:
    content: public void Rename (string name);
    parameters:
    - id: name
      type: System.String
      description: "항목의 새 이름입니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  id: SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "항목에 지정 된 이름 및 확인 되지 않은 값 사용 하 여 메타 데이터를 추가합니다."
  remarks: "항목 정의에서 가져오지 않는 것으로 메타 데이터 항목에 지정 된 이름의 이미 있으면 기존 메타 데이터의 값을 업데이트 합니다. 평가 된 프로젝트를 업데이트 하지만 영향을 주지 않습니다 다른 프로젝트에 다시 확인할 때까지 합니다.       예를 들어, &quot;i&quot; 형식의 항목에서 &quot;m&quot; 라는 메타 데이터가 추가 되는 경우 아무런 영향이 없습니다에서 계산 되는 &quot;j&quot; &quot;@(&quot;% (m)&quot;-> j)&quot; 재계산 해야 합니다. 또한 &quot;m&quot;의 확인 되지 않은 값은 평가, &quot;$(p)&quot;와 같은 의해 수정 된 것으로 설정 되어 있는 경우 계산된 값 설정 됩니다를 문자 그대로 &quot;$(p)&quot; 다시 확인할 때까지.       확인 되지 않은 값의 특수 문자는 이스케이프 문자를 변환 합니다."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "추가할 메타 데이터의 이름입니다."
    - id: unevaluatedValue
      type: System.String
      description: "추가할 메타 데이터의 확인 되지 않은 값입니다."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "새 메타 데이터를 반환합니다. 지정 된 이름의 메타 데이터에 이미 있으면이 메타 데이터를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  id: UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Include 특성 확인 되지 않은 값을 가져오거나 설정 합니다."
  syntax:
    content: public string UnevaluatedInclude { get; set; }
    return:
      type: System.String
      description: "Include 특성 확인 되지 않은 값을 반환합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "이 항목에 연관 된 항목 요소를 가져옵니다."
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "Null 수 없는이 항목과 연결 하는 항목 요소를 반환 합니다."
  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadata>
  nameWithType: IEnumerable<ProjectMetadata>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItem.GetMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItem.GetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItem.HasMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItem.RemoveMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename
  nameWithType: ProjectItem.Rename
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue
  nameWithType: ProjectItem.SetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
