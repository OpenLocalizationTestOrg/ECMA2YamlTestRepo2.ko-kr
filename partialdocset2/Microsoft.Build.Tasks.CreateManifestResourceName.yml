### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.CreateManifestResourceName
  id: CreateManifestResourceName
  children:
  - Microsoft.Build.Tasks.CreateManifestResourceName.#ctor
  - Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)
  - Microsoft.Build.Tasks.CreateManifestResourceName.Execute
  - Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)
  - Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem
  - Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)
  - Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames
  - Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory
  - Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles
  - Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  - Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace
  langs:
  - csharp
  name: CreateManifestResourceName
  nameWithType: CreateManifestResourceName
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName
  type: Class
  summary: "매니페스트 리소스 이름의 리소스를 할당할 수를 결정 합니다."
  syntax:
    content: 'public abstract class CreateManifestResourceName : Microsoft.Build.Tasks.TaskExtension'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: CreateManifestResourceName()
  nameWithType: CreateManifestResourceName.CreateManifestResourceName()
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestResourceName()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.Build.Tasks.CreateManifestResourceName&quot;> </xref> 클래스입니다."
  syntax:
    content: protected CreateManifestResourceName ();
    parameters: []
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)
  id: CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: CreateManifestName(String,String,String,String,Stream)
  nameWithType: CreateManifestResourceName.CreateManifestName(String,String,String,String,Stream)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(String,String,String,String,Stream)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "파생된 클래스에서 재정의할 경우, 매니페스트 리소스 이름을 만듭니다."
  syntax:
    content: protected abstract string CreateManifestName (string fileName, string linkFileName, string rootNamespaceName, string dependentUponFileName, System.IO.Stream binaryStream);
    parameters:
    - id: fileName
      type: System.String
      description: "종속 파일의 이름입니다."
    - id: linkFileName
      type: System.String
      description: "링크 특성으로 지정 된 파일의 이름입니다."
    - id: rootNamespaceName
      type: System.String
      description: "루트 네임 스페이스입니다. 이 매개 변수는 null 참조일 수 있습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 에서 [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)])."
    - id: dependentUponFileName
      type: System.String
      description: "이 종속성의 부모 파일 이름입니다. 이 매개 변수는 null 참조일 수 있습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
    - id: binaryStream
      type: System.IO.Stream
      description: "파일의 이진 스트림 내용을 합니다. 이 매개 변수는 null 참조일 수 있습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
    return:
      type: System.String
      description: "매니페스트 리소스 이름입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: Execute()
  nameWithType: CreateManifestResourceName.Execute()
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "작업을 실행 합니다."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 성공 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)
  id: IsSourceFile(System.String)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: IsSourceFile(String)
  nameWithType: CreateManifestResourceName.IsSourceFile(String)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(String)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "파생된 클래스에서 재정의 되 면 지정 된 파일이 올바른 원본 파일이 있는지 여부를 나타냅니다."
  syntax:
    content: protected abstract bool IsSourceFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "파일 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일이 유효한 소스 파일입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem
  id: itemSpecToTaskitem
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: itemSpecToTaskitem
  nameWithType: CreateManifestResourceName.itemSpecToTaskitem
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem
  type: Field
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "파생된 클래스에서 빠른 액세스를 제공 하는 사전에 작업 항목을 포함 합니다."
  syntax:
    content: protected System.Collections.Generic.Dictionary<string,Microsoft.Build.Framework.ITaskItem> itemSpecToTaskitem;
    return:
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Framework.ITaskItem}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)
  id: MakeValidEverettIdentifier(System.String)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: MakeValidEverettIdentifier(String)
  nameWithType: CreateManifestResourceName.MakeValidEverettIdentifier(String)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(String)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Visual Studio 2003과 함께 사용 하기 위해 올바른 식별자를 만듭니다."
  syntax:
    content: public static string MakeValidEverettIdentifier (string name);
    parameters:
    - id: name
      type: System.String
      description: "파일 이름입니다."
    return:
      type: System.String
      description: "Visual Studio 2003과 함께 사용 하는 식별자입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames
  id: ManifestResourceNames
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: ManifestResourceNames
  nameWithType: CreateManifestResourceName.ManifestResourceNames
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "생성된 된 매니페스트 리소스 이름을 가져옵니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ManifestResourceNames { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "생성된 된 매니페스트 리소스 이름입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory
  id: PrependCultureAsDirectory
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: PrependCultureAsDirectory
  nameWithType: CreateManifestResourceName.PrependCultureAsDirectory
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "매니페스트 리소스 이름으로 디렉터리 문화권 이름 앞에 추가 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 `true` 기본적으로 합니다."
  syntax:
    content: public bool PrependCultureAsDirectory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>문화권 이름을 포함 되지만 해야 하는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우 그렇지 않은 경우."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles
  id: ResourceFiles
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: ResourceFiles
  nameWithType: CreateManifestResourceName.ResourceFiles
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "종속 리소스 파일을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ResourceFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "종속 리소스 파일입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  id: ResourceFilesWithManifestResourceNames
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: ResourceFilesWithManifestResourceNames
  nameWithType: CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "매니페스트 리소스 이름에 대 한 추가 메타 데이터와 함께 리소스 이름의 초기 목록을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ResourceFilesWithManifestResourceNames { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "<xref href=&quot;Microsoft.Build.Framework.ITaskItem&quot;> </xref> 리소스 이름 및 메타 데이터를 나타내는 개체입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace
  id: RootNamespace
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  langs:
  - csharp
  name: RootNamespace
  nameWithType: CreateManifestResourceName.RootNamespace
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "이름 지정에 사용할 루트 네임 스페이스를 가져오거나 설정 합니다."
  syntax:
    content: public string RootNamespace { get; set; }
    return:
      type: System.String
      description: "이름 지정에 사용할 루트 네임 스페이스입니다."
  overload: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.#ctor
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: CreateManifestResourceName()
  nameWithType: CreateManifestResourceName.CreateManifestResourceName()
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestResourceName()
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: CreateManifestName(String,String,String,String,Stream)
  nameWithType: CreateManifestResourceName.CreateManifestName(String,String,String,String,Stream)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(String,String,String,String,Stream)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.Execute
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: Execute()
  nameWithType: CreateManifestResourceName.Execute()
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: IsSourceFile(String)
  nameWithType: CreateManifestResourceName.IsSourceFile(String)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(String)
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: itemSpecToTaskitem
  nameWithType: CreateManifestResourceName.itemSpecToTaskitem
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Framework.ITaskItem}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,ITaskItem>
  nameWithType: Dictionary<String,ITaskItem>
  fullName: System.Collections.Generic.Dictionary<System.String,Microsoft.Build.Framework.ITaskItem>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,Microsoft.Build.Framework.ITaskItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: MakeValidEverettIdentifier(String)
  nameWithType: CreateManifestResourceName.MakeValidEverettIdentifier(String)
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(String)
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ManifestResourceNames
  nameWithType: CreateManifestResourceName.ManifestResourceNames
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: PrependCultureAsDirectory
  nameWithType: CreateManifestResourceName.PrependCultureAsDirectory
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ResourceFiles
  nameWithType: CreateManifestResourceName.ResourceFiles
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ResourceFilesWithManifestResourceNames
  nameWithType: CreateManifestResourceName.ResourceFilesWithManifestResourceNames
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: RootNamespace
  nameWithType: CreateManifestResourceName.RootNamespace
  fullName: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.#ctor*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: CreateManifestResourceName
  nameWithType: CreateManifestResourceName.CreateManifestResourceName
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: CreateManifestName
  nameWithType: CreateManifestResourceName.CreateManifestName
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.Execute*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: Execute
  nameWithType: CreateManifestResourceName.Execute
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: IsSourceFile
  nameWithType: CreateManifestResourceName.IsSourceFile
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: MakeValidEverettIdentifier
  nameWithType: CreateManifestResourceName.MakeValidEverettIdentifier
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ManifestResourceNames
  nameWithType: CreateManifestResourceName.ManifestResourceNames
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: PrependCultureAsDirectory
  nameWithType: CreateManifestResourceName.PrependCultureAsDirectory
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ResourceFiles
  nameWithType: CreateManifestResourceName.ResourceFiles
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: ResourceFilesWithManifestResourceNames
  nameWithType: CreateManifestResourceName.ResourceFilesWithManifestResourceNames
- uid: Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace*
  parent: Microsoft.Build.Tasks.CreateManifestResourceName
  isExternal: false
  name: RootNamespace
  nameWithType: CreateManifestResourceName.RootNamespace
