### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Move
  id: Move
  children:
  - Microsoft.Build.Tasks.Move.#ctor
  - Microsoft.Build.Tasks.Move.Cancel
  - Microsoft.Build.Tasks.Move.DestinationFiles
  - Microsoft.Build.Tasks.Move.DestinationFolder
  - Microsoft.Build.Tasks.Move.Execute
  - Microsoft.Build.Tasks.Move.MovedFiles
  - Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles
  - Microsoft.Build.Tasks.Move.SourceFiles
  langs:
  - csharp
  name: Move
  nameWithType: Move
  fullName: Microsoft.Build.Tasks.Move
  type: Class
  summary: "하나 이상의 파일을 이동 하는 작업입니다."
  remarks: "이 이동 디렉터리 (즉, xcopy)을 지원 하지 않습니다."
  syntax:
    content: 'public class Move : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements:
  - Microsoft.Build.Framework.ICancelableTask
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: Move()
  nameWithType: Move.Move()
  fullName: Microsoft.Build.Tasks.Move.Move()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "하나 이상의 파일을 이동 하는 작업을 만듭니다."
  syntax:
    content: public Move ();
    parameters: []
  overload: Microsoft.Build.Tasks.Move.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.Cancel
  id: Cancel
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: Cancel()
  nameWithType: Move.Cancel()
  fullName: Microsoft.Build.Tasks.Move.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "중지 하 고 가능한 한 빨리 (정의 되지 않은 상태)에 반환 합니다."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: Microsoft.Build.Tasks.Move.Cancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.DestinationFiles
  id: DestinationFiles
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: DestinationFiles
  nameWithType: Move.DestinationFiles
  fullName: Microsoft.Build.Tasks.Move.DestinationFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "일치 하는 소스 파일의 대상을 나타내는 대상 파일을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "대상 파일을 나타내는 항목을 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.DestinationFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.DestinationFolder
  id: DestinationFolder
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: DestinationFolder
  nameWithType: Move.DestinationFolder
  fullName: Microsoft.Build.Tasks.Move.DestinationFolder
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "소스 파일에 대 한 대상 폴더를 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "대상 폴더를 나타내는 항목을 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.DestinationFolder*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: Execute()
  nameWithType: Move.Execute()
  fullName: Microsoft.Build.Tasks.Move.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "이동을 실행합니다."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "그렇지 않으면 이동이 성공적이 고, false true를 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.MovedFiles
  id: MovedFiles
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: MovedFiles
  nameWithType: Move.MovedFiles
  fullName: Microsoft.Build.Tasks.Move.MovedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "성공적으로 이동 된 파일을 나타내는 항목을 가져옵니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] MovedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "성공적으로 이동 된 파일을 나타내는 항목을 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.MovedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles
  id: OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: OverwriteReadOnlyFiles
  nameWithType: Move.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "읽기 전용 특성이 설정 되어 있는 대상 폴더에 파일을 덮어쓸 수 있는지 여부를 선택 하는 스위치를 가져오거나 설정 합니다."
  remarks: "기본값은 파일을 덮어쓸 수 없도록 합니다."
  syntax:
    content: public bool OverwriteReadOnlyFiles { get; set; }
    return:
      type: System.Boolean
      description: "파일 수 있으면이 고, false 덮어쓸 그렇지 않으면 true를 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Move.SourceFiles
  id: SourceFiles
  parent: Microsoft.Build.Tasks.Move
  langs:
  - csharp
  name: SourceFiles
  nameWithType: Move.SourceFiles
  fullName: Microsoft.Build.Tasks.Move.SourceFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "이동할 파일의 목록을 나타내는 항목을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "이동할 파일의 목록을 나타내는 항목을 반환 합니다."
  overload: Microsoft.Build.Tasks.Move.SourceFiles*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.Move.#ctor
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Move()
  nameWithType: Move.Move()
  fullName: Microsoft.Build.Tasks.Move.Move()
- uid: Microsoft.Build.Tasks.Move.Cancel
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Cancel()
  nameWithType: Move.Cancel()
  fullName: Microsoft.Build.Tasks.Move.Cancel()
- uid: Microsoft.Build.Tasks.Move.DestinationFiles
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: DestinationFiles
  nameWithType: Move.DestinationFiles
  fullName: Microsoft.Build.Tasks.Move.DestinationFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Move.DestinationFolder
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: DestinationFolder
  nameWithType: Move.DestinationFolder
  fullName: Microsoft.Build.Tasks.Move.DestinationFolder
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.Move.Execute
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Execute()
  nameWithType: Move.Execute()
  fullName: Microsoft.Build.Tasks.Move.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.Move.MovedFiles
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: MovedFiles
  nameWithType: Move.MovedFiles
  fullName: Microsoft.Build.Tasks.Move.MovedFiles
- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Move.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Move.SourceFiles
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: SourceFiles
  nameWithType: Move.SourceFiles
  fullName: Microsoft.Build.Tasks.Move.SourceFiles
- uid: Microsoft.Build.Tasks.Move.#ctor*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Move
  nameWithType: Move.Move
- uid: Microsoft.Build.Tasks.Move.Cancel*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Cancel
  nameWithType: Move.Cancel
- uid: Microsoft.Build.Tasks.Move.DestinationFiles*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: DestinationFiles
  nameWithType: Move.DestinationFiles
- uid: Microsoft.Build.Tasks.Move.DestinationFolder*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: DestinationFolder
  nameWithType: Move.DestinationFolder
- uid: Microsoft.Build.Tasks.Move.Execute*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: Execute
  nameWithType: Move.Execute
- uid: Microsoft.Build.Tasks.Move.MovedFiles*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: MovedFiles
  nameWithType: Move.MovedFiles
- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Move.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Move.SourceFiles*
  parent: Microsoft.Build.Tasks.Move
  isExternal: false
  name: SourceFiles
  nameWithType: Move.SourceFiles
