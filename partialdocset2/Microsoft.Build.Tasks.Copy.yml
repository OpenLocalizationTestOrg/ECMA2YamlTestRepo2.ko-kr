### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Copy
  id: Copy
  children:
  - Microsoft.Build.Tasks.Copy.#ctor
  - Microsoft.Build.Tasks.Copy.Cancel
  - Microsoft.Build.Tasks.Copy.CopiedFiles
  - Microsoft.Build.Tasks.Copy.DestinationFiles
  - Microsoft.Build.Tasks.Copy.DestinationFolder
  - Microsoft.Build.Tasks.Copy.Execute
  - Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  - Microsoft.Build.Tasks.Copy.Retries
  - Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  - Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  - Microsoft.Build.Tasks.Copy.SourceFiles
  - Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  langs:
  - csharp
  name: Copy
  nameWithType: Copy
  fullName: Microsoft.Build.Tasks.Copy
  type: Class
  summary: "구현 하는 `Copy` 작업 합니다. 사용 된 `Copy` 프로젝트 파일을 만들고이 작업을 실행 하는 요소입니다. 사용량 및 매개 변수 정보를 참조 하십시오. [Copy 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: 'public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements:
  - Microsoft.Build.Framework.ICancelableTask
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.Build.Tasks.Copy&quot;> </xref> 클래스입니다."
  syntax:
    content: public Copy ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Cancel
  id: Cancel
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "중지 하 고 가능한 한 빨리 (정의 되지 않은 상태)에 반환 합니다."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.Cancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  id: CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "성공적으로 복사 된 항목을 가져옵니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "성공적으로 복사 된 항목입니다."
  overload: Microsoft.Build.Tasks.Copy.CopiedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  id: DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "소스 파일을 복사 하는 파일의 목록을 가져오거나 설정 합니다."
  remarks: "대상 파일의 목록에 지정 된 목록 사용 하 여 한 일 매핑 이어야 하는데는 <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>속성.</xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> 에 지정 된 첫 번째 파일 즉, <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>DestinationFiles, 그에 지정 된 첫 번째 위치에 복사 됩니다.</xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "소스 파일을 복사할 파일의 목록입니다."
  overload: Microsoft.Build.Tasks.Copy.DestinationFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  id: DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "파일을 복사 하려는 디렉터리를 가져오거나 설정 합니다."
  remarks: "대상 폴더에 파일이 아닌 디렉터리 여야 합니다. 디렉터리가 없는 경우 자동으로 생성 됩니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "파일을 복사 하도록 설정할 디렉터리입니다."
  overload: Microsoft.Build.Tasks.Copy.DestinationFolder*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "실행 된 `Copy` 작업 합니다."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업 실행이 성공 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Copy.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  id: OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "파일이 읽기 전용으로 표시 된 경우에 파일을 덮어쓸지 여부를 나타내는 부울 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool OverwriteReadOnlyFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우는 `Copy` 파일이 읽기 전용으로 표시 하 고, 그렇지 않으면 경우에 작업 파일을 덮어쓰도록 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Retries
  id: Retries
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: '몇 번 이전 시도가 모두 실패 한 경우, 복사 하려고 합니다. 기본값은&0;입니다. 경고: 재시도 사용 하 여 빌드 프로세스에서 동기화 문제를 마스킹할 수 있습니다.'
  syntax:
    content: public int Retries { get; set; }
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: Microsoft.Build.Tasks.Copy.Retries*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  id: RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "필요한 재시도 사이의 지연입니다. 기본적으로<xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault></xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>"
  syntax:
    content: public int RetryDelayMilliseconds { get; set; }
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  id: SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "나타내는 부울 값을 가져오거나 설정 합니다. 여부는 `Copy` 소스와 대상 간에 변경 되지 않은 파일의 복사 작업을 건너뛰어야 합니다."
  remarks: "`Copy` 작업에서는 파일을 같은 크기 및 마지막으로 수정 된 동일한 시간 변경 되지 않는 것을 고려 합니다."
  syntax:
    content: public bool SkipUnchangedFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우는 `Copy` 소스와 대상 간에 변경 되지 않고, 그렇지 않으면 파일의 복사 작업을 건너뛰어야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  id: SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "복사할 파일을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "복사할 파일입니다."
  overload: Microsoft.Build.Tasks.Copy.SourceFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  id: UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "하드 링크를 사용할지 여부를 나타냅니다."
  syntax:
    content: public bool UseHardlinksIfPossible { get; set; }
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.Copy.#ctor
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
- uid: Microsoft.Build.Tasks.Copy.Cancel
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.Copy.Execute
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
- uid: Microsoft.Build.Tasks.Copy.#ctor*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy
  nameWithType: Copy.Copy
- uid: Microsoft.Build.Tasks.Copy.Cancel*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel
  nameWithType: Copy.Cancel
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
- uid: Microsoft.Build.Tasks.Copy.Execute*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute
  nameWithType: Copy.Execute
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
